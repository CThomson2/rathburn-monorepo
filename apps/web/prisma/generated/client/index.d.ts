
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model active_context
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type active_context = $Result.DefaultSelection<Prisma.$active_contextPayload>
/**
 * Model auth_activity_log
 * 
 */
export type auth_activity_log = $Result.DefaultSelection<Prisma.$auth_activity_logPayload>
/**
 * Model bottle_sizes
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type bottle_sizes = $Result.DefaultSelection<Prisma.$bottle_sizesPayload>
/**
 * Model chemical_group_kind
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type chemical_group_kind = $Result.DefaultSelection<Prisma.$chemical_group_kindPayload>
/**
 * Model distillation_pending_assignment
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type distillation_pending_assignment = $Result.DefaultSelection<Prisma.$distillation_pending_assignmentPayload>
/**
 * Model distillation_record
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type distillation_record = $Result.DefaultSelection<Prisma.$distillation_recordPayload>
/**
 * Model distillation_schedule
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type distillation_schedule = $Result.DefaultSelection<Prisma.$distillation_schedulePayload>
/**
 * Model distillation_schedule_items
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type distillation_schedule_items = $Result.DefaultSelection<Prisma.$distillation_schedule_itemsPayload>
/**
 * Model drums
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type drums = $Result.DefaultSelection<Prisma.$drumsPayload>
/**
 * Model log_drum_decommission
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type log_drum_decommission = $Result.DefaultSelection<Prisma.$log_drum_decommissionPayload>
/**
 * Model log_drum_scan
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type log_drum_scan = $Result.DefaultSelection<Prisma.$log_drum_scanPayload>
/**
 * Model log_load_still
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type log_load_still = $Result.DefaultSelection<Prisma.$log_load_stillPayload>
/**
 * Model log_start_distillation
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type log_start_distillation = $Result.DefaultSelection<Prisma.$log_start_distillationPayload>
/**
 * Model log_transport_drum
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type log_transport_drum = $Result.DefaultSelection<Prisma.$log_transport_drumPayload>
/**
 * Model log_volume_transfer
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type log_volume_transfer = $Result.DefaultSelection<Prisma.$log_volume_transferPayload>
/**
 * Model notification
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type notification = $Result.DefaultSelection<Prisma.$notificationPayload>
/**
 * Model order_detail
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type order_detail = $Result.DefaultSelection<Prisma.$order_detailPayload>
/**
 * Model product_prices
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type product_prices = $Result.DefaultSelection<Prisma.$product_pricesPayload>
/**
 * Model raw_materials
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type raw_materials = $Result.DefaultSelection<Prisma.$raw_materialsPayload>
/**
 * Model ref_materials
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type ref_materials = $Result.DefaultSelection<Prisma.$ref_materialsPayload>
/**
 * Model ref_stills
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type ref_stills = $Result.DefaultSelection<Prisma.$ref_stillsPayload>
/**
 * Model ref_suppliers
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type ref_suppliers = $Result.DefaultSelection<Prisma.$ref_suppliersPayload>
/**
 * Model session_settings
 * 
 */
export type session_settings = $Result.DefaultSelection<Prisma.$session_settingsPayload>
/**
 * Model stock_drum
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type stock_drum = $Result.DefaultSelection<Prisma.$stock_drumPayload>
/**
 * Model stock_drum_new
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type stock_drum_new = $Result.DefaultSelection<Prisma.$stock_drum_newPayload>
/**
 * Model stock_new
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type stock_new = $Result.DefaultSelection<Prisma.$stock_newPayload>
/**
 * Model stock_order
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type stock_order = $Result.DefaultSelection<Prisma.$stock_orderPayload>
/**
 * Model stock_repro
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type stock_repro = $Result.DefaultSelection<Prisma.$stock_reproPayload>
/**
 * Model user_profiles
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type user_profiles = $Result.DefaultSelection<Prisma.$user_profilesPayload>
/**
 * Model user_roles
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type user_roles = $Result.DefaultSelection<Prisma.$user_rolesPayload>
/**
 * Model worker_passcodes
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type worker_passcodes = $Result.DefaultSelection<Prisma.$worker_passcodesPayload>
/**
 * Model order_detail_stock_activity
 * 
 */
export type order_detail_stock_activity = $Result.DefaultSelection<Prisma.$order_detail_stock_activityPayload>
/**
 * Model raw_stock_history
 * 
 */
export type raw_stock_history = $Result.DefaultSelection<Prisma.$raw_stock_historyPayload>
/**
 * Model stock_activity
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type stock_activity = $Result.DefaultSelection<Prisma.$stock_activityPayload>
/**
 * Model stock_history
 * 
 */
export type stock_history = $Result.DefaultSelection<Prisma.$stock_historyPayload>
/**
 * Model ref_product
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type ref_product = $Result.DefaultSelection<Prisma.$ref_productPayload>
/**
 * Model ref_supplier_material
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type ref_supplier_material = $Result.DefaultSelection<Prisma.$ref_supplier_materialPayload>
/**
 * Model user_queries
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type user_queries = $Result.DefaultSelection<Prisma.$user_queriesPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const aal_level: {
  aal1: 'aal1',
  aal2: 'aal2',
  aal3: 'aal3'
};

export type aal_level = (typeof aal_level)[keyof typeof aal_level]


export const code_challenge_method: {
  s256: 's256',
  plain: 'plain'
};

export type code_challenge_method = (typeof code_challenge_method)[keyof typeof code_challenge_method]


export const factor_status: {
  unverified: 'unverified',
  verified: 'verified'
};

export type factor_status = (typeof factor_status)[keyof typeof factor_status]


export const factor_type: {
  totp: 'totp',
  webauthn: 'webauthn',
  phone: 'phone'
};

export type factor_type = (typeof factor_type)[keyof typeof factor_type]


export const one_time_token_type: {
  confirmation_token: 'confirmation_token',
  reauthentication_token: 'reauthentication_token',
  recovery_token: 'recovery_token',
  email_change_token_new: 'email_change_token_new',
  email_change_token_current: 'email_change_token_current',
  phone_change_token: 'phone_change_token'
};

export type one_time_token_type = (typeof one_time_token_type)[keyof typeof one_time_token_type]

}

export type aal_level = $Enums.aal_level

export const aal_level: typeof $Enums.aal_level

export type code_challenge_method = $Enums.code_challenge_method

export const code_challenge_method: typeof $Enums.code_challenge_method

export type factor_status = $Enums.factor_status

export const factor_status: typeof $Enums.factor_status

export type factor_type = $Enums.factor_type

export const factor_type: typeof $Enums.factor_type

export type one_time_token_type = $Enums.one_time_token_type

export const one_time_token_type: typeof $Enums.one_time_token_type

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Active_contexts
 * const active_contexts = await prisma.active_context.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Active_contexts
   * const active_contexts = await prisma.active_context.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.active_context`: Exposes CRUD operations for the **active_context** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Active_contexts
    * const active_contexts = await prisma.active_context.findMany()
    * ```
    */
  get active_context(): Prisma.active_contextDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auth_activity_log`: Exposes CRUD operations for the **auth_activity_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Auth_activity_logs
    * const auth_activity_logs = await prisma.auth_activity_log.findMany()
    * ```
    */
  get auth_activity_log(): Prisma.auth_activity_logDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bottle_sizes`: Exposes CRUD operations for the **bottle_sizes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bottle_sizes
    * const bottle_sizes = await prisma.bottle_sizes.findMany()
    * ```
    */
  get bottle_sizes(): Prisma.bottle_sizesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chemical_group_kind`: Exposes CRUD operations for the **chemical_group_kind** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chemical_group_kinds
    * const chemical_group_kinds = await prisma.chemical_group_kind.findMany()
    * ```
    */
  get chemical_group_kind(): Prisma.chemical_group_kindDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.distillation_pending_assignment`: Exposes CRUD operations for the **distillation_pending_assignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Distillation_pending_assignments
    * const distillation_pending_assignments = await prisma.distillation_pending_assignment.findMany()
    * ```
    */
  get distillation_pending_assignment(): Prisma.distillation_pending_assignmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.distillation_record`: Exposes CRUD operations for the **distillation_record** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Distillation_records
    * const distillation_records = await prisma.distillation_record.findMany()
    * ```
    */
  get distillation_record(): Prisma.distillation_recordDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.distillation_schedule`: Exposes CRUD operations for the **distillation_schedule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Distillation_schedules
    * const distillation_schedules = await prisma.distillation_schedule.findMany()
    * ```
    */
  get distillation_schedule(): Prisma.distillation_scheduleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.distillation_schedule_items`: Exposes CRUD operations for the **distillation_schedule_items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Distillation_schedule_items
    * const distillation_schedule_items = await prisma.distillation_schedule_items.findMany()
    * ```
    */
  get distillation_schedule_items(): Prisma.distillation_schedule_itemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.drums`: Exposes CRUD operations for the **drums** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Drums
    * const drums = await prisma.drums.findMany()
    * ```
    */
  get drums(): Prisma.drumsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.log_drum_decommission`: Exposes CRUD operations for the **log_drum_decommission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Log_drum_decommissions
    * const log_drum_decommissions = await prisma.log_drum_decommission.findMany()
    * ```
    */
  get log_drum_decommission(): Prisma.log_drum_decommissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.log_drum_scan`: Exposes CRUD operations for the **log_drum_scan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Log_drum_scans
    * const log_drum_scans = await prisma.log_drum_scan.findMany()
    * ```
    */
  get log_drum_scan(): Prisma.log_drum_scanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.log_load_still`: Exposes CRUD operations for the **log_load_still** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Log_load_stills
    * const log_load_stills = await prisma.log_load_still.findMany()
    * ```
    */
  get log_load_still(): Prisma.log_load_stillDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.log_start_distillation`: Exposes CRUD operations for the **log_start_distillation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Log_start_distillations
    * const log_start_distillations = await prisma.log_start_distillation.findMany()
    * ```
    */
  get log_start_distillation(): Prisma.log_start_distillationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.log_transport_drum`: Exposes CRUD operations for the **log_transport_drum** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Log_transport_drums
    * const log_transport_drums = await prisma.log_transport_drum.findMany()
    * ```
    */
  get log_transport_drum(): Prisma.log_transport_drumDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.log_volume_transfer`: Exposes CRUD operations for the **log_volume_transfer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Log_volume_transfers
    * const log_volume_transfers = await prisma.log_volume_transfer.findMany()
    * ```
    */
  get log_volume_transfer(): Prisma.log_volume_transferDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.notificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order_detail`: Exposes CRUD operations for the **order_detail** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Order_details
    * const order_details = await prisma.order_detail.findMany()
    * ```
    */
  get order_detail(): Prisma.order_detailDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product_prices`: Exposes CRUD operations for the **product_prices** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_prices
    * const product_prices = await prisma.product_prices.findMany()
    * ```
    */
  get product_prices(): Prisma.product_pricesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.raw_materials`: Exposes CRUD operations for the **raw_materials** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Raw_materials
    * const raw_materials = await prisma.raw_materials.findMany()
    * ```
    */
  get raw_materials(): Prisma.raw_materialsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ref_materials`: Exposes CRUD operations for the **ref_materials** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ref_materials
    * const ref_materials = await prisma.ref_materials.findMany()
    * ```
    */
  get ref_materials(): Prisma.ref_materialsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ref_stills`: Exposes CRUD operations for the **ref_stills** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ref_stills
    * const ref_stills = await prisma.ref_stills.findMany()
    * ```
    */
  get ref_stills(): Prisma.ref_stillsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ref_suppliers`: Exposes CRUD operations for the **ref_suppliers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ref_suppliers
    * const ref_suppliers = await prisma.ref_suppliers.findMany()
    * ```
    */
  get ref_suppliers(): Prisma.ref_suppliersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session_settings`: Exposes CRUD operations for the **session_settings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Session_settings
    * const session_settings = await prisma.session_settings.findMany()
    * ```
    */
  get session_settings(): Prisma.session_settingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stock_drum`: Exposes CRUD operations for the **stock_drum** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stock_drums
    * const stock_drums = await prisma.stock_drum.findMany()
    * ```
    */
  get stock_drum(): Prisma.stock_drumDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stock_drum_new`: Exposes CRUD operations for the **stock_drum_new** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stock_drum_news
    * const stock_drum_news = await prisma.stock_drum_new.findMany()
    * ```
    */
  get stock_drum_new(): Prisma.stock_drum_newDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stock_new`: Exposes CRUD operations for the **stock_new** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stock_news
    * const stock_news = await prisma.stock_new.findMany()
    * ```
    */
  get stock_new(): Prisma.stock_newDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stock_order`: Exposes CRUD operations for the **stock_order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stock_orders
    * const stock_orders = await prisma.stock_order.findMany()
    * ```
    */
  get stock_order(): Prisma.stock_orderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stock_repro`: Exposes CRUD operations for the **stock_repro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stock_repros
    * const stock_repros = await prisma.stock_repro.findMany()
    * ```
    */
  get stock_repro(): Prisma.stock_reproDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_profiles`: Exposes CRUD operations for the **user_profiles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_profiles
    * const user_profiles = await prisma.user_profiles.findMany()
    * ```
    */
  get user_profiles(): Prisma.user_profilesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_roles`: Exposes CRUD operations for the **user_roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_roles
    * const user_roles = await prisma.user_roles.findMany()
    * ```
    */
  get user_roles(): Prisma.user_rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.worker_passcodes`: Exposes CRUD operations for the **worker_passcodes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Worker_passcodes
    * const worker_passcodes = await prisma.worker_passcodes.findMany()
    * ```
    */
  get worker_passcodes(): Prisma.worker_passcodesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order_detail_stock_activity`: Exposes CRUD operations for the **order_detail_stock_activity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Order_detail_stock_activities
    * const order_detail_stock_activities = await prisma.order_detail_stock_activity.findMany()
    * ```
    */
  get order_detail_stock_activity(): Prisma.order_detail_stock_activityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.raw_stock_history`: Exposes CRUD operations for the **raw_stock_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Raw_stock_histories
    * const raw_stock_histories = await prisma.raw_stock_history.findMany()
    * ```
    */
  get raw_stock_history(): Prisma.raw_stock_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stock_activity`: Exposes CRUD operations for the **stock_activity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stock_activities
    * const stock_activities = await prisma.stock_activity.findMany()
    * ```
    */
  get stock_activity(): Prisma.stock_activityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stock_history`: Exposes CRUD operations for the **stock_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stock_histories
    * const stock_histories = await prisma.stock_history.findMany()
    * ```
    */
  get stock_history(): Prisma.stock_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ref_product`: Exposes CRUD operations for the **ref_product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ref_products
    * const ref_products = await prisma.ref_product.findMany()
    * ```
    */
  get ref_product(): Prisma.ref_productDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ref_supplier_material`: Exposes CRUD operations for the **ref_supplier_material** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ref_supplier_materials
    * const ref_supplier_materials = await prisma.ref_supplier_material.findMany()
    * ```
    */
  get ref_supplier_material(): Prisma.ref_supplier_materialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_queries`: Exposes CRUD operations for the **user_queries** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_queries
    * const user_queries = await prisma.user_queries.findMany()
    * ```
    */
  get user_queries(): Prisma.user_queriesDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    active_context: 'active_context',
    auth_activity_log: 'auth_activity_log',
    bottle_sizes: 'bottle_sizes',
    chemical_group_kind: 'chemical_group_kind',
    distillation_pending_assignment: 'distillation_pending_assignment',
    distillation_record: 'distillation_record',
    distillation_schedule: 'distillation_schedule',
    distillation_schedule_items: 'distillation_schedule_items',
    drums: 'drums',
    log_drum_decommission: 'log_drum_decommission',
    log_drum_scan: 'log_drum_scan',
    log_load_still: 'log_load_still',
    log_start_distillation: 'log_start_distillation',
    log_transport_drum: 'log_transport_drum',
    log_volume_transfer: 'log_volume_transfer',
    notification: 'notification',
    order_detail: 'order_detail',
    product_prices: 'product_prices',
    raw_materials: 'raw_materials',
    ref_materials: 'ref_materials',
    ref_stills: 'ref_stills',
    ref_suppliers: 'ref_suppliers',
    session_settings: 'session_settings',
    stock_drum: 'stock_drum',
    stock_drum_new: 'stock_drum_new',
    stock_new: 'stock_new',
    stock_order: 'stock_order',
    stock_repro: 'stock_repro',
    user_profiles: 'user_profiles',
    user_roles: 'user_roles',
    worker_passcodes: 'worker_passcodes',
    order_detail_stock_activity: 'order_detail_stock_activity',
    raw_stock_history: 'raw_stock_history',
    stock_activity: 'stock_activity',
    stock_history: 'stock_history',
    ref_product: 'ref_product',
    ref_supplier_material: 'ref_supplier_material',
    user_queries: 'user_queries'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "active_context" | "auth_activity_log" | "bottle_sizes" | "chemical_group_kind" | "distillation_pending_assignment" | "distillation_record" | "distillation_schedule" | "distillation_schedule_items" | "drums" | "log_drum_decommission" | "log_drum_scan" | "log_load_still" | "log_start_distillation" | "log_transport_drum" | "log_volume_transfer" | "notification" | "order_detail" | "product_prices" | "raw_materials" | "ref_materials" | "ref_stills" | "ref_suppliers" | "session_settings" | "stock_drum" | "stock_drum_new" | "stock_new" | "stock_order" | "stock_repro" | "user_profiles" | "user_roles" | "worker_passcodes" | "order_detail_stock_activity" | "raw_stock_history" | "stock_activity" | "stock_history" | "ref_product" | "ref_supplier_material" | "user_queries"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      active_context: {
        payload: Prisma.$active_contextPayload<ExtArgs>
        fields: Prisma.active_contextFieldRefs
        operations: {
          findUnique: {
            args: Prisma.active_contextFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.active_contextFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>
          }
          findFirst: {
            args: Prisma.active_contextFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.active_contextFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>
          }
          findMany: {
            args: Prisma.active_contextFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>[]
          }
          create: {
            args: Prisma.active_contextCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>
          }
          createMany: {
            args: Prisma.active_contextCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.active_contextCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>[]
          }
          delete: {
            args: Prisma.active_contextDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>
          }
          update: {
            args: Prisma.active_contextUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>
          }
          deleteMany: {
            args: Prisma.active_contextDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.active_contextUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.active_contextUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>[]
          }
          upsert: {
            args: Prisma.active_contextUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$active_contextPayload>
          }
          aggregate: {
            args: Prisma.Active_contextAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateActive_context>
          }
          groupBy: {
            args: Prisma.active_contextGroupByArgs<ExtArgs>
            result: $Utils.Optional<Active_contextGroupByOutputType>[]
          }
          count: {
            args: Prisma.active_contextCountArgs<ExtArgs>
            result: $Utils.Optional<Active_contextCountAggregateOutputType> | number
          }
        }
      }
      auth_activity_log: {
        payload: Prisma.$auth_activity_logPayload<ExtArgs>
        fields: Prisma.auth_activity_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.auth_activity_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.auth_activity_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>
          }
          findFirst: {
            args: Prisma.auth_activity_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.auth_activity_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>
          }
          findMany: {
            args: Prisma.auth_activity_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>[]
          }
          create: {
            args: Prisma.auth_activity_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>
          }
          createMany: {
            args: Prisma.auth_activity_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.auth_activity_logCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>[]
          }
          delete: {
            args: Prisma.auth_activity_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>
          }
          update: {
            args: Prisma.auth_activity_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>
          }
          deleteMany: {
            args: Prisma.auth_activity_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.auth_activity_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.auth_activity_logUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>[]
          }
          upsert: {
            args: Prisma.auth_activity_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_activity_logPayload>
          }
          aggregate: {
            args: Prisma.Auth_activity_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuth_activity_log>
          }
          groupBy: {
            args: Prisma.auth_activity_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<Auth_activity_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.auth_activity_logCountArgs<ExtArgs>
            result: $Utils.Optional<Auth_activity_logCountAggregateOutputType> | number
          }
        }
      }
      bottle_sizes: {
        payload: Prisma.$bottle_sizesPayload<ExtArgs>
        fields: Prisma.bottle_sizesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bottle_sizesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bottle_sizesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>
          }
          findFirst: {
            args: Prisma.bottle_sizesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bottle_sizesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>
          }
          findMany: {
            args: Prisma.bottle_sizesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>[]
          }
          create: {
            args: Prisma.bottle_sizesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>
          }
          createMany: {
            args: Prisma.bottle_sizesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.bottle_sizesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>[]
          }
          delete: {
            args: Prisma.bottle_sizesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>
          }
          update: {
            args: Prisma.bottle_sizesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>
          }
          deleteMany: {
            args: Prisma.bottle_sizesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.bottle_sizesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.bottle_sizesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>[]
          }
          upsert: {
            args: Prisma.bottle_sizesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bottle_sizesPayload>
          }
          aggregate: {
            args: Prisma.Bottle_sizesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBottle_sizes>
          }
          groupBy: {
            args: Prisma.bottle_sizesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Bottle_sizesGroupByOutputType>[]
          }
          count: {
            args: Prisma.bottle_sizesCountArgs<ExtArgs>
            result: $Utils.Optional<Bottle_sizesCountAggregateOutputType> | number
          }
        }
      }
      chemical_group_kind: {
        payload: Prisma.$chemical_group_kindPayload<ExtArgs>
        fields: Prisma.chemical_group_kindFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chemical_group_kindFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chemical_group_kindFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>
          }
          findFirst: {
            args: Prisma.chemical_group_kindFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chemical_group_kindFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>
          }
          findMany: {
            args: Prisma.chemical_group_kindFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>[]
          }
          create: {
            args: Prisma.chemical_group_kindCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>
          }
          createMany: {
            args: Prisma.chemical_group_kindCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.chemical_group_kindCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>[]
          }
          delete: {
            args: Prisma.chemical_group_kindDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>
          }
          update: {
            args: Prisma.chemical_group_kindUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>
          }
          deleteMany: {
            args: Prisma.chemical_group_kindDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chemical_group_kindUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.chemical_group_kindUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>[]
          }
          upsert: {
            args: Prisma.chemical_group_kindUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chemical_group_kindPayload>
          }
          aggregate: {
            args: Prisma.Chemical_group_kindAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChemical_group_kind>
          }
          groupBy: {
            args: Prisma.chemical_group_kindGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chemical_group_kindGroupByOutputType>[]
          }
          count: {
            args: Prisma.chemical_group_kindCountArgs<ExtArgs>
            result: $Utils.Optional<Chemical_group_kindCountAggregateOutputType> | number
          }
        }
      }
      distillation_pending_assignment: {
        payload: Prisma.$distillation_pending_assignmentPayload<ExtArgs>
        fields: Prisma.distillation_pending_assignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.distillation_pending_assignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.distillation_pending_assignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>
          }
          findFirst: {
            args: Prisma.distillation_pending_assignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.distillation_pending_assignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>
          }
          findMany: {
            args: Prisma.distillation_pending_assignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>[]
          }
          create: {
            args: Prisma.distillation_pending_assignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>
          }
          createMany: {
            args: Prisma.distillation_pending_assignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.distillation_pending_assignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>[]
          }
          delete: {
            args: Prisma.distillation_pending_assignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>
          }
          update: {
            args: Prisma.distillation_pending_assignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>
          }
          deleteMany: {
            args: Prisma.distillation_pending_assignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.distillation_pending_assignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.distillation_pending_assignmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>[]
          }
          upsert: {
            args: Prisma.distillation_pending_assignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_pending_assignmentPayload>
          }
          aggregate: {
            args: Prisma.Distillation_pending_assignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDistillation_pending_assignment>
          }
          groupBy: {
            args: Prisma.distillation_pending_assignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<Distillation_pending_assignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.distillation_pending_assignmentCountArgs<ExtArgs>
            result: $Utils.Optional<Distillation_pending_assignmentCountAggregateOutputType> | number
          }
        }
      }
      distillation_record: {
        payload: Prisma.$distillation_recordPayload<ExtArgs>
        fields: Prisma.distillation_recordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.distillation_recordFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.distillation_recordFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>
          }
          findFirst: {
            args: Prisma.distillation_recordFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.distillation_recordFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>
          }
          findMany: {
            args: Prisma.distillation_recordFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>[]
          }
          create: {
            args: Prisma.distillation_recordCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>
          }
          createMany: {
            args: Prisma.distillation_recordCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.distillation_recordCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>[]
          }
          delete: {
            args: Prisma.distillation_recordDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>
          }
          update: {
            args: Prisma.distillation_recordUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>
          }
          deleteMany: {
            args: Prisma.distillation_recordDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.distillation_recordUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.distillation_recordUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>[]
          }
          upsert: {
            args: Prisma.distillation_recordUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_recordPayload>
          }
          aggregate: {
            args: Prisma.Distillation_recordAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDistillation_record>
          }
          groupBy: {
            args: Prisma.distillation_recordGroupByArgs<ExtArgs>
            result: $Utils.Optional<Distillation_recordGroupByOutputType>[]
          }
          count: {
            args: Prisma.distillation_recordCountArgs<ExtArgs>
            result: $Utils.Optional<Distillation_recordCountAggregateOutputType> | number
          }
        }
      }
      distillation_schedule: {
        payload: Prisma.$distillation_schedulePayload<ExtArgs>
        fields: Prisma.distillation_scheduleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.distillation_scheduleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.distillation_scheduleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>
          }
          findFirst: {
            args: Prisma.distillation_scheduleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.distillation_scheduleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>
          }
          findMany: {
            args: Prisma.distillation_scheduleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>[]
          }
          create: {
            args: Prisma.distillation_scheduleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>
          }
          createMany: {
            args: Prisma.distillation_scheduleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.distillation_scheduleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>[]
          }
          delete: {
            args: Prisma.distillation_scheduleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>
          }
          update: {
            args: Prisma.distillation_scheduleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>
          }
          deleteMany: {
            args: Prisma.distillation_scheduleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.distillation_scheduleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.distillation_scheduleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>[]
          }
          upsert: {
            args: Prisma.distillation_scheduleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedulePayload>
          }
          aggregate: {
            args: Prisma.Distillation_scheduleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDistillation_schedule>
          }
          groupBy: {
            args: Prisma.distillation_scheduleGroupByArgs<ExtArgs>
            result: $Utils.Optional<Distillation_scheduleGroupByOutputType>[]
          }
          count: {
            args: Prisma.distillation_scheduleCountArgs<ExtArgs>
            result: $Utils.Optional<Distillation_scheduleCountAggregateOutputType> | number
          }
        }
      }
      distillation_schedule_items: {
        payload: Prisma.$distillation_schedule_itemsPayload<ExtArgs>
        fields: Prisma.distillation_schedule_itemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.distillation_schedule_itemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.distillation_schedule_itemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>
          }
          findFirst: {
            args: Prisma.distillation_schedule_itemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.distillation_schedule_itemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>
          }
          findMany: {
            args: Prisma.distillation_schedule_itemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>[]
          }
          create: {
            args: Prisma.distillation_schedule_itemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>
          }
          createMany: {
            args: Prisma.distillation_schedule_itemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.distillation_schedule_itemsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>[]
          }
          delete: {
            args: Prisma.distillation_schedule_itemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>
          }
          update: {
            args: Prisma.distillation_schedule_itemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>
          }
          deleteMany: {
            args: Prisma.distillation_schedule_itemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.distillation_schedule_itemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.distillation_schedule_itemsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>[]
          }
          upsert: {
            args: Prisma.distillation_schedule_itemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$distillation_schedule_itemsPayload>
          }
          aggregate: {
            args: Prisma.Distillation_schedule_itemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDistillation_schedule_items>
          }
          groupBy: {
            args: Prisma.distillation_schedule_itemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Distillation_schedule_itemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.distillation_schedule_itemsCountArgs<ExtArgs>
            result: $Utils.Optional<Distillation_schedule_itemsCountAggregateOutputType> | number
          }
        }
      }
      drums: {
        payload: Prisma.$drumsPayload<ExtArgs>
        fields: Prisma.drumsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.drumsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.drumsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>
          }
          findFirst: {
            args: Prisma.drumsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.drumsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>
          }
          findMany: {
            args: Prisma.drumsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>[]
          }
          create: {
            args: Prisma.drumsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>
          }
          createMany: {
            args: Prisma.drumsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.drumsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>[]
          }
          delete: {
            args: Prisma.drumsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>
          }
          update: {
            args: Prisma.drumsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>
          }
          deleteMany: {
            args: Prisma.drumsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.drumsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.drumsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>[]
          }
          upsert: {
            args: Prisma.drumsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$drumsPayload>
          }
          aggregate: {
            args: Prisma.DrumsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDrums>
          }
          groupBy: {
            args: Prisma.drumsGroupByArgs<ExtArgs>
            result: $Utils.Optional<DrumsGroupByOutputType>[]
          }
          count: {
            args: Prisma.drumsCountArgs<ExtArgs>
            result: $Utils.Optional<DrumsCountAggregateOutputType> | number
          }
        }
      }
      log_drum_decommission: {
        payload: Prisma.$log_drum_decommissionPayload<ExtArgs>
        fields: Prisma.log_drum_decommissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.log_drum_decommissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.log_drum_decommissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>
          }
          findFirst: {
            args: Prisma.log_drum_decommissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.log_drum_decommissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>
          }
          findMany: {
            args: Prisma.log_drum_decommissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>[]
          }
          create: {
            args: Prisma.log_drum_decommissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>
          }
          createMany: {
            args: Prisma.log_drum_decommissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.log_drum_decommissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>[]
          }
          delete: {
            args: Prisma.log_drum_decommissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>
          }
          update: {
            args: Prisma.log_drum_decommissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>
          }
          deleteMany: {
            args: Prisma.log_drum_decommissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.log_drum_decommissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.log_drum_decommissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>[]
          }
          upsert: {
            args: Prisma.log_drum_decommissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_decommissionPayload>
          }
          aggregate: {
            args: Prisma.Log_drum_decommissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLog_drum_decommission>
          }
          groupBy: {
            args: Prisma.log_drum_decommissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Log_drum_decommissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.log_drum_decommissionCountArgs<ExtArgs>
            result: $Utils.Optional<Log_drum_decommissionCountAggregateOutputType> | number
          }
        }
      }
      log_drum_scan: {
        payload: Prisma.$log_drum_scanPayload<ExtArgs>
        fields: Prisma.log_drum_scanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.log_drum_scanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.log_drum_scanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>
          }
          findFirst: {
            args: Prisma.log_drum_scanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.log_drum_scanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>
          }
          findMany: {
            args: Prisma.log_drum_scanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>[]
          }
          create: {
            args: Prisma.log_drum_scanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>
          }
          createMany: {
            args: Prisma.log_drum_scanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.log_drum_scanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>[]
          }
          delete: {
            args: Prisma.log_drum_scanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>
          }
          update: {
            args: Prisma.log_drum_scanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>
          }
          deleteMany: {
            args: Prisma.log_drum_scanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.log_drum_scanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.log_drum_scanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>[]
          }
          upsert: {
            args: Prisma.log_drum_scanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_drum_scanPayload>
          }
          aggregate: {
            args: Prisma.Log_drum_scanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLog_drum_scan>
          }
          groupBy: {
            args: Prisma.log_drum_scanGroupByArgs<ExtArgs>
            result: $Utils.Optional<Log_drum_scanGroupByOutputType>[]
          }
          count: {
            args: Prisma.log_drum_scanCountArgs<ExtArgs>
            result: $Utils.Optional<Log_drum_scanCountAggregateOutputType> | number
          }
        }
      }
      log_load_still: {
        payload: Prisma.$log_load_stillPayload<ExtArgs>
        fields: Prisma.log_load_stillFieldRefs
        operations: {
          findUnique: {
            args: Prisma.log_load_stillFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.log_load_stillFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>
          }
          findFirst: {
            args: Prisma.log_load_stillFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.log_load_stillFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>
          }
          findMany: {
            args: Prisma.log_load_stillFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>[]
          }
          create: {
            args: Prisma.log_load_stillCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>
          }
          createMany: {
            args: Prisma.log_load_stillCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.log_load_stillCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>[]
          }
          delete: {
            args: Prisma.log_load_stillDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>
          }
          update: {
            args: Prisma.log_load_stillUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>
          }
          deleteMany: {
            args: Prisma.log_load_stillDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.log_load_stillUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.log_load_stillUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>[]
          }
          upsert: {
            args: Prisma.log_load_stillUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_load_stillPayload>
          }
          aggregate: {
            args: Prisma.Log_load_stillAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLog_load_still>
          }
          groupBy: {
            args: Prisma.log_load_stillGroupByArgs<ExtArgs>
            result: $Utils.Optional<Log_load_stillGroupByOutputType>[]
          }
          count: {
            args: Prisma.log_load_stillCountArgs<ExtArgs>
            result: $Utils.Optional<Log_load_stillCountAggregateOutputType> | number
          }
        }
      }
      log_start_distillation: {
        payload: Prisma.$log_start_distillationPayload<ExtArgs>
        fields: Prisma.log_start_distillationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.log_start_distillationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.log_start_distillationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>
          }
          findFirst: {
            args: Prisma.log_start_distillationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.log_start_distillationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>
          }
          findMany: {
            args: Prisma.log_start_distillationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>[]
          }
          create: {
            args: Prisma.log_start_distillationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>
          }
          createMany: {
            args: Prisma.log_start_distillationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.log_start_distillationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>[]
          }
          delete: {
            args: Prisma.log_start_distillationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>
          }
          update: {
            args: Prisma.log_start_distillationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>
          }
          deleteMany: {
            args: Prisma.log_start_distillationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.log_start_distillationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.log_start_distillationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>[]
          }
          upsert: {
            args: Prisma.log_start_distillationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_start_distillationPayload>
          }
          aggregate: {
            args: Prisma.Log_start_distillationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLog_start_distillation>
          }
          groupBy: {
            args: Prisma.log_start_distillationGroupByArgs<ExtArgs>
            result: $Utils.Optional<Log_start_distillationGroupByOutputType>[]
          }
          count: {
            args: Prisma.log_start_distillationCountArgs<ExtArgs>
            result: $Utils.Optional<Log_start_distillationCountAggregateOutputType> | number
          }
        }
      }
      log_transport_drum: {
        payload: Prisma.$log_transport_drumPayload<ExtArgs>
        fields: Prisma.log_transport_drumFieldRefs
        operations: {
          findUnique: {
            args: Prisma.log_transport_drumFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.log_transport_drumFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>
          }
          findFirst: {
            args: Prisma.log_transport_drumFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.log_transport_drumFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>
          }
          findMany: {
            args: Prisma.log_transport_drumFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>[]
          }
          create: {
            args: Prisma.log_transport_drumCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>
          }
          createMany: {
            args: Prisma.log_transport_drumCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.log_transport_drumCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>[]
          }
          delete: {
            args: Prisma.log_transport_drumDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>
          }
          update: {
            args: Prisma.log_transport_drumUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>
          }
          deleteMany: {
            args: Prisma.log_transport_drumDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.log_transport_drumUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.log_transport_drumUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>[]
          }
          upsert: {
            args: Prisma.log_transport_drumUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_transport_drumPayload>
          }
          aggregate: {
            args: Prisma.Log_transport_drumAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLog_transport_drum>
          }
          groupBy: {
            args: Prisma.log_transport_drumGroupByArgs<ExtArgs>
            result: $Utils.Optional<Log_transport_drumGroupByOutputType>[]
          }
          count: {
            args: Prisma.log_transport_drumCountArgs<ExtArgs>
            result: $Utils.Optional<Log_transport_drumCountAggregateOutputType> | number
          }
        }
      }
      log_volume_transfer: {
        payload: Prisma.$log_volume_transferPayload<ExtArgs>
        fields: Prisma.log_volume_transferFieldRefs
        operations: {
          findUnique: {
            args: Prisma.log_volume_transferFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.log_volume_transferFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>
          }
          findFirst: {
            args: Prisma.log_volume_transferFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.log_volume_transferFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>
          }
          findMany: {
            args: Prisma.log_volume_transferFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>[]
          }
          create: {
            args: Prisma.log_volume_transferCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>
          }
          createMany: {
            args: Prisma.log_volume_transferCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.log_volume_transferCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>[]
          }
          delete: {
            args: Prisma.log_volume_transferDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>
          }
          update: {
            args: Prisma.log_volume_transferUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>
          }
          deleteMany: {
            args: Prisma.log_volume_transferDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.log_volume_transferUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.log_volume_transferUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>[]
          }
          upsert: {
            args: Prisma.log_volume_transferUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$log_volume_transferPayload>
          }
          aggregate: {
            args: Prisma.Log_volume_transferAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLog_volume_transfer>
          }
          groupBy: {
            args: Prisma.log_volume_transferGroupByArgs<ExtArgs>
            result: $Utils.Optional<Log_volume_transferGroupByOutputType>[]
          }
          count: {
            args: Prisma.log_volume_transferCountArgs<ExtArgs>
            result: $Utils.Optional<Log_volume_transferCountAggregateOutputType> | number
          }
        }
      }
      notification: {
        payload: Prisma.$notificationPayload<ExtArgs>
        fields: Prisma.notificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findFirst: {
            args: Prisma.notificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findMany: {
            args: Prisma.notificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          create: {
            args: Prisma.notificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          createMany: {
            args: Prisma.notificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.notificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          delete: {
            args: Prisma.notificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          update: {
            args: Prisma.notificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          deleteMany: {
            args: Prisma.notificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.notificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          upsert: {
            args: Prisma.notificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.notificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      order_detail: {
        payload: Prisma.$order_detailPayload<ExtArgs>
        fields: Prisma.order_detailFieldRefs
        operations: {
          findUnique: {
            args: Prisma.order_detailFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.order_detailFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>
          }
          findFirst: {
            args: Prisma.order_detailFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.order_detailFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>
          }
          findMany: {
            args: Prisma.order_detailFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>[]
          }
          create: {
            args: Prisma.order_detailCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>
          }
          createMany: {
            args: Prisma.order_detailCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.order_detailCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>[]
          }
          delete: {
            args: Prisma.order_detailDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>
          }
          update: {
            args: Prisma.order_detailUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>
          }
          deleteMany: {
            args: Prisma.order_detailDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.order_detailUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.order_detailUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>[]
          }
          upsert: {
            args: Prisma.order_detailUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailPayload>
          }
          aggregate: {
            args: Prisma.Order_detailAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder_detail>
          }
          groupBy: {
            args: Prisma.order_detailGroupByArgs<ExtArgs>
            result: $Utils.Optional<Order_detailGroupByOutputType>[]
          }
          count: {
            args: Prisma.order_detailCountArgs<ExtArgs>
            result: $Utils.Optional<Order_detailCountAggregateOutputType> | number
          }
        }
      }
      product_prices: {
        payload: Prisma.$product_pricesPayload<ExtArgs>
        fields: Prisma.product_pricesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_pricesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_pricesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>
          }
          findFirst: {
            args: Prisma.product_pricesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_pricesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>
          }
          findMany: {
            args: Prisma.product_pricesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>[]
          }
          create: {
            args: Prisma.product_pricesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>
          }
          createMany: {
            args: Prisma.product_pricesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.product_pricesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>[]
          }
          delete: {
            args: Prisma.product_pricesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>
          }
          update: {
            args: Prisma.product_pricesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>
          }
          deleteMany: {
            args: Prisma.product_pricesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_pricesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.product_pricesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>[]
          }
          upsert: {
            args: Prisma.product_pricesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_pricesPayload>
          }
          aggregate: {
            args: Prisma.Product_pricesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_prices>
          }
          groupBy: {
            args: Prisma.product_pricesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_pricesGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_pricesCountArgs<ExtArgs>
            result: $Utils.Optional<Product_pricesCountAggregateOutputType> | number
          }
        }
      }
      raw_materials: {
        payload: Prisma.$raw_materialsPayload<ExtArgs>
        fields: Prisma.raw_materialsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.raw_materialsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.raw_materialsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>
          }
          findFirst: {
            args: Prisma.raw_materialsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.raw_materialsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>
          }
          findMany: {
            args: Prisma.raw_materialsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>[]
          }
          create: {
            args: Prisma.raw_materialsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>
          }
          createMany: {
            args: Prisma.raw_materialsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.raw_materialsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>[]
          }
          delete: {
            args: Prisma.raw_materialsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>
          }
          update: {
            args: Prisma.raw_materialsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>
          }
          deleteMany: {
            args: Prisma.raw_materialsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.raw_materialsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.raw_materialsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>[]
          }
          upsert: {
            args: Prisma.raw_materialsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_materialsPayload>
          }
          aggregate: {
            args: Prisma.Raw_materialsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRaw_materials>
          }
          groupBy: {
            args: Prisma.raw_materialsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Raw_materialsGroupByOutputType>[]
          }
          count: {
            args: Prisma.raw_materialsCountArgs<ExtArgs>
            result: $Utils.Optional<Raw_materialsCountAggregateOutputType> | number
          }
        }
      }
      ref_materials: {
        payload: Prisma.$ref_materialsPayload<ExtArgs>
        fields: Prisma.ref_materialsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ref_materialsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ref_materialsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>
          }
          findFirst: {
            args: Prisma.ref_materialsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ref_materialsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>
          }
          findMany: {
            args: Prisma.ref_materialsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>[]
          }
          create: {
            args: Prisma.ref_materialsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>
          }
          createMany: {
            args: Prisma.ref_materialsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ref_materialsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>[]
          }
          delete: {
            args: Prisma.ref_materialsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>
          }
          update: {
            args: Prisma.ref_materialsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>
          }
          deleteMany: {
            args: Prisma.ref_materialsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ref_materialsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ref_materialsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>[]
          }
          upsert: {
            args: Prisma.ref_materialsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_materialsPayload>
          }
          aggregate: {
            args: Prisma.Ref_materialsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRef_materials>
          }
          groupBy: {
            args: Prisma.ref_materialsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ref_materialsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ref_materialsCountArgs<ExtArgs>
            result: $Utils.Optional<Ref_materialsCountAggregateOutputType> | number
          }
        }
      }
      ref_stills: {
        payload: Prisma.$ref_stillsPayload<ExtArgs>
        fields: Prisma.ref_stillsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ref_stillsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ref_stillsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>
          }
          findFirst: {
            args: Prisma.ref_stillsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ref_stillsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>
          }
          findMany: {
            args: Prisma.ref_stillsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>[]
          }
          create: {
            args: Prisma.ref_stillsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>
          }
          createMany: {
            args: Prisma.ref_stillsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ref_stillsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>[]
          }
          delete: {
            args: Prisma.ref_stillsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>
          }
          update: {
            args: Prisma.ref_stillsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>
          }
          deleteMany: {
            args: Prisma.ref_stillsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ref_stillsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ref_stillsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>[]
          }
          upsert: {
            args: Prisma.ref_stillsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_stillsPayload>
          }
          aggregate: {
            args: Prisma.Ref_stillsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRef_stills>
          }
          groupBy: {
            args: Prisma.ref_stillsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ref_stillsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ref_stillsCountArgs<ExtArgs>
            result: $Utils.Optional<Ref_stillsCountAggregateOutputType> | number
          }
        }
      }
      ref_suppliers: {
        payload: Prisma.$ref_suppliersPayload<ExtArgs>
        fields: Prisma.ref_suppliersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ref_suppliersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ref_suppliersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>
          }
          findFirst: {
            args: Prisma.ref_suppliersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ref_suppliersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>
          }
          findMany: {
            args: Prisma.ref_suppliersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>[]
          }
          create: {
            args: Prisma.ref_suppliersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>
          }
          createMany: {
            args: Prisma.ref_suppliersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ref_suppliersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>[]
          }
          delete: {
            args: Prisma.ref_suppliersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>
          }
          update: {
            args: Prisma.ref_suppliersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>
          }
          deleteMany: {
            args: Prisma.ref_suppliersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ref_suppliersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ref_suppliersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>[]
          }
          upsert: {
            args: Prisma.ref_suppliersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_suppliersPayload>
          }
          aggregate: {
            args: Prisma.Ref_suppliersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRef_suppliers>
          }
          groupBy: {
            args: Prisma.ref_suppliersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ref_suppliersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ref_suppliersCountArgs<ExtArgs>
            result: $Utils.Optional<Ref_suppliersCountAggregateOutputType> | number
          }
        }
      }
      session_settings: {
        payload: Prisma.$session_settingsPayload<ExtArgs>
        fields: Prisma.session_settingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.session_settingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.session_settingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>
          }
          findFirst: {
            args: Prisma.session_settingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.session_settingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>
          }
          findMany: {
            args: Prisma.session_settingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>[]
          }
          create: {
            args: Prisma.session_settingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>
          }
          createMany: {
            args: Prisma.session_settingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.session_settingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>[]
          }
          delete: {
            args: Prisma.session_settingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>
          }
          update: {
            args: Prisma.session_settingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>
          }
          deleteMany: {
            args: Prisma.session_settingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.session_settingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.session_settingsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>[]
          }
          upsert: {
            args: Prisma.session_settingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$session_settingsPayload>
          }
          aggregate: {
            args: Prisma.Session_settingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession_settings>
          }
          groupBy: {
            args: Prisma.session_settingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Session_settingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.session_settingsCountArgs<ExtArgs>
            result: $Utils.Optional<Session_settingsCountAggregateOutputType> | number
          }
        }
      }
      stock_drum: {
        payload: Prisma.$stock_drumPayload<ExtArgs>
        fields: Prisma.stock_drumFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stock_drumFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stock_drumFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>
          }
          findFirst: {
            args: Prisma.stock_drumFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stock_drumFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>
          }
          findMany: {
            args: Prisma.stock_drumFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>[]
          }
          create: {
            args: Prisma.stock_drumCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>
          }
          createMany: {
            args: Prisma.stock_drumCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stock_drumCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>[]
          }
          delete: {
            args: Prisma.stock_drumDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>
          }
          update: {
            args: Prisma.stock_drumUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>
          }
          deleteMany: {
            args: Prisma.stock_drumDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stock_drumUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stock_drumUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>[]
          }
          upsert: {
            args: Prisma.stock_drumUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drumPayload>
          }
          aggregate: {
            args: Prisma.Stock_drumAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock_drum>
          }
          groupBy: {
            args: Prisma.stock_drumGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stock_drumGroupByOutputType>[]
          }
          count: {
            args: Prisma.stock_drumCountArgs<ExtArgs>
            result: $Utils.Optional<Stock_drumCountAggregateOutputType> | number
          }
        }
      }
      stock_drum_new: {
        payload: Prisma.$stock_drum_newPayload<ExtArgs>
        fields: Prisma.stock_drum_newFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stock_drum_newFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stock_drum_newFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>
          }
          findFirst: {
            args: Prisma.stock_drum_newFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stock_drum_newFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>
          }
          findMany: {
            args: Prisma.stock_drum_newFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>[]
          }
          create: {
            args: Prisma.stock_drum_newCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>
          }
          createMany: {
            args: Prisma.stock_drum_newCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stock_drum_newCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>[]
          }
          delete: {
            args: Prisma.stock_drum_newDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>
          }
          update: {
            args: Prisma.stock_drum_newUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>
          }
          deleteMany: {
            args: Prisma.stock_drum_newDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stock_drum_newUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stock_drum_newUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>[]
          }
          upsert: {
            args: Prisma.stock_drum_newUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_drum_newPayload>
          }
          aggregate: {
            args: Prisma.Stock_drum_newAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock_drum_new>
          }
          groupBy: {
            args: Prisma.stock_drum_newGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stock_drum_newGroupByOutputType>[]
          }
          count: {
            args: Prisma.stock_drum_newCountArgs<ExtArgs>
            result: $Utils.Optional<Stock_drum_newCountAggregateOutputType> | number
          }
        }
      }
      stock_new: {
        payload: Prisma.$stock_newPayload<ExtArgs>
        fields: Prisma.stock_newFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stock_newFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stock_newFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>
          }
          findFirst: {
            args: Prisma.stock_newFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stock_newFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>
          }
          findMany: {
            args: Prisma.stock_newFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>[]
          }
          create: {
            args: Prisma.stock_newCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>
          }
          createMany: {
            args: Prisma.stock_newCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stock_newCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>[]
          }
          delete: {
            args: Prisma.stock_newDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>
          }
          update: {
            args: Prisma.stock_newUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>
          }
          deleteMany: {
            args: Prisma.stock_newDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stock_newUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stock_newUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>[]
          }
          upsert: {
            args: Prisma.stock_newUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_newPayload>
          }
          aggregate: {
            args: Prisma.Stock_newAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock_new>
          }
          groupBy: {
            args: Prisma.stock_newGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stock_newGroupByOutputType>[]
          }
          count: {
            args: Prisma.stock_newCountArgs<ExtArgs>
            result: $Utils.Optional<Stock_newCountAggregateOutputType> | number
          }
        }
      }
      stock_order: {
        payload: Prisma.$stock_orderPayload<ExtArgs>
        fields: Prisma.stock_orderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stock_orderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stock_orderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>
          }
          findFirst: {
            args: Prisma.stock_orderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stock_orderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>
          }
          findMany: {
            args: Prisma.stock_orderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>[]
          }
          create: {
            args: Prisma.stock_orderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>
          }
          createMany: {
            args: Prisma.stock_orderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stock_orderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>[]
          }
          delete: {
            args: Prisma.stock_orderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>
          }
          update: {
            args: Prisma.stock_orderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>
          }
          deleteMany: {
            args: Prisma.stock_orderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stock_orderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stock_orderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>[]
          }
          upsert: {
            args: Prisma.stock_orderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_orderPayload>
          }
          aggregate: {
            args: Prisma.Stock_orderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock_order>
          }
          groupBy: {
            args: Prisma.stock_orderGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stock_orderGroupByOutputType>[]
          }
          count: {
            args: Prisma.stock_orderCountArgs<ExtArgs>
            result: $Utils.Optional<Stock_orderCountAggregateOutputType> | number
          }
        }
      }
      stock_repro: {
        payload: Prisma.$stock_reproPayload<ExtArgs>
        fields: Prisma.stock_reproFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stock_reproFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stock_reproFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>
          }
          findFirst: {
            args: Prisma.stock_reproFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stock_reproFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>
          }
          findMany: {
            args: Prisma.stock_reproFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>[]
          }
          create: {
            args: Prisma.stock_reproCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>
          }
          createMany: {
            args: Prisma.stock_reproCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stock_reproCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>[]
          }
          delete: {
            args: Prisma.stock_reproDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>
          }
          update: {
            args: Prisma.stock_reproUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>
          }
          deleteMany: {
            args: Prisma.stock_reproDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stock_reproUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stock_reproUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>[]
          }
          upsert: {
            args: Prisma.stock_reproUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_reproPayload>
          }
          aggregate: {
            args: Prisma.Stock_reproAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock_repro>
          }
          groupBy: {
            args: Prisma.stock_reproGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stock_reproGroupByOutputType>[]
          }
          count: {
            args: Prisma.stock_reproCountArgs<ExtArgs>
            result: $Utils.Optional<Stock_reproCountAggregateOutputType> | number
          }
        }
      }
      user_profiles: {
        payload: Prisma.$user_profilesPayload<ExtArgs>
        fields: Prisma.user_profilesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_profilesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_profilesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>
          }
          findFirst: {
            args: Prisma.user_profilesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_profilesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>
          }
          findMany: {
            args: Prisma.user_profilesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>[]
          }
          create: {
            args: Prisma.user_profilesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>
          }
          createMany: {
            args: Prisma.user_profilesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_profilesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>[]
          }
          delete: {
            args: Prisma.user_profilesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>
          }
          update: {
            args: Prisma.user_profilesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>
          }
          deleteMany: {
            args: Prisma.user_profilesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_profilesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_profilesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>[]
          }
          upsert: {
            args: Prisma.user_profilesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_profilesPayload>
          }
          aggregate: {
            args: Prisma.User_profilesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_profiles>
          }
          groupBy: {
            args: Prisma.user_profilesGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_profilesGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_profilesCountArgs<ExtArgs>
            result: $Utils.Optional<User_profilesCountAggregateOutputType> | number
          }
        }
      }
      user_roles: {
        payload: Prisma.$user_rolesPayload<ExtArgs>
        fields: Prisma.user_rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          findFirst: {
            args: Prisma.user_rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          findMany: {
            args: Prisma.user_rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>[]
          }
          create: {
            args: Prisma.user_rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          createMany: {
            args: Prisma.user_rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_rolesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>[]
          }
          delete: {
            args: Prisma.user_rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          update: {
            args: Prisma.user_rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          deleteMany: {
            args: Prisma.user_rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_rolesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>[]
          }
          upsert: {
            args: Prisma.user_rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          aggregate: {
            args: Prisma.User_rolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_roles>
          }
          groupBy: {
            args: Prisma.user_rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_rolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_rolesCountArgs<ExtArgs>
            result: $Utils.Optional<User_rolesCountAggregateOutputType> | number
          }
        }
      }
      worker_passcodes: {
        payload: Prisma.$worker_passcodesPayload<ExtArgs>
        fields: Prisma.worker_passcodesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.worker_passcodesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.worker_passcodesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>
          }
          findFirst: {
            args: Prisma.worker_passcodesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.worker_passcodesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>
          }
          findMany: {
            args: Prisma.worker_passcodesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>[]
          }
          create: {
            args: Prisma.worker_passcodesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>
          }
          createMany: {
            args: Prisma.worker_passcodesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.worker_passcodesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>[]
          }
          delete: {
            args: Prisma.worker_passcodesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>
          }
          update: {
            args: Prisma.worker_passcodesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>
          }
          deleteMany: {
            args: Prisma.worker_passcodesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.worker_passcodesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.worker_passcodesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>[]
          }
          upsert: {
            args: Prisma.worker_passcodesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$worker_passcodesPayload>
          }
          aggregate: {
            args: Prisma.Worker_passcodesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWorker_passcodes>
          }
          groupBy: {
            args: Prisma.worker_passcodesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Worker_passcodesGroupByOutputType>[]
          }
          count: {
            args: Prisma.worker_passcodesCountArgs<ExtArgs>
            result: $Utils.Optional<Worker_passcodesCountAggregateOutputType> | number
          }
        }
      }
      order_detail_stock_activity: {
        payload: Prisma.$order_detail_stock_activityPayload<ExtArgs>
        fields: Prisma.order_detail_stock_activityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.order_detail_stock_activityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.order_detail_stock_activityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>
          }
          findFirst: {
            args: Prisma.order_detail_stock_activityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.order_detail_stock_activityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>
          }
          findMany: {
            args: Prisma.order_detail_stock_activityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>[]
          }
          create: {
            args: Prisma.order_detail_stock_activityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>
          }
          createMany: {
            args: Prisma.order_detail_stock_activityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.order_detail_stock_activityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>[]
          }
          delete: {
            args: Prisma.order_detail_stock_activityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>
          }
          update: {
            args: Prisma.order_detail_stock_activityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>
          }
          deleteMany: {
            args: Prisma.order_detail_stock_activityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.order_detail_stock_activityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.order_detail_stock_activityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>[]
          }
          upsert: {
            args: Prisma.order_detail_stock_activityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detail_stock_activityPayload>
          }
          aggregate: {
            args: Prisma.Order_detail_stock_activityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder_detail_stock_activity>
          }
          groupBy: {
            args: Prisma.order_detail_stock_activityGroupByArgs<ExtArgs>
            result: $Utils.Optional<Order_detail_stock_activityGroupByOutputType>[]
          }
          count: {
            args: Prisma.order_detail_stock_activityCountArgs<ExtArgs>
            result: $Utils.Optional<Order_detail_stock_activityCountAggregateOutputType> | number
          }
        }
      }
      raw_stock_history: {
        payload: Prisma.$raw_stock_historyPayload<ExtArgs>
        fields: Prisma.raw_stock_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.raw_stock_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.raw_stock_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>
          }
          findFirst: {
            args: Prisma.raw_stock_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.raw_stock_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>
          }
          findMany: {
            args: Prisma.raw_stock_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>[]
          }
          create: {
            args: Prisma.raw_stock_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>
          }
          createMany: {
            args: Prisma.raw_stock_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.raw_stock_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>[]
          }
          delete: {
            args: Prisma.raw_stock_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>
          }
          update: {
            args: Prisma.raw_stock_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>
          }
          deleteMany: {
            args: Prisma.raw_stock_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.raw_stock_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.raw_stock_historyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>[]
          }
          upsert: {
            args: Prisma.raw_stock_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$raw_stock_historyPayload>
          }
          aggregate: {
            args: Prisma.Raw_stock_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRaw_stock_history>
          }
          groupBy: {
            args: Prisma.raw_stock_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Raw_stock_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.raw_stock_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Raw_stock_historyCountAggregateOutputType> | number
          }
        }
      }
      stock_activity: {
        payload: Prisma.$stock_activityPayload<ExtArgs>
        fields: Prisma.stock_activityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stock_activityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stock_activityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>
          }
          findFirst: {
            args: Prisma.stock_activityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stock_activityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>
          }
          findMany: {
            args: Prisma.stock_activityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>[]
          }
          create: {
            args: Prisma.stock_activityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>
          }
          createMany: {
            args: Prisma.stock_activityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stock_activityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>[]
          }
          delete: {
            args: Prisma.stock_activityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>
          }
          update: {
            args: Prisma.stock_activityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>
          }
          deleteMany: {
            args: Prisma.stock_activityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stock_activityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stock_activityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>[]
          }
          upsert: {
            args: Prisma.stock_activityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_activityPayload>
          }
          aggregate: {
            args: Prisma.Stock_activityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock_activity>
          }
          groupBy: {
            args: Prisma.stock_activityGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stock_activityGroupByOutputType>[]
          }
          count: {
            args: Prisma.stock_activityCountArgs<ExtArgs>
            result: $Utils.Optional<Stock_activityCountAggregateOutputType> | number
          }
        }
      }
      stock_history: {
        payload: Prisma.$stock_historyPayload<ExtArgs>
        fields: Prisma.stock_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.stock_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.stock_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>
          }
          findFirst: {
            args: Prisma.stock_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.stock_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>
          }
          findMany: {
            args: Prisma.stock_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>[]
          }
          create: {
            args: Prisma.stock_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>
          }
          createMany: {
            args: Prisma.stock_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.stock_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>[]
          }
          delete: {
            args: Prisma.stock_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>
          }
          update: {
            args: Prisma.stock_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>
          }
          deleteMany: {
            args: Prisma.stock_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.stock_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.stock_historyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>[]
          }
          upsert: {
            args: Prisma.stock_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$stock_historyPayload>
          }
          aggregate: {
            args: Prisma.Stock_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock_history>
          }
          groupBy: {
            args: Prisma.stock_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Stock_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.stock_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Stock_historyCountAggregateOutputType> | number
          }
        }
      }
      ref_product: {
        payload: Prisma.$ref_productPayload<ExtArgs>
        fields: Prisma.ref_productFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ref_productFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ref_productFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>
          }
          findFirst: {
            args: Prisma.ref_productFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ref_productFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>
          }
          findMany: {
            args: Prisma.ref_productFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>[]
          }
          create: {
            args: Prisma.ref_productCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>
          }
          createMany: {
            args: Prisma.ref_productCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ref_productCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>[]
          }
          delete: {
            args: Prisma.ref_productDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>
          }
          update: {
            args: Prisma.ref_productUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>
          }
          deleteMany: {
            args: Prisma.ref_productDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ref_productUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ref_productUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>[]
          }
          upsert: {
            args: Prisma.ref_productUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_productPayload>
          }
          aggregate: {
            args: Prisma.Ref_productAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRef_product>
          }
          groupBy: {
            args: Prisma.ref_productGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ref_productGroupByOutputType>[]
          }
          count: {
            args: Prisma.ref_productCountArgs<ExtArgs>
            result: $Utils.Optional<Ref_productCountAggregateOutputType> | number
          }
        }
      }
      ref_supplier_material: {
        payload: Prisma.$ref_supplier_materialPayload<ExtArgs>
        fields: Prisma.ref_supplier_materialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ref_supplier_materialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ref_supplier_materialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>
          }
          findFirst: {
            args: Prisma.ref_supplier_materialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ref_supplier_materialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>
          }
          findMany: {
            args: Prisma.ref_supplier_materialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>[]
          }
          create: {
            args: Prisma.ref_supplier_materialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>
          }
          createMany: {
            args: Prisma.ref_supplier_materialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ref_supplier_materialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>[]
          }
          delete: {
            args: Prisma.ref_supplier_materialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>
          }
          update: {
            args: Prisma.ref_supplier_materialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>
          }
          deleteMany: {
            args: Prisma.ref_supplier_materialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ref_supplier_materialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ref_supplier_materialUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>[]
          }
          upsert: {
            args: Prisma.ref_supplier_materialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ref_supplier_materialPayload>
          }
          aggregate: {
            args: Prisma.Ref_supplier_materialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRef_supplier_material>
          }
          groupBy: {
            args: Prisma.ref_supplier_materialGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ref_supplier_materialGroupByOutputType>[]
          }
          count: {
            args: Prisma.ref_supplier_materialCountArgs<ExtArgs>
            result: $Utils.Optional<Ref_supplier_materialCountAggregateOutputType> | number
          }
        }
      }
      user_queries: {
        payload: Prisma.$user_queriesPayload<ExtArgs>
        fields: Prisma.user_queriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_queriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_queriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>
          }
          findFirst: {
            args: Prisma.user_queriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_queriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>
          }
          findMany: {
            args: Prisma.user_queriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>[]
          }
          create: {
            args: Prisma.user_queriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>
          }
          createMany: {
            args: Prisma.user_queriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_queriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>[]
          }
          delete: {
            args: Prisma.user_queriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>
          }
          update: {
            args: Prisma.user_queriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>
          }
          deleteMany: {
            args: Prisma.user_queriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_queriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_queriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>[]
          }
          upsert: {
            args: Prisma.user_queriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_queriesPayload>
          }
          aggregate: {
            args: Prisma.User_queriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_queries>
          }
          groupBy: {
            args: Prisma.user_queriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_queriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_queriesCountArgs<ExtArgs>
            result: $Utils.Optional<User_queriesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    active_context?: active_contextOmit
    auth_activity_log?: auth_activity_logOmit
    bottle_sizes?: bottle_sizesOmit
    chemical_group_kind?: chemical_group_kindOmit
    distillation_pending_assignment?: distillation_pending_assignmentOmit
    distillation_record?: distillation_recordOmit
    distillation_schedule?: distillation_scheduleOmit
    distillation_schedule_items?: distillation_schedule_itemsOmit
    drums?: drumsOmit
    log_drum_decommission?: log_drum_decommissionOmit
    log_drum_scan?: log_drum_scanOmit
    log_load_still?: log_load_stillOmit
    log_start_distillation?: log_start_distillationOmit
    log_transport_drum?: log_transport_drumOmit
    log_volume_transfer?: log_volume_transferOmit
    notification?: notificationOmit
    order_detail?: order_detailOmit
    product_prices?: product_pricesOmit
    raw_materials?: raw_materialsOmit
    ref_materials?: ref_materialsOmit
    ref_stills?: ref_stillsOmit
    ref_suppliers?: ref_suppliersOmit
    session_settings?: session_settingsOmit
    stock_drum?: stock_drumOmit
    stock_drum_new?: stock_drum_newOmit
    stock_new?: stock_newOmit
    stock_order?: stock_orderOmit
    stock_repro?: stock_reproOmit
    user_profiles?: user_profilesOmit
    user_roles?: user_rolesOmit
    worker_passcodes?: worker_passcodesOmit
    order_detail_stock_activity?: order_detail_stock_activityOmit
    raw_stock_history?: raw_stock_historyOmit
    stock_activity?: stock_activityOmit
    stock_history?: stock_historyOmit
    ref_product?: ref_productOmit
    ref_supplier_material?: ref_supplier_materialOmit
    user_queries?: user_queriesOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Bottle_sizesCountOutputType
   */

  export type Bottle_sizesCountOutputType = {
    product_prices: number
  }

  export type Bottle_sizesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_prices?: boolean | Bottle_sizesCountOutputTypeCountProduct_pricesArgs
  }

  // Custom InputTypes
  /**
   * Bottle_sizesCountOutputType without action
   */
  export type Bottle_sizesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bottle_sizesCountOutputType
     */
    select?: Bottle_sizesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Bottle_sizesCountOutputType without action
   */
  export type Bottle_sizesCountOutputTypeCountProduct_pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_pricesWhereInput
  }


  /**
   * Count Type Chemical_group_kindCountOutputType
   */

  export type Chemical_group_kindCountOutputType = {
    ref_materials: number
  }

  export type Chemical_group_kindCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | Chemical_group_kindCountOutputTypeCountRef_materialsArgs
  }

  // Custom InputTypes
  /**
   * Chemical_group_kindCountOutputType without action
   */
  export type Chemical_group_kindCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chemical_group_kindCountOutputType
     */
    select?: Chemical_group_kindCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Chemical_group_kindCountOutputType without action
   */
  export type Chemical_group_kindCountOutputTypeCountRef_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_materialsWhereInput
  }


  /**
   * Count Type Distillation_recordCountOutputType
   */

  export type Distillation_recordCountOutputType = {
    stock_drum: number
    stock_drum_new: number
  }

  export type Distillation_recordCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock_drum?: boolean | Distillation_recordCountOutputTypeCountStock_drumArgs
    stock_drum_new?: boolean | Distillation_recordCountOutputTypeCountStock_drum_newArgs
  }

  // Custom InputTypes
  /**
   * Distillation_recordCountOutputType without action
   */
  export type Distillation_recordCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Distillation_recordCountOutputType
     */
    select?: Distillation_recordCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Distillation_recordCountOutputType without action
   */
  export type Distillation_recordCountOutputTypeCountStock_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_drumWhereInput
  }

  /**
   * Distillation_recordCountOutputType without action
   */
  export type Distillation_recordCountOutputTypeCountStock_drum_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_drum_newWhereInput
  }


  /**
   * Count Type Distillation_scheduleCountOutputType
   */

  export type Distillation_scheduleCountOutputType = {
    distillation_pending_assignment: number
    distillation_schedule_items: number
    log_load_still: number
    log_transport_drum: number
    log_volume_transfer: number
  }

  export type Distillation_scheduleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_pending_assignment?: boolean | Distillation_scheduleCountOutputTypeCountDistillation_pending_assignmentArgs
    distillation_schedule_items?: boolean | Distillation_scheduleCountOutputTypeCountDistillation_schedule_itemsArgs
    log_load_still?: boolean | Distillation_scheduleCountOutputTypeCountLog_load_stillArgs
    log_transport_drum?: boolean | Distillation_scheduleCountOutputTypeCountLog_transport_drumArgs
    log_volume_transfer?: boolean | Distillation_scheduleCountOutputTypeCountLog_volume_transferArgs
  }

  // Custom InputTypes
  /**
   * Distillation_scheduleCountOutputType without action
   */
  export type Distillation_scheduleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Distillation_scheduleCountOutputType
     */
    select?: Distillation_scheduleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Distillation_scheduleCountOutputType without action
   */
  export type Distillation_scheduleCountOutputTypeCountDistillation_pending_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_pending_assignmentWhereInput
  }

  /**
   * Distillation_scheduleCountOutputType without action
   */
  export type Distillation_scheduleCountOutputTypeCountDistillation_schedule_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_schedule_itemsWhereInput
  }

  /**
   * Distillation_scheduleCountOutputType without action
   */
  export type Distillation_scheduleCountOutputTypeCountLog_load_stillArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_load_stillWhereInput
  }

  /**
   * Distillation_scheduleCountOutputType without action
   */
  export type Distillation_scheduleCountOutputTypeCountLog_transport_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_transport_drumWhereInput
  }

  /**
   * Distillation_scheduleCountOutputType without action
   */
  export type Distillation_scheduleCountOutputTypeCountLog_volume_transferArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_volume_transferWhereInput
  }


  /**
   * Count Type Distillation_schedule_itemsCountOutputType
   */

  export type Distillation_schedule_itemsCountOutputType = {
    stock_activity: number
  }

  export type Distillation_schedule_itemsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock_activity?: boolean | Distillation_schedule_itemsCountOutputTypeCountStock_activityArgs
  }

  // Custom InputTypes
  /**
   * Distillation_schedule_itemsCountOutputType without action
   */
  export type Distillation_schedule_itemsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Distillation_schedule_itemsCountOutputType
     */
    select?: Distillation_schedule_itemsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Distillation_schedule_itemsCountOutputType without action
   */
  export type Distillation_schedule_itemsCountOutputTypeCountStock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_activityWhereInput
  }


  /**
   * Count Type Log_transport_drumCountOutputType
   */

  export type Log_transport_drumCountOutputType = {
    distillation_pending_assignment: number
  }

  export type Log_transport_drumCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_pending_assignment?: boolean | Log_transport_drumCountOutputTypeCountDistillation_pending_assignmentArgs
  }

  // Custom InputTypes
  /**
   * Log_transport_drumCountOutputType without action
   */
  export type Log_transport_drumCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log_transport_drumCountOutputType
     */
    select?: Log_transport_drumCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Log_transport_drumCountOutputType without action
   */
  export type Log_transport_drumCountOutputTypeCountDistillation_pending_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_pending_assignmentWhereInput
  }


  /**
   * Count Type Order_detailCountOutputType
   */

  export type Order_detailCountOutputType = {
    order_detail_stock_activity: number
    stock_activity: number
    stock_drum: number
    stock_drum_new: number
  }

  export type Order_detailCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail_stock_activity?: boolean | Order_detailCountOutputTypeCountOrder_detail_stock_activityArgs
    stock_activity?: boolean | Order_detailCountOutputTypeCountStock_activityArgs
    stock_drum?: boolean | Order_detailCountOutputTypeCountStock_drumArgs
    stock_drum_new?: boolean | Order_detailCountOutputTypeCountStock_drum_newArgs
  }

  // Custom InputTypes
  /**
   * Order_detailCountOutputType without action
   */
  export type Order_detailCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order_detailCountOutputType
     */
    select?: Order_detailCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Order_detailCountOutputType without action
   */
  export type Order_detailCountOutputTypeCountOrder_detail_stock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detail_stock_activityWhereInput
  }

  /**
   * Order_detailCountOutputType without action
   */
  export type Order_detailCountOutputTypeCountStock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_activityWhereInput
  }

  /**
   * Order_detailCountOutputType without action
   */
  export type Order_detailCountOutputTypeCountStock_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_drumWhereInput
  }

  /**
   * Order_detailCountOutputType without action
   */
  export type Order_detailCountOutputTypeCountStock_drum_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_drum_newWhereInput
  }


  /**
   * Count Type Ref_materialsCountOutputType
   */

  export type Ref_materialsCountOutputType = {
    order_detail: number
    raw_stock_history: number
    ref_product: number
    ref_supplier_material: number
    stock_activity: number
    stock_drum_new: number
    stock_history: number
    stock_new: number
    stock_repro: number
  }

  export type Ref_materialsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail?: boolean | Ref_materialsCountOutputTypeCountOrder_detailArgs
    raw_stock_history?: boolean | Ref_materialsCountOutputTypeCountRaw_stock_historyArgs
    ref_product?: boolean | Ref_materialsCountOutputTypeCountRef_productArgs
    ref_supplier_material?: boolean | Ref_materialsCountOutputTypeCountRef_supplier_materialArgs
    stock_activity?: boolean | Ref_materialsCountOutputTypeCountStock_activityArgs
    stock_drum_new?: boolean | Ref_materialsCountOutputTypeCountStock_drum_newArgs
    stock_history?: boolean | Ref_materialsCountOutputTypeCountStock_historyArgs
    stock_new?: boolean | Ref_materialsCountOutputTypeCountStock_newArgs
    stock_repro?: boolean | Ref_materialsCountOutputTypeCountStock_reproArgs
  }

  // Custom InputTypes
  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ref_materialsCountOutputType
     */
    select?: Ref_materialsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountOrder_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detailWhereInput
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountRaw_stock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: raw_stock_historyWhereInput
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountRef_productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_productWhereInput
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountRef_supplier_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_supplier_materialWhereInput
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountStock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_activityWhereInput
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountStock_drum_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_drum_newWhereInput
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountStock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_historyWhereInput
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountStock_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_newWhereInput
  }

  /**
   * Ref_materialsCountOutputType without action
   */
  export type Ref_materialsCountOutputTypeCountStock_reproArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_reproWhereInput
  }


  /**
   * Count Type Ref_stillsCountOutputType
   */

  export type Ref_stillsCountOutputType = {
    active_context: number
    distillation_schedule: number
    log_load_still: number
    log_start_distillation: number
  }

  export type Ref_stillsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    active_context?: boolean | Ref_stillsCountOutputTypeCountActive_contextArgs
    distillation_schedule?: boolean | Ref_stillsCountOutputTypeCountDistillation_scheduleArgs
    log_load_still?: boolean | Ref_stillsCountOutputTypeCountLog_load_stillArgs
    log_start_distillation?: boolean | Ref_stillsCountOutputTypeCountLog_start_distillationArgs
  }

  // Custom InputTypes
  /**
   * Ref_stillsCountOutputType without action
   */
  export type Ref_stillsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ref_stillsCountOutputType
     */
    select?: Ref_stillsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Ref_stillsCountOutputType without action
   */
  export type Ref_stillsCountOutputTypeCountActive_contextArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: active_contextWhereInput
  }

  /**
   * Ref_stillsCountOutputType without action
   */
  export type Ref_stillsCountOutputTypeCountDistillation_scheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_scheduleWhereInput
  }

  /**
   * Ref_stillsCountOutputType without action
   */
  export type Ref_stillsCountOutputTypeCountLog_load_stillArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_load_stillWhereInput
  }

  /**
   * Ref_stillsCountOutputType without action
   */
  export type Ref_stillsCountOutputTypeCountLog_start_distillationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_start_distillationWhereInput
  }


  /**
   * Count Type Ref_suppliersCountOutputType
   */

  export type Ref_suppliersCountOutputType = {
    ref_supplier_material: number
    stock_activity: number
    stock_history: number
    stock_new: number
    stock_order: number
  }

  export type Ref_suppliersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_supplier_material?: boolean | Ref_suppliersCountOutputTypeCountRef_supplier_materialArgs
    stock_activity?: boolean | Ref_suppliersCountOutputTypeCountStock_activityArgs
    stock_history?: boolean | Ref_suppliersCountOutputTypeCountStock_historyArgs
    stock_new?: boolean | Ref_suppliersCountOutputTypeCountStock_newArgs
    stock_order?: boolean | Ref_suppliersCountOutputTypeCountStock_orderArgs
  }

  // Custom InputTypes
  /**
   * Ref_suppliersCountOutputType without action
   */
  export type Ref_suppliersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ref_suppliersCountOutputType
     */
    select?: Ref_suppliersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Ref_suppliersCountOutputType without action
   */
  export type Ref_suppliersCountOutputTypeCountRef_supplier_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_supplier_materialWhereInput
  }

  /**
   * Ref_suppliersCountOutputType without action
   */
  export type Ref_suppliersCountOutputTypeCountStock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_activityWhereInput
  }

  /**
   * Ref_suppliersCountOutputType without action
   */
  export type Ref_suppliersCountOutputTypeCountStock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_historyWhereInput
  }

  /**
   * Ref_suppliersCountOutputType without action
   */
  export type Ref_suppliersCountOutputTypeCountStock_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_newWhereInput
  }

  /**
   * Ref_suppliersCountOutputType without action
   */
  export type Ref_suppliersCountOutputTypeCountStock_orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_orderWhereInput
  }


  /**
   * Count Type Stock_drumCountOutputType
   */

  export type Stock_drumCountOutputType = {
    distillation_pending_assignment: number
    log_drum_scan: number
    log_load_still: number
    log_transport_drum: number
    log_volume_transfer: number
  }

  export type Stock_drumCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_pending_assignment?: boolean | Stock_drumCountOutputTypeCountDistillation_pending_assignmentArgs
    log_drum_scan?: boolean | Stock_drumCountOutputTypeCountLog_drum_scanArgs
    log_load_still?: boolean | Stock_drumCountOutputTypeCountLog_load_stillArgs
    log_transport_drum?: boolean | Stock_drumCountOutputTypeCountLog_transport_drumArgs
    log_volume_transfer?: boolean | Stock_drumCountOutputTypeCountLog_volume_transferArgs
  }

  // Custom InputTypes
  /**
   * Stock_drumCountOutputType without action
   */
  export type Stock_drumCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock_drumCountOutputType
     */
    select?: Stock_drumCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Stock_drumCountOutputType without action
   */
  export type Stock_drumCountOutputTypeCountDistillation_pending_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_pending_assignmentWhereInput
  }

  /**
   * Stock_drumCountOutputType without action
   */
  export type Stock_drumCountOutputTypeCountLog_drum_scanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_drum_scanWhereInput
  }

  /**
   * Stock_drumCountOutputType without action
   */
  export type Stock_drumCountOutputTypeCountLog_load_stillArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_load_stillWhereInput
  }

  /**
   * Stock_drumCountOutputType without action
   */
  export type Stock_drumCountOutputTypeCountLog_transport_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_transport_drumWhereInput
  }

  /**
   * Stock_drumCountOutputType without action
   */
  export type Stock_drumCountOutputTypeCountLog_volume_transferArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_volume_transferWhereInput
  }


  /**
   * Count Type Stock_newCountOutputType
   */

  export type Stock_newCountOutputType = {
    distillation_schedule_items: number
  }

  export type Stock_newCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule_items?: boolean | Stock_newCountOutputTypeCountDistillation_schedule_itemsArgs
  }

  // Custom InputTypes
  /**
   * Stock_newCountOutputType without action
   */
  export type Stock_newCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock_newCountOutputType
     */
    select?: Stock_newCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Stock_newCountOutputType without action
   */
  export type Stock_newCountOutputTypeCountDistillation_schedule_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_schedule_itemsWhereInput
  }


  /**
   * Count Type Stock_orderCountOutputType
   */

  export type Stock_orderCountOutputType = {
    order_detail: number
  }

  export type Stock_orderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail?: boolean | Stock_orderCountOutputTypeCountOrder_detailArgs
  }

  // Custom InputTypes
  /**
   * Stock_orderCountOutputType without action
   */
  export type Stock_orderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock_orderCountOutputType
     */
    select?: Stock_orderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Stock_orderCountOutputType without action
   */
  export type Stock_orderCountOutputTypeCountOrder_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detailWhereInput
  }


  /**
   * Count Type Stock_reproCountOutputType
   */

  export type Stock_reproCountOutputType = {
    distillation_schedule_items: number
  }

  export type Stock_reproCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule_items?: boolean | Stock_reproCountOutputTypeCountDistillation_schedule_itemsArgs
  }

  // Custom InputTypes
  /**
   * Stock_reproCountOutputType without action
   */
  export type Stock_reproCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock_reproCountOutputType
     */
    select?: Stock_reproCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Stock_reproCountOutputType without action
   */
  export type Stock_reproCountOutputTypeCountDistillation_schedule_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_schedule_itemsWhereInput
  }


  /**
   * Count Type Raw_stock_historyCountOutputType
   */

  export type Raw_stock_historyCountOutputType = {
    stock_history: number
  }

  export type Raw_stock_historyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock_history?: boolean | Raw_stock_historyCountOutputTypeCountStock_historyArgs
  }

  // Custom InputTypes
  /**
   * Raw_stock_historyCountOutputType without action
   */
  export type Raw_stock_historyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Raw_stock_historyCountOutputType
     */
    select?: Raw_stock_historyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Raw_stock_historyCountOutputType without action
   */
  export type Raw_stock_historyCountOutputTypeCountStock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_historyWhereInput
  }


  /**
   * Count Type Stock_activityCountOutputType
   */

  export type Stock_activityCountOutputType = {
    order_detail_stock_activity: number
  }

  export type Stock_activityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail_stock_activity?: boolean | Stock_activityCountOutputTypeCountOrder_detail_stock_activityArgs
  }

  // Custom InputTypes
  /**
   * Stock_activityCountOutputType without action
   */
  export type Stock_activityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock_activityCountOutputType
     */
    select?: Stock_activityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Stock_activityCountOutputType without action
   */
  export type Stock_activityCountOutputTypeCountOrder_detail_stock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detail_stock_activityWhereInput
  }


  /**
   * Count Type Ref_productCountOutputType
   */

  export type Ref_productCountOutputType = {
    product_prices: number
  }

  export type Ref_productCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_prices?: boolean | Ref_productCountOutputTypeCountProduct_pricesArgs
  }

  // Custom InputTypes
  /**
   * Ref_productCountOutputType without action
   */
  export type Ref_productCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ref_productCountOutputType
     */
    select?: Ref_productCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Ref_productCountOutputType without action
   */
  export type Ref_productCountOutputTypeCountProduct_pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_pricesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model active_context
   */

  export type AggregateActive_context = {
    _count: Active_contextCountAggregateOutputType | null
    _avg: Active_contextAvgAggregateOutputType | null
    _sum: Active_contextSumAggregateOutputType | null
    _min: Active_contextMinAggregateOutputType | null
    _max: Active_contextMaxAggregateOutputType | null
  }

  export type Active_contextAvgAggregateOutputType = {
    context_id: number | null
    worker_id: number | null
    still_id: number | null
  }

  export type Active_contextSumAggregateOutputType = {
    context_id: number | null
    worker_id: number | null
    still_id: number | null
  }

  export type Active_contextMinAggregateOutputType = {
    context_id: number | null
    worker_id: number | null
    still_id: number | null
    created_at: Date | null
  }

  export type Active_contextMaxAggregateOutputType = {
    context_id: number | null
    worker_id: number | null
    still_id: number | null
    created_at: Date | null
  }

  export type Active_contextCountAggregateOutputType = {
    context_id: number
    worker_id: number
    still_id: number
    created_at: number
    _all: number
  }


  export type Active_contextAvgAggregateInputType = {
    context_id?: true
    worker_id?: true
    still_id?: true
  }

  export type Active_contextSumAggregateInputType = {
    context_id?: true
    worker_id?: true
    still_id?: true
  }

  export type Active_contextMinAggregateInputType = {
    context_id?: true
    worker_id?: true
    still_id?: true
    created_at?: true
  }

  export type Active_contextMaxAggregateInputType = {
    context_id?: true
    worker_id?: true
    still_id?: true
    created_at?: true
  }

  export type Active_contextCountAggregateInputType = {
    context_id?: true
    worker_id?: true
    still_id?: true
    created_at?: true
    _all?: true
  }

  export type Active_contextAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which active_context to aggregate.
     */
    where?: active_contextWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of active_contexts to fetch.
     */
    orderBy?: active_contextOrderByWithRelationInput | active_contextOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: active_contextWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` active_contexts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` active_contexts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned active_contexts
    **/
    _count?: true | Active_contextCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Active_contextAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Active_contextSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Active_contextMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Active_contextMaxAggregateInputType
  }

  export type GetActive_contextAggregateType<T extends Active_contextAggregateArgs> = {
        [P in keyof T & keyof AggregateActive_context]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActive_context[P]>
      : GetScalarType<T[P], AggregateActive_context[P]>
  }




  export type active_contextGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: active_contextWhereInput
    orderBy?: active_contextOrderByWithAggregationInput | active_contextOrderByWithAggregationInput[]
    by: Active_contextScalarFieldEnum[] | Active_contextScalarFieldEnum
    having?: active_contextScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Active_contextCountAggregateInputType | true
    _avg?: Active_contextAvgAggregateInputType
    _sum?: Active_contextSumAggregateInputType
    _min?: Active_contextMinAggregateInputType
    _max?: Active_contextMaxAggregateInputType
  }

  export type Active_contextGroupByOutputType = {
    context_id: number
    worker_id: number | null
    still_id: number | null
    created_at: Date | null
    _count: Active_contextCountAggregateOutputType | null
    _avg: Active_contextAvgAggregateOutputType | null
    _sum: Active_contextSumAggregateOutputType | null
    _min: Active_contextMinAggregateOutputType | null
    _max: Active_contextMaxAggregateOutputType | null
  }

  type GetActive_contextGroupByPayload<T extends active_contextGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Active_contextGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Active_contextGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Active_contextGroupByOutputType[P]>
            : GetScalarType<T[P], Active_contextGroupByOutputType[P]>
        }
      >
    >


  export type active_contextSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    context_id?: boolean
    worker_id?: boolean
    still_id?: boolean
    created_at?: boolean
    ref_stills?: boolean | active_context$ref_stillsArgs<ExtArgs>
  }, ExtArgs["result"]["active_context"]>

  export type active_contextSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    context_id?: boolean
    worker_id?: boolean
    still_id?: boolean
    created_at?: boolean
    ref_stills?: boolean | active_context$ref_stillsArgs<ExtArgs>
  }, ExtArgs["result"]["active_context"]>

  export type active_contextSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    context_id?: boolean
    worker_id?: boolean
    still_id?: boolean
    created_at?: boolean
    ref_stills?: boolean | active_context$ref_stillsArgs<ExtArgs>
  }, ExtArgs["result"]["active_context"]>

  export type active_contextSelectScalar = {
    context_id?: boolean
    worker_id?: boolean
    still_id?: boolean
    created_at?: boolean
  }

  export type active_contextOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"context_id" | "worker_id" | "still_id" | "created_at", ExtArgs["result"]["active_context"]>
  export type active_contextInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_stills?: boolean | active_context$ref_stillsArgs<ExtArgs>
  }
  export type active_contextIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_stills?: boolean | active_context$ref_stillsArgs<ExtArgs>
  }
  export type active_contextIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_stills?: boolean | active_context$ref_stillsArgs<ExtArgs>
  }

  export type $active_contextPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "active_context"
    objects: {
      ref_stills: Prisma.$ref_stillsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      context_id: number
      worker_id: number | null
      still_id: number | null
      created_at: Date | null
    }, ExtArgs["result"]["active_context"]>
    composites: {}
  }

  type active_contextGetPayload<S extends boolean | null | undefined | active_contextDefaultArgs> = $Result.GetResult<Prisma.$active_contextPayload, S>

  type active_contextCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<active_contextFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Active_contextCountAggregateInputType | true
    }

  export interface active_contextDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['active_context'], meta: { name: 'active_context' } }
    /**
     * Find zero or one Active_context that matches the filter.
     * @param {active_contextFindUniqueArgs} args - Arguments to find a Active_context
     * @example
     * // Get one Active_context
     * const active_context = await prisma.active_context.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends active_contextFindUniqueArgs>(args: SelectSubset<T, active_contextFindUniqueArgs<ExtArgs>>): Prisma__active_contextClient<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Active_context that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {active_contextFindUniqueOrThrowArgs} args - Arguments to find a Active_context
     * @example
     * // Get one Active_context
     * const active_context = await prisma.active_context.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends active_contextFindUniqueOrThrowArgs>(args: SelectSubset<T, active_contextFindUniqueOrThrowArgs<ExtArgs>>): Prisma__active_contextClient<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Active_context that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {active_contextFindFirstArgs} args - Arguments to find a Active_context
     * @example
     * // Get one Active_context
     * const active_context = await prisma.active_context.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends active_contextFindFirstArgs>(args?: SelectSubset<T, active_contextFindFirstArgs<ExtArgs>>): Prisma__active_contextClient<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Active_context that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {active_contextFindFirstOrThrowArgs} args - Arguments to find a Active_context
     * @example
     * // Get one Active_context
     * const active_context = await prisma.active_context.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends active_contextFindFirstOrThrowArgs>(args?: SelectSubset<T, active_contextFindFirstOrThrowArgs<ExtArgs>>): Prisma__active_contextClient<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Active_contexts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {active_contextFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Active_contexts
     * const active_contexts = await prisma.active_context.findMany()
     * 
     * // Get first 10 Active_contexts
     * const active_contexts = await prisma.active_context.findMany({ take: 10 })
     * 
     * // Only select the `context_id`
     * const active_contextWithContext_idOnly = await prisma.active_context.findMany({ select: { context_id: true } })
     * 
     */
    findMany<T extends active_contextFindManyArgs>(args?: SelectSubset<T, active_contextFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Active_context.
     * @param {active_contextCreateArgs} args - Arguments to create a Active_context.
     * @example
     * // Create one Active_context
     * const Active_context = await prisma.active_context.create({
     *   data: {
     *     // ... data to create a Active_context
     *   }
     * })
     * 
     */
    create<T extends active_contextCreateArgs>(args: SelectSubset<T, active_contextCreateArgs<ExtArgs>>): Prisma__active_contextClient<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Active_contexts.
     * @param {active_contextCreateManyArgs} args - Arguments to create many Active_contexts.
     * @example
     * // Create many Active_contexts
     * const active_context = await prisma.active_context.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends active_contextCreateManyArgs>(args?: SelectSubset<T, active_contextCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Active_contexts and returns the data saved in the database.
     * @param {active_contextCreateManyAndReturnArgs} args - Arguments to create many Active_contexts.
     * @example
     * // Create many Active_contexts
     * const active_context = await prisma.active_context.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Active_contexts and only return the `context_id`
     * const active_contextWithContext_idOnly = await prisma.active_context.createManyAndReturn({
     *   select: { context_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends active_contextCreateManyAndReturnArgs>(args?: SelectSubset<T, active_contextCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Active_context.
     * @param {active_contextDeleteArgs} args - Arguments to delete one Active_context.
     * @example
     * // Delete one Active_context
     * const Active_context = await prisma.active_context.delete({
     *   where: {
     *     // ... filter to delete one Active_context
     *   }
     * })
     * 
     */
    delete<T extends active_contextDeleteArgs>(args: SelectSubset<T, active_contextDeleteArgs<ExtArgs>>): Prisma__active_contextClient<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Active_context.
     * @param {active_contextUpdateArgs} args - Arguments to update one Active_context.
     * @example
     * // Update one Active_context
     * const active_context = await prisma.active_context.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends active_contextUpdateArgs>(args: SelectSubset<T, active_contextUpdateArgs<ExtArgs>>): Prisma__active_contextClient<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Active_contexts.
     * @param {active_contextDeleteManyArgs} args - Arguments to filter Active_contexts to delete.
     * @example
     * // Delete a few Active_contexts
     * const { count } = await prisma.active_context.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends active_contextDeleteManyArgs>(args?: SelectSubset<T, active_contextDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Active_contexts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {active_contextUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Active_contexts
     * const active_context = await prisma.active_context.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends active_contextUpdateManyArgs>(args: SelectSubset<T, active_contextUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Active_contexts and returns the data updated in the database.
     * @param {active_contextUpdateManyAndReturnArgs} args - Arguments to update many Active_contexts.
     * @example
     * // Update many Active_contexts
     * const active_context = await prisma.active_context.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Active_contexts and only return the `context_id`
     * const active_contextWithContext_idOnly = await prisma.active_context.updateManyAndReturn({
     *   select: { context_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends active_contextUpdateManyAndReturnArgs>(args: SelectSubset<T, active_contextUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Active_context.
     * @param {active_contextUpsertArgs} args - Arguments to update or create a Active_context.
     * @example
     * // Update or create a Active_context
     * const active_context = await prisma.active_context.upsert({
     *   create: {
     *     // ... data to create a Active_context
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Active_context we want to update
     *   }
     * })
     */
    upsert<T extends active_contextUpsertArgs>(args: SelectSubset<T, active_contextUpsertArgs<ExtArgs>>): Prisma__active_contextClient<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Active_contexts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {active_contextCountArgs} args - Arguments to filter Active_contexts to count.
     * @example
     * // Count the number of Active_contexts
     * const count = await prisma.active_context.count({
     *   where: {
     *     // ... the filter for the Active_contexts we want to count
     *   }
     * })
    **/
    count<T extends active_contextCountArgs>(
      args?: Subset<T, active_contextCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Active_contextCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Active_context.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Active_contextAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Active_contextAggregateArgs>(args: Subset<T, Active_contextAggregateArgs>): Prisma.PrismaPromise<GetActive_contextAggregateType<T>>

    /**
     * Group by Active_context.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {active_contextGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends active_contextGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: active_contextGroupByArgs['orderBy'] }
        : { orderBy?: active_contextGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, active_contextGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActive_contextGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the active_context model
   */
  readonly fields: active_contextFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for active_context.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__active_contextClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ref_stills<T extends active_context$ref_stillsArgs<ExtArgs> = {}>(args?: Subset<T, active_context$ref_stillsArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the active_context model
   */
  interface active_contextFieldRefs {
    readonly context_id: FieldRef<"active_context", 'Int'>
    readonly worker_id: FieldRef<"active_context", 'Int'>
    readonly still_id: FieldRef<"active_context", 'Int'>
    readonly created_at: FieldRef<"active_context", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * active_context findUnique
   */
  export type active_contextFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * Filter, which active_context to fetch.
     */
    where: active_contextWhereUniqueInput
  }

  /**
   * active_context findUniqueOrThrow
   */
  export type active_contextFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * Filter, which active_context to fetch.
     */
    where: active_contextWhereUniqueInput
  }

  /**
   * active_context findFirst
   */
  export type active_contextFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * Filter, which active_context to fetch.
     */
    where?: active_contextWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of active_contexts to fetch.
     */
    orderBy?: active_contextOrderByWithRelationInput | active_contextOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for active_contexts.
     */
    cursor?: active_contextWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` active_contexts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` active_contexts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of active_contexts.
     */
    distinct?: Active_contextScalarFieldEnum | Active_contextScalarFieldEnum[]
  }

  /**
   * active_context findFirstOrThrow
   */
  export type active_contextFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * Filter, which active_context to fetch.
     */
    where?: active_contextWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of active_contexts to fetch.
     */
    orderBy?: active_contextOrderByWithRelationInput | active_contextOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for active_contexts.
     */
    cursor?: active_contextWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` active_contexts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` active_contexts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of active_contexts.
     */
    distinct?: Active_contextScalarFieldEnum | Active_contextScalarFieldEnum[]
  }

  /**
   * active_context findMany
   */
  export type active_contextFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * Filter, which active_contexts to fetch.
     */
    where?: active_contextWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of active_contexts to fetch.
     */
    orderBy?: active_contextOrderByWithRelationInput | active_contextOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing active_contexts.
     */
    cursor?: active_contextWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` active_contexts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` active_contexts.
     */
    skip?: number
    distinct?: Active_contextScalarFieldEnum | Active_contextScalarFieldEnum[]
  }

  /**
   * active_context create
   */
  export type active_contextCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * The data needed to create a active_context.
     */
    data?: XOR<active_contextCreateInput, active_contextUncheckedCreateInput>
  }

  /**
   * active_context createMany
   */
  export type active_contextCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many active_contexts.
     */
    data: active_contextCreateManyInput | active_contextCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * active_context createManyAndReturn
   */
  export type active_contextCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * The data used to create many active_contexts.
     */
    data: active_contextCreateManyInput | active_contextCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * active_context update
   */
  export type active_contextUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * The data needed to update a active_context.
     */
    data: XOR<active_contextUpdateInput, active_contextUncheckedUpdateInput>
    /**
     * Choose, which active_context to update.
     */
    where: active_contextWhereUniqueInput
  }

  /**
   * active_context updateMany
   */
  export type active_contextUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update active_contexts.
     */
    data: XOR<active_contextUpdateManyMutationInput, active_contextUncheckedUpdateManyInput>
    /**
     * Filter which active_contexts to update
     */
    where?: active_contextWhereInput
    /**
     * Limit how many active_contexts to update.
     */
    limit?: number
  }

  /**
   * active_context updateManyAndReturn
   */
  export type active_contextUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * The data used to update active_contexts.
     */
    data: XOR<active_contextUpdateManyMutationInput, active_contextUncheckedUpdateManyInput>
    /**
     * Filter which active_contexts to update
     */
    where?: active_contextWhereInput
    /**
     * Limit how many active_contexts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * active_context upsert
   */
  export type active_contextUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * The filter to search for the active_context to update in case it exists.
     */
    where: active_contextWhereUniqueInput
    /**
     * In case the active_context found by the `where` argument doesn't exist, create a new active_context with this data.
     */
    create: XOR<active_contextCreateInput, active_contextUncheckedCreateInput>
    /**
     * In case the active_context was found with the provided `where` argument, update it with this data.
     */
    update: XOR<active_contextUpdateInput, active_contextUncheckedUpdateInput>
  }

  /**
   * active_context delete
   */
  export type active_contextDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    /**
     * Filter which active_context to delete.
     */
    where: active_contextWhereUniqueInput
  }

  /**
   * active_context deleteMany
   */
  export type active_contextDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which active_contexts to delete
     */
    where?: active_contextWhereInput
    /**
     * Limit how many active_contexts to delete.
     */
    limit?: number
  }

  /**
   * active_context.ref_stills
   */
  export type active_context$ref_stillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    where?: ref_stillsWhereInput
  }

  /**
   * active_context without action
   */
  export type active_contextDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
  }


  /**
   * Model auth_activity_log
   */

  export type AggregateAuth_activity_log = {
    _count: Auth_activity_logCountAggregateOutputType | null
    _min: Auth_activity_logMinAggregateOutputType | null
    _max: Auth_activity_logMaxAggregateOutputType | null
  }

  export type Auth_activity_logMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    action: string | null
    ip_address: string | null
    created_at: Date | null
  }

  export type Auth_activity_logMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    action: string | null
    ip_address: string | null
    created_at: Date | null
  }

  export type Auth_activity_logCountAggregateOutputType = {
    id: number
    user_id: number
    action: number
    ip_address: number
    metadata: number
    created_at: number
    _all: number
  }


  export type Auth_activity_logMinAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    ip_address?: true
    created_at?: true
  }

  export type Auth_activity_logMaxAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    ip_address?: true
    created_at?: true
  }

  export type Auth_activity_logCountAggregateInputType = {
    id?: true
    user_id?: true
    action?: true
    ip_address?: true
    metadata?: true
    created_at?: true
    _all?: true
  }

  export type Auth_activity_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_activity_log to aggregate.
     */
    where?: auth_activity_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_activity_logs to fetch.
     */
    orderBy?: auth_activity_logOrderByWithRelationInput | auth_activity_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: auth_activity_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_activity_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_activity_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned auth_activity_logs
    **/
    _count?: true | Auth_activity_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Auth_activity_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Auth_activity_logMaxAggregateInputType
  }

  export type GetAuth_activity_logAggregateType<T extends Auth_activity_logAggregateArgs> = {
        [P in keyof T & keyof AggregateAuth_activity_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuth_activity_log[P]>
      : GetScalarType<T[P], AggregateAuth_activity_log[P]>
  }




  export type auth_activity_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_activity_logWhereInput
    orderBy?: auth_activity_logOrderByWithAggregationInput | auth_activity_logOrderByWithAggregationInput[]
    by: Auth_activity_logScalarFieldEnum[] | Auth_activity_logScalarFieldEnum
    having?: auth_activity_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Auth_activity_logCountAggregateInputType | true
    _min?: Auth_activity_logMinAggregateInputType
    _max?: Auth_activity_logMaxAggregateInputType
  }

  export type Auth_activity_logGroupByOutputType = {
    id: string
    user_id: string
    action: string
    ip_address: string | null
    metadata: JsonValue | null
    created_at: Date | null
    _count: Auth_activity_logCountAggregateOutputType | null
    _min: Auth_activity_logMinAggregateOutputType | null
    _max: Auth_activity_logMaxAggregateOutputType | null
  }

  type GetAuth_activity_logGroupByPayload<T extends auth_activity_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Auth_activity_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Auth_activity_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Auth_activity_logGroupByOutputType[P]>
            : GetScalarType<T[P], Auth_activity_logGroupByOutputType[P]>
        }
      >
    >


  export type auth_activity_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    ip_address?: boolean
    metadata?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["auth_activity_log"]>

  export type auth_activity_logSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    ip_address?: boolean
    metadata?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["auth_activity_log"]>

  export type auth_activity_logSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    action?: boolean
    ip_address?: boolean
    metadata?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["auth_activity_log"]>

  export type auth_activity_logSelectScalar = {
    id?: boolean
    user_id?: boolean
    action?: boolean
    ip_address?: boolean
    metadata?: boolean
    created_at?: boolean
  }

  export type auth_activity_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "action" | "ip_address" | "metadata" | "created_at", ExtArgs["result"]["auth_activity_log"]>

  export type $auth_activity_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "auth_activity_log"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      action: string
      ip_address: string | null
      metadata: Prisma.JsonValue | null
      created_at: Date | null
    }, ExtArgs["result"]["auth_activity_log"]>
    composites: {}
  }

  type auth_activity_logGetPayload<S extends boolean | null | undefined | auth_activity_logDefaultArgs> = $Result.GetResult<Prisma.$auth_activity_logPayload, S>

  type auth_activity_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<auth_activity_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Auth_activity_logCountAggregateInputType | true
    }

  export interface auth_activity_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['auth_activity_log'], meta: { name: 'auth_activity_log' } }
    /**
     * Find zero or one Auth_activity_log that matches the filter.
     * @param {auth_activity_logFindUniqueArgs} args - Arguments to find a Auth_activity_log
     * @example
     * // Get one Auth_activity_log
     * const auth_activity_log = await prisma.auth_activity_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends auth_activity_logFindUniqueArgs>(args: SelectSubset<T, auth_activity_logFindUniqueArgs<ExtArgs>>): Prisma__auth_activity_logClient<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Auth_activity_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {auth_activity_logFindUniqueOrThrowArgs} args - Arguments to find a Auth_activity_log
     * @example
     * // Get one Auth_activity_log
     * const auth_activity_log = await prisma.auth_activity_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends auth_activity_logFindUniqueOrThrowArgs>(args: SelectSubset<T, auth_activity_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__auth_activity_logClient<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_activity_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_activity_logFindFirstArgs} args - Arguments to find a Auth_activity_log
     * @example
     * // Get one Auth_activity_log
     * const auth_activity_log = await prisma.auth_activity_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends auth_activity_logFindFirstArgs>(args?: SelectSubset<T, auth_activity_logFindFirstArgs<ExtArgs>>): Prisma__auth_activity_logClient<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_activity_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_activity_logFindFirstOrThrowArgs} args - Arguments to find a Auth_activity_log
     * @example
     * // Get one Auth_activity_log
     * const auth_activity_log = await prisma.auth_activity_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends auth_activity_logFindFirstOrThrowArgs>(args?: SelectSubset<T, auth_activity_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__auth_activity_logClient<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Auth_activity_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_activity_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Auth_activity_logs
     * const auth_activity_logs = await prisma.auth_activity_log.findMany()
     * 
     * // Get first 10 Auth_activity_logs
     * const auth_activity_logs = await prisma.auth_activity_log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auth_activity_logWithIdOnly = await prisma.auth_activity_log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends auth_activity_logFindManyArgs>(args?: SelectSubset<T, auth_activity_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Auth_activity_log.
     * @param {auth_activity_logCreateArgs} args - Arguments to create a Auth_activity_log.
     * @example
     * // Create one Auth_activity_log
     * const Auth_activity_log = await prisma.auth_activity_log.create({
     *   data: {
     *     // ... data to create a Auth_activity_log
     *   }
     * })
     * 
     */
    create<T extends auth_activity_logCreateArgs>(args: SelectSubset<T, auth_activity_logCreateArgs<ExtArgs>>): Prisma__auth_activity_logClient<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Auth_activity_logs.
     * @param {auth_activity_logCreateManyArgs} args - Arguments to create many Auth_activity_logs.
     * @example
     * // Create many Auth_activity_logs
     * const auth_activity_log = await prisma.auth_activity_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends auth_activity_logCreateManyArgs>(args?: SelectSubset<T, auth_activity_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Auth_activity_logs and returns the data saved in the database.
     * @param {auth_activity_logCreateManyAndReturnArgs} args - Arguments to create many Auth_activity_logs.
     * @example
     * // Create many Auth_activity_logs
     * const auth_activity_log = await prisma.auth_activity_log.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Auth_activity_logs and only return the `id`
     * const auth_activity_logWithIdOnly = await prisma.auth_activity_log.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends auth_activity_logCreateManyAndReturnArgs>(args?: SelectSubset<T, auth_activity_logCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Auth_activity_log.
     * @param {auth_activity_logDeleteArgs} args - Arguments to delete one Auth_activity_log.
     * @example
     * // Delete one Auth_activity_log
     * const Auth_activity_log = await prisma.auth_activity_log.delete({
     *   where: {
     *     // ... filter to delete one Auth_activity_log
     *   }
     * })
     * 
     */
    delete<T extends auth_activity_logDeleteArgs>(args: SelectSubset<T, auth_activity_logDeleteArgs<ExtArgs>>): Prisma__auth_activity_logClient<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Auth_activity_log.
     * @param {auth_activity_logUpdateArgs} args - Arguments to update one Auth_activity_log.
     * @example
     * // Update one Auth_activity_log
     * const auth_activity_log = await prisma.auth_activity_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends auth_activity_logUpdateArgs>(args: SelectSubset<T, auth_activity_logUpdateArgs<ExtArgs>>): Prisma__auth_activity_logClient<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Auth_activity_logs.
     * @param {auth_activity_logDeleteManyArgs} args - Arguments to filter Auth_activity_logs to delete.
     * @example
     * // Delete a few Auth_activity_logs
     * const { count } = await prisma.auth_activity_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends auth_activity_logDeleteManyArgs>(args?: SelectSubset<T, auth_activity_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auth_activity_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_activity_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Auth_activity_logs
     * const auth_activity_log = await prisma.auth_activity_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends auth_activity_logUpdateManyArgs>(args: SelectSubset<T, auth_activity_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auth_activity_logs and returns the data updated in the database.
     * @param {auth_activity_logUpdateManyAndReturnArgs} args - Arguments to update many Auth_activity_logs.
     * @example
     * // Update many Auth_activity_logs
     * const auth_activity_log = await prisma.auth_activity_log.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Auth_activity_logs and only return the `id`
     * const auth_activity_logWithIdOnly = await prisma.auth_activity_log.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends auth_activity_logUpdateManyAndReturnArgs>(args: SelectSubset<T, auth_activity_logUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Auth_activity_log.
     * @param {auth_activity_logUpsertArgs} args - Arguments to update or create a Auth_activity_log.
     * @example
     * // Update or create a Auth_activity_log
     * const auth_activity_log = await prisma.auth_activity_log.upsert({
     *   create: {
     *     // ... data to create a Auth_activity_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Auth_activity_log we want to update
     *   }
     * })
     */
    upsert<T extends auth_activity_logUpsertArgs>(args: SelectSubset<T, auth_activity_logUpsertArgs<ExtArgs>>): Prisma__auth_activity_logClient<$Result.GetResult<Prisma.$auth_activity_logPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Auth_activity_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_activity_logCountArgs} args - Arguments to filter Auth_activity_logs to count.
     * @example
     * // Count the number of Auth_activity_logs
     * const count = await prisma.auth_activity_log.count({
     *   where: {
     *     // ... the filter for the Auth_activity_logs we want to count
     *   }
     * })
    **/
    count<T extends auth_activity_logCountArgs>(
      args?: Subset<T, auth_activity_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Auth_activity_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Auth_activity_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Auth_activity_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Auth_activity_logAggregateArgs>(args: Subset<T, Auth_activity_logAggregateArgs>): Prisma.PrismaPromise<GetAuth_activity_logAggregateType<T>>

    /**
     * Group by Auth_activity_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_activity_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends auth_activity_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: auth_activity_logGroupByArgs['orderBy'] }
        : { orderBy?: auth_activity_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, auth_activity_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuth_activity_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the auth_activity_log model
   */
  readonly fields: auth_activity_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for auth_activity_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__auth_activity_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the auth_activity_log model
   */
  interface auth_activity_logFieldRefs {
    readonly id: FieldRef<"auth_activity_log", 'String'>
    readonly user_id: FieldRef<"auth_activity_log", 'String'>
    readonly action: FieldRef<"auth_activity_log", 'String'>
    readonly ip_address: FieldRef<"auth_activity_log", 'String'>
    readonly metadata: FieldRef<"auth_activity_log", 'Json'>
    readonly created_at: FieldRef<"auth_activity_log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * auth_activity_log findUnique
   */
  export type auth_activity_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * Filter, which auth_activity_log to fetch.
     */
    where: auth_activity_logWhereUniqueInput
  }

  /**
   * auth_activity_log findUniqueOrThrow
   */
  export type auth_activity_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * Filter, which auth_activity_log to fetch.
     */
    where: auth_activity_logWhereUniqueInput
  }

  /**
   * auth_activity_log findFirst
   */
  export type auth_activity_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * Filter, which auth_activity_log to fetch.
     */
    where?: auth_activity_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_activity_logs to fetch.
     */
    orderBy?: auth_activity_logOrderByWithRelationInput | auth_activity_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_activity_logs.
     */
    cursor?: auth_activity_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_activity_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_activity_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_activity_logs.
     */
    distinct?: Auth_activity_logScalarFieldEnum | Auth_activity_logScalarFieldEnum[]
  }

  /**
   * auth_activity_log findFirstOrThrow
   */
  export type auth_activity_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * Filter, which auth_activity_log to fetch.
     */
    where?: auth_activity_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_activity_logs to fetch.
     */
    orderBy?: auth_activity_logOrderByWithRelationInput | auth_activity_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_activity_logs.
     */
    cursor?: auth_activity_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_activity_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_activity_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_activity_logs.
     */
    distinct?: Auth_activity_logScalarFieldEnum | Auth_activity_logScalarFieldEnum[]
  }

  /**
   * auth_activity_log findMany
   */
  export type auth_activity_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * Filter, which auth_activity_logs to fetch.
     */
    where?: auth_activity_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_activity_logs to fetch.
     */
    orderBy?: auth_activity_logOrderByWithRelationInput | auth_activity_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing auth_activity_logs.
     */
    cursor?: auth_activity_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_activity_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_activity_logs.
     */
    skip?: number
    distinct?: Auth_activity_logScalarFieldEnum | Auth_activity_logScalarFieldEnum[]
  }

  /**
   * auth_activity_log create
   */
  export type auth_activity_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * The data needed to create a auth_activity_log.
     */
    data: XOR<auth_activity_logCreateInput, auth_activity_logUncheckedCreateInput>
  }

  /**
   * auth_activity_log createMany
   */
  export type auth_activity_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many auth_activity_logs.
     */
    data: auth_activity_logCreateManyInput | auth_activity_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * auth_activity_log createManyAndReturn
   */
  export type auth_activity_logCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * The data used to create many auth_activity_logs.
     */
    data: auth_activity_logCreateManyInput | auth_activity_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * auth_activity_log update
   */
  export type auth_activity_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * The data needed to update a auth_activity_log.
     */
    data: XOR<auth_activity_logUpdateInput, auth_activity_logUncheckedUpdateInput>
    /**
     * Choose, which auth_activity_log to update.
     */
    where: auth_activity_logWhereUniqueInput
  }

  /**
   * auth_activity_log updateMany
   */
  export type auth_activity_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update auth_activity_logs.
     */
    data: XOR<auth_activity_logUpdateManyMutationInput, auth_activity_logUncheckedUpdateManyInput>
    /**
     * Filter which auth_activity_logs to update
     */
    where?: auth_activity_logWhereInput
    /**
     * Limit how many auth_activity_logs to update.
     */
    limit?: number
  }

  /**
   * auth_activity_log updateManyAndReturn
   */
  export type auth_activity_logUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * The data used to update auth_activity_logs.
     */
    data: XOR<auth_activity_logUpdateManyMutationInput, auth_activity_logUncheckedUpdateManyInput>
    /**
     * Filter which auth_activity_logs to update
     */
    where?: auth_activity_logWhereInput
    /**
     * Limit how many auth_activity_logs to update.
     */
    limit?: number
  }

  /**
   * auth_activity_log upsert
   */
  export type auth_activity_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * The filter to search for the auth_activity_log to update in case it exists.
     */
    where: auth_activity_logWhereUniqueInput
    /**
     * In case the auth_activity_log found by the `where` argument doesn't exist, create a new auth_activity_log with this data.
     */
    create: XOR<auth_activity_logCreateInput, auth_activity_logUncheckedCreateInput>
    /**
     * In case the auth_activity_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<auth_activity_logUpdateInput, auth_activity_logUncheckedUpdateInput>
  }

  /**
   * auth_activity_log delete
   */
  export type auth_activity_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
    /**
     * Filter which auth_activity_log to delete.
     */
    where: auth_activity_logWhereUniqueInput
  }

  /**
   * auth_activity_log deleteMany
   */
  export type auth_activity_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_activity_logs to delete
     */
    where?: auth_activity_logWhereInput
    /**
     * Limit how many auth_activity_logs to delete.
     */
    limit?: number
  }

  /**
   * auth_activity_log without action
   */
  export type auth_activity_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_activity_log
     */
    select?: auth_activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_activity_log
     */
    omit?: auth_activity_logOmit<ExtArgs> | null
  }


  /**
   * Model bottle_sizes
   */

  export type AggregateBottle_sizes = {
    _count: Bottle_sizesCountAggregateOutputType | null
    _avg: Bottle_sizesAvgAggregateOutputType | null
    _sum: Bottle_sizesSumAggregateOutputType | null
    _min: Bottle_sizesMinAggregateOutputType | null
    _max: Bottle_sizesMaxAggregateOutputType | null
  }

  export type Bottle_sizesAvgAggregateOutputType = {
    id: number | null
  }

  export type Bottle_sizesSumAggregateOutputType = {
    id: number | null
  }

  export type Bottle_sizesMinAggregateOutputType = {
    id: number | null
    volume: string | null
  }

  export type Bottle_sizesMaxAggregateOutputType = {
    id: number | null
    volume: string | null
  }

  export type Bottle_sizesCountAggregateOutputType = {
    id: number
    volume: number
    _all: number
  }


  export type Bottle_sizesAvgAggregateInputType = {
    id?: true
  }

  export type Bottle_sizesSumAggregateInputType = {
    id?: true
  }

  export type Bottle_sizesMinAggregateInputType = {
    id?: true
    volume?: true
  }

  export type Bottle_sizesMaxAggregateInputType = {
    id?: true
    volume?: true
  }

  export type Bottle_sizesCountAggregateInputType = {
    id?: true
    volume?: true
    _all?: true
  }

  export type Bottle_sizesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bottle_sizes to aggregate.
     */
    where?: bottle_sizesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bottle_sizes to fetch.
     */
    orderBy?: bottle_sizesOrderByWithRelationInput | bottle_sizesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bottle_sizesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bottle_sizes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bottle_sizes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned bottle_sizes
    **/
    _count?: true | Bottle_sizesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Bottle_sizesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Bottle_sizesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Bottle_sizesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Bottle_sizesMaxAggregateInputType
  }

  export type GetBottle_sizesAggregateType<T extends Bottle_sizesAggregateArgs> = {
        [P in keyof T & keyof AggregateBottle_sizes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBottle_sizes[P]>
      : GetScalarType<T[P], AggregateBottle_sizes[P]>
  }




  export type bottle_sizesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bottle_sizesWhereInput
    orderBy?: bottle_sizesOrderByWithAggregationInput | bottle_sizesOrderByWithAggregationInput[]
    by: Bottle_sizesScalarFieldEnum[] | Bottle_sizesScalarFieldEnum
    having?: bottle_sizesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Bottle_sizesCountAggregateInputType | true
    _avg?: Bottle_sizesAvgAggregateInputType
    _sum?: Bottle_sizesSumAggregateInputType
    _min?: Bottle_sizesMinAggregateInputType
    _max?: Bottle_sizesMaxAggregateInputType
  }

  export type Bottle_sizesGroupByOutputType = {
    id: number
    volume: string
    _count: Bottle_sizesCountAggregateOutputType | null
    _avg: Bottle_sizesAvgAggregateOutputType | null
    _sum: Bottle_sizesSumAggregateOutputType | null
    _min: Bottle_sizesMinAggregateOutputType | null
    _max: Bottle_sizesMaxAggregateOutputType | null
  }

  type GetBottle_sizesGroupByPayload<T extends bottle_sizesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Bottle_sizesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Bottle_sizesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Bottle_sizesGroupByOutputType[P]>
            : GetScalarType<T[P], Bottle_sizesGroupByOutputType[P]>
        }
      >
    >


  export type bottle_sizesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    volume?: boolean
    product_prices?: boolean | bottle_sizes$product_pricesArgs<ExtArgs>
    _count?: boolean | Bottle_sizesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bottle_sizes"]>

  export type bottle_sizesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    volume?: boolean
  }, ExtArgs["result"]["bottle_sizes"]>

  export type bottle_sizesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    volume?: boolean
  }, ExtArgs["result"]["bottle_sizes"]>

  export type bottle_sizesSelectScalar = {
    id?: boolean
    volume?: boolean
  }

  export type bottle_sizesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "volume", ExtArgs["result"]["bottle_sizes"]>
  export type bottle_sizesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_prices?: boolean | bottle_sizes$product_pricesArgs<ExtArgs>
    _count?: boolean | Bottle_sizesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type bottle_sizesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type bottle_sizesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $bottle_sizesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "bottle_sizes"
    objects: {
      product_prices: Prisma.$product_pricesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      volume: string
    }, ExtArgs["result"]["bottle_sizes"]>
    composites: {}
  }

  type bottle_sizesGetPayload<S extends boolean | null | undefined | bottle_sizesDefaultArgs> = $Result.GetResult<Prisma.$bottle_sizesPayload, S>

  type bottle_sizesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<bottle_sizesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Bottle_sizesCountAggregateInputType | true
    }

  export interface bottle_sizesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['bottle_sizes'], meta: { name: 'bottle_sizes' } }
    /**
     * Find zero or one Bottle_sizes that matches the filter.
     * @param {bottle_sizesFindUniqueArgs} args - Arguments to find a Bottle_sizes
     * @example
     * // Get one Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends bottle_sizesFindUniqueArgs>(args: SelectSubset<T, bottle_sizesFindUniqueArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Bottle_sizes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {bottle_sizesFindUniqueOrThrowArgs} args - Arguments to find a Bottle_sizes
     * @example
     * // Get one Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends bottle_sizesFindUniqueOrThrowArgs>(args: SelectSubset<T, bottle_sizesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bottle_sizes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bottle_sizesFindFirstArgs} args - Arguments to find a Bottle_sizes
     * @example
     * // Get one Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends bottle_sizesFindFirstArgs>(args?: SelectSubset<T, bottle_sizesFindFirstArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bottle_sizes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bottle_sizesFindFirstOrThrowArgs} args - Arguments to find a Bottle_sizes
     * @example
     * // Get one Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends bottle_sizesFindFirstOrThrowArgs>(args?: SelectSubset<T, bottle_sizesFindFirstOrThrowArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bottle_sizes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bottle_sizesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.findMany()
     * 
     * // Get first 10 Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bottle_sizesWithIdOnly = await prisma.bottle_sizes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends bottle_sizesFindManyArgs>(args?: SelectSubset<T, bottle_sizesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Bottle_sizes.
     * @param {bottle_sizesCreateArgs} args - Arguments to create a Bottle_sizes.
     * @example
     * // Create one Bottle_sizes
     * const Bottle_sizes = await prisma.bottle_sizes.create({
     *   data: {
     *     // ... data to create a Bottle_sizes
     *   }
     * })
     * 
     */
    create<T extends bottle_sizesCreateArgs>(args: SelectSubset<T, bottle_sizesCreateArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bottle_sizes.
     * @param {bottle_sizesCreateManyArgs} args - Arguments to create many Bottle_sizes.
     * @example
     * // Create many Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends bottle_sizesCreateManyArgs>(args?: SelectSubset<T, bottle_sizesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bottle_sizes and returns the data saved in the database.
     * @param {bottle_sizesCreateManyAndReturnArgs} args - Arguments to create many Bottle_sizes.
     * @example
     * // Create many Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bottle_sizes and only return the `id`
     * const bottle_sizesWithIdOnly = await prisma.bottle_sizes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends bottle_sizesCreateManyAndReturnArgs>(args?: SelectSubset<T, bottle_sizesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Bottle_sizes.
     * @param {bottle_sizesDeleteArgs} args - Arguments to delete one Bottle_sizes.
     * @example
     * // Delete one Bottle_sizes
     * const Bottle_sizes = await prisma.bottle_sizes.delete({
     *   where: {
     *     // ... filter to delete one Bottle_sizes
     *   }
     * })
     * 
     */
    delete<T extends bottle_sizesDeleteArgs>(args: SelectSubset<T, bottle_sizesDeleteArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Bottle_sizes.
     * @param {bottle_sizesUpdateArgs} args - Arguments to update one Bottle_sizes.
     * @example
     * // Update one Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends bottle_sizesUpdateArgs>(args: SelectSubset<T, bottle_sizesUpdateArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bottle_sizes.
     * @param {bottle_sizesDeleteManyArgs} args - Arguments to filter Bottle_sizes to delete.
     * @example
     * // Delete a few Bottle_sizes
     * const { count } = await prisma.bottle_sizes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends bottle_sizesDeleteManyArgs>(args?: SelectSubset<T, bottle_sizesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bottle_sizes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bottle_sizesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends bottle_sizesUpdateManyArgs>(args: SelectSubset<T, bottle_sizesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bottle_sizes and returns the data updated in the database.
     * @param {bottle_sizesUpdateManyAndReturnArgs} args - Arguments to update many Bottle_sizes.
     * @example
     * // Update many Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Bottle_sizes and only return the `id`
     * const bottle_sizesWithIdOnly = await prisma.bottle_sizes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends bottle_sizesUpdateManyAndReturnArgs>(args: SelectSubset<T, bottle_sizesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Bottle_sizes.
     * @param {bottle_sizesUpsertArgs} args - Arguments to update or create a Bottle_sizes.
     * @example
     * // Update or create a Bottle_sizes
     * const bottle_sizes = await prisma.bottle_sizes.upsert({
     *   create: {
     *     // ... data to create a Bottle_sizes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bottle_sizes we want to update
     *   }
     * })
     */
    upsert<T extends bottle_sizesUpsertArgs>(args: SelectSubset<T, bottle_sizesUpsertArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bottle_sizes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bottle_sizesCountArgs} args - Arguments to filter Bottle_sizes to count.
     * @example
     * // Count the number of Bottle_sizes
     * const count = await prisma.bottle_sizes.count({
     *   where: {
     *     // ... the filter for the Bottle_sizes we want to count
     *   }
     * })
    **/
    count<T extends bottle_sizesCountArgs>(
      args?: Subset<T, bottle_sizesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Bottle_sizesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bottle_sizes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Bottle_sizesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Bottle_sizesAggregateArgs>(args: Subset<T, Bottle_sizesAggregateArgs>): Prisma.PrismaPromise<GetBottle_sizesAggregateType<T>>

    /**
     * Group by Bottle_sizes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bottle_sizesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bottle_sizesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bottle_sizesGroupByArgs['orderBy'] }
        : { orderBy?: bottle_sizesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bottle_sizesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBottle_sizesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the bottle_sizes model
   */
  readonly fields: bottle_sizesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for bottle_sizes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bottle_sizesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_prices<T extends bottle_sizes$product_pricesArgs<ExtArgs> = {}>(args?: Subset<T, bottle_sizes$product_pricesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the bottle_sizes model
   */
  interface bottle_sizesFieldRefs {
    readonly id: FieldRef<"bottle_sizes", 'Int'>
    readonly volume: FieldRef<"bottle_sizes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * bottle_sizes findUnique
   */
  export type bottle_sizesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * Filter, which bottle_sizes to fetch.
     */
    where: bottle_sizesWhereUniqueInput
  }

  /**
   * bottle_sizes findUniqueOrThrow
   */
  export type bottle_sizesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * Filter, which bottle_sizes to fetch.
     */
    where: bottle_sizesWhereUniqueInput
  }

  /**
   * bottle_sizes findFirst
   */
  export type bottle_sizesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * Filter, which bottle_sizes to fetch.
     */
    where?: bottle_sizesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bottle_sizes to fetch.
     */
    orderBy?: bottle_sizesOrderByWithRelationInput | bottle_sizesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bottle_sizes.
     */
    cursor?: bottle_sizesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bottle_sizes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bottle_sizes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bottle_sizes.
     */
    distinct?: Bottle_sizesScalarFieldEnum | Bottle_sizesScalarFieldEnum[]
  }

  /**
   * bottle_sizes findFirstOrThrow
   */
  export type bottle_sizesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * Filter, which bottle_sizes to fetch.
     */
    where?: bottle_sizesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bottle_sizes to fetch.
     */
    orderBy?: bottle_sizesOrderByWithRelationInput | bottle_sizesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bottle_sizes.
     */
    cursor?: bottle_sizesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bottle_sizes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bottle_sizes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bottle_sizes.
     */
    distinct?: Bottle_sizesScalarFieldEnum | Bottle_sizesScalarFieldEnum[]
  }

  /**
   * bottle_sizes findMany
   */
  export type bottle_sizesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * Filter, which bottle_sizes to fetch.
     */
    where?: bottle_sizesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bottle_sizes to fetch.
     */
    orderBy?: bottle_sizesOrderByWithRelationInput | bottle_sizesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing bottle_sizes.
     */
    cursor?: bottle_sizesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bottle_sizes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bottle_sizes.
     */
    skip?: number
    distinct?: Bottle_sizesScalarFieldEnum | Bottle_sizesScalarFieldEnum[]
  }

  /**
   * bottle_sizes create
   */
  export type bottle_sizesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * The data needed to create a bottle_sizes.
     */
    data: XOR<bottle_sizesCreateInput, bottle_sizesUncheckedCreateInput>
  }

  /**
   * bottle_sizes createMany
   */
  export type bottle_sizesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many bottle_sizes.
     */
    data: bottle_sizesCreateManyInput | bottle_sizesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * bottle_sizes createManyAndReturn
   */
  export type bottle_sizesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * The data used to create many bottle_sizes.
     */
    data: bottle_sizesCreateManyInput | bottle_sizesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * bottle_sizes update
   */
  export type bottle_sizesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * The data needed to update a bottle_sizes.
     */
    data: XOR<bottle_sizesUpdateInput, bottle_sizesUncheckedUpdateInput>
    /**
     * Choose, which bottle_sizes to update.
     */
    where: bottle_sizesWhereUniqueInput
  }

  /**
   * bottle_sizes updateMany
   */
  export type bottle_sizesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update bottle_sizes.
     */
    data: XOR<bottle_sizesUpdateManyMutationInput, bottle_sizesUncheckedUpdateManyInput>
    /**
     * Filter which bottle_sizes to update
     */
    where?: bottle_sizesWhereInput
    /**
     * Limit how many bottle_sizes to update.
     */
    limit?: number
  }

  /**
   * bottle_sizes updateManyAndReturn
   */
  export type bottle_sizesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * The data used to update bottle_sizes.
     */
    data: XOR<bottle_sizesUpdateManyMutationInput, bottle_sizesUncheckedUpdateManyInput>
    /**
     * Filter which bottle_sizes to update
     */
    where?: bottle_sizesWhereInput
    /**
     * Limit how many bottle_sizes to update.
     */
    limit?: number
  }

  /**
   * bottle_sizes upsert
   */
  export type bottle_sizesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * The filter to search for the bottle_sizes to update in case it exists.
     */
    where: bottle_sizesWhereUniqueInput
    /**
     * In case the bottle_sizes found by the `where` argument doesn't exist, create a new bottle_sizes with this data.
     */
    create: XOR<bottle_sizesCreateInput, bottle_sizesUncheckedCreateInput>
    /**
     * In case the bottle_sizes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bottle_sizesUpdateInput, bottle_sizesUncheckedUpdateInput>
  }

  /**
   * bottle_sizes delete
   */
  export type bottle_sizesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
    /**
     * Filter which bottle_sizes to delete.
     */
    where: bottle_sizesWhereUniqueInput
  }

  /**
   * bottle_sizes deleteMany
   */
  export type bottle_sizesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bottle_sizes to delete
     */
    where?: bottle_sizesWhereInput
    /**
     * Limit how many bottle_sizes to delete.
     */
    limit?: number
  }

  /**
   * bottle_sizes.product_prices
   */
  export type bottle_sizes$product_pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    where?: product_pricesWhereInput
    orderBy?: product_pricesOrderByWithRelationInput | product_pricesOrderByWithRelationInput[]
    cursor?: product_pricesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_pricesScalarFieldEnum | Product_pricesScalarFieldEnum[]
  }

  /**
   * bottle_sizes without action
   */
  export type bottle_sizesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bottle_sizes
     */
    select?: bottle_sizesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bottle_sizes
     */
    omit?: bottle_sizesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bottle_sizesInclude<ExtArgs> | null
  }


  /**
   * Model chemical_group_kind
   */

  export type AggregateChemical_group_kind = {
    _count: Chemical_group_kindCountAggregateOutputType | null
    _min: Chemical_group_kindMinAggregateOutputType | null
    _max: Chemical_group_kindMaxAggregateOutputType | null
  }

  export type Chemical_group_kindMinAggregateOutputType = {
    value: string | null
  }

  export type Chemical_group_kindMaxAggregateOutputType = {
    value: string | null
  }

  export type Chemical_group_kindCountAggregateOutputType = {
    value: number
    _all: number
  }


  export type Chemical_group_kindMinAggregateInputType = {
    value?: true
  }

  export type Chemical_group_kindMaxAggregateInputType = {
    value?: true
  }

  export type Chemical_group_kindCountAggregateInputType = {
    value?: true
    _all?: true
  }

  export type Chemical_group_kindAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chemical_group_kind to aggregate.
     */
    where?: chemical_group_kindWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chemical_group_kinds to fetch.
     */
    orderBy?: chemical_group_kindOrderByWithRelationInput | chemical_group_kindOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chemical_group_kindWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chemical_group_kinds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chemical_group_kinds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chemical_group_kinds
    **/
    _count?: true | Chemical_group_kindCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chemical_group_kindMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chemical_group_kindMaxAggregateInputType
  }

  export type GetChemical_group_kindAggregateType<T extends Chemical_group_kindAggregateArgs> = {
        [P in keyof T & keyof AggregateChemical_group_kind]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChemical_group_kind[P]>
      : GetScalarType<T[P], AggregateChemical_group_kind[P]>
  }




  export type chemical_group_kindGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chemical_group_kindWhereInput
    orderBy?: chemical_group_kindOrderByWithAggregationInput | chemical_group_kindOrderByWithAggregationInput[]
    by: Chemical_group_kindScalarFieldEnum[] | Chemical_group_kindScalarFieldEnum
    having?: chemical_group_kindScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chemical_group_kindCountAggregateInputType | true
    _min?: Chemical_group_kindMinAggregateInputType
    _max?: Chemical_group_kindMaxAggregateInputType
  }

  export type Chemical_group_kindGroupByOutputType = {
    value: string
    _count: Chemical_group_kindCountAggregateOutputType | null
    _min: Chemical_group_kindMinAggregateOutputType | null
    _max: Chemical_group_kindMaxAggregateOutputType | null
  }

  type GetChemical_group_kindGroupByPayload<T extends chemical_group_kindGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chemical_group_kindGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chemical_group_kindGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chemical_group_kindGroupByOutputType[P]>
            : GetScalarType<T[P], Chemical_group_kindGroupByOutputType[P]>
        }
      >
    >


  export type chemical_group_kindSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    value?: boolean
    ref_materials?: boolean | chemical_group_kind$ref_materialsArgs<ExtArgs>
    _count?: boolean | Chemical_group_kindCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chemical_group_kind"]>

  export type chemical_group_kindSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    value?: boolean
  }, ExtArgs["result"]["chemical_group_kind"]>

  export type chemical_group_kindSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    value?: boolean
  }, ExtArgs["result"]["chemical_group_kind"]>

  export type chemical_group_kindSelectScalar = {
    value?: boolean
  }

  export type chemical_group_kindOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"value", ExtArgs["result"]["chemical_group_kind"]>
  export type chemical_group_kindInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | chemical_group_kind$ref_materialsArgs<ExtArgs>
    _count?: boolean | Chemical_group_kindCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type chemical_group_kindIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type chemical_group_kindIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $chemical_group_kindPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chemical_group_kind"
    objects: {
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      value: string
    }, ExtArgs["result"]["chemical_group_kind"]>
    composites: {}
  }

  type chemical_group_kindGetPayload<S extends boolean | null | undefined | chemical_group_kindDefaultArgs> = $Result.GetResult<Prisma.$chemical_group_kindPayload, S>

  type chemical_group_kindCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chemical_group_kindFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chemical_group_kindCountAggregateInputType | true
    }

  export interface chemical_group_kindDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chemical_group_kind'], meta: { name: 'chemical_group_kind' } }
    /**
     * Find zero or one Chemical_group_kind that matches the filter.
     * @param {chemical_group_kindFindUniqueArgs} args - Arguments to find a Chemical_group_kind
     * @example
     * // Get one Chemical_group_kind
     * const chemical_group_kind = await prisma.chemical_group_kind.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chemical_group_kindFindUniqueArgs>(args: SelectSubset<T, chemical_group_kindFindUniqueArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chemical_group_kind that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chemical_group_kindFindUniqueOrThrowArgs} args - Arguments to find a Chemical_group_kind
     * @example
     * // Get one Chemical_group_kind
     * const chemical_group_kind = await prisma.chemical_group_kind.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chemical_group_kindFindUniqueOrThrowArgs>(args: SelectSubset<T, chemical_group_kindFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chemical_group_kind that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chemical_group_kindFindFirstArgs} args - Arguments to find a Chemical_group_kind
     * @example
     * // Get one Chemical_group_kind
     * const chemical_group_kind = await prisma.chemical_group_kind.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chemical_group_kindFindFirstArgs>(args?: SelectSubset<T, chemical_group_kindFindFirstArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chemical_group_kind that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chemical_group_kindFindFirstOrThrowArgs} args - Arguments to find a Chemical_group_kind
     * @example
     * // Get one Chemical_group_kind
     * const chemical_group_kind = await prisma.chemical_group_kind.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chemical_group_kindFindFirstOrThrowArgs>(args?: SelectSubset<T, chemical_group_kindFindFirstOrThrowArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chemical_group_kinds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chemical_group_kindFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chemical_group_kinds
     * const chemical_group_kinds = await prisma.chemical_group_kind.findMany()
     * 
     * // Get first 10 Chemical_group_kinds
     * const chemical_group_kinds = await prisma.chemical_group_kind.findMany({ take: 10 })
     * 
     * // Only select the `value`
     * const chemical_group_kindWithValueOnly = await prisma.chemical_group_kind.findMany({ select: { value: true } })
     * 
     */
    findMany<T extends chemical_group_kindFindManyArgs>(args?: SelectSubset<T, chemical_group_kindFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chemical_group_kind.
     * @param {chemical_group_kindCreateArgs} args - Arguments to create a Chemical_group_kind.
     * @example
     * // Create one Chemical_group_kind
     * const Chemical_group_kind = await prisma.chemical_group_kind.create({
     *   data: {
     *     // ... data to create a Chemical_group_kind
     *   }
     * })
     * 
     */
    create<T extends chemical_group_kindCreateArgs>(args: SelectSubset<T, chemical_group_kindCreateArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chemical_group_kinds.
     * @param {chemical_group_kindCreateManyArgs} args - Arguments to create many Chemical_group_kinds.
     * @example
     * // Create many Chemical_group_kinds
     * const chemical_group_kind = await prisma.chemical_group_kind.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chemical_group_kindCreateManyArgs>(args?: SelectSubset<T, chemical_group_kindCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Chemical_group_kinds and returns the data saved in the database.
     * @param {chemical_group_kindCreateManyAndReturnArgs} args - Arguments to create many Chemical_group_kinds.
     * @example
     * // Create many Chemical_group_kinds
     * const chemical_group_kind = await prisma.chemical_group_kind.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Chemical_group_kinds and only return the `value`
     * const chemical_group_kindWithValueOnly = await prisma.chemical_group_kind.createManyAndReturn({
     *   select: { value: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends chemical_group_kindCreateManyAndReturnArgs>(args?: SelectSubset<T, chemical_group_kindCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Chemical_group_kind.
     * @param {chemical_group_kindDeleteArgs} args - Arguments to delete one Chemical_group_kind.
     * @example
     * // Delete one Chemical_group_kind
     * const Chemical_group_kind = await prisma.chemical_group_kind.delete({
     *   where: {
     *     // ... filter to delete one Chemical_group_kind
     *   }
     * })
     * 
     */
    delete<T extends chemical_group_kindDeleteArgs>(args: SelectSubset<T, chemical_group_kindDeleteArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chemical_group_kind.
     * @param {chemical_group_kindUpdateArgs} args - Arguments to update one Chemical_group_kind.
     * @example
     * // Update one Chemical_group_kind
     * const chemical_group_kind = await prisma.chemical_group_kind.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chemical_group_kindUpdateArgs>(args: SelectSubset<T, chemical_group_kindUpdateArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chemical_group_kinds.
     * @param {chemical_group_kindDeleteManyArgs} args - Arguments to filter Chemical_group_kinds to delete.
     * @example
     * // Delete a few Chemical_group_kinds
     * const { count } = await prisma.chemical_group_kind.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chemical_group_kindDeleteManyArgs>(args?: SelectSubset<T, chemical_group_kindDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chemical_group_kinds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chemical_group_kindUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chemical_group_kinds
     * const chemical_group_kind = await prisma.chemical_group_kind.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chemical_group_kindUpdateManyArgs>(args: SelectSubset<T, chemical_group_kindUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chemical_group_kinds and returns the data updated in the database.
     * @param {chemical_group_kindUpdateManyAndReturnArgs} args - Arguments to update many Chemical_group_kinds.
     * @example
     * // Update many Chemical_group_kinds
     * const chemical_group_kind = await prisma.chemical_group_kind.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Chemical_group_kinds and only return the `value`
     * const chemical_group_kindWithValueOnly = await prisma.chemical_group_kind.updateManyAndReturn({
     *   select: { value: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends chemical_group_kindUpdateManyAndReturnArgs>(args: SelectSubset<T, chemical_group_kindUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Chemical_group_kind.
     * @param {chemical_group_kindUpsertArgs} args - Arguments to update or create a Chemical_group_kind.
     * @example
     * // Update or create a Chemical_group_kind
     * const chemical_group_kind = await prisma.chemical_group_kind.upsert({
     *   create: {
     *     // ... data to create a Chemical_group_kind
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chemical_group_kind we want to update
     *   }
     * })
     */
    upsert<T extends chemical_group_kindUpsertArgs>(args: SelectSubset<T, chemical_group_kindUpsertArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chemical_group_kinds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chemical_group_kindCountArgs} args - Arguments to filter Chemical_group_kinds to count.
     * @example
     * // Count the number of Chemical_group_kinds
     * const count = await prisma.chemical_group_kind.count({
     *   where: {
     *     // ... the filter for the Chemical_group_kinds we want to count
     *   }
     * })
    **/
    count<T extends chemical_group_kindCountArgs>(
      args?: Subset<T, chemical_group_kindCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chemical_group_kindCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chemical_group_kind.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chemical_group_kindAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chemical_group_kindAggregateArgs>(args: Subset<T, Chemical_group_kindAggregateArgs>): Prisma.PrismaPromise<GetChemical_group_kindAggregateType<T>>

    /**
     * Group by Chemical_group_kind.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chemical_group_kindGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chemical_group_kindGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chemical_group_kindGroupByArgs['orderBy'] }
        : { orderBy?: chemical_group_kindGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chemical_group_kindGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChemical_group_kindGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chemical_group_kind model
   */
  readonly fields: chemical_group_kindFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chemical_group_kind.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chemical_group_kindClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ref_materials<T extends chemical_group_kind$ref_materialsArgs<ExtArgs> = {}>(args?: Subset<T, chemical_group_kind$ref_materialsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chemical_group_kind model
   */
  interface chemical_group_kindFieldRefs {
    readonly value: FieldRef<"chemical_group_kind", 'String'>
  }
    

  // Custom InputTypes
  /**
   * chemical_group_kind findUnique
   */
  export type chemical_group_kindFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * Filter, which chemical_group_kind to fetch.
     */
    where: chemical_group_kindWhereUniqueInput
  }

  /**
   * chemical_group_kind findUniqueOrThrow
   */
  export type chemical_group_kindFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * Filter, which chemical_group_kind to fetch.
     */
    where: chemical_group_kindWhereUniqueInput
  }

  /**
   * chemical_group_kind findFirst
   */
  export type chemical_group_kindFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * Filter, which chemical_group_kind to fetch.
     */
    where?: chemical_group_kindWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chemical_group_kinds to fetch.
     */
    orderBy?: chemical_group_kindOrderByWithRelationInput | chemical_group_kindOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chemical_group_kinds.
     */
    cursor?: chemical_group_kindWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chemical_group_kinds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chemical_group_kinds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chemical_group_kinds.
     */
    distinct?: Chemical_group_kindScalarFieldEnum | Chemical_group_kindScalarFieldEnum[]
  }

  /**
   * chemical_group_kind findFirstOrThrow
   */
  export type chemical_group_kindFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * Filter, which chemical_group_kind to fetch.
     */
    where?: chemical_group_kindWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chemical_group_kinds to fetch.
     */
    orderBy?: chemical_group_kindOrderByWithRelationInput | chemical_group_kindOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chemical_group_kinds.
     */
    cursor?: chemical_group_kindWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chemical_group_kinds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chemical_group_kinds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chemical_group_kinds.
     */
    distinct?: Chemical_group_kindScalarFieldEnum | Chemical_group_kindScalarFieldEnum[]
  }

  /**
   * chemical_group_kind findMany
   */
  export type chemical_group_kindFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * Filter, which chemical_group_kinds to fetch.
     */
    where?: chemical_group_kindWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chemical_group_kinds to fetch.
     */
    orderBy?: chemical_group_kindOrderByWithRelationInput | chemical_group_kindOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chemical_group_kinds.
     */
    cursor?: chemical_group_kindWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chemical_group_kinds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chemical_group_kinds.
     */
    skip?: number
    distinct?: Chemical_group_kindScalarFieldEnum | Chemical_group_kindScalarFieldEnum[]
  }

  /**
   * chemical_group_kind create
   */
  export type chemical_group_kindCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * The data needed to create a chemical_group_kind.
     */
    data: XOR<chemical_group_kindCreateInput, chemical_group_kindUncheckedCreateInput>
  }

  /**
   * chemical_group_kind createMany
   */
  export type chemical_group_kindCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chemical_group_kinds.
     */
    data: chemical_group_kindCreateManyInput | chemical_group_kindCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chemical_group_kind createManyAndReturn
   */
  export type chemical_group_kindCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * The data used to create many chemical_group_kinds.
     */
    data: chemical_group_kindCreateManyInput | chemical_group_kindCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chemical_group_kind update
   */
  export type chemical_group_kindUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * The data needed to update a chemical_group_kind.
     */
    data: XOR<chemical_group_kindUpdateInput, chemical_group_kindUncheckedUpdateInput>
    /**
     * Choose, which chemical_group_kind to update.
     */
    where: chemical_group_kindWhereUniqueInput
  }

  /**
   * chemical_group_kind updateMany
   */
  export type chemical_group_kindUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chemical_group_kinds.
     */
    data: XOR<chemical_group_kindUpdateManyMutationInput, chemical_group_kindUncheckedUpdateManyInput>
    /**
     * Filter which chemical_group_kinds to update
     */
    where?: chemical_group_kindWhereInput
    /**
     * Limit how many chemical_group_kinds to update.
     */
    limit?: number
  }

  /**
   * chemical_group_kind updateManyAndReturn
   */
  export type chemical_group_kindUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * The data used to update chemical_group_kinds.
     */
    data: XOR<chemical_group_kindUpdateManyMutationInput, chemical_group_kindUncheckedUpdateManyInput>
    /**
     * Filter which chemical_group_kinds to update
     */
    where?: chemical_group_kindWhereInput
    /**
     * Limit how many chemical_group_kinds to update.
     */
    limit?: number
  }

  /**
   * chemical_group_kind upsert
   */
  export type chemical_group_kindUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * The filter to search for the chemical_group_kind to update in case it exists.
     */
    where: chemical_group_kindWhereUniqueInput
    /**
     * In case the chemical_group_kind found by the `where` argument doesn't exist, create a new chemical_group_kind with this data.
     */
    create: XOR<chemical_group_kindCreateInput, chemical_group_kindUncheckedCreateInput>
    /**
     * In case the chemical_group_kind was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chemical_group_kindUpdateInput, chemical_group_kindUncheckedUpdateInput>
  }

  /**
   * chemical_group_kind delete
   */
  export type chemical_group_kindDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
    /**
     * Filter which chemical_group_kind to delete.
     */
    where: chemical_group_kindWhereUniqueInput
  }

  /**
   * chemical_group_kind deleteMany
   */
  export type chemical_group_kindDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chemical_group_kinds to delete
     */
    where?: chemical_group_kindWhereInput
    /**
     * Limit how many chemical_group_kinds to delete.
     */
    limit?: number
  }

  /**
   * chemical_group_kind.ref_materials
   */
  export type chemical_group_kind$ref_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    where?: ref_materialsWhereInput
    orderBy?: ref_materialsOrderByWithRelationInput | ref_materialsOrderByWithRelationInput[]
    cursor?: ref_materialsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ref_materialsScalarFieldEnum | Ref_materialsScalarFieldEnum[]
  }

  /**
   * chemical_group_kind without action
   */
  export type chemical_group_kindDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chemical_group_kind
     */
    select?: chemical_group_kindSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chemical_group_kind
     */
    omit?: chemical_group_kindOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chemical_group_kindInclude<ExtArgs> | null
  }


  /**
   * Model distillation_pending_assignment
   */

  export type AggregateDistillation_pending_assignment = {
    _count: Distillation_pending_assignmentCountAggregateOutputType | null
    _avg: Distillation_pending_assignmentAvgAggregateOutputType | null
    _sum: Distillation_pending_assignmentSumAggregateOutputType | null
    _min: Distillation_pending_assignmentMinAggregateOutputType | null
    _max: Distillation_pending_assignmentMaxAggregateOutputType | null
  }

  export type Distillation_pending_assignmentAvgAggregateOutputType = {
    pending_id: number | null
    drum_id: number | null
    transport_id: number | null
    assigned_distillation_id: number | null
  }

  export type Distillation_pending_assignmentSumAggregateOutputType = {
    pending_id: number | null
    drum_id: number | null
    transport_id: number | null
    assigned_distillation_id: number | null
  }

  export type Distillation_pending_assignmentMinAggregateOutputType = {
    pending_id: number | null
    drum_id: number | null
    transport_id: number | null
    assigned_distillation_id: number | null
    status: string | null
  }

  export type Distillation_pending_assignmentMaxAggregateOutputType = {
    pending_id: number | null
    drum_id: number | null
    transport_id: number | null
    assigned_distillation_id: number | null
    status: string | null
  }

  export type Distillation_pending_assignmentCountAggregateOutputType = {
    pending_id: number
    drum_id: number
    transport_id: number
    assigned_distillation_id: number
    status: number
    _all: number
  }


  export type Distillation_pending_assignmentAvgAggregateInputType = {
    pending_id?: true
    drum_id?: true
    transport_id?: true
    assigned_distillation_id?: true
  }

  export type Distillation_pending_assignmentSumAggregateInputType = {
    pending_id?: true
    drum_id?: true
    transport_id?: true
    assigned_distillation_id?: true
  }

  export type Distillation_pending_assignmentMinAggregateInputType = {
    pending_id?: true
    drum_id?: true
    transport_id?: true
    assigned_distillation_id?: true
    status?: true
  }

  export type Distillation_pending_assignmentMaxAggregateInputType = {
    pending_id?: true
    drum_id?: true
    transport_id?: true
    assigned_distillation_id?: true
    status?: true
  }

  export type Distillation_pending_assignmentCountAggregateInputType = {
    pending_id?: true
    drum_id?: true
    transport_id?: true
    assigned_distillation_id?: true
    status?: true
    _all?: true
  }

  export type Distillation_pending_assignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which distillation_pending_assignment to aggregate.
     */
    where?: distillation_pending_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_pending_assignments to fetch.
     */
    orderBy?: distillation_pending_assignmentOrderByWithRelationInput | distillation_pending_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: distillation_pending_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_pending_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_pending_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned distillation_pending_assignments
    **/
    _count?: true | Distillation_pending_assignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Distillation_pending_assignmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Distillation_pending_assignmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Distillation_pending_assignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Distillation_pending_assignmentMaxAggregateInputType
  }

  export type GetDistillation_pending_assignmentAggregateType<T extends Distillation_pending_assignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateDistillation_pending_assignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDistillation_pending_assignment[P]>
      : GetScalarType<T[P], AggregateDistillation_pending_assignment[P]>
  }




  export type distillation_pending_assignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_pending_assignmentWhereInput
    orderBy?: distillation_pending_assignmentOrderByWithAggregationInput | distillation_pending_assignmentOrderByWithAggregationInput[]
    by: Distillation_pending_assignmentScalarFieldEnum[] | Distillation_pending_assignmentScalarFieldEnum
    having?: distillation_pending_assignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Distillation_pending_assignmentCountAggregateInputType | true
    _avg?: Distillation_pending_assignmentAvgAggregateInputType
    _sum?: Distillation_pending_assignmentSumAggregateInputType
    _min?: Distillation_pending_assignmentMinAggregateInputType
    _max?: Distillation_pending_assignmentMaxAggregateInputType
  }

  export type Distillation_pending_assignmentGroupByOutputType = {
    pending_id: number
    drum_id: number | null
    transport_id: number
    assigned_distillation_id: number | null
    status: string | null
    _count: Distillation_pending_assignmentCountAggregateOutputType | null
    _avg: Distillation_pending_assignmentAvgAggregateOutputType | null
    _sum: Distillation_pending_assignmentSumAggregateOutputType | null
    _min: Distillation_pending_assignmentMinAggregateOutputType | null
    _max: Distillation_pending_assignmentMaxAggregateOutputType | null
  }

  type GetDistillation_pending_assignmentGroupByPayload<T extends distillation_pending_assignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Distillation_pending_assignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Distillation_pending_assignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Distillation_pending_assignmentGroupByOutputType[P]>
            : GetScalarType<T[P], Distillation_pending_assignmentGroupByOutputType[P]>
        }
      >
    >


  export type distillation_pending_assignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pending_id?: boolean
    drum_id?: boolean
    transport_id?: boolean
    assigned_distillation_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | distillation_pending_assignment$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | distillation_pending_assignment$stock_drumArgs<ExtArgs>
    log_transport_drum?: boolean | log_transport_drumDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_pending_assignment"]>

  export type distillation_pending_assignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pending_id?: boolean
    drum_id?: boolean
    transport_id?: boolean
    assigned_distillation_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | distillation_pending_assignment$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | distillation_pending_assignment$stock_drumArgs<ExtArgs>
    log_transport_drum?: boolean | log_transport_drumDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_pending_assignment"]>

  export type distillation_pending_assignmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pending_id?: boolean
    drum_id?: boolean
    transport_id?: boolean
    assigned_distillation_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | distillation_pending_assignment$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | distillation_pending_assignment$stock_drumArgs<ExtArgs>
    log_transport_drum?: boolean | log_transport_drumDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_pending_assignment"]>

  export type distillation_pending_assignmentSelectScalar = {
    pending_id?: boolean
    drum_id?: boolean
    transport_id?: boolean
    assigned_distillation_id?: boolean
    status?: boolean
  }

  export type distillation_pending_assignmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"pending_id" | "drum_id" | "transport_id" | "assigned_distillation_id" | "status", ExtArgs["result"]["distillation_pending_assignment"]>
  export type distillation_pending_assignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_pending_assignment$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | distillation_pending_assignment$stock_drumArgs<ExtArgs>
    log_transport_drum?: boolean | log_transport_drumDefaultArgs<ExtArgs>
  }
  export type distillation_pending_assignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_pending_assignment$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | distillation_pending_assignment$stock_drumArgs<ExtArgs>
    log_transport_drum?: boolean | log_transport_drumDefaultArgs<ExtArgs>
  }
  export type distillation_pending_assignmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_pending_assignment$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | distillation_pending_assignment$stock_drumArgs<ExtArgs>
    log_transport_drum?: boolean | log_transport_drumDefaultArgs<ExtArgs>
  }

  export type $distillation_pending_assignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "distillation_pending_assignment"
    objects: {
      distillation_schedule: Prisma.$distillation_schedulePayload<ExtArgs> | null
      stock_drum: Prisma.$stock_drumPayload<ExtArgs> | null
      log_transport_drum: Prisma.$log_transport_drumPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      pending_id: number
      drum_id: number | null
      transport_id: number
      assigned_distillation_id: number | null
      status: string | null
    }, ExtArgs["result"]["distillation_pending_assignment"]>
    composites: {}
  }

  type distillation_pending_assignmentGetPayload<S extends boolean | null | undefined | distillation_pending_assignmentDefaultArgs> = $Result.GetResult<Prisma.$distillation_pending_assignmentPayload, S>

  type distillation_pending_assignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<distillation_pending_assignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Distillation_pending_assignmentCountAggregateInputType | true
    }

  export interface distillation_pending_assignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['distillation_pending_assignment'], meta: { name: 'distillation_pending_assignment' } }
    /**
     * Find zero or one Distillation_pending_assignment that matches the filter.
     * @param {distillation_pending_assignmentFindUniqueArgs} args - Arguments to find a Distillation_pending_assignment
     * @example
     * // Get one Distillation_pending_assignment
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends distillation_pending_assignmentFindUniqueArgs>(args: SelectSubset<T, distillation_pending_assignmentFindUniqueArgs<ExtArgs>>): Prisma__distillation_pending_assignmentClient<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Distillation_pending_assignment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {distillation_pending_assignmentFindUniqueOrThrowArgs} args - Arguments to find a Distillation_pending_assignment
     * @example
     * // Get one Distillation_pending_assignment
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends distillation_pending_assignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, distillation_pending_assignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__distillation_pending_assignmentClient<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Distillation_pending_assignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_pending_assignmentFindFirstArgs} args - Arguments to find a Distillation_pending_assignment
     * @example
     * // Get one Distillation_pending_assignment
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends distillation_pending_assignmentFindFirstArgs>(args?: SelectSubset<T, distillation_pending_assignmentFindFirstArgs<ExtArgs>>): Prisma__distillation_pending_assignmentClient<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Distillation_pending_assignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_pending_assignmentFindFirstOrThrowArgs} args - Arguments to find a Distillation_pending_assignment
     * @example
     * // Get one Distillation_pending_assignment
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends distillation_pending_assignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, distillation_pending_assignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__distillation_pending_assignmentClient<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Distillation_pending_assignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_pending_assignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Distillation_pending_assignments
     * const distillation_pending_assignments = await prisma.distillation_pending_assignment.findMany()
     * 
     * // Get first 10 Distillation_pending_assignments
     * const distillation_pending_assignments = await prisma.distillation_pending_assignment.findMany({ take: 10 })
     * 
     * // Only select the `pending_id`
     * const distillation_pending_assignmentWithPending_idOnly = await prisma.distillation_pending_assignment.findMany({ select: { pending_id: true } })
     * 
     */
    findMany<T extends distillation_pending_assignmentFindManyArgs>(args?: SelectSubset<T, distillation_pending_assignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Distillation_pending_assignment.
     * @param {distillation_pending_assignmentCreateArgs} args - Arguments to create a Distillation_pending_assignment.
     * @example
     * // Create one Distillation_pending_assignment
     * const Distillation_pending_assignment = await prisma.distillation_pending_assignment.create({
     *   data: {
     *     // ... data to create a Distillation_pending_assignment
     *   }
     * })
     * 
     */
    create<T extends distillation_pending_assignmentCreateArgs>(args: SelectSubset<T, distillation_pending_assignmentCreateArgs<ExtArgs>>): Prisma__distillation_pending_assignmentClient<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Distillation_pending_assignments.
     * @param {distillation_pending_assignmentCreateManyArgs} args - Arguments to create many Distillation_pending_assignments.
     * @example
     * // Create many Distillation_pending_assignments
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends distillation_pending_assignmentCreateManyArgs>(args?: SelectSubset<T, distillation_pending_assignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Distillation_pending_assignments and returns the data saved in the database.
     * @param {distillation_pending_assignmentCreateManyAndReturnArgs} args - Arguments to create many Distillation_pending_assignments.
     * @example
     * // Create many Distillation_pending_assignments
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Distillation_pending_assignments and only return the `pending_id`
     * const distillation_pending_assignmentWithPending_idOnly = await prisma.distillation_pending_assignment.createManyAndReturn({
     *   select: { pending_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends distillation_pending_assignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, distillation_pending_assignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Distillation_pending_assignment.
     * @param {distillation_pending_assignmentDeleteArgs} args - Arguments to delete one Distillation_pending_assignment.
     * @example
     * // Delete one Distillation_pending_assignment
     * const Distillation_pending_assignment = await prisma.distillation_pending_assignment.delete({
     *   where: {
     *     // ... filter to delete one Distillation_pending_assignment
     *   }
     * })
     * 
     */
    delete<T extends distillation_pending_assignmentDeleteArgs>(args: SelectSubset<T, distillation_pending_assignmentDeleteArgs<ExtArgs>>): Prisma__distillation_pending_assignmentClient<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Distillation_pending_assignment.
     * @param {distillation_pending_assignmentUpdateArgs} args - Arguments to update one Distillation_pending_assignment.
     * @example
     * // Update one Distillation_pending_assignment
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends distillation_pending_assignmentUpdateArgs>(args: SelectSubset<T, distillation_pending_assignmentUpdateArgs<ExtArgs>>): Prisma__distillation_pending_assignmentClient<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Distillation_pending_assignments.
     * @param {distillation_pending_assignmentDeleteManyArgs} args - Arguments to filter Distillation_pending_assignments to delete.
     * @example
     * // Delete a few Distillation_pending_assignments
     * const { count } = await prisma.distillation_pending_assignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends distillation_pending_assignmentDeleteManyArgs>(args?: SelectSubset<T, distillation_pending_assignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Distillation_pending_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_pending_assignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Distillation_pending_assignments
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends distillation_pending_assignmentUpdateManyArgs>(args: SelectSubset<T, distillation_pending_assignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Distillation_pending_assignments and returns the data updated in the database.
     * @param {distillation_pending_assignmentUpdateManyAndReturnArgs} args - Arguments to update many Distillation_pending_assignments.
     * @example
     * // Update many Distillation_pending_assignments
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Distillation_pending_assignments and only return the `pending_id`
     * const distillation_pending_assignmentWithPending_idOnly = await prisma.distillation_pending_assignment.updateManyAndReturn({
     *   select: { pending_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends distillation_pending_assignmentUpdateManyAndReturnArgs>(args: SelectSubset<T, distillation_pending_assignmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Distillation_pending_assignment.
     * @param {distillation_pending_assignmentUpsertArgs} args - Arguments to update or create a Distillation_pending_assignment.
     * @example
     * // Update or create a Distillation_pending_assignment
     * const distillation_pending_assignment = await prisma.distillation_pending_assignment.upsert({
     *   create: {
     *     // ... data to create a Distillation_pending_assignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Distillation_pending_assignment we want to update
     *   }
     * })
     */
    upsert<T extends distillation_pending_assignmentUpsertArgs>(args: SelectSubset<T, distillation_pending_assignmentUpsertArgs<ExtArgs>>): Prisma__distillation_pending_assignmentClient<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Distillation_pending_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_pending_assignmentCountArgs} args - Arguments to filter Distillation_pending_assignments to count.
     * @example
     * // Count the number of Distillation_pending_assignments
     * const count = await prisma.distillation_pending_assignment.count({
     *   where: {
     *     // ... the filter for the Distillation_pending_assignments we want to count
     *   }
     * })
    **/
    count<T extends distillation_pending_assignmentCountArgs>(
      args?: Subset<T, distillation_pending_assignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Distillation_pending_assignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Distillation_pending_assignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Distillation_pending_assignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Distillation_pending_assignmentAggregateArgs>(args: Subset<T, Distillation_pending_assignmentAggregateArgs>): Prisma.PrismaPromise<GetDistillation_pending_assignmentAggregateType<T>>

    /**
     * Group by Distillation_pending_assignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_pending_assignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends distillation_pending_assignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: distillation_pending_assignmentGroupByArgs['orderBy'] }
        : { orderBy?: distillation_pending_assignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, distillation_pending_assignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDistillation_pending_assignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the distillation_pending_assignment model
   */
  readonly fields: distillation_pending_assignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for distillation_pending_assignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__distillation_pending_assignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_schedule<T extends distillation_pending_assignment$distillation_scheduleArgs<ExtArgs> = {}>(args?: Subset<T, distillation_pending_assignment$distillation_scheduleArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stock_drum<T extends distillation_pending_assignment$stock_drumArgs<ExtArgs> = {}>(args?: Subset<T, distillation_pending_assignment$stock_drumArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    log_transport_drum<T extends log_transport_drumDefaultArgs<ExtArgs> = {}>(args?: Subset<T, log_transport_drumDefaultArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the distillation_pending_assignment model
   */
  interface distillation_pending_assignmentFieldRefs {
    readonly pending_id: FieldRef<"distillation_pending_assignment", 'Int'>
    readonly drum_id: FieldRef<"distillation_pending_assignment", 'Int'>
    readonly transport_id: FieldRef<"distillation_pending_assignment", 'Int'>
    readonly assigned_distillation_id: FieldRef<"distillation_pending_assignment", 'Int'>
    readonly status: FieldRef<"distillation_pending_assignment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * distillation_pending_assignment findUnique
   */
  export type distillation_pending_assignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which distillation_pending_assignment to fetch.
     */
    where: distillation_pending_assignmentWhereUniqueInput
  }

  /**
   * distillation_pending_assignment findUniqueOrThrow
   */
  export type distillation_pending_assignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which distillation_pending_assignment to fetch.
     */
    where: distillation_pending_assignmentWhereUniqueInput
  }

  /**
   * distillation_pending_assignment findFirst
   */
  export type distillation_pending_assignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which distillation_pending_assignment to fetch.
     */
    where?: distillation_pending_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_pending_assignments to fetch.
     */
    orderBy?: distillation_pending_assignmentOrderByWithRelationInput | distillation_pending_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for distillation_pending_assignments.
     */
    cursor?: distillation_pending_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_pending_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_pending_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of distillation_pending_assignments.
     */
    distinct?: Distillation_pending_assignmentScalarFieldEnum | Distillation_pending_assignmentScalarFieldEnum[]
  }

  /**
   * distillation_pending_assignment findFirstOrThrow
   */
  export type distillation_pending_assignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which distillation_pending_assignment to fetch.
     */
    where?: distillation_pending_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_pending_assignments to fetch.
     */
    orderBy?: distillation_pending_assignmentOrderByWithRelationInput | distillation_pending_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for distillation_pending_assignments.
     */
    cursor?: distillation_pending_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_pending_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_pending_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of distillation_pending_assignments.
     */
    distinct?: Distillation_pending_assignmentScalarFieldEnum | Distillation_pending_assignmentScalarFieldEnum[]
  }

  /**
   * distillation_pending_assignment findMany
   */
  export type distillation_pending_assignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * Filter, which distillation_pending_assignments to fetch.
     */
    where?: distillation_pending_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_pending_assignments to fetch.
     */
    orderBy?: distillation_pending_assignmentOrderByWithRelationInput | distillation_pending_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing distillation_pending_assignments.
     */
    cursor?: distillation_pending_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_pending_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_pending_assignments.
     */
    skip?: number
    distinct?: Distillation_pending_assignmentScalarFieldEnum | Distillation_pending_assignmentScalarFieldEnum[]
  }

  /**
   * distillation_pending_assignment create
   */
  export type distillation_pending_assignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a distillation_pending_assignment.
     */
    data: XOR<distillation_pending_assignmentCreateInput, distillation_pending_assignmentUncheckedCreateInput>
  }

  /**
   * distillation_pending_assignment createMany
   */
  export type distillation_pending_assignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many distillation_pending_assignments.
     */
    data: distillation_pending_assignmentCreateManyInput | distillation_pending_assignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * distillation_pending_assignment createManyAndReturn
   */
  export type distillation_pending_assignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * The data used to create many distillation_pending_assignments.
     */
    data: distillation_pending_assignmentCreateManyInput | distillation_pending_assignmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * distillation_pending_assignment update
   */
  export type distillation_pending_assignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a distillation_pending_assignment.
     */
    data: XOR<distillation_pending_assignmentUpdateInput, distillation_pending_assignmentUncheckedUpdateInput>
    /**
     * Choose, which distillation_pending_assignment to update.
     */
    where: distillation_pending_assignmentWhereUniqueInput
  }

  /**
   * distillation_pending_assignment updateMany
   */
  export type distillation_pending_assignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update distillation_pending_assignments.
     */
    data: XOR<distillation_pending_assignmentUpdateManyMutationInput, distillation_pending_assignmentUncheckedUpdateManyInput>
    /**
     * Filter which distillation_pending_assignments to update
     */
    where?: distillation_pending_assignmentWhereInput
    /**
     * Limit how many distillation_pending_assignments to update.
     */
    limit?: number
  }

  /**
   * distillation_pending_assignment updateManyAndReturn
   */
  export type distillation_pending_assignmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * The data used to update distillation_pending_assignments.
     */
    data: XOR<distillation_pending_assignmentUpdateManyMutationInput, distillation_pending_assignmentUncheckedUpdateManyInput>
    /**
     * Filter which distillation_pending_assignments to update
     */
    where?: distillation_pending_assignmentWhereInput
    /**
     * Limit how many distillation_pending_assignments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * distillation_pending_assignment upsert
   */
  export type distillation_pending_assignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the distillation_pending_assignment to update in case it exists.
     */
    where: distillation_pending_assignmentWhereUniqueInput
    /**
     * In case the distillation_pending_assignment found by the `where` argument doesn't exist, create a new distillation_pending_assignment with this data.
     */
    create: XOR<distillation_pending_assignmentCreateInput, distillation_pending_assignmentUncheckedCreateInput>
    /**
     * In case the distillation_pending_assignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<distillation_pending_assignmentUpdateInput, distillation_pending_assignmentUncheckedUpdateInput>
  }

  /**
   * distillation_pending_assignment delete
   */
  export type distillation_pending_assignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    /**
     * Filter which distillation_pending_assignment to delete.
     */
    where: distillation_pending_assignmentWhereUniqueInput
  }

  /**
   * distillation_pending_assignment deleteMany
   */
  export type distillation_pending_assignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which distillation_pending_assignments to delete
     */
    where?: distillation_pending_assignmentWhereInput
    /**
     * Limit how many distillation_pending_assignments to delete.
     */
    limit?: number
  }

  /**
   * distillation_pending_assignment.distillation_schedule
   */
  export type distillation_pending_assignment$distillation_scheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    where?: distillation_scheduleWhereInput
  }

  /**
   * distillation_pending_assignment.stock_drum
   */
  export type distillation_pending_assignment$stock_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    where?: stock_drumWhereInput
  }

  /**
   * distillation_pending_assignment without action
   */
  export type distillation_pending_assignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
  }


  /**
   * Model distillation_record
   */

  export type AggregateDistillation_record = {
    _count: Distillation_recordCountAggregateOutputType | null
    _avg: Distillation_recordAvgAggregateOutputType | null
    _sum: Distillation_recordSumAggregateOutputType | null
    _min: Distillation_recordMinAggregateOutputType | null
    _max: Distillation_recordMaxAggregateOutputType | null
  }

  export type Distillation_recordAvgAggregateOutputType = {
    record_id: number | null
    distillation_id: number | null
  }

  export type Distillation_recordSumAggregateOutputType = {
    record_id: number | null
    distillation_id: number | null
  }

  export type Distillation_recordMinAggregateOutputType = {
    record_id: number | null
    distillation_id: number | null
    actual_start: Date | null
    actual_end: Date | null
    status: string | null
    notes: string | null
  }

  export type Distillation_recordMaxAggregateOutputType = {
    record_id: number | null
    distillation_id: number | null
    actual_start: Date | null
    actual_end: Date | null
    status: string | null
    notes: string | null
  }

  export type Distillation_recordCountAggregateOutputType = {
    record_id: number
    distillation_id: number
    actual_start: number
    actual_end: number
    status: number
    notes: number
    _all: number
  }


  export type Distillation_recordAvgAggregateInputType = {
    record_id?: true
    distillation_id?: true
  }

  export type Distillation_recordSumAggregateInputType = {
    record_id?: true
    distillation_id?: true
  }

  export type Distillation_recordMinAggregateInputType = {
    record_id?: true
    distillation_id?: true
    actual_start?: true
    actual_end?: true
    status?: true
    notes?: true
  }

  export type Distillation_recordMaxAggregateInputType = {
    record_id?: true
    distillation_id?: true
    actual_start?: true
    actual_end?: true
    status?: true
    notes?: true
  }

  export type Distillation_recordCountAggregateInputType = {
    record_id?: true
    distillation_id?: true
    actual_start?: true
    actual_end?: true
    status?: true
    notes?: true
    _all?: true
  }

  export type Distillation_recordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which distillation_record to aggregate.
     */
    where?: distillation_recordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_records to fetch.
     */
    orderBy?: distillation_recordOrderByWithRelationInput | distillation_recordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: distillation_recordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned distillation_records
    **/
    _count?: true | Distillation_recordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Distillation_recordAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Distillation_recordSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Distillation_recordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Distillation_recordMaxAggregateInputType
  }

  export type GetDistillation_recordAggregateType<T extends Distillation_recordAggregateArgs> = {
        [P in keyof T & keyof AggregateDistillation_record]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDistillation_record[P]>
      : GetScalarType<T[P], AggregateDistillation_record[P]>
  }




  export type distillation_recordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_recordWhereInput
    orderBy?: distillation_recordOrderByWithAggregationInput | distillation_recordOrderByWithAggregationInput[]
    by: Distillation_recordScalarFieldEnum[] | Distillation_recordScalarFieldEnum
    having?: distillation_recordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Distillation_recordCountAggregateInputType | true
    _avg?: Distillation_recordAvgAggregateInputType
    _sum?: Distillation_recordSumAggregateInputType
    _min?: Distillation_recordMinAggregateInputType
    _max?: Distillation_recordMaxAggregateInputType
  }

  export type Distillation_recordGroupByOutputType = {
    record_id: number
    distillation_id: number | null
    actual_start: Date | null
    actual_end: Date | null
    status: string | null
    notes: string | null
    _count: Distillation_recordCountAggregateOutputType | null
    _avg: Distillation_recordAvgAggregateOutputType | null
    _sum: Distillation_recordSumAggregateOutputType | null
    _min: Distillation_recordMinAggregateOutputType | null
    _max: Distillation_recordMaxAggregateOutputType | null
  }

  type GetDistillation_recordGroupByPayload<T extends distillation_recordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Distillation_recordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Distillation_recordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Distillation_recordGroupByOutputType[P]>
            : GetScalarType<T[P], Distillation_recordGroupByOutputType[P]>
        }
      >
    >


  export type distillation_recordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    record_id?: boolean
    distillation_id?: boolean
    actual_start?: boolean
    actual_end?: boolean
    status?: boolean
    notes?: boolean
    distillation_schedule?: boolean | distillation_record$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | distillation_record$stock_drumArgs<ExtArgs>
    stock_drum_new?: boolean | distillation_record$stock_drum_newArgs<ExtArgs>
    _count?: boolean | Distillation_recordCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_record"]>

  export type distillation_recordSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    record_id?: boolean
    distillation_id?: boolean
    actual_start?: boolean
    actual_end?: boolean
    status?: boolean
    notes?: boolean
    distillation_schedule?: boolean | distillation_record$distillation_scheduleArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_record"]>

  export type distillation_recordSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    record_id?: boolean
    distillation_id?: boolean
    actual_start?: boolean
    actual_end?: boolean
    status?: boolean
    notes?: boolean
    distillation_schedule?: boolean | distillation_record$distillation_scheduleArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_record"]>

  export type distillation_recordSelectScalar = {
    record_id?: boolean
    distillation_id?: boolean
    actual_start?: boolean
    actual_end?: boolean
    status?: boolean
    notes?: boolean
  }

  export type distillation_recordOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"record_id" | "distillation_id" | "actual_start" | "actual_end" | "status" | "notes", ExtArgs["result"]["distillation_record"]>
  export type distillation_recordInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_record$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | distillation_record$stock_drumArgs<ExtArgs>
    stock_drum_new?: boolean | distillation_record$stock_drum_newArgs<ExtArgs>
    _count?: boolean | Distillation_recordCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type distillation_recordIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_record$distillation_scheduleArgs<ExtArgs>
  }
  export type distillation_recordIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_record$distillation_scheduleArgs<ExtArgs>
  }

  export type $distillation_recordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "distillation_record"
    objects: {
      distillation_schedule: Prisma.$distillation_schedulePayload<ExtArgs> | null
      stock_drum: Prisma.$stock_drumPayload<ExtArgs>[]
      stock_drum_new: Prisma.$stock_drum_newPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      record_id: number
      distillation_id: number | null
      actual_start: Date | null
      actual_end: Date | null
      status: string | null
      notes: string | null
    }, ExtArgs["result"]["distillation_record"]>
    composites: {}
  }

  type distillation_recordGetPayload<S extends boolean | null | undefined | distillation_recordDefaultArgs> = $Result.GetResult<Prisma.$distillation_recordPayload, S>

  type distillation_recordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<distillation_recordFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Distillation_recordCountAggregateInputType | true
    }

  export interface distillation_recordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['distillation_record'], meta: { name: 'distillation_record' } }
    /**
     * Find zero or one Distillation_record that matches the filter.
     * @param {distillation_recordFindUniqueArgs} args - Arguments to find a Distillation_record
     * @example
     * // Get one Distillation_record
     * const distillation_record = await prisma.distillation_record.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends distillation_recordFindUniqueArgs>(args: SelectSubset<T, distillation_recordFindUniqueArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Distillation_record that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {distillation_recordFindUniqueOrThrowArgs} args - Arguments to find a Distillation_record
     * @example
     * // Get one Distillation_record
     * const distillation_record = await prisma.distillation_record.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends distillation_recordFindUniqueOrThrowArgs>(args: SelectSubset<T, distillation_recordFindUniqueOrThrowArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Distillation_record that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_recordFindFirstArgs} args - Arguments to find a Distillation_record
     * @example
     * // Get one Distillation_record
     * const distillation_record = await prisma.distillation_record.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends distillation_recordFindFirstArgs>(args?: SelectSubset<T, distillation_recordFindFirstArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Distillation_record that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_recordFindFirstOrThrowArgs} args - Arguments to find a Distillation_record
     * @example
     * // Get one Distillation_record
     * const distillation_record = await prisma.distillation_record.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends distillation_recordFindFirstOrThrowArgs>(args?: SelectSubset<T, distillation_recordFindFirstOrThrowArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Distillation_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_recordFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Distillation_records
     * const distillation_records = await prisma.distillation_record.findMany()
     * 
     * // Get first 10 Distillation_records
     * const distillation_records = await prisma.distillation_record.findMany({ take: 10 })
     * 
     * // Only select the `record_id`
     * const distillation_recordWithRecord_idOnly = await prisma.distillation_record.findMany({ select: { record_id: true } })
     * 
     */
    findMany<T extends distillation_recordFindManyArgs>(args?: SelectSubset<T, distillation_recordFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Distillation_record.
     * @param {distillation_recordCreateArgs} args - Arguments to create a Distillation_record.
     * @example
     * // Create one Distillation_record
     * const Distillation_record = await prisma.distillation_record.create({
     *   data: {
     *     // ... data to create a Distillation_record
     *   }
     * })
     * 
     */
    create<T extends distillation_recordCreateArgs>(args: SelectSubset<T, distillation_recordCreateArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Distillation_records.
     * @param {distillation_recordCreateManyArgs} args - Arguments to create many Distillation_records.
     * @example
     * // Create many Distillation_records
     * const distillation_record = await prisma.distillation_record.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends distillation_recordCreateManyArgs>(args?: SelectSubset<T, distillation_recordCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Distillation_records and returns the data saved in the database.
     * @param {distillation_recordCreateManyAndReturnArgs} args - Arguments to create many Distillation_records.
     * @example
     * // Create many Distillation_records
     * const distillation_record = await prisma.distillation_record.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Distillation_records and only return the `record_id`
     * const distillation_recordWithRecord_idOnly = await prisma.distillation_record.createManyAndReturn({
     *   select: { record_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends distillation_recordCreateManyAndReturnArgs>(args?: SelectSubset<T, distillation_recordCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Distillation_record.
     * @param {distillation_recordDeleteArgs} args - Arguments to delete one Distillation_record.
     * @example
     * // Delete one Distillation_record
     * const Distillation_record = await prisma.distillation_record.delete({
     *   where: {
     *     // ... filter to delete one Distillation_record
     *   }
     * })
     * 
     */
    delete<T extends distillation_recordDeleteArgs>(args: SelectSubset<T, distillation_recordDeleteArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Distillation_record.
     * @param {distillation_recordUpdateArgs} args - Arguments to update one Distillation_record.
     * @example
     * // Update one Distillation_record
     * const distillation_record = await prisma.distillation_record.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends distillation_recordUpdateArgs>(args: SelectSubset<T, distillation_recordUpdateArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Distillation_records.
     * @param {distillation_recordDeleteManyArgs} args - Arguments to filter Distillation_records to delete.
     * @example
     * // Delete a few Distillation_records
     * const { count } = await prisma.distillation_record.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends distillation_recordDeleteManyArgs>(args?: SelectSubset<T, distillation_recordDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Distillation_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_recordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Distillation_records
     * const distillation_record = await prisma.distillation_record.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends distillation_recordUpdateManyArgs>(args: SelectSubset<T, distillation_recordUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Distillation_records and returns the data updated in the database.
     * @param {distillation_recordUpdateManyAndReturnArgs} args - Arguments to update many Distillation_records.
     * @example
     * // Update many Distillation_records
     * const distillation_record = await prisma.distillation_record.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Distillation_records and only return the `record_id`
     * const distillation_recordWithRecord_idOnly = await prisma.distillation_record.updateManyAndReturn({
     *   select: { record_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends distillation_recordUpdateManyAndReturnArgs>(args: SelectSubset<T, distillation_recordUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Distillation_record.
     * @param {distillation_recordUpsertArgs} args - Arguments to update or create a Distillation_record.
     * @example
     * // Update or create a Distillation_record
     * const distillation_record = await prisma.distillation_record.upsert({
     *   create: {
     *     // ... data to create a Distillation_record
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Distillation_record we want to update
     *   }
     * })
     */
    upsert<T extends distillation_recordUpsertArgs>(args: SelectSubset<T, distillation_recordUpsertArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Distillation_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_recordCountArgs} args - Arguments to filter Distillation_records to count.
     * @example
     * // Count the number of Distillation_records
     * const count = await prisma.distillation_record.count({
     *   where: {
     *     // ... the filter for the Distillation_records we want to count
     *   }
     * })
    **/
    count<T extends distillation_recordCountArgs>(
      args?: Subset<T, distillation_recordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Distillation_recordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Distillation_record.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Distillation_recordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Distillation_recordAggregateArgs>(args: Subset<T, Distillation_recordAggregateArgs>): Prisma.PrismaPromise<GetDistillation_recordAggregateType<T>>

    /**
     * Group by Distillation_record.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_recordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends distillation_recordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: distillation_recordGroupByArgs['orderBy'] }
        : { orderBy?: distillation_recordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, distillation_recordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDistillation_recordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the distillation_record model
   */
  readonly fields: distillation_recordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for distillation_record.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__distillation_recordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_schedule<T extends distillation_record$distillation_scheduleArgs<ExtArgs> = {}>(args?: Subset<T, distillation_record$distillation_scheduleArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stock_drum<T extends distillation_record$stock_drumArgs<ExtArgs> = {}>(args?: Subset<T, distillation_record$stock_drumArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_drum_new<T extends distillation_record$stock_drum_newArgs<ExtArgs> = {}>(args?: Subset<T, distillation_record$stock_drum_newArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the distillation_record model
   */
  interface distillation_recordFieldRefs {
    readonly record_id: FieldRef<"distillation_record", 'Int'>
    readonly distillation_id: FieldRef<"distillation_record", 'Int'>
    readonly actual_start: FieldRef<"distillation_record", 'DateTime'>
    readonly actual_end: FieldRef<"distillation_record", 'DateTime'>
    readonly status: FieldRef<"distillation_record", 'String'>
    readonly notes: FieldRef<"distillation_record", 'String'>
  }
    

  // Custom InputTypes
  /**
   * distillation_record findUnique
   */
  export type distillation_recordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * Filter, which distillation_record to fetch.
     */
    where: distillation_recordWhereUniqueInput
  }

  /**
   * distillation_record findUniqueOrThrow
   */
  export type distillation_recordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * Filter, which distillation_record to fetch.
     */
    where: distillation_recordWhereUniqueInput
  }

  /**
   * distillation_record findFirst
   */
  export type distillation_recordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * Filter, which distillation_record to fetch.
     */
    where?: distillation_recordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_records to fetch.
     */
    orderBy?: distillation_recordOrderByWithRelationInput | distillation_recordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for distillation_records.
     */
    cursor?: distillation_recordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of distillation_records.
     */
    distinct?: Distillation_recordScalarFieldEnum | Distillation_recordScalarFieldEnum[]
  }

  /**
   * distillation_record findFirstOrThrow
   */
  export type distillation_recordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * Filter, which distillation_record to fetch.
     */
    where?: distillation_recordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_records to fetch.
     */
    orderBy?: distillation_recordOrderByWithRelationInput | distillation_recordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for distillation_records.
     */
    cursor?: distillation_recordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of distillation_records.
     */
    distinct?: Distillation_recordScalarFieldEnum | Distillation_recordScalarFieldEnum[]
  }

  /**
   * distillation_record findMany
   */
  export type distillation_recordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * Filter, which distillation_records to fetch.
     */
    where?: distillation_recordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_records to fetch.
     */
    orderBy?: distillation_recordOrderByWithRelationInput | distillation_recordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing distillation_records.
     */
    cursor?: distillation_recordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_records.
     */
    skip?: number
    distinct?: Distillation_recordScalarFieldEnum | Distillation_recordScalarFieldEnum[]
  }

  /**
   * distillation_record create
   */
  export type distillation_recordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * The data needed to create a distillation_record.
     */
    data?: XOR<distillation_recordCreateInput, distillation_recordUncheckedCreateInput>
  }

  /**
   * distillation_record createMany
   */
  export type distillation_recordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many distillation_records.
     */
    data: distillation_recordCreateManyInput | distillation_recordCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * distillation_record createManyAndReturn
   */
  export type distillation_recordCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * The data used to create many distillation_records.
     */
    data: distillation_recordCreateManyInput | distillation_recordCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * distillation_record update
   */
  export type distillation_recordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * The data needed to update a distillation_record.
     */
    data: XOR<distillation_recordUpdateInput, distillation_recordUncheckedUpdateInput>
    /**
     * Choose, which distillation_record to update.
     */
    where: distillation_recordWhereUniqueInput
  }

  /**
   * distillation_record updateMany
   */
  export type distillation_recordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update distillation_records.
     */
    data: XOR<distillation_recordUpdateManyMutationInput, distillation_recordUncheckedUpdateManyInput>
    /**
     * Filter which distillation_records to update
     */
    where?: distillation_recordWhereInput
    /**
     * Limit how many distillation_records to update.
     */
    limit?: number
  }

  /**
   * distillation_record updateManyAndReturn
   */
  export type distillation_recordUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * The data used to update distillation_records.
     */
    data: XOR<distillation_recordUpdateManyMutationInput, distillation_recordUncheckedUpdateManyInput>
    /**
     * Filter which distillation_records to update
     */
    where?: distillation_recordWhereInput
    /**
     * Limit how many distillation_records to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * distillation_record upsert
   */
  export type distillation_recordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * The filter to search for the distillation_record to update in case it exists.
     */
    where: distillation_recordWhereUniqueInput
    /**
     * In case the distillation_record found by the `where` argument doesn't exist, create a new distillation_record with this data.
     */
    create: XOR<distillation_recordCreateInput, distillation_recordUncheckedCreateInput>
    /**
     * In case the distillation_record was found with the provided `where` argument, update it with this data.
     */
    update: XOR<distillation_recordUpdateInput, distillation_recordUncheckedUpdateInput>
  }

  /**
   * distillation_record delete
   */
  export type distillation_recordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    /**
     * Filter which distillation_record to delete.
     */
    where: distillation_recordWhereUniqueInput
  }

  /**
   * distillation_record deleteMany
   */
  export type distillation_recordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which distillation_records to delete
     */
    where?: distillation_recordWhereInput
    /**
     * Limit how many distillation_records to delete.
     */
    limit?: number
  }

  /**
   * distillation_record.distillation_schedule
   */
  export type distillation_record$distillation_scheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    where?: distillation_scheduleWhereInput
  }

  /**
   * distillation_record.stock_drum
   */
  export type distillation_record$stock_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    where?: stock_drumWhereInput
    orderBy?: stock_drumOrderByWithRelationInput | stock_drumOrderByWithRelationInput[]
    cursor?: stock_drumWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_drumScalarFieldEnum | Stock_drumScalarFieldEnum[]
  }

  /**
   * distillation_record.stock_drum_new
   */
  export type distillation_record$stock_drum_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    where?: stock_drum_newWhereInput
    orderBy?: stock_drum_newOrderByWithRelationInput | stock_drum_newOrderByWithRelationInput[]
    cursor?: stock_drum_newWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_drum_newScalarFieldEnum | Stock_drum_newScalarFieldEnum[]
  }

  /**
   * distillation_record without action
   */
  export type distillation_recordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
  }


  /**
   * Model distillation_schedule
   */

  export type AggregateDistillation_schedule = {
    _count: Distillation_scheduleCountAggregateOutputType | null
    _avg: Distillation_scheduleAvgAggregateOutputType | null
    _sum: Distillation_scheduleSumAggregateOutputType | null
    _min: Distillation_scheduleMinAggregateOutputType | null
    _max: Distillation_scheduleMaxAggregateOutputType | null
  }

  export type Distillation_scheduleAvgAggregateOutputType = {
    distillation_id: number | null
    still_id: number | null
    expected_drum_qty: Decimal | null
  }

  export type Distillation_scheduleSumAggregateOutputType = {
    distillation_id: number | null
    still_id: number | null
    expected_drum_qty: Decimal | null
  }

  export type Distillation_scheduleMinAggregateOutputType = {
    distillation_id: number | null
    scheduled_date: Date | null
    still_id: number | null
    expected_drum_qty: Decimal | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Distillation_scheduleMaxAggregateOutputType = {
    distillation_id: number | null
    scheduled_date: Date | null
    still_id: number | null
    expected_drum_qty: Decimal | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Distillation_scheduleCountAggregateOutputType = {
    distillation_id: number
    scheduled_date: number
    still_id: number
    expected_drum_qty: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Distillation_scheduleAvgAggregateInputType = {
    distillation_id?: true
    still_id?: true
    expected_drum_qty?: true
  }

  export type Distillation_scheduleSumAggregateInputType = {
    distillation_id?: true
    still_id?: true
    expected_drum_qty?: true
  }

  export type Distillation_scheduleMinAggregateInputType = {
    distillation_id?: true
    scheduled_date?: true
    still_id?: true
    expected_drum_qty?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Distillation_scheduleMaxAggregateInputType = {
    distillation_id?: true
    scheduled_date?: true
    still_id?: true
    expected_drum_qty?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Distillation_scheduleCountAggregateInputType = {
    distillation_id?: true
    scheduled_date?: true
    still_id?: true
    expected_drum_qty?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Distillation_scheduleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which distillation_schedule to aggregate.
     */
    where?: distillation_scheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_schedules to fetch.
     */
    orderBy?: distillation_scheduleOrderByWithRelationInput | distillation_scheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: distillation_scheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned distillation_schedules
    **/
    _count?: true | Distillation_scheduleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Distillation_scheduleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Distillation_scheduleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Distillation_scheduleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Distillation_scheduleMaxAggregateInputType
  }

  export type GetDistillation_scheduleAggregateType<T extends Distillation_scheduleAggregateArgs> = {
        [P in keyof T & keyof AggregateDistillation_schedule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDistillation_schedule[P]>
      : GetScalarType<T[P], AggregateDistillation_schedule[P]>
  }




  export type distillation_scheduleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_scheduleWhereInput
    orderBy?: distillation_scheduleOrderByWithAggregationInput | distillation_scheduleOrderByWithAggregationInput[]
    by: Distillation_scheduleScalarFieldEnum[] | Distillation_scheduleScalarFieldEnum
    having?: distillation_scheduleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Distillation_scheduleCountAggregateInputType | true
    _avg?: Distillation_scheduleAvgAggregateInputType
    _sum?: Distillation_scheduleSumAggregateInputType
    _min?: Distillation_scheduleMinAggregateInputType
    _max?: Distillation_scheduleMaxAggregateInputType
  }

  export type Distillation_scheduleGroupByOutputType = {
    distillation_id: number
    scheduled_date: Date
    still_id: number
    expected_drum_qty: Decimal
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Distillation_scheduleCountAggregateOutputType | null
    _avg: Distillation_scheduleAvgAggregateOutputType | null
    _sum: Distillation_scheduleSumAggregateOutputType | null
    _min: Distillation_scheduleMinAggregateOutputType | null
    _max: Distillation_scheduleMaxAggregateOutputType | null
  }

  type GetDistillation_scheduleGroupByPayload<T extends distillation_scheduleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Distillation_scheduleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Distillation_scheduleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Distillation_scheduleGroupByOutputType[P]>
            : GetScalarType<T[P], Distillation_scheduleGroupByOutputType[P]>
        }
      >
    >


  export type distillation_scheduleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    distillation_id?: boolean
    scheduled_date?: boolean
    still_id?: boolean
    expected_drum_qty?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_pending_assignment?: boolean | distillation_schedule$distillation_pending_assignmentArgs<ExtArgs>
    distillation_record?: boolean | distillation_schedule$distillation_recordArgs<ExtArgs>
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
    distillation_schedule_items?: boolean | distillation_schedule$distillation_schedule_itemsArgs<ExtArgs>
    log_load_still?: boolean | distillation_schedule$log_load_stillArgs<ExtArgs>
    log_start_distillation?: boolean | distillation_schedule$log_start_distillationArgs<ExtArgs>
    log_transport_drum?: boolean | distillation_schedule$log_transport_drumArgs<ExtArgs>
    log_volume_transfer?: boolean | distillation_schedule$log_volume_transferArgs<ExtArgs>
    _count?: boolean | Distillation_scheduleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_schedule"]>

  export type distillation_scheduleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    distillation_id?: boolean
    scheduled_date?: boolean
    still_id?: boolean
    expected_drum_qty?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_schedule"]>

  export type distillation_scheduleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    distillation_id?: boolean
    scheduled_date?: boolean
    still_id?: boolean
    expected_drum_qty?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_schedule"]>

  export type distillation_scheduleSelectScalar = {
    distillation_id?: boolean
    scheduled_date?: boolean
    still_id?: boolean
    expected_drum_qty?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type distillation_scheduleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"distillation_id" | "scheduled_date" | "still_id" | "expected_drum_qty" | "status" | "created_at" | "updated_at", ExtArgs["result"]["distillation_schedule"]>
  export type distillation_scheduleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_pending_assignment?: boolean | distillation_schedule$distillation_pending_assignmentArgs<ExtArgs>
    distillation_record?: boolean | distillation_schedule$distillation_recordArgs<ExtArgs>
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
    distillation_schedule_items?: boolean | distillation_schedule$distillation_schedule_itemsArgs<ExtArgs>
    log_load_still?: boolean | distillation_schedule$log_load_stillArgs<ExtArgs>
    log_start_distillation?: boolean | distillation_schedule$log_start_distillationArgs<ExtArgs>
    log_transport_drum?: boolean | distillation_schedule$log_transport_drumArgs<ExtArgs>
    log_volume_transfer?: boolean | distillation_schedule$log_volume_transferArgs<ExtArgs>
    _count?: boolean | Distillation_scheduleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type distillation_scheduleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }
  export type distillation_scheduleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }

  export type $distillation_schedulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "distillation_schedule"
    objects: {
      distillation_pending_assignment: Prisma.$distillation_pending_assignmentPayload<ExtArgs>[]
      distillation_record: Prisma.$distillation_recordPayload<ExtArgs> | null
      ref_stills: Prisma.$ref_stillsPayload<ExtArgs>
      distillation_schedule_items: Prisma.$distillation_schedule_itemsPayload<ExtArgs>[]
      log_load_still: Prisma.$log_load_stillPayload<ExtArgs>[]
      log_start_distillation: Prisma.$log_start_distillationPayload<ExtArgs> | null
      log_transport_drum: Prisma.$log_transport_drumPayload<ExtArgs>[]
      log_volume_transfer: Prisma.$log_volume_transferPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      distillation_id: number
      scheduled_date: Date
      still_id: number
      expected_drum_qty: Prisma.Decimal
      status: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["distillation_schedule"]>
    composites: {}
  }

  type distillation_scheduleGetPayload<S extends boolean | null | undefined | distillation_scheduleDefaultArgs> = $Result.GetResult<Prisma.$distillation_schedulePayload, S>

  type distillation_scheduleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<distillation_scheduleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Distillation_scheduleCountAggregateInputType | true
    }

  export interface distillation_scheduleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['distillation_schedule'], meta: { name: 'distillation_schedule' } }
    /**
     * Find zero or one Distillation_schedule that matches the filter.
     * @param {distillation_scheduleFindUniqueArgs} args - Arguments to find a Distillation_schedule
     * @example
     * // Get one Distillation_schedule
     * const distillation_schedule = await prisma.distillation_schedule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends distillation_scheduleFindUniqueArgs>(args: SelectSubset<T, distillation_scheduleFindUniqueArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Distillation_schedule that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {distillation_scheduleFindUniqueOrThrowArgs} args - Arguments to find a Distillation_schedule
     * @example
     * // Get one Distillation_schedule
     * const distillation_schedule = await prisma.distillation_schedule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends distillation_scheduleFindUniqueOrThrowArgs>(args: SelectSubset<T, distillation_scheduleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Distillation_schedule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_scheduleFindFirstArgs} args - Arguments to find a Distillation_schedule
     * @example
     * // Get one Distillation_schedule
     * const distillation_schedule = await prisma.distillation_schedule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends distillation_scheduleFindFirstArgs>(args?: SelectSubset<T, distillation_scheduleFindFirstArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Distillation_schedule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_scheduleFindFirstOrThrowArgs} args - Arguments to find a Distillation_schedule
     * @example
     * // Get one Distillation_schedule
     * const distillation_schedule = await prisma.distillation_schedule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends distillation_scheduleFindFirstOrThrowArgs>(args?: SelectSubset<T, distillation_scheduleFindFirstOrThrowArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Distillation_schedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_scheduleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Distillation_schedules
     * const distillation_schedules = await prisma.distillation_schedule.findMany()
     * 
     * // Get first 10 Distillation_schedules
     * const distillation_schedules = await prisma.distillation_schedule.findMany({ take: 10 })
     * 
     * // Only select the `distillation_id`
     * const distillation_scheduleWithDistillation_idOnly = await prisma.distillation_schedule.findMany({ select: { distillation_id: true } })
     * 
     */
    findMany<T extends distillation_scheduleFindManyArgs>(args?: SelectSubset<T, distillation_scheduleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Distillation_schedule.
     * @param {distillation_scheduleCreateArgs} args - Arguments to create a Distillation_schedule.
     * @example
     * // Create one Distillation_schedule
     * const Distillation_schedule = await prisma.distillation_schedule.create({
     *   data: {
     *     // ... data to create a Distillation_schedule
     *   }
     * })
     * 
     */
    create<T extends distillation_scheduleCreateArgs>(args: SelectSubset<T, distillation_scheduleCreateArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Distillation_schedules.
     * @param {distillation_scheduleCreateManyArgs} args - Arguments to create many Distillation_schedules.
     * @example
     * // Create many Distillation_schedules
     * const distillation_schedule = await prisma.distillation_schedule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends distillation_scheduleCreateManyArgs>(args?: SelectSubset<T, distillation_scheduleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Distillation_schedules and returns the data saved in the database.
     * @param {distillation_scheduleCreateManyAndReturnArgs} args - Arguments to create many Distillation_schedules.
     * @example
     * // Create many Distillation_schedules
     * const distillation_schedule = await prisma.distillation_schedule.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Distillation_schedules and only return the `distillation_id`
     * const distillation_scheduleWithDistillation_idOnly = await prisma.distillation_schedule.createManyAndReturn({
     *   select: { distillation_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends distillation_scheduleCreateManyAndReturnArgs>(args?: SelectSubset<T, distillation_scheduleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Distillation_schedule.
     * @param {distillation_scheduleDeleteArgs} args - Arguments to delete one Distillation_schedule.
     * @example
     * // Delete one Distillation_schedule
     * const Distillation_schedule = await prisma.distillation_schedule.delete({
     *   where: {
     *     // ... filter to delete one Distillation_schedule
     *   }
     * })
     * 
     */
    delete<T extends distillation_scheduleDeleteArgs>(args: SelectSubset<T, distillation_scheduleDeleteArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Distillation_schedule.
     * @param {distillation_scheduleUpdateArgs} args - Arguments to update one Distillation_schedule.
     * @example
     * // Update one Distillation_schedule
     * const distillation_schedule = await prisma.distillation_schedule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends distillation_scheduleUpdateArgs>(args: SelectSubset<T, distillation_scheduleUpdateArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Distillation_schedules.
     * @param {distillation_scheduleDeleteManyArgs} args - Arguments to filter Distillation_schedules to delete.
     * @example
     * // Delete a few Distillation_schedules
     * const { count } = await prisma.distillation_schedule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends distillation_scheduleDeleteManyArgs>(args?: SelectSubset<T, distillation_scheduleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Distillation_schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_scheduleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Distillation_schedules
     * const distillation_schedule = await prisma.distillation_schedule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends distillation_scheduleUpdateManyArgs>(args: SelectSubset<T, distillation_scheduleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Distillation_schedules and returns the data updated in the database.
     * @param {distillation_scheduleUpdateManyAndReturnArgs} args - Arguments to update many Distillation_schedules.
     * @example
     * // Update many Distillation_schedules
     * const distillation_schedule = await prisma.distillation_schedule.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Distillation_schedules and only return the `distillation_id`
     * const distillation_scheduleWithDistillation_idOnly = await prisma.distillation_schedule.updateManyAndReturn({
     *   select: { distillation_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends distillation_scheduleUpdateManyAndReturnArgs>(args: SelectSubset<T, distillation_scheduleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Distillation_schedule.
     * @param {distillation_scheduleUpsertArgs} args - Arguments to update or create a Distillation_schedule.
     * @example
     * // Update or create a Distillation_schedule
     * const distillation_schedule = await prisma.distillation_schedule.upsert({
     *   create: {
     *     // ... data to create a Distillation_schedule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Distillation_schedule we want to update
     *   }
     * })
     */
    upsert<T extends distillation_scheduleUpsertArgs>(args: SelectSubset<T, distillation_scheduleUpsertArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Distillation_schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_scheduleCountArgs} args - Arguments to filter Distillation_schedules to count.
     * @example
     * // Count the number of Distillation_schedules
     * const count = await prisma.distillation_schedule.count({
     *   where: {
     *     // ... the filter for the Distillation_schedules we want to count
     *   }
     * })
    **/
    count<T extends distillation_scheduleCountArgs>(
      args?: Subset<T, distillation_scheduleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Distillation_scheduleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Distillation_schedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Distillation_scheduleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Distillation_scheduleAggregateArgs>(args: Subset<T, Distillation_scheduleAggregateArgs>): Prisma.PrismaPromise<GetDistillation_scheduleAggregateType<T>>

    /**
     * Group by Distillation_schedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_scheduleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends distillation_scheduleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: distillation_scheduleGroupByArgs['orderBy'] }
        : { orderBy?: distillation_scheduleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, distillation_scheduleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDistillation_scheduleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the distillation_schedule model
   */
  readonly fields: distillation_scheduleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for distillation_schedule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__distillation_scheduleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_pending_assignment<T extends distillation_schedule$distillation_pending_assignmentArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule$distillation_pending_assignmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    distillation_record<T extends distillation_schedule$distillation_recordArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule$distillation_recordArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ref_stills<T extends ref_stillsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ref_stillsDefaultArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    distillation_schedule_items<T extends distillation_schedule$distillation_schedule_itemsArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule$distillation_schedule_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_load_still<T extends distillation_schedule$log_load_stillArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule$log_load_stillArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_start_distillation<T extends distillation_schedule$log_start_distillationArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule$log_start_distillationArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    log_transport_drum<T extends distillation_schedule$log_transport_drumArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule$log_transport_drumArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_volume_transfer<T extends distillation_schedule$log_volume_transferArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule$log_volume_transferArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the distillation_schedule model
   */
  interface distillation_scheduleFieldRefs {
    readonly distillation_id: FieldRef<"distillation_schedule", 'Int'>
    readonly scheduled_date: FieldRef<"distillation_schedule", 'DateTime'>
    readonly still_id: FieldRef<"distillation_schedule", 'Int'>
    readonly expected_drum_qty: FieldRef<"distillation_schedule", 'Decimal'>
    readonly status: FieldRef<"distillation_schedule", 'String'>
    readonly created_at: FieldRef<"distillation_schedule", 'DateTime'>
    readonly updated_at: FieldRef<"distillation_schedule", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * distillation_schedule findUnique
   */
  export type distillation_scheduleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule to fetch.
     */
    where: distillation_scheduleWhereUniqueInput
  }

  /**
   * distillation_schedule findUniqueOrThrow
   */
  export type distillation_scheduleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule to fetch.
     */
    where: distillation_scheduleWhereUniqueInput
  }

  /**
   * distillation_schedule findFirst
   */
  export type distillation_scheduleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule to fetch.
     */
    where?: distillation_scheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_schedules to fetch.
     */
    orderBy?: distillation_scheduleOrderByWithRelationInput | distillation_scheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for distillation_schedules.
     */
    cursor?: distillation_scheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of distillation_schedules.
     */
    distinct?: Distillation_scheduleScalarFieldEnum | Distillation_scheduleScalarFieldEnum[]
  }

  /**
   * distillation_schedule findFirstOrThrow
   */
  export type distillation_scheduleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule to fetch.
     */
    where?: distillation_scheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_schedules to fetch.
     */
    orderBy?: distillation_scheduleOrderByWithRelationInput | distillation_scheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for distillation_schedules.
     */
    cursor?: distillation_scheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of distillation_schedules.
     */
    distinct?: Distillation_scheduleScalarFieldEnum | Distillation_scheduleScalarFieldEnum[]
  }

  /**
   * distillation_schedule findMany
   */
  export type distillation_scheduleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedules to fetch.
     */
    where?: distillation_scheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_schedules to fetch.
     */
    orderBy?: distillation_scheduleOrderByWithRelationInput | distillation_scheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing distillation_schedules.
     */
    cursor?: distillation_scheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_schedules.
     */
    skip?: number
    distinct?: Distillation_scheduleScalarFieldEnum | Distillation_scheduleScalarFieldEnum[]
  }

  /**
   * distillation_schedule create
   */
  export type distillation_scheduleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * The data needed to create a distillation_schedule.
     */
    data: XOR<distillation_scheduleCreateInput, distillation_scheduleUncheckedCreateInput>
  }

  /**
   * distillation_schedule createMany
   */
  export type distillation_scheduleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many distillation_schedules.
     */
    data: distillation_scheduleCreateManyInput | distillation_scheduleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * distillation_schedule createManyAndReturn
   */
  export type distillation_scheduleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * The data used to create many distillation_schedules.
     */
    data: distillation_scheduleCreateManyInput | distillation_scheduleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * distillation_schedule update
   */
  export type distillation_scheduleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * The data needed to update a distillation_schedule.
     */
    data: XOR<distillation_scheduleUpdateInput, distillation_scheduleUncheckedUpdateInput>
    /**
     * Choose, which distillation_schedule to update.
     */
    where: distillation_scheduleWhereUniqueInput
  }

  /**
   * distillation_schedule updateMany
   */
  export type distillation_scheduleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update distillation_schedules.
     */
    data: XOR<distillation_scheduleUpdateManyMutationInput, distillation_scheduleUncheckedUpdateManyInput>
    /**
     * Filter which distillation_schedules to update
     */
    where?: distillation_scheduleWhereInput
    /**
     * Limit how many distillation_schedules to update.
     */
    limit?: number
  }

  /**
   * distillation_schedule updateManyAndReturn
   */
  export type distillation_scheduleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * The data used to update distillation_schedules.
     */
    data: XOR<distillation_scheduleUpdateManyMutationInput, distillation_scheduleUncheckedUpdateManyInput>
    /**
     * Filter which distillation_schedules to update
     */
    where?: distillation_scheduleWhereInput
    /**
     * Limit how many distillation_schedules to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * distillation_schedule upsert
   */
  export type distillation_scheduleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * The filter to search for the distillation_schedule to update in case it exists.
     */
    where: distillation_scheduleWhereUniqueInput
    /**
     * In case the distillation_schedule found by the `where` argument doesn't exist, create a new distillation_schedule with this data.
     */
    create: XOR<distillation_scheduleCreateInput, distillation_scheduleUncheckedCreateInput>
    /**
     * In case the distillation_schedule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<distillation_scheduleUpdateInput, distillation_scheduleUncheckedUpdateInput>
  }

  /**
   * distillation_schedule delete
   */
  export type distillation_scheduleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    /**
     * Filter which distillation_schedule to delete.
     */
    where: distillation_scheduleWhereUniqueInput
  }

  /**
   * distillation_schedule deleteMany
   */
  export type distillation_scheduleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which distillation_schedules to delete
     */
    where?: distillation_scheduleWhereInput
    /**
     * Limit how many distillation_schedules to delete.
     */
    limit?: number
  }

  /**
   * distillation_schedule.distillation_pending_assignment
   */
  export type distillation_schedule$distillation_pending_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    where?: distillation_pending_assignmentWhereInput
    orderBy?: distillation_pending_assignmentOrderByWithRelationInput | distillation_pending_assignmentOrderByWithRelationInput[]
    cursor?: distillation_pending_assignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Distillation_pending_assignmentScalarFieldEnum | Distillation_pending_assignmentScalarFieldEnum[]
  }

  /**
   * distillation_schedule.distillation_record
   */
  export type distillation_schedule$distillation_recordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    where?: distillation_recordWhereInput
  }

  /**
   * distillation_schedule.distillation_schedule_items
   */
  export type distillation_schedule$distillation_schedule_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    where?: distillation_schedule_itemsWhereInput
    orderBy?: distillation_schedule_itemsOrderByWithRelationInput | distillation_schedule_itemsOrderByWithRelationInput[]
    cursor?: distillation_schedule_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Distillation_schedule_itemsScalarFieldEnum | Distillation_schedule_itemsScalarFieldEnum[]
  }

  /**
   * distillation_schedule.log_load_still
   */
  export type distillation_schedule$log_load_stillArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    where?: log_load_stillWhereInput
    orderBy?: log_load_stillOrderByWithRelationInput | log_load_stillOrderByWithRelationInput[]
    cursor?: log_load_stillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_load_stillScalarFieldEnum | Log_load_stillScalarFieldEnum[]
  }

  /**
   * distillation_schedule.log_start_distillation
   */
  export type distillation_schedule$log_start_distillationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    where?: log_start_distillationWhereInput
  }

  /**
   * distillation_schedule.log_transport_drum
   */
  export type distillation_schedule$log_transport_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    where?: log_transport_drumWhereInput
    orderBy?: log_transport_drumOrderByWithRelationInput | log_transport_drumOrderByWithRelationInput[]
    cursor?: log_transport_drumWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_transport_drumScalarFieldEnum | Log_transport_drumScalarFieldEnum[]
  }

  /**
   * distillation_schedule.log_volume_transfer
   */
  export type distillation_schedule$log_volume_transferArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    where?: log_volume_transferWhereInput
    orderBy?: log_volume_transferOrderByWithRelationInput | log_volume_transferOrderByWithRelationInput[]
    cursor?: log_volume_transferWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_volume_transferScalarFieldEnum | Log_volume_transferScalarFieldEnum[]
  }

  /**
   * distillation_schedule without action
   */
  export type distillation_scheduleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
  }


  /**
   * Model distillation_schedule_items
   */

  export type AggregateDistillation_schedule_items = {
    _count: Distillation_schedule_itemsCountAggregateOutputType | null
    _avg: Distillation_schedule_itemsAvgAggregateOutputType | null
    _sum: Distillation_schedule_itemsSumAggregateOutputType | null
    _min: Distillation_schedule_itemsMinAggregateOutputType | null
    _max: Distillation_schedule_itemsMaxAggregateOutputType | null
  }

  export type Distillation_schedule_itemsAvgAggregateOutputType = {
    details_id: number | null
    distillation_id: number | null
    new_stock_id: number | null
    repro_stock_id: number | null
    drum_quantity: Decimal | null
  }

  export type Distillation_schedule_itemsSumAggregateOutputType = {
    details_id: number | null
    distillation_id: number | null
    new_stock_id: number | null
    repro_stock_id: number | null
    drum_quantity: Decimal | null
  }

  export type Distillation_schedule_itemsMinAggregateOutputType = {
    details_id: number | null
    distillation_id: number | null
    new_stock_id: number | null
    repro_stock_id: number | null
    drum_quantity: Decimal | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Distillation_schedule_itemsMaxAggregateOutputType = {
    details_id: number | null
    distillation_id: number | null
    new_stock_id: number | null
    repro_stock_id: number | null
    drum_quantity: Decimal | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Distillation_schedule_itemsCountAggregateOutputType = {
    details_id: number
    distillation_id: number
    new_stock_id: number
    repro_stock_id: number
    drum_quantity: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Distillation_schedule_itemsAvgAggregateInputType = {
    details_id?: true
    distillation_id?: true
    new_stock_id?: true
    repro_stock_id?: true
    drum_quantity?: true
  }

  export type Distillation_schedule_itemsSumAggregateInputType = {
    details_id?: true
    distillation_id?: true
    new_stock_id?: true
    repro_stock_id?: true
    drum_quantity?: true
  }

  export type Distillation_schedule_itemsMinAggregateInputType = {
    details_id?: true
    distillation_id?: true
    new_stock_id?: true
    repro_stock_id?: true
    drum_quantity?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Distillation_schedule_itemsMaxAggregateInputType = {
    details_id?: true
    distillation_id?: true
    new_stock_id?: true
    repro_stock_id?: true
    drum_quantity?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Distillation_schedule_itemsCountAggregateInputType = {
    details_id?: true
    distillation_id?: true
    new_stock_id?: true
    repro_stock_id?: true
    drum_quantity?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Distillation_schedule_itemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which distillation_schedule_items to aggregate.
     */
    where?: distillation_schedule_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_schedule_items to fetch.
     */
    orderBy?: distillation_schedule_itemsOrderByWithRelationInput | distillation_schedule_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: distillation_schedule_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_schedule_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_schedule_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned distillation_schedule_items
    **/
    _count?: true | Distillation_schedule_itemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Distillation_schedule_itemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Distillation_schedule_itemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Distillation_schedule_itemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Distillation_schedule_itemsMaxAggregateInputType
  }

  export type GetDistillation_schedule_itemsAggregateType<T extends Distillation_schedule_itemsAggregateArgs> = {
        [P in keyof T & keyof AggregateDistillation_schedule_items]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDistillation_schedule_items[P]>
      : GetScalarType<T[P], AggregateDistillation_schedule_items[P]>
  }




  export type distillation_schedule_itemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: distillation_schedule_itemsWhereInput
    orderBy?: distillation_schedule_itemsOrderByWithAggregationInput | distillation_schedule_itemsOrderByWithAggregationInput[]
    by: Distillation_schedule_itemsScalarFieldEnum[] | Distillation_schedule_itemsScalarFieldEnum
    having?: distillation_schedule_itemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Distillation_schedule_itemsCountAggregateInputType | true
    _avg?: Distillation_schedule_itemsAvgAggregateInputType
    _sum?: Distillation_schedule_itemsSumAggregateInputType
    _min?: Distillation_schedule_itemsMinAggregateInputType
    _max?: Distillation_schedule_itemsMaxAggregateInputType
  }

  export type Distillation_schedule_itemsGroupByOutputType = {
    details_id: number
    distillation_id: number
    new_stock_id: number | null
    repro_stock_id: number | null
    drum_quantity: Decimal
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Distillation_schedule_itemsCountAggregateOutputType | null
    _avg: Distillation_schedule_itemsAvgAggregateOutputType | null
    _sum: Distillation_schedule_itemsSumAggregateOutputType | null
    _min: Distillation_schedule_itemsMinAggregateOutputType | null
    _max: Distillation_schedule_itemsMaxAggregateOutputType | null
  }

  type GetDistillation_schedule_itemsGroupByPayload<T extends distillation_schedule_itemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Distillation_schedule_itemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Distillation_schedule_itemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Distillation_schedule_itemsGroupByOutputType[P]>
            : GetScalarType<T[P], Distillation_schedule_itemsGroupByOutputType[P]>
        }
      >
    >


  export type distillation_schedule_itemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    details_id?: boolean
    distillation_id?: boolean
    new_stock_id?: boolean
    repro_stock_id?: boolean
    drum_quantity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_new?: boolean | distillation_schedule_items$stock_newArgs<ExtArgs>
    stock_repro?: boolean | distillation_schedule_items$stock_reproArgs<ExtArgs>
    stock_activity?: boolean | distillation_schedule_items$stock_activityArgs<ExtArgs>
    _count?: boolean | Distillation_schedule_itemsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_schedule_items"]>

  export type distillation_schedule_itemsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    details_id?: boolean
    distillation_id?: boolean
    new_stock_id?: boolean
    repro_stock_id?: boolean
    drum_quantity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_new?: boolean | distillation_schedule_items$stock_newArgs<ExtArgs>
    stock_repro?: boolean | distillation_schedule_items$stock_reproArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_schedule_items"]>

  export type distillation_schedule_itemsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    details_id?: boolean
    distillation_id?: boolean
    new_stock_id?: boolean
    repro_stock_id?: boolean
    drum_quantity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_new?: boolean | distillation_schedule_items$stock_newArgs<ExtArgs>
    stock_repro?: boolean | distillation_schedule_items$stock_reproArgs<ExtArgs>
  }, ExtArgs["result"]["distillation_schedule_items"]>

  export type distillation_schedule_itemsSelectScalar = {
    details_id?: boolean
    distillation_id?: boolean
    new_stock_id?: boolean
    repro_stock_id?: boolean
    drum_quantity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type distillation_schedule_itemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"details_id" | "distillation_id" | "new_stock_id" | "repro_stock_id" | "drum_quantity" | "status" | "created_at" | "updated_at", ExtArgs["result"]["distillation_schedule_items"]>
  export type distillation_schedule_itemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_new?: boolean | distillation_schedule_items$stock_newArgs<ExtArgs>
    stock_repro?: boolean | distillation_schedule_items$stock_reproArgs<ExtArgs>
    stock_activity?: boolean | distillation_schedule_items$stock_activityArgs<ExtArgs>
    _count?: boolean | Distillation_schedule_itemsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type distillation_schedule_itemsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_new?: boolean | distillation_schedule_items$stock_newArgs<ExtArgs>
    stock_repro?: boolean | distillation_schedule_items$stock_reproArgs<ExtArgs>
  }
  export type distillation_schedule_itemsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_new?: boolean | distillation_schedule_items$stock_newArgs<ExtArgs>
    stock_repro?: boolean | distillation_schedule_items$stock_reproArgs<ExtArgs>
  }

  export type $distillation_schedule_itemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "distillation_schedule_items"
    objects: {
      distillation_schedule: Prisma.$distillation_schedulePayload<ExtArgs>
      stock_new: Prisma.$stock_newPayload<ExtArgs> | null
      stock_repro: Prisma.$stock_reproPayload<ExtArgs> | null
      stock_activity: Prisma.$stock_activityPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      details_id: number
      distillation_id: number
      new_stock_id: number | null
      repro_stock_id: number | null
      drum_quantity: Prisma.Decimal
      status: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["distillation_schedule_items"]>
    composites: {}
  }

  type distillation_schedule_itemsGetPayload<S extends boolean | null | undefined | distillation_schedule_itemsDefaultArgs> = $Result.GetResult<Prisma.$distillation_schedule_itemsPayload, S>

  type distillation_schedule_itemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<distillation_schedule_itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Distillation_schedule_itemsCountAggregateInputType | true
    }

  export interface distillation_schedule_itemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['distillation_schedule_items'], meta: { name: 'distillation_schedule_items' } }
    /**
     * Find zero or one Distillation_schedule_items that matches the filter.
     * @param {distillation_schedule_itemsFindUniqueArgs} args - Arguments to find a Distillation_schedule_items
     * @example
     * // Get one Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends distillation_schedule_itemsFindUniqueArgs>(args: SelectSubset<T, distillation_schedule_itemsFindUniqueArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Distillation_schedule_items that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {distillation_schedule_itemsFindUniqueOrThrowArgs} args - Arguments to find a Distillation_schedule_items
     * @example
     * // Get one Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends distillation_schedule_itemsFindUniqueOrThrowArgs>(args: SelectSubset<T, distillation_schedule_itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Distillation_schedule_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_schedule_itemsFindFirstArgs} args - Arguments to find a Distillation_schedule_items
     * @example
     * // Get one Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends distillation_schedule_itemsFindFirstArgs>(args?: SelectSubset<T, distillation_schedule_itemsFindFirstArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Distillation_schedule_items that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_schedule_itemsFindFirstOrThrowArgs} args - Arguments to find a Distillation_schedule_items
     * @example
     * // Get one Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends distillation_schedule_itemsFindFirstOrThrowArgs>(args?: SelectSubset<T, distillation_schedule_itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Distillation_schedule_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_schedule_itemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.findMany()
     * 
     * // Get first 10 Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.findMany({ take: 10 })
     * 
     * // Only select the `details_id`
     * const distillation_schedule_itemsWithDetails_idOnly = await prisma.distillation_schedule_items.findMany({ select: { details_id: true } })
     * 
     */
    findMany<T extends distillation_schedule_itemsFindManyArgs>(args?: SelectSubset<T, distillation_schedule_itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Distillation_schedule_items.
     * @param {distillation_schedule_itemsCreateArgs} args - Arguments to create a Distillation_schedule_items.
     * @example
     * // Create one Distillation_schedule_items
     * const Distillation_schedule_items = await prisma.distillation_schedule_items.create({
     *   data: {
     *     // ... data to create a Distillation_schedule_items
     *   }
     * })
     * 
     */
    create<T extends distillation_schedule_itemsCreateArgs>(args: SelectSubset<T, distillation_schedule_itemsCreateArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Distillation_schedule_items.
     * @param {distillation_schedule_itemsCreateManyArgs} args - Arguments to create many Distillation_schedule_items.
     * @example
     * // Create many Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends distillation_schedule_itemsCreateManyArgs>(args?: SelectSubset<T, distillation_schedule_itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Distillation_schedule_items and returns the data saved in the database.
     * @param {distillation_schedule_itemsCreateManyAndReturnArgs} args - Arguments to create many Distillation_schedule_items.
     * @example
     * // Create many Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Distillation_schedule_items and only return the `details_id`
     * const distillation_schedule_itemsWithDetails_idOnly = await prisma.distillation_schedule_items.createManyAndReturn({
     *   select: { details_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends distillation_schedule_itemsCreateManyAndReturnArgs>(args?: SelectSubset<T, distillation_schedule_itemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Distillation_schedule_items.
     * @param {distillation_schedule_itemsDeleteArgs} args - Arguments to delete one Distillation_schedule_items.
     * @example
     * // Delete one Distillation_schedule_items
     * const Distillation_schedule_items = await prisma.distillation_schedule_items.delete({
     *   where: {
     *     // ... filter to delete one Distillation_schedule_items
     *   }
     * })
     * 
     */
    delete<T extends distillation_schedule_itemsDeleteArgs>(args: SelectSubset<T, distillation_schedule_itemsDeleteArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Distillation_schedule_items.
     * @param {distillation_schedule_itemsUpdateArgs} args - Arguments to update one Distillation_schedule_items.
     * @example
     * // Update one Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends distillation_schedule_itemsUpdateArgs>(args: SelectSubset<T, distillation_schedule_itemsUpdateArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Distillation_schedule_items.
     * @param {distillation_schedule_itemsDeleteManyArgs} args - Arguments to filter Distillation_schedule_items to delete.
     * @example
     * // Delete a few Distillation_schedule_items
     * const { count } = await prisma.distillation_schedule_items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends distillation_schedule_itemsDeleteManyArgs>(args?: SelectSubset<T, distillation_schedule_itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Distillation_schedule_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_schedule_itemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends distillation_schedule_itemsUpdateManyArgs>(args: SelectSubset<T, distillation_schedule_itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Distillation_schedule_items and returns the data updated in the database.
     * @param {distillation_schedule_itemsUpdateManyAndReturnArgs} args - Arguments to update many Distillation_schedule_items.
     * @example
     * // Update many Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Distillation_schedule_items and only return the `details_id`
     * const distillation_schedule_itemsWithDetails_idOnly = await prisma.distillation_schedule_items.updateManyAndReturn({
     *   select: { details_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends distillation_schedule_itemsUpdateManyAndReturnArgs>(args: SelectSubset<T, distillation_schedule_itemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Distillation_schedule_items.
     * @param {distillation_schedule_itemsUpsertArgs} args - Arguments to update or create a Distillation_schedule_items.
     * @example
     * // Update or create a Distillation_schedule_items
     * const distillation_schedule_items = await prisma.distillation_schedule_items.upsert({
     *   create: {
     *     // ... data to create a Distillation_schedule_items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Distillation_schedule_items we want to update
     *   }
     * })
     */
    upsert<T extends distillation_schedule_itemsUpsertArgs>(args: SelectSubset<T, distillation_schedule_itemsUpsertArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Distillation_schedule_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_schedule_itemsCountArgs} args - Arguments to filter Distillation_schedule_items to count.
     * @example
     * // Count the number of Distillation_schedule_items
     * const count = await prisma.distillation_schedule_items.count({
     *   where: {
     *     // ... the filter for the Distillation_schedule_items we want to count
     *   }
     * })
    **/
    count<T extends distillation_schedule_itemsCountArgs>(
      args?: Subset<T, distillation_schedule_itemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Distillation_schedule_itemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Distillation_schedule_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Distillation_schedule_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Distillation_schedule_itemsAggregateArgs>(args: Subset<T, Distillation_schedule_itemsAggregateArgs>): Prisma.PrismaPromise<GetDistillation_schedule_itemsAggregateType<T>>

    /**
     * Group by Distillation_schedule_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {distillation_schedule_itemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends distillation_schedule_itemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: distillation_schedule_itemsGroupByArgs['orderBy'] }
        : { orderBy?: distillation_schedule_itemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, distillation_schedule_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDistillation_schedule_itemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the distillation_schedule_items model
   */
  readonly fields: distillation_schedule_itemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for distillation_schedule_items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__distillation_schedule_itemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_schedule<T extends distillation_scheduleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, distillation_scheduleDefaultArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    stock_new<T extends distillation_schedule_items$stock_newArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule_items$stock_newArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stock_repro<T extends distillation_schedule_items$stock_reproArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule_items$stock_reproArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stock_activity<T extends distillation_schedule_items$stock_activityArgs<ExtArgs> = {}>(args?: Subset<T, distillation_schedule_items$stock_activityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the distillation_schedule_items model
   */
  interface distillation_schedule_itemsFieldRefs {
    readonly details_id: FieldRef<"distillation_schedule_items", 'Int'>
    readonly distillation_id: FieldRef<"distillation_schedule_items", 'Int'>
    readonly new_stock_id: FieldRef<"distillation_schedule_items", 'Int'>
    readonly repro_stock_id: FieldRef<"distillation_schedule_items", 'Int'>
    readonly drum_quantity: FieldRef<"distillation_schedule_items", 'Decimal'>
    readonly status: FieldRef<"distillation_schedule_items", 'String'>
    readonly created_at: FieldRef<"distillation_schedule_items", 'DateTime'>
    readonly updated_at: FieldRef<"distillation_schedule_items", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * distillation_schedule_items findUnique
   */
  export type distillation_schedule_itemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule_items to fetch.
     */
    where: distillation_schedule_itemsWhereUniqueInput
  }

  /**
   * distillation_schedule_items findUniqueOrThrow
   */
  export type distillation_schedule_itemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule_items to fetch.
     */
    where: distillation_schedule_itemsWhereUniqueInput
  }

  /**
   * distillation_schedule_items findFirst
   */
  export type distillation_schedule_itemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule_items to fetch.
     */
    where?: distillation_schedule_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_schedule_items to fetch.
     */
    orderBy?: distillation_schedule_itemsOrderByWithRelationInput | distillation_schedule_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for distillation_schedule_items.
     */
    cursor?: distillation_schedule_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_schedule_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_schedule_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of distillation_schedule_items.
     */
    distinct?: Distillation_schedule_itemsScalarFieldEnum | Distillation_schedule_itemsScalarFieldEnum[]
  }

  /**
   * distillation_schedule_items findFirstOrThrow
   */
  export type distillation_schedule_itemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule_items to fetch.
     */
    where?: distillation_schedule_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_schedule_items to fetch.
     */
    orderBy?: distillation_schedule_itemsOrderByWithRelationInput | distillation_schedule_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for distillation_schedule_items.
     */
    cursor?: distillation_schedule_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_schedule_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_schedule_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of distillation_schedule_items.
     */
    distinct?: Distillation_schedule_itemsScalarFieldEnum | Distillation_schedule_itemsScalarFieldEnum[]
  }

  /**
   * distillation_schedule_items findMany
   */
  export type distillation_schedule_itemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * Filter, which distillation_schedule_items to fetch.
     */
    where?: distillation_schedule_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of distillation_schedule_items to fetch.
     */
    orderBy?: distillation_schedule_itemsOrderByWithRelationInput | distillation_schedule_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing distillation_schedule_items.
     */
    cursor?: distillation_schedule_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` distillation_schedule_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` distillation_schedule_items.
     */
    skip?: number
    distinct?: Distillation_schedule_itemsScalarFieldEnum | Distillation_schedule_itemsScalarFieldEnum[]
  }

  /**
   * distillation_schedule_items create
   */
  export type distillation_schedule_itemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * The data needed to create a distillation_schedule_items.
     */
    data: XOR<distillation_schedule_itemsCreateInput, distillation_schedule_itemsUncheckedCreateInput>
  }

  /**
   * distillation_schedule_items createMany
   */
  export type distillation_schedule_itemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many distillation_schedule_items.
     */
    data: distillation_schedule_itemsCreateManyInput | distillation_schedule_itemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * distillation_schedule_items createManyAndReturn
   */
  export type distillation_schedule_itemsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * The data used to create many distillation_schedule_items.
     */
    data: distillation_schedule_itemsCreateManyInput | distillation_schedule_itemsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * distillation_schedule_items update
   */
  export type distillation_schedule_itemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * The data needed to update a distillation_schedule_items.
     */
    data: XOR<distillation_schedule_itemsUpdateInput, distillation_schedule_itemsUncheckedUpdateInput>
    /**
     * Choose, which distillation_schedule_items to update.
     */
    where: distillation_schedule_itemsWhereUniqueInput
  }

  /**
   * distillation_schedule_items updateMany
   */
  export type distillation_schedule_itemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update distillation_schedule_items.
     */
    data: XOR<distillation_schedule_itemsUpdateManyMutationInput, distillation_schedule_itemsUncheckedUpdateManyInput>
    /**
     * Filter which distillation_schedule_items to update
     */
    where?: distillation_schedule_itemsWhereInput
    /**
     * Limit how many distillation_schedule_items to update.
     */
    limit?: number
  }

  /**
   * distillation_schedule_items updateManyAndReturn
   */
  export type distillation_schedule_itemsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * The data used to update distillation_schedule_items.
     */
    data: XOR<distillation_schedule_itemsUpdateManyMutationInput, distillation_schedule_itemsUncheckedUpdateManyInput>
    /**
     * Filter which distillation_schedule_items to update
     */
    where?: distillation_schedule_itemsWhereInput
    /**
     * Limit how many distillation_schedule_items to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * distillation_schedule_items upsert
   */
  export type distillation_schedule_itemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * The filter to search for the distillation_schedule_items to update in case it exists.
     */
    where: distillation_schedule_itemsWhereUniqueInput
    /**
     * In case the distillation_schedule_items found by the `where` argument doesn't exist, create a new distillation_schedule_items with this data.
     */
    create: XOR<distillation_schedule_itemsCreateInput, distillation_schedule_itemsUncheckedCreateInput>
    /**
     * In case the distillation_schedule_items was found with the provided `where` argument, update it with this data.
     */
    update: XOR<distillation_schedule_itemsUpdateInput, distillation_schedule_itemsUncheckedUpdateInput>
  }

  /**
   * distillation_schedule_items delete
   */
  export type distillation_schedule_itemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    /**
     * Filter which distillation_schedule_items to delete.
     */
    where: distillation_schedule_itemsWhereUniqueInput
  }

  /**
   * distillation_schedule_items deleteMany
   */
  export type distillation_schedule_itemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which distillation_schedule_items to delete
     */
    where?: distillation_schedule_itemsWhereInput
    /**
     * Limit how many distillation_schedule_items to delete.
     */
    limit?: number
  }

  /**
   * distillation_schedule_items.stock_new
   */
  export type distillation_schedule_items$stock_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    where?: stock_newWhereInput
  }

  /**
   * distillation_schedule_items.stock_repro
   */
  export type distillation_schedule_items$stock_reproArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    where?: stock_reproWhereInput
  }

  /**
   * distillation_schedule_items.stock_activity
   */
  export type distillation_schedule_items$stock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    where?: stock_activityWhereInput
    orderBy?: stock_activityOrderByWithRelationInput | stock_activityOrderByWithRelationInput[]
    cursor?: stock_activityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_activityScalarFieldEnum | Stock_activityScalarFieldEnum[]
  }

  /**
   * distillation_schedule_items without action
   */
  export type distillation_schedule_itemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
  }


  /**
   * Model drums
   */

  export type AggregateDrums = {
    _count: DrumsCountAggregateOutputType | null
    _avg: DrumsAvgAggregateOutputType | null
    _sum: DrumsSumAggregateOutputType | null
    _min: DrumsMinAggregateOutputType | null
    _max: DrumsMaxAggregateOutputType | null
  }

  export type DrumsAvgAggregateOutputType = {
    old_id: number | null
    id: number | null
  }

  export type DrumsSumAggregateOutputType = {
    old_id: number | null
    id: number | null
  }

  export type DrumsMinAggregateOutputType = {
    old_id: number | null
    material: string | null
    batch_code: string | null
    id: number | null
    supplier: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    site: string | null
    date_ordered: string | null
    chemical_group: string | null
    material_code: string | null
  }

  export type DrumsMaxAggregateOutputType = {
    old_id: number | null
    material: string | null
    batch_code: string | null
    id: number | null
    supplier: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    site: string | null
    date_ordered: string | null
    chemical_group: string | null
    material_code: string | null
  }

  export type DrumsCountAggregateOutputType = {
    old_id: number
    material: number
    batch_code: number
    id: number
    supplier: number
    status: number
    created_at: number
    updated_at: number
    site: number
    date_ordered: number
    chemical_group: number
    material_code: number
    _all: number
  }


  export type DrumsAvgAggregateInputType = {
    old_id?: true
    id?: true
  }

  export type DrumsSumAggregateInputType = {
    old_id?: true
    id?: true
  }

  export type DrumsMinAggregateInputType = {
    old_id?: true
    material?: true
    batch_code?: true
    id?: true
    supplier?: true
    status?: true
    created_at?: true
    updated_at?: true
    site?: true
    date_ordered?: true
    chemical_group?: true
    material_code?: true
  }

  export type DrumsMaxAggregateInputType = {
    old_id?: true
    material?: true
    batch_code?: true
    id?: true
    supplier?: true
    status?: true
    created_at?: true
    updated_at?: true
    site?: true
    date_ordered?: true
    chemical_group?: true
    material_code?: true
  }

  export type DrumsCountAggregateInputType = {
    old_id?: true
    material?: true
    batch_code?: true
    id?: true
    supplier?: true
    status?: true
    created_at?: true
    updated_at?: true
    site?: true
    date_ordered?: true
    chemical_group?: true
    material_code?: true
    _all?: true
  }

  export type DrumsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which drums to aggregate.
     */
    where?: drumsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of drums to fetch.
     */
    orderBy?: drumsOrderByWithRelationInput | drumsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: drumsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned drums
    **/
    _count?: true | DrumsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DrumsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DrumsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DrumsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DrumsMaxAggregateInputType
  }

  export type GetDrumsAggregateType<T extends DrumsAggregateArgs> = {
        [P in keyof T & keyof AggregateDrums]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDrums[P]>
      : GetScalarType<T[P], AggregateDrums[P]>
  }




  export type drumsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: drumsWhereInput
    orderBy?: drumsOrderByWithAggregationInput | drumsOrderByWithAggregationInput[]
    by: DrumsScalarFieldEnum[] | DrumsScalarFieldEnum
    having?: drumsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DrumsCountAggregateInputType | true
    _avg?: DrumsAvgAggregateInputType
    _sum?: DrumsSumAggregateInputType
    _min?: DrumsMinAggregateInputType
    _max?: DrumsMaxAggregateInputType
  }

  export type DrumsGroupByOutputType = {
    old_id: number
    material: string
    batch_code: string | null
    id: number
    supplier: string | null
    status: string
    created_at: Date
    updated_at: Date | null
    site: string
    date_ordered: string | null
    chemical_group: string | null
    material_code: string
    _count: DrumsCountAggregateOutputType | null
    _avg: DrumsAvgAggregateOutputType | null
    _sum: DrumsSumAggregateOutputType | null
    _min: DrumsMinAggregateOutputType | null
    _max: DrumsMaxAggregateOutputType | null
  }

  type GetDrumsGroupByPayload<T extends drumsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DrumsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DrumsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DrumsGroupByOutputType[P]>
            : GetScalarType<T[P], DrumsGroupByOutputType[P]>
        }
      >
    >


  export type drumsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    old_id?: boolean
    material?: boolean
    batch_code?: boolean
    id?: boolean
    supplier?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    site?: boolean
    date_ordered?: boolean
    chemical_group?: boolean
    material_code?: boolean
  }, ExtArgs["result"]["drums"]>

  export type drumsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    old_id?: boolean
    material?: boolean
    batch_code?: boolean
    id?: boolean
    supplier?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    site?: boolean
    date_ordered?: boolean
    chemical_group?: boolean
    material_code?: boolean
  }, ExtArgs["result"]["drums"]>

  export type drumsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    old_id?: boolean
    material?: boolean
    batch_code?: boolean
    id?: boolean
    supplier?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    site?: boolean
    date_ordered?: boolean
    chemical_group?: boolean
    material_code?: boolean
  }, ExtArgs["result"]["drums"]>

  export type drumsSelectScalar = {
    old_id?: boolean
    material?: boolean
    batch_code?: boolean
    id?: boolean
    supplier?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    site?: boolean
    date_ordered?: boolean
    chemical_group?: boolean
    material_code?: boolean
  }

  export type drumsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"old_id" | "material" | "batch_code" | "id" | "supplier" | "status" | "created_at" | "updated_at" | "site" | "date_ordered" | "chemical_group" | "material_code", ExtArgs["result"]["drums"]>

  export type $drumsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "drums"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      old_id: number
      material: string
      batch_code: string | null
      id: number
      supplier: string | null
      status: string
      created_at: Date
      updated_at: Date | null
      site: string
      date_ordered: string | null
      chemical_group: string | null
      material_code: string
    }, ExtArgs["result"]["drums"]>
    composites: {}
  }

  type drumsGetPayload<S extends boolean | null | undefined | drumsDefaultArgs> = $Result.GetResult<Prisma.$drumsPayload, S>

  type drumsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<drumsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DrumsCountAggregateInputType | true
    }

  export interface drumsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['drums'], meta: { name: 'drums' } }
    /**
     * Find zero or one Drums that matches the filter.
     * @param {drumsFindUniqueArgs} args - Arguments to find a Drums
     * @example
     * // Get one Drums
     * const drums = await prisma.drums.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends drumsFindUniqueArgs>(args: SelectSubset<T, drumsFindUniqueArgs<ExtArgs>>): Prisma__drumsClient<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Drums that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {drumsFindUniqueOrThrowArgs} args - Arguments to find a Drums
     * @example
     * // Get one Drums
     * const drums = await prisma.drums.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends drumsFindUniqueOrThrowArgs>(args: SelectSubset<T, drumsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__drumsClient<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Drums that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {drumsFindFirstArgs} args - Arguments to find a Drums
     * @example
     * // Get one Drums
     * const drums = await prisma.drums.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends drumsFindFirstArgs>(args?: SelectSubset<T, drumsFindFirstArgs<ExtArgs>>): Prisma__drumsClient<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Drums that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {drumsFindFirstOrThrowArgs} args - Arguments to find a Drums
     * @example
     * // Get one Drums
     * const drums = await prisma.drums.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends drumsFindFirstOrThrowArgs>(args?: SelectSubset<T, drumsFindFirstOrThrowArgs<ExtArgs>>): Prisma__drumsClient<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Drums that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {drumsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Drums
     * const drums = await prisma.drums.findMany()
     * 
     * // Get first 10 Drums
     * const drums = await prisma.drums.findMany({ take: 10 })
     * 
     * // Only select the `old_id`
     * const drumsWithOld_idOnly = await prisma.drums.findMany({ select: { old_id: true } })
     * 
     */
    findMany<T extends drumsFindManyArgs>(args?: SelectSubset<T, drumsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Drums.
     * @param {drumsCreateArgs} args - Arguments to create a Drums.
     * @example
     * // Create one Drums
     * const Drums = await prisma.drums.create({
     *   data: {
     *     // ... data to create a Drums
     *   }
     * })
     * 
     */
    create<T extends drumsCreateArgs>(args: SelectSubset<T, drumsCreateArgs<ExtArgs>>): Prisma__drumsClient<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Drums.
     * @param {drumsCreateManyArgs} args - Arguments to create many Drums.
     * @example
     * // Create many Drums
     * const drums = await prisma.drums.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends drumsCreateManyArgs>(args?: SelectSubset<T, drumsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Drums and returns the data saved in the database.
     * @param {drumsCreateManyAndReturnArgs} args - Arguments to create many Drums.
     * @example
     * // Create many Drums
     * const drums = await prisma.drums.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Drums and only return the `old_id`
     * const drumsWithOld_idOnly = await prisma.drums.createManyAndReturn({
     *   select: { old_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends drumsCreateManyAndReturnArgs>(args?: SelectSubset<T, drumsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Drums.
     * @param {drumsDeleteArgs} args - Arguments to delete one Drums.
     * @example
     * // Delete one Drums
     * const Drums = await prisma.drums.delete({
     *   where: {
     *     // ... filter to delete one Drums
     *   }
     * })
     * 
     */
    delete<T extends drumsDeleteArgs>(args: SelectSubset<T, drumsDeleteArgs<ExtArgs>>): Prisma__drumsClient<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Drums.
     * @param {drumsUpdateArgs} args - Arguments to update one Drums.
     * @example
     * // Update one Drums
     * const drums = await prisma.drums.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends drumsUpdateArgs>(args: SelectSubset<T, drumsUpdateArgs<ExtArgs>>): Prisma__drumsClient<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Drums.
     * @param {drumsDeleteManyArgs} args - Arguments to filter Drums to delete.
     * @example
     * // Delete a few Drums
     * const { count } = await prisma.drums.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends drumsDeleteManyArgs>(args?: SelectSubset<T, drumsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {drumsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Drums
     * const drums = await prisma.drums.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends drumsUpdateManyArgs>(args: SelectSubset<T, drumsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drums and returns the data updated in the database.
     * @param {drumsUpdateManyAndReturnArgs} args - Arguments to update many Drums.
     * @example
     * // Update many Drums
     * const drums = await prisma.drums.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Drums and only return the `old_id`
     * const drumsWithOld_idOnly = await prisma.drums.updateManyAndReturn({
     *   select: { old_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends drumsUpdateManyAndReturnArgs>(args: SelectSubset<T, drumsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Drums.
     * @param {drumsUpsertArgs} args - Arguments to update or create a Drums.
     * @example
     * // Update or create a Drums
     * const drums = await prisma.drums.upsert({
     *   create: {
     *     // ... data to create a Drums
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Drums we want to update
     *   }
     * })
     */
    upsert<T extends drumsUpsertArgs>(args: SelectSubset<T, drumsUpsertArgs<ExtArgs>>): Prisma__drumsClient<$Result.GetResult<Prisma.$drumsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Drums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {drumsCountArgs} args - Arguments to filter Drums to count.
     * @example
     * // Count the number of Drums
     * const count = await prisma.drums.count({
     *   where: {
     *     // ... the filter for the Drums we want to count
     *   }
     * })
    **/
    count<T extends drumsCountArgs>(
      args?: Subset<T, drumsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DrumsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Drums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DrumsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DrumsAggregateArgs>(args: Subset<T, DrumsAggregateArgs>): Prisma.PrismaPromise<GetDrumsAggregateType<T>>

    /**
     * Group by Drums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {drumsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends drumsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: drumsGroupByArgs['orderBy'] }
        : { orderBy?: drumsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, drumsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDrumsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the drums model
   */
  readonly fields: drumsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for drums.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__drumsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the drums model
   */
  interface drumsFieldRefs {
    readonly old_id: FieldRef<"drums", 'Int'>
    readonly material: FieldRef<"drums", 'String'>
    readonly batch_code: FieldRef<"drums", 'String'>
    readonly id: FieldRef<"drums", 'Int'>
    readonly supplier: FieldRef<"drums", 'String'>
    readonly status: FieldRef<"drums", 'String'>
    readonly created_at: FieldRef<"drums", 'DateTime'>
    readonly updated_at: FieldRef<"drums", 'DateTime'>
    readonly site: FieldRef<"drums", 'String'>
    readonly date_ordered: FieldRef<"drums", 'String'>
    readonly chemical_group: FieldRef<"drums", 'String'>
    readonly material_code: FieldRef<"drums", 'String'>
  }
    

  // Custom InputTypes
  /**
   * drums findUnique
   */
  export type drumsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * Filter, which drums to fetch.
     */
    where: drumsWhereUniqueInput
  }

  /**
   * drums findUniqueOrThrow
   */
  export type drumsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * Filter, which drums to fetch.
     */
    where: drumsWhereUniqueInput
  }

  /**
   * drums findFirst
   */
  export type drumsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * Filter, which drums to fetch.
     */
    where?: drumsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of drums to fetch.
     */
    orderBy?: drumsOrderByWithRelationInput | drumsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for drums.
     */
    cursor?: drumsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of drums.
     */
    distinct?: DrumsScalarFieldEnum | DrumsScalarFieldEnum[]
  }

  /**
   * drums findFirstOrThrow
   */
  export type drumsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * Filter, which drums to fetch.
     */
    where?: drumsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of drums to fetch.
     */
    orderBy?: drumsOrderByWithRelationInput | drumsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for drums.
     */
    cursor?: drumsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of drums.
     */
    distinct?: DrumsScalarFieldEnum | DrumsScalarFieldEnum[]
  }

  /**
   * drums findMany
   */
  export type drumsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * Filter, which drums to fetch.
     */
    where?: drumsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of drums to fetch.
     */
    orderBy?: drumsOrderByWithRelationInput | drumsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing drums.
     */
    cursor?: drumsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` drums.
     */
    skip?: number
    distinct?: DrumsScalarFieldEnum | DrumsScalarFieldEnum[]
  }

  /**
   * drums create
   */
  export type drumsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * The data needed to create a drums.
     */
    data: XOR<drumsCreateInput, drumsUncheckedCreateInput>
  }

  /**
   * drums createMany
   */
  export type drumsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many drums.
     */
    data: drumsCreateManyInput | drumsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * drums createManyAndReturn
   */
  export type drumsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * The data used to create many drums.
     */
    data: drumsCreateManyInput | drumsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * drums update
   */
  export type drumsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * The data needed to update a drums.
     */
    data: XOR<drumsUpdateInput, drumsUncheckedUpdateInput>
    /**
     * Choose, which drums to update.
     */
    where: drumsWhereUniqueInput
  }

  /**
   * drums updateMany
   */
  export type drumsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update drums.
     */
    data: XOR<drumsUpdateManyMutationInput, drumsUncheckedUpdateManyInput>
    /**
     * Filter which drums to update
     */
    where?: drumsWhereInput
    /**
     * Limit how many drums to update.
     */
    limit?: number
  }

  /**
   * drums updateManyAndReturn
   */
  export type drumsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * The data used to update drums.
     */
    data: XOR<drumsUpdateManyMutationInput, drumsUncheckedUpdateManyInput>
    /**
     * Filter which drums to update
     */
    where?: drumsWhereInput
    /**
     * Limit how many drums to update.
     */
    limit?: number
  }

  /**
   * drums upsert
   */
  export type drumsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * The filter to search for the drums to update in case it exists.
     */
    where: drumsWhereUniqueInput
    /**
     * In case the drums found by the `where` argument doesn't exist, create a new drums with this data.
     */
    create: XOR<drumsCreateInput, drumsUncheckedCreateInput>
    /**
     * In case the drums was found with the provided `where` argument, update it with this data.
     */
    update: XOR<drumsUpdateInput, drumsUncheckedUpdateInput>
  }

  /**
   * drums delete
   */
  export type drumsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
    /**
     * Filter which drums to delete.
     */
    where: drumsWhereUniqueInput
  }

  /**
   * drums deleteMany
   */
  export type drumsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which drums to delete
     */
    where?: drumsWhereInput
    /**
     * Limit how many drums to delete.
     */
    limit?: number
  }

  /**
   * drums without action
   */
  export type drumsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the drums
     */
    select?: drumsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the drums
     */
    omit?: drumsOmit<ExtArgs> | null
  }


  /**
   * Model log_drum_decommission
   */

  export type AggregateLog_drum_decommission = {
    _count: Log_drum_decommissionCountAggregateOutputType | null
    _avg: Log_drum_decommissionAvgAggregateOutputType | null
    _sum: Log_drum_decommissionSumAggregateOutputType | null
    _min: Log_drum_decommissionMinAggregateOutputType | null
    _max: Log_drum_decommissionMaxAggregateOutputType | null
  }

  export type Log_drum_decommissionAvgAggregateOutputType = {
    decommission_id: number | null
    drum_id: number | null
    worker_id: number | null
  }

  export type Log_drum_decommissionSumAggregateOutputType = {
    decommission_id: number | null
    drum_id: number | null
    worker_id: number | null
  }

  export type Log_drum_decommissionMinAggregateOutputType = {
    decommission_id: number | null
    drum_id: number | null
    decommissioned_at: Date | null
    worker_id: number | null
  }

  export type Log_drum_decommissionMaxAggregateOutputType = {
    decommission_id: number | null
    drum_id: number | null
    decommissioned_at: Date | null
    worker_id: number | null
  }

  export type Log_drum_decommissionCountAggregateOutputType = {
    decommission_id: number
    drum_id: number
    decommissioned_at: number
    worker_id: number
    _all: number
  }


  export type Log_drum_decommissionAvgAggregateInputType = {
    decommission_id?: true
    drum_id?: true
    worker_id?: true
  }

  export type Log_drum_decommissionSumAggregateInputType = {
    decommission_id?: true
    drum_id?: true
    worker_id?: true
  }

  export type Log_drum_decommissionMinAggregateInputType = {
    decommission_id?: true
    drum_id?: true
    decommissioned_at?: true
    worker_id?: true
  }

  export type Log_drum_decommissionMaxAggregateInputType = {
    decommission_id?: true
    drum_id?: true
    decommissioned_at?: true
    worker_id?: true
  }

  export type Log_drum_decommissionCountAggregateInputType = {
    decommission_id?: true
    drum_id?: true
    decommissioned_at?: true
    worker_id?: true
    _all?: true
  }

  export type Log_drum_decommissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_drum_decommission to aggregate.
     */
    where?: log_drum_decommissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_drum_decommissions to fetch.
     */
    orderBy?: log_drum_decommissionOrderByWithRelationInput | log_drum_decommissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: log_drum_decommissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_drum_decommissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_drum_decommissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned log_drum_decommissions
    **/
    _count?: true | Log_drum_decommissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Log_drum_decommissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Log_drum_decommissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Log_drum_decommissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Log_drum_decommissionMaxAggregateInputType
  }

  export type GetLog_drum_decommissionAggregateType<T extends Log_drum_decommissionAggregateArgs> = {
        [P in keyof T & keyof AggregateLog_drum_decommission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLog_drum_decommission[P]>
      : GetScalarType<T[P], AggregateLog_drum_decommission[P]>
  }




  export type log_drum_decommissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_drum_decommissionWhereInput
    orderBy?: log_drum_decommissionOrderByWithAggregationInput | log_drum_decommissionOrderByWithAggregationInput[]
    by: Log_drum_decommissionScalarFieldEnum[] | Log_drum_decommissionScalarFieldEnum
    having?: log_drum_decommissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Log_drum_decommissionCountAggregateInputType | true
    _avg?: Log_drum_decommissionAvgAggregateInputType
    _sum?: Log_drum_decommissionSumAggregateInputType
    _min?: Log_drum_decommissionMinAggregateInputType
    _max?: Log_drum_decommissionMaxAggregateInputType
  }

  export type Log_drum_decommissionGroupByOutputType = {
    decommission_id: number
    drum_id: number
    decommissioned_at: Date | null
    worker_id: number | null
    _count: Log_drum_decommissionCountAggregateOutputType | null
    _avg: Log_drum_decommissionAvgAggregateOutputType | null
    _sum: Log_drum_decommissionSumAggregateOutputType | null
    _min: Log_drum_decommissionMinAggregateOutputType | null
    _max: Log_drum_decommissionMaxAggregateOutputType | null
  }

  type GetLog_drum_decommissionGroupByPayload<T extends log_drum_decommissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Log_drum_decommissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Log_drum_decommissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Log_drum_decommissionGroupByOutputType[P]>
            : GetScalarType<T[P], Log_drum_decommissionGroupByOutputType[P]>
        }
      >
    >


  export type log_drum_decommissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    decommission_id?: boolean
    drum_id?: boolean
    decommissioned_at?: boolean
    worker_id?: boolean
  }, ExtArgs["result"]["log_drum_decommission"]>

  export type log_drum_decommissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    decommission_id?: boolean
    drum_id?: boolean
    decommissioned_at?: boolean
    worker_id?: boolean
  }, ExtArgs["result"]["log_drum_decommission"]>

  export type log_drum_decommissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    decommission_id?: boolean
    drum_id?: boolean
    decommissioned_at?: boolean
    worker_id?: boolean
  }, ExtArgs["result"]["log_drum_decommission"]>

  export type log_drum_decommissionSelectScalar = {
    decommission_id?: boolean
    drum_id?: boolean
    decommissioned_at?: boolean
    worker_id?: boolean
  }

  export type log_drum_decommissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"decommission_id" | "drum_id" | "decommissioned_at" | "worker_id", ExtArgs["result"]["log_drum_decommission"]>

  export type $log_drum_decommissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "log_drum_decommission"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      decommission_id: number
      drum_id: number
      decommissioned_at: Date | null
      worker_id: number | null
    }, ExtArgs["result"]["log_drum_decommission"]>
    composites: {}
  }

  type log_drum_decommissionGetPayload<S extends boolean | null | undefined | log_drum_decommissionDefaultArgs> = $Result.GetResult<Prisma.$log_drum_decommissionPayload, S>

  type log_drum_decommissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<log_drum_decommissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Log_drum_decommissionCountAggregateInputType | true
    }

  export interface log_drum_decommissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['log_drum_decommission'], meta: { name: 'log_drum_decommission' } }
    /**
     * Find zero or one Log_drum_decommission that matches the filter.
     * @param {log_drum_decommissionFindUniqueArgs} args - Arguments to find a Log_drum_decommission
     * @example
     * // Get one Log_drum_decommission
     * const log_drum_decommission = await prisma.log_drum_decommission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends log_drum_decommissionFindUniqueArgs>(args: SelectSubset<T, log_drum_decommissionFindUniqueArgs<ExtArgs>>): Prisma__log_drum_decommissionClient<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Log_drum_decommission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {log_drum_decommissionFindUniqueOrThrowArgs} args - Arguments to find a Log_drum_decommission
     * @example
     * // Get one Log_drum_decommission
     * const log_drum_decommission = await prisma.log_drum_decommission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends log_drum_decommissionFindUniqueOrThrowArgs>(args: SelectSubset<T, log_drum_decommissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__log_drum_decommissionClient<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_drum_decommission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_decommissionFindFirstArgs} args - Arguments to find a Log_drum_decommission
     * @example
     * // Get one Log_drum_decommission
     * const log_drum_decommission = await prisma.log_drum_decommission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends log_drum_decommissionFindFirstArgs>(args?: SelectSubset<T, log_drum_decommissionFindFirstArgs<ExtArgs>>): Prisma__log_drum_decommissionClient<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_drum_decommission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_decommissionFindFirstOrThrowArgs} args - Arguments to find a Log_drum_decommission
     * @example
     * // Get one Log_drum_decommission
     * const log_drum_decommission = await prisma.log_drum_decommission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends log_drum_decommissionFindFirstOrThrowArgs>(args?: SelectSubset<T, log_drum_decommissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__log_drum_decommissionClient<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Log_drum_decommissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_decommissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Log_drum_decommissions
     * const log_drum_decommissions = await prisma.log_drum_decommission.findMany()
     * 
     * // Get first 10 Log_drum_decommissions
     * const log_drum_decommissions = await prisma.log_drum_decommission.findMany({ take: 10 })
     * 
     * // Only select the `decommission_id`
     * const log_drum_decommissionWithDecommission_idOnly = await prisma.log_drum_decommission.findMany({ select: { decommission_id: true } })
     * 
     */
    findMany<T extends log_drum_decommissionFindManyArgs>(args?: SelectSubset<T, log_drum_decommissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Log_drum_decommission.
     * @param {log_drum_decommissionCreateArgs} args - Arguments to create a Log_drum_decommission.
     * @example
     * // Create one Log_drum_decommission
     * const Log_drum_decommission = await prisma.log_drum_decommission.create({
     *   data: {
     *     // ... data to create a Log_drum_decommission
     *   }
     * })
     * 
     */
    create<T extends log_drum_decommissionCreateArgs>(args: SelectSubset<T, log_drum_decommissionCreateArgs<ExtArgs>>): Prisma__log_drum_decommissionClient<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Log_drum_decommissions.
     * @param {log_drum_decommissionCreateManyArgs} args - Arguments to create many Log_drum_decommissions.
     * @example
     * // Create many Log_drum_decommissions
     * const log_drum_decommission = await prisma.log_drum_decommission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends log_drum_decommissionCreateManyArgs>(args?: SelectSubset<T, log_drum_decommissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Log_drum_decommissions and returns the data saved in the database.
     * @param {log_drum_decommissionCreateManyAndReturnArgs} args - Arguments to create many Log_drum_decommissions.
     * @example
     * // Create many Log_drum_decommissions
     * const log_drum_decommission = await prisma.log_drum_decommission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Log_drum_decommissions and only return the `decommission_id`
     * const log_drum_decommissionWithDecommission_idOnly = await prisma.log_drum_decommission.createManyAndReturn({
     *   select: { decommission_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends log_drum_decommissionCreateManyAndReturnArgs>(args?: SelectSubset<T, log_drum_decommissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Log_drum_decommission.
     * @param {log_drum_decommissionDeleteArgs} args - Arguments to delete one Log_drum_decommission.
     * @example
     * // Delete one Log_drum_decommission
     * const Log_drum_decommission = await prisma.log_drum_decommission.delete({
     *   where: {
     *     // ... filter to delete one Log_drum_decommission
     *   }
     * })
     * 
     */
    delete<T extends log_drum_decommissionDeleteArgs>(args: SelectSubset<T, log_drum_decommissionDeleteArgs<ExtArgs>>): Prisma__log_drum_decommissionClient<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Log_drum_decommission.
     * @param {log_drum_decommissionUpdateArgs} args - Arguments to update one Log_drum_decommission.
     * @example
     * // Update one Log_drum_decommission
     * const log_drum_decommission = await prisma.log_drum_decommission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends log_drum_decommissionUpdateArgs>(args: SelectSubset<T, log_drum_decommissionUpdateArgs<ExtArgs>>): Prisma__log_drum_decommissionClient<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Log_drum_decommissions.
     * @param {log_drum_decommissionDeleteManyArgs} args - Arguments to filter Log_drum_decommissions to delete.
     * @example
     * // Delete a few Log_drum_decommissions
     * const { count } = await prisma.log_drum_decommission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends log_drum_decommissionDeleteManyArgs>(args?: SelectSubset<T, log_drum_decommissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_drum_decommissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_decommissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Log_drum_decommissions
     * const log_drum_decommission = await prisma.log_drum_decommission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends log_drum_decommissionUpdateManyArgs>(args: SelectSubset<T, log_drum_decommissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_drum_decommissions and returns the data updated in the database.
     * @param {log_drum_decommissionUpdateManyAndReturnArgs} args - Arguments to update many Log_drum_decommissions.
     * @example
     * // Update many Log_drum_decommissions
     * const log_drum_decommission = await prisma.log_drum_decommission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Log_drum_decommissions and only return the `decommission_id`
     * const log_drum_decommissionWithDecommission_idOnly = await prisma.log_drum_decommission.updateManyAndReturn({
     *   select: { decommission_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends log_drum_decommissionUpdateManyAndReturnArgs>(args: SelectSubset<T, log_drum_decommissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Log_drum_decommission.
     * @param {log_drum_decommissionUpsertArgs} args - Arguments to update or create a Log_drum_decommission.
     * @example
     * // Update or create a Log_drum_decommission
     * const log_drum_decommission = await prisma.log_drum_decommission.upsert({
     *   create: {
     *     // ... data to create a Log_drum_decommission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Log_drum_decommission we want to update
     *   }
     * })
     */
    upsert<T extends log_drum_decommissionUpsertArgs>(args: SelectSubset<T, log_drum_decommissionUpsertArgs<ExtArgs>>): Prisma__log_drum_decommissionClient<$Result.GetResult<Prisma.$log_drum_decommissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Log_drum_decommissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_decommissionCountArgs} args - Arguments to filter Log_drum_decommissions to count.
     * @example
     * // Count the number of Log_drum_decommissions
     * const count = await prisma.log_drum_decommission.count({
     *   where: {
     *     // ... the filter for the Log_drum_decommissions we want to count
     *   }
     * })
    **/
    count<T extends log_drum_decommissionCountArgs>(
      args?: Subset<T, log_drum_decommissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Log_drum_decommissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Log_drum_decommission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Log_drum_decommissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Log_drum_decommissionAggregateArgs>(args: Subset<T, Log_drum_decommissionAggregateArgs>): Prisma.PrismaPromise<GetLog_drum_decommissionAggregateType<T>>

    /**
     * Group by Log_drum_decommission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_decommissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends log_drum_decommissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: log_drum_decommissionGroupByArgs['orderBy'] }
        : { orderBy?: log_drum_decommissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, log_drum_decommissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLog_drum_decommissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the log_drum_decommission model
   */
  readonly fields: log_drum_decommissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for log_drum_decommission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__log_drum_decommissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the log_drum_decommission model
   */
  interface log_drum_decommissionFieldRefs {
    readonly decommission_id: FieldRef<"log_drum_decommission", 'Int'>
    readonly drum_id: FieldRef<"log_drum_decommission", 'Int'>
    readonly decommissioned_at: FieldRef<"log_drum_decommission", 'DateTime'>
    readonly worker_id: FieldRef<"log_drum_decommission", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * log_drum_decommission findUnique
   */
  export type log_drum_decommissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * Filter, which log_drum_decommission to fetch.
     */
    where: log_drum_decommissionWhereUniqueInput
  }

  /**
   * log_drum_decommission findUniqueOrThrow
   */
  export type log_drum_decommissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * Filter, which log_drum_decommission to fetch.
     */
    where: log_drum_decommissionWhereUniqueInput
  }

  /**
   * log_drum_decommission findFirst
   */
  export type log_drum_decommissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * Filter, which log_drum_decommission to fetch.
     */
    where?: log_drum_decommissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_drum_decommissions to fetch.
     */
    orderBy?: log_drum_decommissionOrderByWithRelationInput | log_drum_decommissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_drum_decommissions.
     */
    cursor?: log_drum_decommissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_drum_decommissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_drum_decommissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_drum_decommissions.
     */
    distinct?: Log_drum_decommissionScalarFieldEnum | Log_drum_decommissionScalarFieldEnum[]
  }

  /**
   * log_drum_decommission findFirstOrThrow
   */
  export type log_drum_decommissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * Filter, which log_drum_decommission to fetch.
     */
    where?: log_drum_decommissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_drum_decommissions to fetch.
     */
    orderBy?: log_drum_decommissionOrderByWithRelationInput | log_drum_decommissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_drum_decommissions.
     */
    cursor?: log_drum_decommissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_drum_decommissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_drum_decommissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_drum_decommissions.
     */
    distinct?: Log_drum_decommissionScalarFieldEnum | Log_drum_decommissionScalarFieldEnum[]
  }

  /**
   * log_drum_decommission findMany
   */
  export type log_drum_decommissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * Filter, which log_drum_decommissions to fetch.
     */
    where?: log_drum_decommissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_drum_decommissions to fetch.
     */
    orderBy?: log_drum_decommissionOrderByWithRelationInput | log_drum_decommissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing log_drum_decommissions.
     */
    cursor?: log_drum_decommissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_drum_decommissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_drum_decommissions.
     */
    skip?: number
    distinct?: Log_drum_decommissionScalarFieldEnum | Log_drum_decommissionScalarFieldEnum[]
  }

  /**
   * log_drum_decommission create
   */
  export type log_drum_decommissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * The data needed to create a log_drum_decommission.
     */
    data: XOR<log_drum_decommissionCreateInput, log_drum_decommissionUncheckedCreateInput>
  }

  /**
   * log_drum_decommission createMany
   */
  export type log_drum_decommissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many log_drum_decommissions.
     */
    data: log_drum_decommissionCreateManyInput | log_drum_decommissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * log_drum_decommission createManyAndReturn
   */
  export type log_drum_decommissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * The data used to create many log_drum_decommissions.
     */
    data: log_drum_decommissionCreateManyInput | log_drum_decommissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * log_drum_decommission update
   */
  export type log_drum_decommissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * The data needed to update a log_drum_decommission.
     */
    data: XOR<log_drum_decommissionUpdateInput, log_drum_decommissionUncheckedUpdateInput>
    /**
     * Choose, which log_drum_decommission to update.
     */
    where: log_drum_decommissionWhereUniqueInput
  }

  /**
   * log_drum_decommission updateMany
   */
  export type log_drum_decommissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update log_drum_decommissions.
     */
    data: XOR<log_drum_decommissionUpdateManyMutationInput, log_drum_decommissionUncheckedUpdateManyInput>
    /**
     * Filter which log_drum_decommissions to update
     */
    where?: log_drum_decommissionWhereInput
    /**
     * Limit how many log_drum_decommissions to update.
     */
    limit?: number
  }

  /**
   * log_drum_decommission updateManyAndReturn
   */
  export type log_drum_decommissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * The data used to update log_drum_decommissions.
     */
    data: XOR<log_drum_decommissionUpdateManyMutationInput, log_drum_decommissionUncheckedUpdateManyInput>
    /**
     * Filter which log_drum_decommissions to update
     */
    where?: log_drum_decommissionWhereInput
    /**
     * Limit how many log_drum_decommissions to update.
     */
    limit?: number
  }

  /**
   * log_drum_decommission upsert
   */
  export type log_drum_decommissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * The filter to search for the log_drum_decommission to update in case it exists.
     */
    where: log_drum_decommissionWhereUniqueInput
    /**
     * In case the log_drum_decommission found by the `where` argument doesn't exist, create a new log_drum_decommission with this data.
     */
    create: XOR<log_drum_decommissionCreateInput, log_drum_decommissionUncheckedCreateInput>
    /**
     * In case the log_drum_decommission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<log_drum_decommissionUpdateInput, log_drum_decommissionUncheckedUpdateInput>
  }

  /**
   * log_drum_decommission delete
   */
  export type log_drum_decommissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
    /**
     * Filter which log_drum_decommission to delete.
     */
    where: log_drum_decommissionWhereUniqueInput
  }

  /**
   * log_drum_decommission deleteMany
   */
  export type log_drum_decommissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_drum_decommissions to delete
     */
    where?: log_drum_decommissionWhereInput
    /**
     * Limit how many log_drum_decommissions to delete.
     */
    limit?: number
  }

  /**
   * log_drum_decommission without action
   */
  export type log_drum_decommissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_decommission
     */
    select?: log_drum_decommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_decommission
     */
    omit?: log_drum_decommissionOmit<ExtArgs> | null
  }


  /**
   * Model log_drum_scan
   */

  export type AggregateLog_drum_scan = {
    _count: Log_drum_scanCountAggregateOutputType | null
    _avg: Log_drum_scanAvgAggregateOutputType | null
    _sum: Log_drum_scanSumAggregateOutputType | null
    _min: Log_drum_scanMinAggregateOutputType | null
    _max: Log_drum_scanMaxAggregateOutputType | null
  }

  export type Log_drum_scanAvgAggregateOutputType = {
    scan_id: number | null
    drum_id: number | null
    user_id: number | null
  }

  export type Log_drum_scanSumAggregateOutputType = {
    scan_id: number | null
    drum_id: number | null
    user_id: number | null
  }

  export type Log_drum_scanMinAggregateOutputType = {
    scan_id: number | null
    scanned_at: Date | null
    drum_id: number | null
    user_id: number | null
    scan_type: string | null
    scan_status: string | null
    error_message: string | null
  }

  export type Log_drum_scanMaxAggregateOutputType = {
    scan_id: number | null
    scanned_at: Date | null
    drum_id: number | null
    user_id: number | null
    scan_type: string | null
    scan_status: string | null
    error_message: string | null
  }

  export type Log_drum_scanCountAggregateOutputType = {
    scan_id: number
    scanned_at: number
    drum_id: number
    user_id: number
    scan_type: number
    scan_status: number
    error_message: number
    _all: number
  }


  export type Log_drum_scanAvgAggregateInputType = {
    scan_id?: true
    drum_id?: true
    user_id?: true
  }

  export type Log_drum_scanSumAggregateInputType = {
    scan_id?: true
    drum_id?: true
    user_id?: true
  }

  export type Log_drum_scanMinAggregateInputType = {
    scan_id?: true
    scanned_at?: true
    drum_id?: true
    user_id?: true
    scan_type?: true
    scan_status?: true
    error_message?: true
  }

  export type Log_drum_scanMaxAggregateInputType = {
    scan_id?: true
    scanned_at?: true
    drum_id?: true
    user_id?: true
    scan_type?: true
    scan_status?: true
    error_message?: true
  }

  export type Log_drum_scanCountAggregateInputType = {
    scan_id?: true
    scanned_at?: true
    drum_id?: true
    user_id?: true
    scan_type?: true
    scan_status?: true
    error_message?: true
    _all?: true
  }

  export type Log_drum_scanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_drum_scan to aggregate.
     */
    where?: log_drum_scanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_drum_scans to fetch.
     */
    orderBy?: log_drum_scanOrderByWithRelationInput | log_drum_scanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: log_drum_scanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_drum_scans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_drum_scans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned log_drum_scans
    **/
    _count?: true | Log_drum_scanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Log_drum_scanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Log_drum_scanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Log_drum_scanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Log_drum_scanMaxAggregateInputType
  }

  export type GetLog_drum_scanAggregateType<T extends Log_drum_scanAggregateArgs> = {
        [P in keyof T & keyof AggregateLog_drum_scan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLog_drum_scan[P]>
      : GetScalarType<T[P], AggregateLog_drum_scan[P]>
  }




  export type log_drum_scanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_drum_scanWhereInput
    orderBy?: log_drum_scanOrderByWithAggregationInput | log_drum_scanOrderByWithAggregationInput[]
    by: Log_drum_scanScalarFieldEnum[] | Log_drum_scanScalarFieldEnum
    having?: log_drum_scanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Log_drum_scanCountAggregateInputType | true
    _avg?: Log_drum_scanAvgAggregateInputType
    _sum?: Log_drum_scanSumAggregateInputType
    _min?: Log_drum_scanMinAggregateInputType
    _max?: Log_drum_scanMaxAggregateInputType
  }

  export type Log_drum_scanGroupByOutputType = {
    scan_id: number
    scanned_at: Date | null
    drum_id: number | null
    user_id: number
    scan_type: string
    scan_status: string
    error_message: string | null
    _count: Log_drum_scanCountAggregateOutputType | null
    _avg: Log_drum_scanAvgAggregateOutputType | null
    _sum: Log_drum_scanSumAggregateOutputType | null
    _min: Log_drum_scanMinAggregateOutputType | null
    _max: Log_drum_scanMaxAggregateOutputType | null
  }

  type GetLog_drum_scanGroupByPayload<T extends log_drum_scanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Log_drum_scanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Log_drum_scanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Log_drum_scanGroupByOutputType[P]>
            : GetScalarType<T[P], Log_drum_scanGroupByOutputType[P]>
        }
      >
    >


  export type log_drum_scanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    scan_id?: boolean
    scanned_at?: boolean
    drum_id?: boolean
    user_id?: boolean
    scan_type?: boolean
    scan_status?: boolean
    error_message?: boolean
    stock_drum?: boolean | log_drum_scan$stock_drumArgs<ExtArgs>
    log_load_still?: boolean | log_drum_scan$log_load_stillArgs<ExtArgs>
    log_transport_drum?: boolean | log_drum_scan$log_transport_drumArgs<ExtArgs>
  }, ExtArgs["result"]["log_drum_scan"]>

  export type log_drum_scanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    scan_id?: boolean
    scanned_at?: boolean
    drum_id?: boolean
    user_id?: boolean
    scan_type?: boolean
    scan_status?: boolean
    error_message?: boolean
    stock_drum?: boolean | log_drum_scan$stock_drumArgs<ExtArgs>
  }, ExtArgs["result"]["log_drum_scan"]>

  export type log_drum_scanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    scan_id?: boolean
    scanned_at?: boolean
    drum_id?: boolean
    user_id?: boolean
    scan_type?: boolean
    scan_status?: boolean
    error_message?: boolean
    stock_drum?: boolean | log_drum_scan$stock_drumArgs<ExtArgs>
  }, ExtArgs["result"]["log_drum_scan"]>

  export type log_drum_scanSelectScalar = {
    scan_id?: boolean
    scanned_at?: boolean
    drum_id?: boolean
    user_id?: boolean
    scan_type?: boolean
    scan_status?: boolean
    error_message?: boolean
  }

  export type log_drum_scanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"scan_id" | "scanned_at" | "drum_id" | "user_id" | "scan_type" | "scan_status" | "error_message", ExtArgs["result"]["log_drum_scan"]>
  export type log_drum_scanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock_drum?: boolean | log_drum_scan$stock_drumArgs<ExtArgs>
    log_load_still?: boolean | log_drum_scan$log_load_stillArgs<ExtArgs>
    log_transport_drum?: boolean | log_drum_scan$log_transport_drumArgs<ExtArgs>
  }
  export type log_drum_scanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock_drum?: boolean | log_drum_scan$stock_drumArgs<ExtArgs>
  }
  export type log_drum_scanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stock_drum?: boolean | log_drum_scan$stock_drumArgs<ExtArgs>
  }

  export type $log_drum_scanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "log_drum_scan"
    objects: {
      stock_drum: Prisma.$stock_drumPayload<ExtArgs> | null
      log_load_still: Prisma.$log_load_stillPayload<ExtArgs> | null
      log_transport_drum: Prisma.$log_transport_drumPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      scan_id: number
      scanned_at: Date | null
      drum_id: number | null
      user_id: number
      scan_type: string
      scan_status: string
      error_message: string | null
    }, ExtArgs["result"]["log_drum_scan"]>
    composites: {}
  }

  type log_drum_scanGetPayload<S extends boolean | null | undefined | log_drum_scanDefaultArgs> = $Result.GetResult<Prisma.$log_drum_scanPayload, S>

  type log_drum_scanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<log_drum_scanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Log_drum_scanCountAggregateInputType | true
    }

  export interface log_drum_scanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['log_drum_scan'], meta: { name: 'log_drum_scan' } }
    /**
     * Find zero or one Log_drum_scan that matches the filter.
     * @param {log_drum_scanFindUniqueArgs} args - Arguments to find a Log_drum_scan
     * @example
     * // Get one Log_drum_scan
     * const log_drum_scan = await prisma.log_drum_scan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends log_drum_scanFindUniqueArgs>(args: SelectSubset<T, log_drum_scanFindUniqueArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Log_drum_scan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {log_drum_scanFindUniqueOrThrowArgs} args - Arguments to find a Log_drum_scan
     * @example
     * // Get one Log_drum_scan
     * const log_drum_scan = await prisma.log_drum_scan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends log_drum_scanFindUniqueOrThrowArgs>(args: SelectSubset<T, log_drum_scanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_drum_scan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_scanFindFirstArgs} args - Arguments to find a Log_drum_scan
     * @example
     * // Get one Log_drum_scan
     * const log_drum_scan = await prisma.log_drum_scan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends log_drum_scanFindFirstArgs>(args?: SelectSubset<T, log_drum_scanFindFirstArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_drum_scan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_scanFindFirstOrThrowArgs} args - Arguments to find a Log_drum_scan
     * @example
     * // Get one Log_drum_scan
     * const log_drum_scan = await prisma.log_drum_scan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends log_drum_scanFindFirstOrThrowArgs>(args?: SelectSubset<T, log_drum_scanFindFirstOrThrowArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Log_drum_scans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_scanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Log_drum_scans
     * const log_drum_scans = await prisma.log_drum_scan.findMany()
     * 
     * // Get first 10 Log_drum_scans
     * const log_drum_scans = await prisma.log_drum_scan.findMany({ take: 10 })
     * 
     * // Only select the `scan_id`
     * const log_drum_scanWithScan_idOnly = await prisma.log_drum_scan.findMany({ select: { scan_id: true } })
     * 
     */
    findMany<T extends log_drum_scanFindManyArgs>(args?: SelectSubset<T, log_drum_scanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Log_drum_scan.
     * @param {log_drum_scanCreateArgs} args - Arguments to create a Log_drum_scan.
     * @example
     * // Create one Log_drum_scan
     * const Log_drum_scan = await prisma.log_drum_scan.create({
     *   data: {
     *     // ... data to create a Log_drum_scan
     *   }
     * })
     * 
     */
    create<T extends log_drum_scanCreateArgs>(args: SelectSubset<T, log_drum_scanCreateArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Log_drum_scans.
     * @param {log_drum_scanCreateManyArgs} args - Arguments to create many Log_drum_scans.
     * @example
     * // Create many Log_drum_scans
     * const log_drum_scan = await prisma.log_drum_scan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends log_drum_scanCreateManyArgs>(args?: SelectSubset<T, log_drum_scanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Log_drum_scans and returns the data saved in the database.
     * @param {log_drum_scanCreateManyAndReturnArgs} args - Arguments to create many Log_drum_scans.
     * @example
     * // Create many Log_drum_scans
     * const log_drum_scan = await prisma.log_drum_scan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Log_drum_scans and only return the `scan_id`
     * const log_drum_scanWithScan_idOnly = await prisma.log_drum_scan.createManyAndReturn({
     *   select: { scan_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends log_drum_scanCreateManyAndReturnArgs>(args?: SelectSubset<T, log_drum_scanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Log_drum_scan.
     * @param {log_drum_scanDeleteArgs} args - Arguments to delete one Log_drum_scan.
     * @example
     * // Delete one Log_drum_scan
     * const Log_drum_scan = await prisma.log_drum_scan.delete({
     *   where: {
     *     // ... filter to delete one Log_drum_scan
     *   }
     * })
     * 
     */
    delete<T extends log_drum_scanDeleteArgs>(args: SelectSubset<T, log_drum_scanDeleteArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Log_drum_scan.
     * @param {log_drum_scanUpdateArgs} args - Arguments to update one Log_drum_scan.
     * @example
     * // Update one Log_drum_scan
     * const log_drum_scan = await prisma.log_drum_scan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends log_drum_scanUpdateArgs>(args: SelectSubset<T, log_drum_scanUpdateArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Log_drum_scans.
     * @param {log_drum_scanDeleteManyArgs} args - Arguments to filter Log_drum_scans to delete.
     * @example
     * // Delete a few Log_drum_scans
     * const { count } = await prisma.log_drum_scan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends log_drum_scanDeleteManyArgs>(args?: SelectSubset<T, log_drum_scanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_drum_scans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_scanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Log_drum_scans
     * const log_drum_scan = await prisma.log_drum_scan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends log_drum_scanUpdateManyArgs>(args: SelectSubset<T, log_drum_scanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_drum_scans and returns the data updated in the database.
     * @param {log_drum_scanUpdateManyAndReturnArgs} args - Arguments to update many Log_drum_scans.
     * @example
     * // Update many Log_drum_scans
     * const log_drum_scan = await prisma.log_drum_scan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Log_drum_scans and only return the `scan_id`
     * const log_drum_scanWithScan_idOnly = await prisma.log_drum_scan.updateManyAndReturn({
     *   select: { scan_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends log_drum_scanUpdateManyAndReturnArgs>(args: SelectSubset<T, log_drum_scanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Log_drum_scan.
     * @param {log_drum_scanUpsertArgs} args - Arguments to update or create a Log_drum_scan.
     * @example
     * // Update or create a Log_drum_scan
     * const log_drum_scan = await prisma.log_drum_scan.upsert({
     *   create: {
     *     // ... data to create a Log_drum_scan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Log_drum_scan we want to update
     *   }
     * })
     */
    upsert<T extends log_drum_scanUpsertArgs>(args: SelectSubset<T, log_drum_scanUpsertArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Log_drum_scans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_scanCountArgs} args - Arguments to filter Log_drum_scans to count.
     * @example
     * // Count the number of Log_drum_scans
     * const count = await prisma.log_drum_scan.count({
     *   where: {
     *     // ... the filter for the Log_drum_scans we want to count
     *   }
     * })
    **/
    count<T extends log_drum_scanCountArgs>(
      args?: Subset<T, log_drum_scanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Log_drum_scanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Log_drum_scan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Log_drum_scanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Log_drum_scanAggregateArgs>(args: Subset<T, Log_drum_scanAggregateArgs>): Prisma.PrismaPromise<GetLog_drum_scanAggregateType<T>>

    /**
     * Group by Log_drum_scan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_drum_scanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends log_drum_scanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: log_drum_scanGroupByArgs['orderBy'] }
        : { orderBy?: log_drum_scanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, log_drum_scanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLog_drum_scanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the log_drum_scan model
   */
  readonly fields: log_drum_scanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for log_drum_scan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__log_drum_scanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    stock_drum<T extends log_drum_scan$stock_drumArgs<ExtArgs> = {}>(args?: Subset<T, log_drum_scan$stock_drumArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    log_load_still<T extends log_drum_scan$log_load_stillArgs<ExtArgs> = {}>(args?: Subset<T, log_drum_scan$log_load_stillArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    log_transport_drum<T extends log_drum_scan$log_transport_drumArgs<ExtArgs> = {}>(args?: Subset<T, log_drum_scan$log_transport_drumArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the log_drum_scan model
   */
  interface log_drum_scanFieldRefs {
    readonly scan_id: FieldRef<"log_drum_scan", 'Int'>
    readonly scanned_at: FieldRef<"log_drum_scan", 'DateTime'>
    readonly drum_id: FieldRef<"log_drum_scan", 'Int'>
    readonly user_id: FieldRef<"log_drum_scan", 'Int'>
    readonly scan_type: FieldRef<"log_drum_scan", 'String'>
    readonly scan_status: FieldRef<"log_drum_scan", 'String'>
    readonly error_message: FieldRef<"log_drum_scan", 'String'>
  }
    

  // Custom InputTypes
  /**
   * log_drum_scan findUnique
   */
  export type log_drum_scanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * Filter, which log_drum_scan to fetch.
     */
    where: log_drum_scanWhereUniqueInput
  }

  /**
   * log_drum_scan findUniqueOrThrow
   */
  export type log_drum_scanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * Filter, which log_drum_scan to fetch.
     */
    where: log_drum_scanWhereUniqueInput
  }

  /**
   * log_drum_scan findFirst
   */
  export type log_drum_scanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * Filter, which log_drum_scan to fetch.
     */
    where?: log_drum_scanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_drum_scans to fetch.
     */
    orderBy?: log_drum_scanOrderByWithRelationInput | log_drum_scanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_drum_scans.
     */
    cursor?: log_drum_scanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_drum_scans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_drum_scans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_drum_scans.
     */
    distinct?: Log_drum_scanScalarFieldEnum | Log_drum_scanScalarFieldEnum[]
  }

  /**
   * log_drum_scan findFirstOrThrow
   */
  export type log_drum_scanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * Filter, which log_drum_scan to fetch.
     */
    where?: log_drum_scanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_drum_scans to fetch.
     */
    orderBy?: log_drum_scanOrderByWithRelationInput | log_drum_scanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_drum_scans.
     */
    cursor?: log_drum_scanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_drum_scans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_drum_scans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_drum_scans.
     */
    distinct?: Log_drum_scanScalarFieldEnum | Log_drum_scanScalarFieldEnum[]
  }

  /**
   * log_drum_scan findMany
   */
  export type log_drum_scanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * Filter, which log_drum_scans to fetch.
     */
    where?: log_drum_scanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_drum_scans to fetch.
     */
    orderBy?: log_drum_scanOrderByWithRelationInput | log_drum_scanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing log_drum_scans.
     */
    cursor?: log_drum_scanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_drum_scans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_drum_scans.
     */
    skip?: number
    distinct?: Log_drum_scanScalarFieldEnum | Log_drum_scanScalarFieldEnum[]
  }

  /**
   * log_drum_scan create
   */
  export type log_drum_scanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * The data needed to create a log_drum_scan.
     */
    data: XOR<log_drum_scanCreateInput, log_drum_scanUncheckedCreateInput>
  }

  /**
   * log_drum_scan createMany
   */
  export type log_drum_scanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many log_drum_scans.
     */
    data: log_drum_scanCreateManyInput | log_drum_scanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * log_drum_scan createManyAndReturn
   */
  export type log_drum_scanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * The data used to create many log_drum_scans.
     */
    data: log_drum_scanCreateManyInput | log_drum_scanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_drum_scan update
   */
  export type log_drum_scanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * The data needed to update a log_drum_scan.
     */
    data: XOR<log_drum_scanUpdateInput, log_drum_scanUncheckedUpdateInput>
    /**
     * Choose, which log_drum_scan to update.
     */
    where: log_drum_scanWhereUniqueInput
  }

  /**
   * log_drum_scan updateMany
   */
  export type log_drum_scanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update log_drum_scans.
     */
    data: XOR<log_drum_scanUpdateManyMutationInput, log_drum_scanUncheckedUpdateManyInput>
    /**
     * Filter which log_drum_scans to update
     */
    where?: log_drum_scanWhereInput
    /**
     * Limit how many log_drum_scans to update.
     */
    limit?: number
  }

  /**
   * log_drum_scan updateManyAndReturn
   */
  export type log_drum_scanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * The data used to update log_drum_scans.
     */
    data: XOR<log_drum_scanUpdateManyMutationInput, log_drum_scanUncheckedUpdateManyInput>
    /**
     * Filter which log_drum_scans to update
     */
    where?: log_drum_scanWhereInput
    /**
     * Limit how many log_drum_scans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_drum_scan upsert
   */
  export type log_drum_scanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * The filter to search for the log_drum_scan to update in case it exists.
     */
    where: log_drum_scanWhereUniqueInput
    /**
     * In case the log_drum_scan found by the `where` argument doesn't exist, create a new log_drum_scan with this data.
     */
    create: XOR<log_drum_scanCreateInput, log_drum_scanUncheckedCreateInput>
    /**
     * In case the log_drum_scan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<log_drum_scanUpdateInput, log_drum_scanUncheckedUpdateInput>
  }

  /**
   * log_drum_scan delete
   */
  export type log_drum_scanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    /**
     * Filter which log_drum_scan to delete.
     */
    where: log_drum_scanWhereUniqueInput
  }

  /**
   * log_drum_scan deleteMany
   */
  export type log_drum_scanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_drum_scans to delete
     */
    where?: log_drum_scanWhereInput
    /**
     * Limit how many log_drum_scans to delete.
     */
    limit?: number
  }

  /**
   * log_drum_scan.stock_drum
   */
  export type log_drum_scan$stock_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    where?: stock_drumWhereInput
  }

  /**
   * log_drum_scan.log_load_still
   */
  export type log_drum_scan$log_load_stillArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    where?: log_load_stillWhereInput
  }

  /**
   * log_drum_scan.log_transport_drum
   */
  export type log_drum_scan$log_transport_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    where?: log_transport_drumWhereInput
  }

  /**
   * log_drum_scan without action
   */
  export type log_drum_scanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
  }


  /**
   * Model log_load_still
   */

  export type AggregateLog_load_still = {
    _count: Log_load_stillCountAggregateOutputType | null
    _avg: Log_load_stillAvgAggregateOutputType | null
    _sum: Log_load_stillSumAggregateOutputType | null
    _min: Log_load_stillMinAggregateOutputType | null
    _max: Log_load_stillMaxAggregateOutputType | null
  }

  export type Log_load_stillAvgAggregateOutputType = {
    loading_id: number | null
    scan_id: number | null
    drum_id: number | null
    still_id: number | null
    distillation_id: number | null
  }

  export type Log_load_stillSumAggregateOutputType = {
    loading_id: number | null
    scan_id: number | null
    drum_id: number | null
    still_id: number | null
    distillation_id: number | null
  }

  export type Log_load_stillMinAggregateOutputType = {
    loading_id: number | null
    scan_id: number | null
    drum_id: number | null
    still_id: number | null
    distillation_id: number | null
    status: string | null
  }

  export type Log_load_stillMaxAggregateOutputType = {
    loading_id: number | null
    scan_id: number | null
    drum_id: number | null
    still_id: number | null
    distillation_id: number | null
    status: string | null
  }

  export type Log_load_stillCountAggregateOutputType = {
    loading_id: number
    scan_id: number
    drum_id: number
    still_id: number
    distillation_id: number
    status: number
    _all: number
  }


  export type Log_load_stillAvgAggregateInputType = {
    loading_id?: true
    scan_id?: true
    drum_id?: true
    still_id?: true
    distillation_id?: true
  }

  export type Log_load_stillSumAggregateInputType = {
    loading_id?: true
    scan_id?: true
    drum_id?: true
    still_id?: true
    distillation_id?: true
  }

  export type Log_load_stillMinAggregateInputType = {
    loading_id?: true
    scan_id?: true
    drum_id?: true
    still_id?: true
    distillation_id?: true
    status?: true
  }

  export type Log_load_stillMaxAggregateInputType = {
    loading_id?: true
    scan_id?: true
    drum_id?: true
    still_id?: true
    distillation_id?: true
    status?: true
  }

  export type Log_load_stillCountAggregateInputType = {
    loading_id?: true
    scan_id?: true
    drum_id?: true
    still_id?: true
    distillation_id?: true
    status?: true
    _all?: true
  }

  export type Log_load_stillAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_load_still to aggregate.
     */
    where?: log_load_stillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_load_stills to fetch.
     */
    orderBy?: log_load_stillOrderByWithRelationInput | log_load_stillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: log_load_stillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_load_stills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_load_stills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned log_load_stills
    **/
    _count?: true | Log_load_stillCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Log_load_stillAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Log_load_stillSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Log_load_stillMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Log_load_stillMaxAggregateInputType
  }

  export type GetLog_load_stillAggregateType<T extends Log_load_stillAggregateArgs> = {
        [P in keyof T & keyof AggregateLog_load_still]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLog_load_still[P]>
      : GetScalarType<T[P], AggregateLog_load_still[P]>
  }




  export type log_load_stillGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_load_stillWhereInput
    orderBy?: log_load_stillOrderByWithAggregationInput | log_load_stillOrderByWithAggregationInput[]
    by: Log_load_stillScalarFieldEnum[] | Log_load_stillScalarFieldEnum
    having?: log_load_stillScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Log_load_stillCountAggregateInputType | true
    _avg?: Log_load_stillAvgAggregateInputType
    _sum?: Log_load_stillSumAggregateInputType
    _min?: Log_load_stillMinAggregateInputType
    _max?: Log_load_stillMaxAggregateInputType
  }

  export type Log_load_stillGroupByOutputType = {
    loading_id: number
    scan_id: number | null
    drum_id: number | null
    still_id: number | null
    distillation_id: number
    status: string | null
    _count: Log_load_stillCountAggregateOutputType | null
    _avg: Log_load_stillAvgAggregateOutputType | null
    _sum: Log_load_stillSumAggregateOutputType | null
    _min: Log_load_stillMinAggregateOutputType | null
    _max: Log_load_stillMaxAggregateOutputType | null
  }

  type GetLog_load_stillGroupByPayload<T extends log_load_stillGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Log_load_stillGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Log_load_stillGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Log_load_stillGroupByOutputType[P]>
            : GetScalarType<T[P], Log_load_stillGroupByOutputType[P]>
        }
      >
    >


  export type log_load_stillSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    loading_id?: boolean
    scan_id?: boolean
    drum_id?: boolean
    still_id?: boolean
    distillation_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | log_load_still$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_load_still$log_drum_scanArgs<ExtArgs>
    ref_stills?: boolean | log_load_still$ref_stillsArgs<ExtArgs>
  }, ExtArgs["result"]["log_load_still"]>

  export type log_load_stillSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    loading_id?: boolean
    scan_id?: boolean
    drum_id?: boolean
    still_id?: boolean
    distillation_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | log_load_still$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_load_still$log_drum_scanArgs<ExtArgs>
    ref_stills?: boolean | log_load_still$ref_stillsArgs<ExtArgs>
  }, ExtArgs["result"]["log_load_still"]>

  export type log_load_stillSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    loading_id?: boolean
    scan_id?: boolean
    drum_id?: boolean
    still_id?: boolean
    distillation_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | log_load_still$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_load_still$log_drum_scanArgs<ExtArgs>
    ref_stills?: boolean | log_load_still$ref_stillsArgs<ExtArgs>
  }, ExtArgs["result"]["log_load_still"]>

  export type log_load_stillSelectScalar = {
    loading_id?: boolean
    scan_id?: boolean
    drum_id?: boolean
    still_id?: boolean
    distillation_id?: boolean
    status?: boolean
  }

  export type log_load_stillOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"loading_id" | "scan_id" | "drum_id" | "still_id" | "distillation_id" | "status", ExtArgs["result"]["log_load_still"]>
  export type log_load_stillInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | log_load_still$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_load_still$log_drum_scanArgs<ExtArgs>
    ref_stills?: boolean | log_load_still$ref_stillsArgs<ExtArgs>
  }
  export type log_load_stillIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | log_load_still$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_load_still$log_drum_scanArgs<ExtArgs>
    ref_stills?: boolean | log_load_still$ref_stillsArgs<ExtArgs>
  }
  export type log_load_stillIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | log_load_still$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_load_still$log_drum_scanArgs<ExtArgs>
    ref_stills?: boolean | log_load_still$ref_stillsArgs<ExtArgs>
  }

  export type $log_load_stillPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "log_load_still"
    objects: {
      distillation_schedule: Prisma.$distillation_schedulePayload<ExtArgs>
      stock_drum: Prisma.$stock_drumPayload<ExtArgs> | null
      log_drum_scan: Prisma.$log_drum_scanPayload<ExtArgs> | null
      ref_stills: Prisma.$ref_stillsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      loading_id: number
      scan_id: number | null
      drum_id: number | null
      still_id: number | null
      distillation_id: number
      status: string | null
    }, ExtArgs["result"]["log_load_still"]>
    composites: {}
  }

  type log_load_stillGetPayload<S extends boolean | null | undefined | log_load_stillDefaultArgs> = $Result.GetResult<Prisma.$log_load_stillPayload, S>

  type log_load_stillCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<log_load_stillFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Log_load_stillCountAggregateInputType | true
    }

  export interface log_load_stillDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['log_load_still'], meta: { name: 'log_load_still' } }
    /**
     * Find zero or one Log_load_still that matches the filter.
     * @param {log_load_stillFindUniqueArgs} args - Arguments to find a Log_load_still
     * @example
     * // Get one Log_load_still
     * const log_load_still = await prisma.log_load_still.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends log_load_stillFindUniqueArgs>(args: SelectSubset<T, log_load_stillFindUniqueArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Log_load_still that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {log_load_stillFindUniqueOrThrowArgs} args - Arguments to find a Log_load_still
     * @example
     * // Get one Log_load_still
     * const log_load_still = await prisma.log_load_still.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends log_load_stillFindUniqueOrThrowArgs>(args: SelectSubset<T, log_load_stillFindUniqueOrThrowArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_load_still that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_load_stillFindFirstArgs} args - Arguments to find a Log_load_still
     * @example
     * // Get one Log_load_still
     * const log_load_still = await prisma.log_load_still.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends log_load_stillFindFirstArgs>(args?: SelectSubset<T, log_load_stillFindFirstArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_load_still that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_load_stillFindFirstOrThrowArgs} args - Arguments to find a Log_load_still
     * @example
     * // Get one Log_load_still
     * const log_load_still = await prisma.log_load_still.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends log_load_stillFindFirstOrThrowArgs>(args?: SelectSubset<T, log_load_stillFindFirstOrThrowArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Log_load_stills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_load_stillFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Log_load_stills
     * const log_load_stills = await prisma.log_load_still.findMany()
     * 
     * // Get first 10 Log_load_stills
     * const log_load_stills = await prisma.log_load_still.findMany({ take: 10 })
     * 
     * // Only select the `loading_id`
     * const log_load_stillWithLoading_idOnly = await prisma.log_load_still.findMany({ select: { loading_id: true } })
     * 
     */
    findMany<T extends log_load_stillFindManyArgs>(args?: SelectSubset<T, log_load_stillFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Log_load_still.
     * @param {log_load_stillCreateArgs} args - Arguments to create a Log_load_still.
     * @example
     * // Create one Log_load_still
     * const Log_load_still = await prisma.log_load_still.create({
     *   data: {
     *     // ... data to create a Log_load_still
     *   }
     * })
     * 
     */
    create<T extends log_load_stillCreateArgs>(args: SelectSubset<T, log_load_stillCreateArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Log_load_stills.
     * @param {log_load_stillCreateManyArgs} args - Arguments to create many Log_load_stills.
     * @example
     * // Create many Log_load_stills
     * const log_load_still = await prisma.log_load_still.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends log_load_stillCreateManyArgs>(args?: SelectSubset<T, log_load_stillCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Log_load_stills and returns the data saved in the database.
     * @param {log_load_stillCreateManyAndReturnArgs} args - Arguments to create many Log_load_stills.
     * @example
     * // Create many Log_load_stills
     * const log_load_still = await prisma.log_load_still.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Log_load_stills and only return the `loading_id`
     * const log_load_stillWithLoading_idOnly = await prisma.log_load_still.createManyAndReturn({
     *   select: { loading_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends log_load_stillCreateManyAndReturnArgs>(args?: SelectSubset<T, log_load_stillCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Log_load_still.
     * @param {log_load_stillDeleteArgs} args - Arguments to delete one Log_load_still.
     * @example
     * // Delete one Log_load_still
     * const Log_load_still = await prisma.log_load_still.delete({
     *   where: {
     *     // ... filter to delete one Log_load_still
     *   }
     * })
     * 
     */
    delete<T extends log_load_stillDeleteArgs>(args: SelectSubset<T, log_load_stillDeleteArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Log_load_still.
     * @param {log_load_stillUpdateArgs} args - Arguments to update one Log_load_still.
     * @example
     * // Update one Log_load_still
     * const log_load_still = await prisma.log_load_still.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends log_load_stillUpdateArgs>(args: SelectSubset<T, log_load_stillUpdateArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Log_load_stills.
     * @param {log_load_stillDeleteManyArgs} args - Arguments to filter Log_load_stills to delete.
     * @example
     * // Delete a few Log_load_stills
     * const { count } = await prisma.log_load_still.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends log_load_stillDeleteManyArgs>(args?: SelectSubset<T, log_load_stillDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_load_stills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_load_stillUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Log_load_stills
     * const log_load_still = await prisma.log_load_still.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends log_load_stillUpdateManyArgs>(args: SelectSubset<T, log_load_stillUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_load_stills and returns the data updated in the database.
     * @param {log_load_stillUpdateManyAndReturnArgs} args - Arguments to update many Log_load_stills.
     * @example
     * // Update many Log_load_stills
     * const log_load_still = await prisma.log_load_still.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Log_load_stills and only return the `loading_id`
     * const log_load_stillWithLoading_idOnly = await prisma.log_load_still.updateManyAndReturn({
     *   select: { loading_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends log_load_stillUpdateManyAndReturnArgs>(args: SelectSubset<T, log_load_stillUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Log_load_still.
     * @param {log_load_stillUpsertArgs} args - Arguments to update or create a Log_load_still.
     * @example
     * // Update or create a Log_load_still
     * const log_load_still = await prisma.log_load_still.upsert({
     *   create: {
     *     // ... data to create a Log_load_still
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Log_load_still we want to update
     *   }
     * })
     */
    upsert<T extends log_load_stillUpsertArgs>(args: SelectSubset<T, log_load_stillUpsertArgs<ExtArgs>>): Prisma__log_load_stillClient<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Log_load_stills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_load_stillCountArgs} args - Arguments to filter Log_load_stills to count.
     * @example
     * // Count the number of Log_load_stills
     * const count = await prisma.log_load_still.count({
     *   where: {
     *     // ... the filter for the Log_load_stills we want to count
     *   }
     * })
    **/
    count<T extends log_load_stillCountArgs>(
      args?: Subset<T, log_load_stillCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Log_load_stillCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Log_load_still.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Log_load_stillAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Log_load_stillAggregateArgs>(args: Subset<T, Log_load_stillAggregateArgs>): Prisma.PrismaPromise<GetLog_load_stillAggregateType<T>>

    /**
     * Group by Log_load_still.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_load_stillGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends log_load_stillGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: log_load_stillGroupByArgs['orderBy'] }
        : { orderBy?: log_load_stillGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, log_load_stillGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLog_load_stillGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the log_load_still model
   */
  readonly fields: log_load_stillFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for log_load_still.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__log_load_stillClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_schedule<T extends distillation_scheduleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, distillation_scheduleDefaultArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    stock_drum<T extends log_load_still$stock_drumArgs<ExtArgs> = {}>(args?: Subset<T, log_load_still$stock_drumArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    log_drum_scan<T extends log_load_still$log_drum_scanArgs<ExtArgs> = {}>(args?: Subset<T, log_load_still$log_drum_scanArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ref_stills<T extends log_load_still$ref_stillsArgs<ExtArgs> = {}>(args?: Subset<T, log_load_still$ref_stillsArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the log_load_still model
   */
  interface log_load_stillFieldRefs {
    readonly loading_id: FieldRef<"log_load_still", 'Int'>
    readonly scan_id: FieldRef<"log_load_still", 'Int'>
    readonly drum_id: FieldRef<"log_load_still", 'Int'>
    readonly still_id: FieldRef<"log_load_still", 'Int'>
    readonly distillation_id: FieldRef<"log_load_still", 'Int'>
    readonly status: FieldRef<"log_load_still", 'String'>
  }
    

  // Custom InputTypes
  /**
   * log_load_still findUnique
   */
  export type log_load_stillFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * Filter, which log_load_still to fetch.
     */
    where: log_load_stillWhereUniqueInput
  }

  /**
   * log_load_still findUniqueOrThrow
   */
  export type log_load_stillFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * Filter, which log_load_still to fetch.
     */
    where: log_load_stillWhereUniqueInput
  }

  /**
   * log_load_still findFirst
   */
  export type log_load_stillFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * Filter, which log_load_still to fetch.
     */
    where?: log_load_stillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_load_stills to fetch.
     */
    orderBy?: log_load_stillOrderByWithRelationInput | log_load_stillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_load_stills.
     */
    cursor?: log_load_stillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_load_stills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_load_stills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_load_stills.
     */
    distinct?: Log_load_stillScalarFieldEnum | Log_load_stillScalarFieldEnum[]
  }

  /**
   * log_load_still findFirstOrThrow
   */
  export type log_load_stillFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * Filter, which log_load_still to fetch.
     */
    where?: log_load_stillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_load_stills to fetch.
     */
    orderBy?: log_load_stillOrderByWithRelationInput | log_load_stillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_load_stills.
     */
    cursor?: log_load_stillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_load_stills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_load_stills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_load_stills.
     */
    distinct?: Log_load_stillScalarFieldEnum | Log_load_stillScalarFieldEnum[]
  }

  /**
   * log_load_still findMany
   */
  export type log_load_stillFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * Filter, which log_load_stills to fetch.
     */
    where?: log_load_stillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_load_stills to fetch.
     */
    orderBy?: log_load_stillOrderByWithRelationInput | log_load_stillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing log_load_stills.
     */
    cursor?: log_load_stillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_load_stills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_load_stills.
     */
    skip?: number
    distinct?: Log_load_stillScalarFieldEnum | Log_load_stillScalarFieldEnum[]
  }

  /**
   * log_load_still create
   */
  export type log_load_stillCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * The data needed to create a log_load_still.
     */
    data: XOR<log_load_stillCreateInput, log_load_stillUncheckedCreateInput>
  }

  /**
   * log_load_still createMany
   */
  export type log_load_stillCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many log_load_stills.
     */
    data: log_load_stillCreateManyInput | log_load_stillCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * log_load_still createManyAndReturn
   */
  export type log_load_stillCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * The data used to create many log_load_stills.
     */
    data: log_load_stillCreateManyInput | log_load_stillCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_load_still update
   */
  export type log_load_stillUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * The data needed to update a log_load_still.
     */
    data: XOR<log_load_stillUpdateInput, log_load_stillUncheckedUpdateInput>
    /**
     * Choose, which log_load_still to update.
     */
    where: log_load_stillWhereUniqueInput
  }

  /**
   * log_load_still updateMany
   */
  export type log_load_stillUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update log_load_stills.
     */
    data: XOR<log_load_stillUpdateManyMutationInput, log_load_stillUncheckedUpdateManyInput>
    /**
     * Filter which log_load_stills to update
     */
    where?: log_load_stillWhereInput
    /**
     * Limit how many log_load_stills to update.
     */
    limit?: number
  }

  /**
   * log_load_still updateManyAndReturn
   */
  export type log_load_stillUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * The data used to update log_load_stills.
     */
    data: XOR<log_load_stillUpdateManyMutationInput, log_load_stillUncheckedUpdateManyInput>
    /**
     * Filter which log_load_stills to update
     */
    where?: log_load_stillWhereInput
    /**
     * Limit how many log_load_stills to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_load_still upsert
   */
  export type log_load_stillUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * The filter to search for the log_load_still to update in case it exists.
     */
    where: log_load_stillWhereUniqueInput
    /**
     * In case the log_load_still found by the `where` argument doesn't exist, create a new log_load_still with this data.
     */
    create: XOR<log_load_stillCreateInput, log_load_stillUncheckedCreateInput>
    /**
     * In case the log_load_still was found with the provided `where` argument, update it with this data.
     */
    update: XOR<log_load_stillUpdateInput, log_load_stillUncheckedUpdateInput>
  }

  /**
   * log_load_still delete
   */
  export type log_load_stillDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    /**
     * Filter which log_load_still to delete.
     */
    where: log_load_stillWhereUniqueInput
  }

  /**
   * log_load_still deleteMany
   */
  export type log_load_stillDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_load_stills to delete
     */
    where?: log_load_stillWhereInput
    /**
     * Limit how many log_load_stills to delete.
     */
    limit?: number
  }

  /**
   * log_load_still.stock_drum
   */
  export type log_load_still$stock_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    where?: stock_drumWhereInput
  }

  /**
   * log_load_still.log_drum_scan
   */
  export type log_load_still$log_drum_scanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    where?: log_drum_scanWhereInput
  }

  /**
   * log_load_still.ref_stills
   */
  export type log_load_still$ref_stillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    where?: ref_stillsWhereInput
  }

  /**
   * log_load_still without action
   */
  export type log_load_stillDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
  }


  /**
   * Model log_start_distillation
   */

  export type AggregateLog_start_distillation = {
    _count: Log_start_distillationCountAggregateOutputType | null
    _avg: Log_start_distillationAvgAggregateOutputType | null
    _sum: Log_start_distillationSumAggregateOutputType | null
    _min: Log_start_distillationMinAggregateOutputType | null
    _max: Log_start_distillationMaxAggregateOutputType | null
  }

  export type Log_start_distillationAvgAggregateOutputType = {
    start_id: number | null
    distillation_id: number | null
    still_id: number | null
    worker_id: number | null
  }

  export type Log_start_distillationSumAggregateOutputType = {
    start_id: number | null
    distillation_id: number | null
    still_id: number | null
    worker_id: number | null
  }

  export type Log_start_distillationMinAggregateOutputType = {
    start_id: number | null
    distillation_id: number | null
    still_id: number | null
    worker_id: number | null
    status: string | null
  }

  export type Log_start_distillationMaxAggregateOutputType = {
    start_id: number | null
    distillation_id: number | null
    still_id: number | null
    worker_id: number | null
    status: string | null
  }

  export type Log_start_distillationCountAggregateOutputType = {
    start_id: number
    distillation_id: number
    still_id: number
    worker_id: number
    status: number
    _all: number
  }


  export type Log_start_distillationAvgAggregateInputType = {
    start_id?: true
    distillation_id?: true
    still_id?: true
    worker_id?: true
  }

  export type Log_start_distillationSumAggregateInputType = {
    start_id?: true
    distillation_id?: true
    still_id?: true
    worker_id?: true
  }

  export type Log_start_distillationMinAggregateInputType = {
    start_id?: true
    distillation_id?: true
    still_id?: true
    worker_id?: true
    status?: true
  }

  export type Log_start_distillationMaxAggregateInputType = {
    start_id?: true
    distillation_id?: true
    still_id?: true
    worker_id?: true
    status?: true
  }

  export type Log_start_distillationCountAggregateInputType = {
    start_id?: true
    distillation_id?: true
    still_id?: true
    worker_id?: true
    status?: true
    _all?: true
  }

  export type Log_start_distillationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_start_distillation to aggregate.
     */
    where?: log_start_distillationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_start_distillations to fetch.
     */
    orderBy?: log_start_distillationOrderByWithRelationInput | log_start_distillationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: log_start_distillationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_start_distillations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_start_distillations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned log_start_distillations
    **/
    _count?: true | Log_start_distillationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Log_start_distillationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Log_start_distillationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Log_start_distillationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Log_start_distillationMaxAggregateInputType
  }

  export type GetLog_start_distillationAggregateType<T extends Log_start_distillationAggregateArgs> = {
        [P in keyof T & keyof AggregateLog_start_distillation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLog_start_distillation[P]>
      : GetScalarType<T[P], AggregateLog_start_distillation[P]>
  }




  export type log_start_distillationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_start_distillationWhereInput
    orderBy?: log_start_distillationOrderByWithAggregationInput | log_start_distillationOrderByWithAggregationInput[]
    by: Log_start_distillationScalarFieldEnum[] | Log_start_distillationScalarFieldEnum
    having?: log_start_distillationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Log_start_distillationCountAggregateInputType | true
    _avg?: Log_start_distillationAvgAggregateInputType
    _sum?: Log_start_distillationSumAggregateInputType
    _min?: Log_start_distillationMinAggregateInputType
    _max?: Log_start_distillationMaxAggregateInputType
  }

  export type Log_start_distillationGroupByOutputType = {
    start_id: number
    distillation_id: number | null
    still_id: number
    worker_id: number | null
    status: string | null
    _count: Log_start_distillationCountAggregateOutputType | null
    _avg: Log_start_distillationAvgAggregateOutputType | null
    _sum: Log_start_distillationSumAggregateOutputType | null
    _min: Log_start_distillationMinAggregateOutputType | null
    _max: Log_start_distillationMaxAggregateOutputType | null
  }

  type GetLog_start_distillationGroupByPayload<T extends log_start_distillationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Log_start_distillationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Log_start_distillationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Log_start_distillationGroupByOutputType[P]>
            : GetScalarType<T[P], Log_start_distillationGroupByOutputType[P]>
        }
      >
    >


  export type log_start_distillationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    start_id?: boolean
    distillation_id?: boolean
    still_id?: boolean
    worker_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | log_start_distillation$distillation_scheduleArgs<ExtArgs>
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["log_start_distillation"]>

  export type log_start_distillationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    start_id?: boolean
    distillation_id?: boolean
    still_id?: boolean
    worker_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | log_start_distillation$distillation_scheduleArgs<ExtArgs>
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["log_start_distillation"]>

  export type log_start_distillationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    start_id?: boolean
    distillation_id?: boolean
    still_id?: boolean
    worker_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | log_start_distillation$distillation_scheduleArgs<ExtArgs>
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["log_start_distillation"]>

  export type log_start_distillationSelectScalar = {
    start_id?: boolean
    distillation_id?: boolean
    still_id?: boolean
    worker_id?: boolean
    status?: boolean
  }

  export type log_start_distillationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"start_id" | "distillation_id" | "still_id" | "worker_id" | "status", ExtArgs["result"]["log_start_distillation"]>
  export type log_start_distillationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | log_start_distillation$distillation_scheduleArgs<ExtArgs>
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }
  export type log_start_distillationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | log_start_distillation$distillation_scheduleArgs<ExtArgs>
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }
  export type log_start_distillationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | log_start_distillation$distillation_scheduleArgs<ExtArgs>
    ref_stills?: boolean | ref_stillsDefaultArgs<ExtArgs>
  }

  export type $log_start_distillationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "log_start_distillation"
    objects: {
      distillation_schedule: Prisma.$distillation_schedulePayload<ExtArgs> | null
      ref_stills: Prisma.$ref_stillsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      start_id: number
      distillation_id: number | null
      still_id: number
      worker_id: number | null
      status: string | null
    }, ExtArgs["result"]["log_start_distillation"]>
    composites: {}
  }

  type log_start_distillationGetPayload<S extends boolean | null | undefined | log_start_distillationDefaultArgs> = $Result.GetResult<Prisma.$log_start_distillationPayload, S>

  type log_start_distillationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<log_start_distillationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Log_start_distillationCountAggregateInputType | true
    }

  export interface log_start_distillationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['log_start_distillation'], meta: { name: 'log_start_distillation' } }
    /**
     * Find zero or one Log_start_distillation that matches the filter.
     * @param {log_start_distillationFindUniqueArgs} args - Arguments to find a Log_start_distillation
     * @example
     * // Get one Log_start_distillation
     * const log_start_distillation = await prisma.log_start_distillation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends log_start_distillationFindUniqueArgs>(args: SelectSubset<T, log_start_distillationFindUniqueArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Log_start_distillation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {log_start_distillationFindUniqueOrThrowArgs} args - Arguments to find a Log_start_distillation
     * @example
     * // Get one Log_start_distillation
     * const log_start_distillation = await prisma.log_start_distillation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends log_start_distillationFindUniqueOrThrowArgs>(args: SelectSubset<T, log_start_distillationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_start_distillation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_start_distillationFindFirstArgs} args - Arguments to find a Log_start_distillation
     * @example
     * // Get one Log_start_distillation
     * const log_start_distillation = await prisma.log_start_distillation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends log_start_distillationFindFirstArgs>(args?: SelectSubset<T, log_start_distillationFindFirstArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_start_distillation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_start_distillationFindFirstOrThrowArgs} args - Arguments to find a Log_start_distillation
     * @example
     * // Get one Log_start_distillation
     * const log_start_distillation = await prisma.log_start_distillation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends log_start_distillationFindFirstOrThrowArgs>(args?: SelectSubset<T, log_start_distillationFindFirstOrThrowArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Log_start_distillations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_start_distillationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Log_start_distillations
     * const log_start_distillations = await prisma.log_start_distillation.findMany()
     * 
     * // Get first 10 Log_start_distillations
     * const log_start_distillations = await prisma.log_start_distillation.findMany({ take: 10 })
     * 
     * // Only select the `start_id`
     * const log_start_distillationWithStart_idOnly = await prisma.log_start_distillation.findMany({ select: { start_id: true } })
     * 
     */
    findMany<T extends log_start_distillationFindManyArgs>(args?: SelectSubset<T, log_start_distillationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Log_start_distillation.
     * @param {log_start_distillationCreateArgs} args - Arguments to create a Log_start_distillation.
     * @example
     * // Create one Log_start_distillation
     * const Log_start_distillation = await prisma.log_start_distillation.create({
     *   data: {
     *     // ... data to create a Log_start_distillation
     *   }
     * })
     * 
     */
    create<T extends log_start_distillationCreateArgs>(args: SelectSubset<T, log_start_distillationCreateArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Log_start_distillations.
     * @param {log_start_distillationCreateManyArgs} args - Arguments to create many Log_start_distillations.
     * @example
     * // Create many Log_start_distillations
     * const log_start_distillation = await prisma.log_start_distillation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends log_start_distillationCreateManyArgs>(args?: SelectSubset<T, log_start_distillationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Log_start_distillations and returns the data saved in the database.
     * @param {log_start_distillationCreateManyAndReturnArgs} args - Arguments to create many Log_start_distillations.
     * @example
     * // Create many Log_start_distillations
     * const log_start_distillation = await prisma.log_start_distillation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Log_start_distillations and only return the `start_id`
     * const log_start_distillationWithStart_idOnly = await prisma.log_start_distillation.createManyAndReturn({
     *   select: { start_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends log_start_distillationCreateManyAndReturnArgs>(args?: SelectSubset<T, log_start_distillationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Log_start_distillation.
     * @param {log_start_distillationDeleteArgs} args - Arguments to delete one Log_start_distillation.
     * @example
     * // Delete one Log_start_distillation
     * const Log_start_distillation = await prisma.log_start_distillation.delete({
     *   where: {
     *     // ... filter to delete one Log_start_distillation
     *   }
     * })
     * 
     */
    delete<T extends log_start_distillationDeleteArgs>(args: SelectSubset<T, log_start_distillationDeleteArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Log_start_distillation.
     * @param {log_start_distillationUpdateArgs} args - Arguments to update one Log_start_distillation.
     * @example
     * // Update one Log_start_distillation
     * const log_start_distillation = await prisma.log_start_distillation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends log_start_distillationUpdateArgs>(args: SelectSubset<T, log_start_distillationUpdateArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Log_start_distillations.
     * @param {log_start_distillationDeleteManyArgs} args - Arguments to filter Log_start_distillations to delete.
     * @example
     * // Delete a few Log_start_distillations
     * const { count } = await prisma.log_start_distillation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends log_start_distillationDeleteManyArgs>(args?: SelectSubset<T, log_start_distillationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_start_distillations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_start_distillationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Log_start_distillations
     * const log_start_distillation = await prisma.log_start_distillation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends log_start_distillationUpdateManyArgs>(args: SelectSubset<T, log_start_distillationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_start_distillations and returns the data updated in the database.
     * @param {log_start_distillationUpdateManyAndReturnArgs} args - Arguments to update many Log_start_distillations.
     * @example
     * // Update many Log_start_distillations
     * const log_start_distillation = await prisma.log_start_distillation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Log_start_distillations and only return the `start_id`
     * const log_start_distillationWithStart_idOnly = await prisma.log_start_distillation.updateManyAndReturn({
     *   select: { start_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends log_start_distillationUpdateManyAndReturnArgs>(args: SelectSubset<T, log_start_distillationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Log_start_distillation.
     * @param {log_start_distillationUpsertArgs} args - Arguments to update or create a Log_start_distillation.
     * @example
     * // Update or create a Log_start_distillation
     * const log_start_distillation = await prisma.log_start_distillation.upsert({
     *   create: {
     *     // ... data to create a Log_start_distillation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Log_start_distillation we want to update
     *   }
     * })
     */
    upsert<T extends log_start_distillationUpsertArgs>(args: SelectSubset<T, log_start_distillationUpsertArgs<ExtArgs>>): Prisma__log_start_distillationClient<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Log_start_distillations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_start_distillationCountArgs} args - Arguments to filter Log_start_distillations to count.
     * @example
     * // Count the number of Log_start_distillations
     * const count = await prisma.log_start_distillation.count({
     *   where: {
     *     // ... the filter for the Log_start_distillations we want to count
     *   }
     * })
    **/
    count<T extends log_start_distillationCountArgs>(
      args?: Subset<T, log_start_distillationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Log_start_distillationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Log_start_distillation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Log_start_distillationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Log_start_distillationAggregateArgs>(args: Subset<T, Log_start_distillationAggregateArgs>): Prisma.PrismaPromise<GetLog_start_distillationAggregateType<T>>

    /**
     * Group by Log_start_distillation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_start_distillationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends log_start_distillationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: log_start_distillationGroupByArgs['orderBy'] }
        : { orderBy?: log_start_distillationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, log_start_distillationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLog_start_distillationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the log_start_distillation model
   */
  readonly fields: log_start_distillationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for log_start_distillation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__log_start_distillationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_schedule<T extends log_start_distillation$distillation_scheduleArgs<ExtArgs> = {}>(args?: Subset<T, log_start_distillation$distillation_scheduleArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ref_stills<T extends ref_stillsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ref_stillsDefaultArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the log_start_distillation model
   */
  interface log_start_distillationFieldRefs {
    readonly start_id: FieldRef<"log_start_distillation", 'Int'>
    readonly distillation_id: FieldRef<"log_start_distillation", 'Int'>
    readonly still_id: FieldRef<"log_start_distillation", 'Int'>
    readonly worker_id: FieldRef<"log_start_distillation", 'Int'>
    readonly status: FieldRef<"log_start_distillation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * log_start_distillation findUnique
   */
  export type log_start_distillationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * Filter, which log_start_distillation to fetch.
     */
    where: log_start_distillationWhereUniqueInput
  }

  /**
   * log_start_distillation findUniqueOrThrow
   */
  export type log_start_distillationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * Filter, which log_start_distillation to fetch.
     */
    where: log_start_distillationWhereUniqueInput
  }

  /**
   * log_start_distillation findFirst
   */
  export type log_start_distillationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * Filter, which log_start_distillation to fetch.
     */
    where?: log_start_distillationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_start_distillations to fetch.
     */
    orderBy?: log_start_distillationOrderByWithRelationInput | log_start_distillationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_start_distillations.
     */
    cursor?: log_start_distillationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_start_distillations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_start_distillations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_start_distillations.
     */
    distinct?: Log_start_distillationScalarFieldEnum | Log_start_distillationScalarFieldEnum[]
  }

  /**
   * log_start_distillation findFirstOrThrow
   */
  export type log_start_distillationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * Filter, which log_start_distillation to fetch.
     */
    where?: log_start_distillationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_start_distillations to fetch.
     */
    orderBy?: log_start_distillationOrderByWithRelationInput | log_start_distillationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_start_distillations.
     */
    cursor?: log_start_distillationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_start_distillations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_start_distillations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_start_distillations.
     */
    distinct?: Log_start_distillationScalarFieldEnum | Log_start_distillationScalarFieldEnum[]
  }

  /**
   * log_start_distillation findMany
   */
  export type log_start_distillationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * Filter, which log_start_distillations to fetch.
     */
    where?: log_start_distillationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_start_distillations to fetch.
     */
    orderBy?: log_start_distillationOrderByWithRelationInput | log_start_distillationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing log_start_distillations.
     */
    cursor?: log_start_distillationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_start_distillations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_start_distillations.
     */
    skip?: number
    distinct?: Log_start_distillationScalarFieldEnum | Log_start_distillationScalarFieldEnum[]
  }

  /**
   * log_start_distillation create
   */
  export type log_start_distillationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * The data needed to create a log_start_distillation.
     */
    data: XOR<log_start_distillationCreateInput, log_start_distillationUncheckedCreateInput>
  }

  /**
   * log_start_distillation createMany
   */
  export type log_start_distillationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many log_start_distillations.
     */
    data: log_start_distillationCreateManyInput | log_start_distillationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * log_start_distillation createManyAndReturn
   */
  export type log_start_distillationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * The data used to create many log_start_distillations.
     */
    data: log_start_distillationCreateManyInput | log_start_distillationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_start_distillation update
   */
  export type log_start_distillationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * The data needed to update a log_start_distillation.
     */
    data: XOR<log_start_distillationUpdateInput, log_start_distillationUncheckedUpdateInput>
    /**
     * Choose, which log_start_distillation to update.
     */
    where: log_start_distillationWhereUniqueInput
  }

  /**
   * log_start_distillation updateMany
   */
  export type log_start_distillationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update log_start_distillations.
     */
    data: XOR<log_start_distillationUpdateManyMutationInput, log_start_distillationUncheckedUpdateManyInput>
    /**
     * Filter which log_start_distillations to update
     */
    where?: log_start_distillationWhereInput
    /**
     * Limit how many log_start_distillations to update.
     */
    limit?: number
  }

  /**
   * log_start_distillation updateManyAndReturn
   */
  export type log_start_distillationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * The data used to update log_start_distillations.
     */
    data: XOR<log_start_distillationUpdateManyMutationInput, log_start_distillationUncheckedUpdateManyInput>
    /**
     * Filter which log_start_distillations to update
     */
    where?: log_start_distillationWhereInput
    /**
     * Limit how many log_start_distillations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_start_distillation upsert
   */
  export type log_start_distillationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * The filter to search for the log_start_distillation to update in case it exists.
     */
    where: log_start_distillationWhereUniqueInput
    /**
     * In case the log_start_distillation found by the `where` argument doesn't exist, create a new log_start_distillation with this data.
     */
    create: XOR<log_start_distillationCreateInput, log_start_distillationUncheckedCreateInput>
    /**
     * In case the log_start_distillation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<log_start_distillationUpdateInput, log_start_distillationUncheckedUpdateInput>
  }

  /**
   * log_start_distillation delete
   */
  export type log_start_distillationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    /**
     * Filter which log_start_distillation to delete.
     */
    where: log_start_distillationWhereUniqueInput
  }

  /**
   * log_start_distillation deleteMany
   */
  export type log_start_distillationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_start_distillations to delete
     */
    where?: log_start_distillationWhereInput
    /**
     * Limit how many log_start_distillations to delete.
     */
    limit?: number
  }

  /**
   * log_start_distillation.distillation_schedule
   */
  export type log_start_distillation$distillation_scheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    where?: distillation_scheduleWhereInput
  }

  /**
   * log_start_distillation without action
   */
  export type log_start_distillationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
  }


  /**
   * Model log_transport_drum
   */

  export type AggregateLog_transport_drum = {
    _count: Log_transport_drumCountAggregateOutputType | null
    _avg: Log_transport_drumAvgAggregateOutputType | null
    _sum: Log_transport_drumSumAggregateOutputType | null
    _min: Log_transport_drumMinAggregateOutputType | null
    _max: Log_transport_drumMaxAggregateOutputType | null
  }

  export type Log_transport_drumAvgAggregateOutputType = {
    transport_id: number | null
    scan_id: number | null
    drum_id: number | null
    distillation_id: number | null
  }

  export type Log_transport_drumSumAggregateOutputType = {
    transport_id: number | null
    scan_id: number | null
    drum_id: number | null
    distillation_id: number | null
  }

  export type Log_transport_drumMinAggregateOutputType = {
    transport_id: number | null
    scan_id: number | null
    drum_id: number | null
    transported_at: Date | null
    distillation_id: number | null
    status: string | null
  }

  export type Log_transport_drumMaxAggregateOutputType = {
    transport_id: number | null
    scan_id: number | null
    drum_id: number | null
    transported_at: Date | null
    distillation_id: number | null
    status: string | null
  }

  export type Log_transport_drumCountAggregateOutputType = {
    transport_id: number
    scan_id: number
    drum_id: number
    transported_at: number
    distillation_id: number
    status: number
    _all: number
  }


  export type Log_transport_drumAvgAggregateInputType = {
    transport_id?: true
    scan_id?: true
    drum_id?: true
    distillation_id?: true
  }

  export type Log_transport_drumSumAggregateInputType = {
    transport_id?: true
    scan_id?: true
    drum_id?: true
    distillation_id?: true
  }

  export type Log_transport_drumMinAggregateInputType = {
    transport_id?: true
    scan_id?: true
    drum_id?: true
    transported_at?: true
    distillation_id?: true
    status?: true
  }

  export type Log_transport_drumMaxAggregateInputType = {
    transport_id?: true
    scan_id?: true
    drum_id?: true
    transported_at?: true
    distillation_id?: true
    status?: true
  }

  export type Log_transport_drumCountAggregateInputType = {
    transport_id?: true
    scan_id?: true
    drum_id?: true
    transported_at?: true
    distillation_id?: true
    status?: true
    _all?: true
  }

  export type Log_transport_drumAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_transport_drum to aggregate.
     */
    where?: log_transport_drumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_transport_drums to fetch.
     */
    orderBy?: log_transport_drumOrderByWithRelationInput | log_transport_drumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: log_transport_drumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_transport_drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_transport_drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned log_transport_drums
    **/
    _count?: true | Log_transport_drumCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Log_transport_drumAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Log_transport_drumSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Log_transport_drumMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Log_transport_drumMaxAggregateInputType
  }

  export type GetLog_transport_drumAggregateType<T extends Log_transport_drumAggregateArgs> = {
        [P in keyof T & keyof AggregateLog_transport_drum]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLog_transport_drum[P]>
      : GetScalarType<T[P], AggregateLog_transport_drum[P]>
  }




  export type log_transport_drumGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_transport_drumWhereInput
    orderBy?: log_transport_drumOrderByWithAggregationInput | log_transport_drumOrderByWithAggregationInput[]
    by: Log_transport_drumScalarFieldEnum[] | Log_transport_drumScalarFieldEnum
    having?: log_transport_drumScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Log_transport_drumCountAggregateInputType | true
    _avg?: Log_transport_drumAvgAggregateInputType
    _sum?: Log_transport_drumSumAggregateInputType
    _min?: Log_transport_drumMinAggregateInputType
    _max?: Log_transport_drumMaxAggregateInputType
  }

  export type Log_transport_drumGroupByOutputType = {
    transport_id: number
    scan_id: number | null
    drum_id: number | null
    transported_at: Date | null
    distillation_id: number | null
    status: string | null
    _count: Log_transport_drumCountAggregateOutputType | null
    _avg: Log_transport_drumAvgAggregateOutputType | null
    _sum: Log_transport_drumSumAggregateOutputType | null
    _min: Log_transport_drumMinAggregateOutputType | null
    _max: Log_transport_drumMaxAggregateOutputType | null
  }

  type GetLog_transport_drumGroupByPayload<T extends log_transport_drumGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Log_transport_drumGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Log_transport_drumGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Log_transport_drumGroupByOutputType[P]>
            : GetScalarType<T[P], Log_transport_drumGroupByOutputType[P]>
        }
      >
    >


  export type log_transport_drumSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transport_id?: boolean
    scan_id?: boolean
    drum_id?: boolean
    transported_at?: boolean
    distillation_id?: boolean
    status?: boolean
    distillation_pending_assignment?: boolean | log_transport_drum$distillation_pending_assignmentArgs<ExtArgs>
    distillation_schedule?: boolean | log_transport_drum$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | log_transport_drum$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_transport_drum$log_drum_scanArgs<ExtArgs>
    _count?: boolean | Log_transport_drumCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["log_transport_drum"]>

  export type log_transport_drumSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transport_id?: boolean
    scan_id?: boolean
    drum_id?: boolean
    transported_at?: boolean
    distillation_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | log_transport_drum$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | log_transport_drum$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_transport_drum$log_drum_scanArgs<ExtArgs>
  }, ExtArgs["result"]["log_transport_drum"]>

  export type log_transport_drumSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transport_id?: boolean
    scan_id?: boolean
    drum_id?: boolean
    transported_at?: boolean
    distillation_id?: boolean
    status?: boolean
    distillation_schedule?: boolean | log_transport_drum$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | log_transport_drum$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_transport_drum$log_drum_scanArgs<ExtArgs>
  }, ExtArgs["result"]["log_transport_drum"]>

  export type log_transport_drumSelectScalar = {
    transport_id?: boolean
    scan_id?: boolean
    drum_id?: boolean
    transported_at?: boolean
    distillation_id?: boolean
    status?: boolean
  }

  export type log_transport_drumOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"transport_id" | "scan_id" | "drum_id" | "transported_at" | "distillation_id" | "status", ExtArgs["result"]["log_transport_drum"]>
  export type log_transport_drumInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_pending_assignment?: boolean | log_transport_drum$distillation_pending_assignmentArgs<ExtArgs>
    distillation_schedule?: boolean | log_transport_drum$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | log_transport_drum$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_transport_drum$log_drum_scanArgs<ExtArgs>
    _count?: boolean | Log_transport_drumCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type log_transport_drumIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | log_transport_drum$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | log_transport_drum$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_transport_drum$log_drum_scanArgs<ExtArgs>
  }
  export type log_transport_drumIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | log_transport_drum$distillation_scheduleArgs<ExtArgs>
    stock_drum?: boolean | log_transport_drum$stock_drumArgs<ExtArgs>
    log_drum_scan?: boolean | log_transport_drum$log_drum_scanArgs<ExtArgs>
  }

  export type $log_transport_drumPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "log_transport_drum"
    objects: {
      distillation_pending_assignment: Prisma.$distillation_pending_assignmentPayload<ExtArgs>[]
      distillation_schedule: Prisma.$distillation_schedulePayload<ExtArgs> | null
      stock_drum: Prisma.$stock_drumPayload<ExtArgs> | null
      log_drum_scan: Prisma.$log_drum_scanPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      transport_id: number
      scan_id: number | null
      drum_id: number | null
      transported_at: Date | null
      distillation_id: number | null
      status: string | null
    }, ExtArgs["result"]["log_transport_drum"]>
    composites: {}
  }

  type log_transport_drumGetPayload<S extends boolean | null | undefined | log_transport_drumDefaultArgs> = $Result.GetResult<Prisma.$log_transport_drumPayload, S>

  type log_transport_drumCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<log_transport_drumFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Log_transport_drumCountAggregateInputType | true
    }

  export interface log_transport_drumDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['log_transport_drum'], meta: { name: 'log_transport_drum' } }
    /**
     * Find zero or one Log_transport_drum that matches the filter.
     * @param {log_transport_drumFindUniqueArgs} args - Arguments to find a Log_transport_drum
     * @example
     * // Get one Log_transport_drum
     * const log_transport_drum = await prisma.log_transport_drum.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends log_transport_drumFindUniqueArgs>(args: SelectSubset<T, log_transport_drumFindUniqueArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Log_transport_drum that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {log_transport_drumFindUniqueOrThrowArgs} args - Arguments to find a Log_transport_drum
     * @example
     * // Get one Log_transport_drum
     * const log_transport_drum = await prisma.log_transport_drum.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends log_transport_drumFindUniqueOrThrowArgs>(args: SelectSubset<T, log_transport_drumFindUniqueOrThrowArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_transport_drum that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_transport_drumFindFirstArgs} args - Arguments to find a Log_transport_drum
     * @example
     * // Get one Log_transport_drum
     * const log_transport_drum = await prisma.log_transport_drum.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends log_transport_drumFindFirstArgs>(args?: SelectSubset<T, log_transport_drumFindFirstArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_transport_drum that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_transport_drumFindFirstOrThrowArgs} args - Arguments to find a Log_transport_drum
     * @example
     * // Get one Log_transport_drum
     * const log_transport_drum = await prisma.log_transport_drum.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends log_transport_drumFindFirstOrThrowArgs>(args?: SelectSubset<T, log_transport_drumFindFirstOrThrowArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Log_transport_drums that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_transport_drumFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Log_transport_drums
     * const log_transport_drums = await prisma.log_transport_drum.findMany()
     * 
     * // Get first 10 Log_transport_drums
     * const log_transport_drums = await prisma.log_transport_drum.findMany({ take: 10 })
     * 
     * // Only select the `transport_id`
     * const log_transport_drumWithTransport_idOnly = await prisma.log_transport_drum.findMany({ select: { transport_id: true } })
     * 
     */
    findMany<T extends log_transport_drumFindManyArgs>(args?: SelectSubset<T, log_transport_drumFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Log_transport_drum.
     * @param {log_transport_drumCreateArgs} args - Arguments to create a Log_transport_drum.
     * @example
     * // Create one Log_transport_drum
     * const Log_transport_drum = await prisma.log_transport_drum.create({
     *   data: {
     *     // ... data to create a Log_transport_drum
     *   }
     * })
     * 
     */
    create<T extends log_transport_drumCreateArgs>(args: SelectSubset<T, log_transport_drumCreateArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Log_transport_drums.
     * @param {log_transport_drumCreateManyArgs} args - Arguments to create many Log_transport_drums.
     * @example
     * // Create many Log_transport_drums
     * const log_transport_drum = await prisma.log_transport_drum.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends log_transport_drumCreateManyArgs>(args?: SelectSubset<T, log_transport_drumCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Log_transport_drums and returns the data saved in the database.
     * @param {log_transport_drumCreateManyAndReturnArgs} args - Arguments to create many Log_transport_drums.
     * @example
     * // Create many Log_transport_drums
     * const log_transport_drum = await prisma.log_transport_drum.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Log_transport_drums and only return the `transport_id`
     * const log_transport_drumWithTransport_idOnly = await prisma.log_transport_drum.createManyAndReturn({
     *   select: { transport_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends log_transport_drumCreateManyAndReturnArgs>(args?: SelectSubset<T, log_transport_drumCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Log_transport_drum.
     * @param {log_transport_drumDeleteArgs} args - Arguments to delete one Log_transport_drum.
     * @example
     * // Delete one Log_transport_drum
     * const Log_transport_drum = await prisma.log_transport_drum.delete({
     *   where: {
     *     // ... filter to delete one Log_transport_drum
     *   }
     * })
     * 
     */
    delete<T extends log_transport_drumDeleteArgs>(args: SelectSubset<T, log_transport_drumDeleteArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Log_transport_drum.
     * @param {log_transport_drumUpdateArgs} args - Arguments to update one Log_transport_drum.
     * @example
     * // Update one Log_transport_drum
     * const log_transport_drum = await prisma.log_transport_drum.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends log_transport_drumUpdateArgs>(args: SelectSubset<T, log_transport_drumUpdateArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Log_transport_drums.
     * @param {log_transport_drumDeleteManyArgs} args - Arguments to filter Log_transport_drums to delete.
     * @example
     * // Delete a few Log_transport_drums
     * const { count } = await prisma.log_transport_drum.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends log_transport_drumDeleteManyArgs>(args?: SelectSubset<T, log_transport_drumDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_transport_drums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_transport_drumUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Log_transport_drums
     * const log_transport_drum = await prisma.log_transport_drum.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends log_transport_drumUpdateManyArgs>(args: SelectSubset<T, log_transport_drumUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_transport_drums and returns the data updated in the database.
     * @param {log_transport_drumUpdateManyAndReturnArgs} args - Arguments to update many Log_transport_drums.
     * @example
     * // Update many Log_transport_drums
     * const log_transport_drum = await prisma.log_transport_drum.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Log_transport_drums and only return the `transport_id`
     * const log_transport_drumWithTransport_idOnly = await prisma.log_transport_drum.updateManyAndReturn({
     *   select: { transport_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends log_transport_drumUpdateManyAndReturnArgs>(args: SelectSubset<T, log_transport_drumUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Log_transport_drum.
     * @param {log_transport_drumUpsertArgs} args - Arguments to update or create a Log_transport_drum.
     * @example
     * // Update or create a Log_transport_drum
     * const log_transport_drum = await prisma.log_transport_drum.upsert({
     *   create: {
     *     // ... data to create a Log_transport_drum
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Log_transport_drum we want to update
     *   }
     * })
     */
    upsert<T extends log_transport_drumUpsertArgs>(args: SelectSubset<T, log_transport_drumUpsertArgs<ExtArgs>>): Prisma__log_transport_drumClient<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Log_transport_drums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_transport_drumCountArgs} args - Arguments to filter Log_transport_drums to count.
     * @example
     * // Count the number of Log_transport_drums
     * const count = await prisma.log_transport_drum.count({
     *   where: {
     *     // ... the filter for the Log_transport_drums we want to count
     *   }
     * })
    **/
    count<T extends log_transport_drumCountArgs>(
      args?: Subset<T, log_transport_drumCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Log_transport_drumCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Log_transport_drum.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Log_transport_drumAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Log_transport_drumAggregateArgs>(args: Subset<T, Log_transport_drumAggregateArgs>): Prisma.PrismaPromise<GetLog_transport_drumAggregateType<T>>

    /**
     * Group by Log_transport_drum.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_transport_drumGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends log_transport_drumGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: log_transport_drumGroupByArgs['orderBy'] }
        : { orderBy?: log_transport_drumGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, log_transport_drumGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLog_transport_drumGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the log_transport_drum model
   */
  readonly fields: log_transport_drumFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for log_transport_drum.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__log_transport_drumClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_pending_assignment<T extends log_transport_drum$distillation_pending_assignmentArgs<ExtArgs> = {}>(args?: Subset<T, log_transport_drum$distillation_pending_assignmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    distillation_schedule<T extends log_transport_drum$distillation_scheduleArgs<ExtArgs> = {}>(args?: Subset<T, log_transport_drum$distillation_scheduleArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stock_drum<T extends log_transport_drum$stock_drumArgs<ExtArgs> = {}>(args?: Subset<T, log_transport_drum$stock_drumArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    log_drum_scan<T extends log_transport_drum$log_drum_scanArgs<ExtArgs> = {}>(args?: Subset<T, log_transport_drum$log_drum_scanArgs<ExtArgs>>): Prisma__log_drum_scanClient<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the log_transport_drum model
   */
  interface log_transport_drumFieldRefs {
    readonly transport_id: FieldRef<"log_transport_drum", 'Int'>
    readonly scan_id: FieldRef<"log_transport_drum", 'Int'>
    readonly drum_id: FieldRef<"log_transport_drum", 'Int'>
    readonly transported_at: FieldRef<"log_transport_drum", 'DateTime'>
    readonly distillation_id: FieldRef<"log_transport_drum", 'Int'>
    readonly status: FieldRef<"log_transport_drum", 'String'>
  }
    

  // Custom InputTypes
  /**
   * log_transport_drum findUnique
   */
  export type log_transport_drumFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * Filter, which log_transport_drum to fetch.
     */
    where: log_transport_drumWhereUniqueInput
  }

  /**
   * log_transport_drum findUniqueOrThrow
   */
  export type log_transport_drumFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * Filter, which log_transport_drum to fetch.
     */
    where: log_transport_drumWhereUniqueInput
  }

  /**
   * log_transport_drum findFirst
   */
  export type log_transport_drumFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * Filter, which log_transport_drum to fetch.
     */
    where?: log_transport_drumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_transport_drums to fetch.
     */
    orderBy?: log_transport_drumOrderByWithRelationInput | log_transport_drumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_transport_drums.
     */
    cursor?: log_transport_drumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_transport_drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_transport_drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_transport_drums.
     */
    distinct?: Log_transport_drumScalarFieldEnum | Log_transport_drumScalarFieldEnum[]
  }

  /**
   * log_transport_drum findFirstOrThrow
   */
  export type log_transport_drumFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * Filter, which log_transport_drum to fetch.
     */
    where?: log_transport_drumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_transport_drums to fetch.
     */
    orderBy?: log_transport_drumOrderByWithRelationInput | log_transport_drumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_transport_drums.
     */
    cursor?: log_transport_drumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_transport_drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_transport_drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_transport_drums.
     */
    distinct?: Log_transport_drumScalarFieldEnum | Log_transport_drumScalarFieldEnum[]
  }

  /**
   * log_transport_drum findMany
   */
  export type log_transport_drumFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * Filter, which log_transport_drums to fetch.
     */
    where?: log_transport_drumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_transport_drums to fetch.
     */
    orderBy?: log_transport_drumOrderByWithRelationInput | log_transport_drumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing log_transport_drums.
     */
    cursor?: log_transport_drumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_transport_drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_transport_drums.
     */
    skip?: number
    distinct?: Log_transport_drumScalarFieldEnum | Log_transport_drumScalarFieldEnum[]
  }

  /**
   * log_transport_drum create
   */
  export type log_transport_drumCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * The data needed to create a log_transport_drum.
     */
    data?: XOR<log_transport_drumCreateInput, log_transport_drumUncheckedCreateInput>
  }

  /**
   * log_transport_drum createMany
   */
  export type log_transport_drumCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many log_transport_drums.
     */
    data: log_transport_drumCreateManyInput | log_transport_drumCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * log_transport_drum createManyAndReturn
   */
  export type log_transport_drumCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * The data used to create many log_transport_drums.
     */
    data: log_transport_drumCreateManyInput | log_transport_drumCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_transport_drum update
   */
  export type log_transport_drumUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * The data needed to update a log_transport_drum.
     */
    data: XOR<log_transport_drumUpdateInput, log_transport_drumUncheckedUpdateInput>
    /**
     * Choose, which log_transport_drum to update.
     */
    where: log_transport_drumWhereUniqueInput
  }

  /**
   * log_transport_drum updateMany
   */
  export type log_transport_drumUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update log_transport_drums.
     */
    data: XOR<log_transport_drumUpdateManyMutationInput, log_transport_drumUncheckedUpdateManyInput>
    /**
     * Filter which log_transport_drums to update
     */
    where?: log_transport_drumWhereInput
    /**
     * Limit how many log_transport_drums to update.
     */
    limit?: number
  }

  /**
   * log_transport_drum updateManyAndReturn
   */
  export type log_transport_drumUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * The data used to update log_transport_drums.
     */
    data: XOR<log_transport_drumUpdateManyMutationInput, log_transport_drumUncheckedUpdateManyInput>
    /**
     * Filter which log_transport_drums to update
     */
    where?: log_transport_drumWhereInput
    /**
     * Limit how many log_transport_drums to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_transport_drum upsert
   */
  export type log_transport_drumUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * The filter to search for the log_transport_drum to update in case it exists.
     */
    where: log_transport_drumWhereUniqueInput
    /**
     * In case the log_transport_drum found by the `where` argument doesn't exist, create a new log_transport_drum with this data.
     */
    create: XOR<log_transport_drumCreateInput, log_transport_drumUncheckedCreateInput>
    /**
     * In case the log_transport_drum was found with the provided `where` argument, update it with this data.
     */
    update: XOR<log_transport_drumUpdateInput, log_transport_drumUncheckedUpdateInput>
  }

  /**
   * log_transport_drum delete
   */
  export type log_transport_drumDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    /**
     * Filter which log_transport_drum to delete.
     */
    where: log_transport_drumWhereUniqueInput
  }

  /**
   * log_transport_drum deleteMany
   */
  export type log_transport_drumDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_transport_drums to delete
     */
    where?: log_transport_drumWhereInput
    /**
     * Limit how many log_transport_drums to delete.
     */
    limit?: number
  }

  /**
   * log_transport_drum.distillation_pending_assignment
   */
  export type log_transport_drum$distillation_pending_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    where?: distillation_pending_assignmentWhereInput
    orderBy?: distillation_pending_assignmentOrderByWithRelationInput | distillation_pending_assignmentOrderByWithRelationInput[]
    cursor?: distillation_pending_assignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Distillation_pending_assignmentScalarFieldEnum | Distillation_pending_assignmentScalarFieldEnum[]
  }

  /**
   * log_transport_drum.distillation_schedule
   */
  export type log_transport_drum$distillation_scheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    where?: distillation_scheduleWhereInput
  }

  /**
   * log_transport_drum.stock_drum
   */
  export type log_transport_drum$stock_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    where?: stock_drumWhereInput
  }

  /**
   * log_transport_drum.log_drum_scan
   */
  export type log_transport_drum$log_drum_scanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    where?: log_drum_scanWhereInput
  }

  /**
   * log_transport_drum without action
   */
  export type log_transport_drumDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
  }


  /**
   * Model log_volume_transfer
   */

  export type AggregateLog_volume_transfer = {
    _count: Log_volume_transferCountAggregateOutputType | null
    _avg: Log_volume_transferAvgAggregateOutputType | null
    _sum: Log_volume_transferSumAggregateOutputType | null
    _min: Log_volume_transferMinAggregateOutputType | null
    _max: Log_volume_transferMaxAggregateOutputType | null
  }

  export type Log_volume_transferAvgAggregateOutputType = {
    transfer_id: number | null
    drum_id: number | null
    distillation_id: number | null
    volume_transferred: Decimal | null
    remaining_volume: Decimal | null
    worker_id: number | null
  }

  export type Log_volume_transferSumAggregateOutputType = {
    transfer_id: number | null
    drum_id: number | null
    distillation_id: number | null
    volume_transferred: Decimal | null
    remaining_volume: Decimal | null
    worker_id: number | null
  }

  export type Log_volume_transferMinAggregateOutputType = {
    transfer_id: number | null
    drum_id: number | null
    distillation_id: number | null
    volume_transferred: Decimal | null
    remaining_volume: Decimal | null
    usage_type: string | null
    transfer_timestamp: Date | null
    worker_id: number | null
  }

  export type Log_volume_transferMaxAggregateOutputType = {
    transfer_id: number | null
    drum_id: number | null
    distillation_id: number | null
    volume_transferred: Decimal | null
    remaining_volume: Decimal | null
    usage_type: string | null
    transfer_timestamp: Date | null
    worker_id: number | null
  }

  export type Log_volume_transferCountAggregateOutputType = {
    transfer_id: number
    drum_id: number
    distillation_id: number
    volume_transferred: number
    remaining_volume: number
    usage_type: number
    transfer_timestamp: number
    worker_id: number
    _all: number
  }


  export type Log_volume_transferAvgAggregateInputType = {
    transfer_id?: true
    drum_id?: true
    distillation_id?: true
    volume_transferred?: true
    remaining_volume?: true
    worker_id?: true
  }

  export type Log_volume_transferSumAggregateInputType = {
    transfer_id?: true
    drum_id?: true
    distillation_id?: true
    volume_transferred?: true
    remaining_volume?: true
    worker_id?: true
  }

  export type Log_volume_transferMinAggregateInputType = {
    transfer_id?: true
    drum_id?: true
    distillation_id?: true
    volume_transferred?: true
    remaining_volume?: true
    usage_type?: true
    transfer_timestamp?: true
    worker_id?: true
  }

  export type Log_volume_transferMaxAggregateInputType = {
    transfer_id?: true
    drum_id?: true
    distillation_id?: true
    volume_transferred?: true
    remaining_volume?: true
    usage_type?: true
    transfer_timestamp?: true
    worker_id?: true
  }

  export type Log_volume_transferCountAggregateInputType = {
    transfer_id?: true
    drum_id?: true
    distillation_id?: true
    volume_transferred?: true
    remaining_volume?: true
    usage_type?: true
    transfer_timestamp?: true
    worker_id?: true
    _all?: true
  }

  export type Log_volume_transferAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_volume_transfer to aggregate.
     */
    where?: log_volume_transferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_volume_transfers to fetch.
     */
    orderBy?: log_volume_transferOrderByWithRelationInput | log_volume_transferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: log_volume_transferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_volume_transfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_volume_transfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned log_volume_transfers
    **/
    _count?: true | Log_volume_transferCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Log_volume_transferAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Log_volume_transferSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Log_volume_transferMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Log_volume_transferMaxAggregateInputType
  }

  export type GetLog_volume_transferAggregateType<T extends Log_volume_transferAggregateArgs> = {
        [P in keyof T & keyof AggregateLog_volume_transfer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLog_volume_transfer[P]>
      : GetScalarType<T[P], AggregateLog_volume_transfer[P]>
  }




  export type log_volume_transferGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: log_volume_transferWhereInput
    orderBy?: log_volume_transferOrderByWithAggregationInput | log_volume_transferOrderByWithAggregationInput[]
    by: Log_volume_transferScalarFieldEnum[] | Log_volume_transferScalarFieldEnum
    having?: log_volume_transferScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Log_volume_transferCountAggregateInputType | true
    _avg?: Log_volume_transferAvgAggregateInputType
    _sum?: Log_volume_transferSumAggregateInputType
    _min?: Log_volume_transferMinAggregateInputType
    _max?: Log_volume_transferMaxAggregateInputType
  }

  export type Log_volume_transferGroupByOutputType = {
    transfer_id: number
    drum_id: number
    distillation_id: number
    volume_transferred: Decimal
    remaining_volume: Decimal
    usage_type: string
    transfer_timestamp: Date | null
    worker_id: number | null
    _count: Log_volume_transferCountAggregateOutputType | null
    _avg: Log_volume_transferAvgAggregateOutputType | null
    _sum: Log_volume_transferSumAggregateOutputType | null
    _min: Log_volume_transferMinAggregateOutputType | null
    _max: Log_volume_transferMaxAggregateOutputType | null
  }

  type GetLog_volume_transferGroupByPayload<T extends log_volume_transferGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Log_volume_transferGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Log_volume_transferGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Log_volume_transferGroupByOutputType[P]>
            : GetScalarType<T[P], Log_volume_transferGroupByOutputType[P]>
        }
      >
    >


  export type log_volume_transferSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transfer_id?: boolean
    drum_id?: boolean
    distillation_id?: boolean
    volume_transferred?: boolean
    remaining_volume?: boolean
    usage_type?: boolean
    transfer_timestamp?: boolean
    worker_id?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | stock_drumDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["log_volume_transfer"]>

  export type log_volume_transferSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transfer_id?: boolean
    drum_id?: boolean
    distillation_id?: boolean
    volume_transferred?: boolean
    remaining_volume?: boolean
    usage_type?: boolean
    transfer_timestamp?: boolean
    worker_id?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | stock_drumDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["log_volume_transfer"]>

  export type log_volume_transferSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    transfer_id?: boolean
    drum_id?: boolean
    distillation_id?: boolean
    volume_transferred?: boolean
    remaining_volume?: boolean
    usage_type?: boolean
    transfer_timestamp?: boolean
    worker_id?: boolean
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | stock_drumDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["log_volume_transfer"]>

  export type log_volume_transferSelectScalar = {
    transfer_id?: boolean
    drum_id?: boolean
    distillation_id?: boolean
    volume_transferred?: boolean
    remaining_volume?: boolean
    usage_type?: boolean
    transfer_timestamp?: boolean
    worker_id?: boolean
  }

  export type log_volume_transferOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"transfer_id" | "drum_id" | "distillation_id" | "volume_transferred" | "remaining_volume" | "usage_type" | "transfer_timestamp" | "worker_id", ExtArgs["result"]["log_volume_transfer"]>
  export type log_volume_transferInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | stock_drumDefaultArgs<ExtArgs>
  }
  export type log_volume_transferIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | stock_drumDefaultArgs<ExtArgs>
  }
  export type log_volume_transferIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule?: boolean | distillation_scheduleDefaultArgs<ExtArgs>
    stock_drum?: boolean | stock_drumDefaultArgs<ExtArgs>
  }

  export type $log_volume_transferPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "log_volume_transfer"
    objects: {
      distillation_schedule: Prisma.$distillation_schedulePayload<ExtArgs>
      stock_drum: Prisma.$stock_drumPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      transfer_id: number
      drum_id: number
      distillation_id: number
      volume_transferred: Prisma.Decimal
      remaining_volume: Prisma.Decimal
      usage_type: string
      transfer_timestamp: Date | null
      worker_id: number | null
    }, ExtArgs["result"]["log_volume_transfer"]>
    composites: {}
  }

  type log_volume_transferGetPayload<S extends boolean | null | undefined | log_volume_transferDefaultArgs> = $Result.GetResult<Prisma.$log_volume_transferPayload, S>

  type log_volume_transferCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<log_volume_transferFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Log_volume_transferCountAggregateInputType | true
    }

  export interface log_volume_transferDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['log_volume_transfer'], meta: { name: 'log_volume_transfer' } }
    /**
     * Find zero or one Log_volume_transfer that matches the filter.
     * @param {log_volume_transferFindUniqueArgs} args - Arguments to find a Log_volume_transfer
     * @example
     * // Get one Log_volume_transfer
     * const log_volume_transfer = await prisma.log_volume_transfer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends log_volume_transferFindUniqueArgs>(args: SelectSubset<T, log_volume_transferFindUniqueArgs<ExtArgs>>): Prisma__log_volume_transferClient<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Log_volume_transfer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {log_volume_transferFindUniqueOrThrowArgs} args - Arguments to find a Log_volume_transfer
     * @example
     * // Get one Log_volume_transfer
     * const log_volume_transfer = await prisma.log_volume_transfer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends log_volume_transferFindUniqueOrThrowArgs>(args: SelectSubset<T, log_volume_transferFindUniqueOrThrowArgs<ExtArgs>>): Prisma__log_volume_transferClient<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_volume_transfer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_volume_transferFindFirstArgs} args - Arguments to find a Log_volume_transfer
     * @example
     * // Get one Log_volume_transfer
     * const log_volume_transfer = await prisma.log_volume_transfer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends log_volume_transferFindFirstArgs>(args?: SelectSubset<T, log_volume_transferFindFirstArgs<ExtArgs>>): Prisma__log_volume_transferClient<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log_volume_transfer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_volume_transferFindFirstOrThrowArgs} args - Arguments to find a Log_volume_transfer
     * @example
     * // Get one Log_volume_transfer
     * const log_volume_transfer = await prisma.log_volume_transfer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends log_volume_transferFindFirstOrThrowArgs>(args?: SelectSubset<T, log_volume_transferFindFirstOrThrowArgs<ExtArgs>>): Prisma__log_volume_transferClient<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Log_volume_transfers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_volume_transferFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Log_volume_transfers
     * const log_volume_transfers = await prisma.log_volume_transfer.findMany()
     * 
     * // Get first 10 Log_volume_transfers
     * const log_volume_transfers = await prisma.log_volume_transfer.findMany({ take: 10 })
     * 
     * // Only select the `transfer_id`
     * const log_volume_transferWithTransfer_idOnly = await prisma.log_volume_transfer.findMany({ select: { transfer_id: true } })
     * 
     */
    findMany<T extends log_volume_transferFindManyArgs>(args?: SelectSubset<T, log_volume_transferFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Log_volume_transfer.
     * @param {log_volume_transferCreateArgs} args - Arguments to create a Log_volume_transfer.
     * @example
     * // Create one Log_volume_transfer
     * const Log_volume_transfer = await prisma.log_volume_transfer.create({
     *   data: {
     *     // ... data to create a Log_volume_transfer
     *   }
     * })
     * 
     */
    create<T extends log_volume_transferCreateArgs>(args: SelectSubset<T, log_volume_transferCreateArgs<ExtArgs>>): Prisma__log_volume_transferClient<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Log_volume_transfers.
     * @param {log_volume_transferCreateManyArgs} args - Arguments to create many Log_volume_transfers.
     * @example
     * // Create many Log_volume_transfers
     * const log_volume_transfer = await prisma.log_volume_transfer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends log_volume_transferCreateManyArgs>(args?: SelectSubset<T, log_volume_transferCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Log_volume_transfers and returns the data saved in the database.
     * @param {log_volume_transferCreateManyAndReturnArgs} args - Arguments to create many Log_volume_transfers.
     * @example
     * // Create many Log_volume_transfers
     * const log_volume_transfer = await prisma.log_volume_transfer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Log_volume_transfers and only return the `transfer_id`
     * const log_volume_transferWithTransfer_idOnly = await prisma.log_volume_transfer.createManyAndReturn({
     *   select: { transfer_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends log_volume_transferCreateManyAndReturnArgs>(args?: SelectSubset<T, log_volume_transferCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Log_volume_transfer.
     * @param {log_volume_transferDeleteArgs} args - Arguments to delete one Log_volume_transfer.
     * @example
     * // Delete one Log_volume_transfer
     * const Log_volume_transfer = await prisma.log_volume_transfer.delete({
     *   where: {
     *     // ... filter to delete one Log_volume_transfer
     *   }
     * })
     * 
     */
    delete<T extends log_volume_transferDeleteArgs>(args: SelectSubset<T, log_volume_transferDeleteArgs<ExtArgs>>): Prisma__log_volume_transferClient<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Log_volume_transfer.
     * @param {log_volume_transferUpdateArgs} args - Arguments to update one Log_volume_transfer.
     * @example
     * // Update one Log_volume_transfer
     * const log_volume_transfer = await prisma.log_volume_transfer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends log_volume_transferUpdateArgs>(args: SelectSubset<T, log_volume_transferUpdateArgs<ExtArgs>>): Prisma__log_volume_transferClient<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Log_volume_transfers.
     * @param {log_volume_transferDeleteManyArgs} args - Arguments to filter Log_volume_transfers to delete.
     * @example
     * // Delete a few Log_volume_transfers
     * const { count } = await prisma.log_volume_transfer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends log_volume_transferDeleteManyArgs>(args?: SelectSubset<T, log_volume_transferDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_volume_transfers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_volume_transferUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Log_volume_transfers
     * const log_volume_transfer = await prisma.log_volume_transfer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends log_volume_transferUpdateManyArgs>(args: SelectSubset<T, log_volume_transferUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Log_volume_transfers and returns the data updated in the database.
     * @param {log_volume_transferUpdateManyAndReturnArgs} args - Arguments to update many Log_volume_transfers.
     * @example
     * // Update many Log_volume_transfers
     * const log_volume_transfer = await prisma.log_volume_transfer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Log_volume_transfers and only return the `transfer_id`
     * const log_volume_transferWithTransfer_idOnly = await prisma.log_volume_transfer.updateManyAndReturn({
     *   select: { transfer_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends log_volume_transferUpdateManyAndReturnArgs>(args: SelectSubset<T, log_volume_transferUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Log_volume_transfer.
     * @param {log_volume_transferUpsertArgs} args - Arguments to update or create a Log_volume_transfer.
     * @example
     * // Update or create a Log_volume_transfer
     * const log_volume_transfer = await prisma.log_volume_transfer.upsert({
     *   create: {
     *     // ... data to create a Log_volume_transfer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Log_volume_transfer we want to update
     *   }
     * })
     */
    upsert<T extends log_volume_transferUpsertArgs>(args: SelectSubset<T, log_volume_transferUpsertArgs<ExtArgs>>): Prisma__log_volume_transferClient<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Log_volume_transfers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_volume_transferCountArgs} args - Arguments to filter Log_volume_transfers to count.
     * @example
     * // Count the number of Log_volume_transfers
     * const count = await prisma.log_volume_transfer.count({
     *   where: {
     *     // ... the filter for the Log_volume_transfers we want to count
     *   }
     * })
    **/
    count<T extends log_volume_transferCountArgs>(
      args?: Subset<T, log_volume_transferCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Log_volume_transferCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Log_volume_transfer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Log_volume_transferAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Log_volume_transferAggregateArgs>(args: Subset<T, Log_volume_transferAggregateArgs>): Prisma.PrismaPromise<GetLog_volume_transferAggregateType<T>>

    /**
     * Group by Log_volume_transfer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {log_volume_transferGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends log_volume_transferGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: log_volume_transferGroupByArgs['orderBy'] }
        : { orderBy?: log_volume_transferGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, log_volume_transferGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLog_volume_transferGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the log_volume_transfer model
   */
  readonly fields: log_volume_transferFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for log_volume_transfer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__log_volume_transferClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_schedule<T extends distillation_scheduleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, distillation_scheduleDefaultArgs<ExtArgs>>): Prisma__distillation_scheduleClient<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    stock_drum<T extends stock_drumDefaultArgs<ExtArgs> = {}>(args?: Subset<T, stock_drumDefaultArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the log_volume_transfer model
   */
  interface log_volume_transferFieldRefs {
    readonly transfer_id: FieldRef<"log_volume_transfer", 'Int'>
    readonly drum_id: FieldRef<"log_volume_transfer", 'Int'>
    readonly distillation_id: FieldRef<"log_volume_transfer", 'Int'>
    readonly volume_transferred: FieldRef<"log_volume_transfer", 'Decimal'>
    readonly remaining_volume: FieldRef<"log_volume_transfer", 'Decimal'>
    readonly usage_type: FieldRef<"log_volume_transfer", 'String'>
    readonly transfer_timestamp: FieldRef<"log_volume_transfer", 'DateTime'>
    readonly worker_id: FieldRef<"log_volume_transfer", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * log_volume_transfer findUnique
   */
  export type log_volume_transferFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * Filter, which log_volume_transfer to fetch.
     */
    where: log_volume_transferWhereUniqueInput
  }

  /**
   * log_volume_transfer findUniqueOrThrow
   */
  export type log_volume_transferFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * Filter, which log_volume_transfer to fetch.
     */
    where: log_volume_transferWhereUniqueInput
  }

  /**
   * log_volume_transfer findFirst
   */
  export type log_volume_transferFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * Filter, which log_volume_transfer to fetch.
     */
    where?: log_volume_transferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_volume_transfers to fetch.
     */
    orderBy?: log_volume_transferOrderByWithRelationInput | log_volume_transferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_volume_transfers.
     */
    cursor?: log_volume_transferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_volume_transfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_volume_transfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_volume_transfers.
     */
    distinct?: Log_volume_transferScalarFieldEnum | Log_volume_transferScalarFieldEnum[]
  }

  /**
   * log_volume_transfer findFirstOrThrow
   */
  export type log_volume_transferFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * Filter, which log_volume_transfer to fetch.
     */
    where?: log_volume_transferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_volume_transfers to fetch.
     */
    orderBy?: log_volume_transferOrderByWithRelationInput | log_volume_transferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for log_volume_transfers.
     */
    cursor?: log_volume_transferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_volume_transfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_volume_transfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of log_volume_transfers.
     */
    distinct?: Log_volume_transferScalarFieldEnum | Log_volume_transferScalarFieldEnum[]
  }

  /**
   * log_volume_transfer findMany
   */
  export type log_volume_transferFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * Filter, which log_volume_transfers to fetch.
     */
    where?: log_volume_transferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of log_volume_transfers to fetch.
     */
    orderBy?: log_volume_transferOrderByWithRelationInput | log_volume_transferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing log_volume_transfers.
     */
    cursor?: log_volume_transferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` log_volume_transfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` log_volume_transfers.
     */
    skip?: number
    distinct?: Log_volume_transferScalarFieldEnum | Log_volume_transferScalarFieldEnum[]
  }

  /**
   * log_volume_transfer create
   */
  export type log_volume_transferCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * The data needed to create a log_volume_transfer.
     */
    data: XOR<log_volume_transferCreateInput, log_volume_transferUncheckedCreateInput>
  }

  /**
   * log_volume_transfer createMany
   */
  export type log_volume_transferCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many log_volume_transfers.
     */
    data: log_volume_transferCreateManyInput | log_volume_transferCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * log_volume_transfer createManyAndReturn
   */
  export type log_volume_transferCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * The data used to create many log_volume_transfers.
     */
    data: log_volume_transferCreateManyInput | log_volume_transferCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_volume_transfer update
   */
  export type log_volume_transferUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * The data needed to update a log_volume_transfer.
     */
    data: XOR<log_volume_transferUpdateInput, log_volume_transferUncheckedUpdateInput>
    /**
     * Choose, which log_volume_transfer to update.
     */
    where: log_volume_transferWhereUniqueInput
  }

  /**
   * log_volume_transfer updateMany
   */
  export type log_volume_transferUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update log_volume_transfers.
     */
    data: XOR<log_volume_transferUpdateManyMutationInput, log_volume_transferUncheckedUpdateManyInput>
    /**
     * Filter which log_volume_transfers to update
     */
    where?: log_volume_transferWhereInput
    /**
     * Limit how many log_volume_transfers to update.
     */
    limit?: number
  }

  /**
   * log_volume_transfer updateManyAndReturn
   */
  export type log_volume_transferUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * The data used to update log_volume_transfers.
     */
    data: XOR<log_volume_transferUpdateManyMutationInput, log_volume_transferUncheckedUpdateManyInput>
    /**
     * Filter which log_volume_transfers to update
     */
    where?: log_volume_transferWhereInput
    /**
     * Limit how many log_volume_transfers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * log_volume_transfer upsert
   */
  export type log_volume_transferUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * The filter to search for the log_volume_transfer to update in case it exists.
     */
    where: log_volume_transferWhereUniqueInput
    /**
     * In case the log_volume_transfer found by the `where` argument doesn't exist, create a new log_volume_transfer with this data.
     */
    create: XOR<log_volume_transferCreateInput, log_volume_transferUncheckedCreateInput>
    /**
     * In case the log_volume_transfer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<log_volume_transferUpdateInput, log_volume_transferUncheckedUpdateInput>
  }

  /**
   * log_volume_transfer delete
   */
  export type log_volume_transferDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    /**
     * Filter which log_volume_transfer to delete.
     */
    where: log_volume_transferWhereUniqueInput
  }

  /**
   * log_volume_transfer deleteMany
   */
  export type log_volume_transferDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which log_volume_transfers to delete
     */
    where?: log_volume_transferWhereInput
    /**
     * Limit how many log_volume_transfers to delete.
     */
    limit?: number
  }

  /**
   * log_volume_transfer without action
   */
  export type log_volume_transferDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
  }


  /**
   * Model notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    notification_id: number | null
  }

  export type NotificationSumAggregateOutputType = {
    notification_id: number | null
  }

  export type NotificationMinAggregateOutputType = {
    notification_id: number | null
    message: string | null
    message_type: string | null
    private: boolean | null
    audience_type: string | null
    is_read: boolean | null
    created_at: Date | null
    expires_at: Date | null
    created_by: string | null
  }

  export type NotificationMaxAggregateOutputType = {
    notification_id: number | null
    message: string | null
    message_type: string | null
    private: boolean | null
    audience_type: string | null
    is_read: boolean | null
    created_at: Date | null
    expires_at: Date | null
    created_by: string | null
  }

  export type NotificationCountAggregateOutputType = {
    notification_id: number
    message: number
    message_type: number
    private: number
    audience_type: number
    is_read: number
    created_at: number
    expires_at: number
    created_by: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    notification_id?: true
  }

  export type NotificationSumAggregateInputType = {
    notification_id?: true
  }

  export type NotificationMinAggregateInputType = {
    notification_id?: true
    message?: true
    message_type?: true
    private?: true
    audience_type?: true
    is_read?: true
    created_at?: true
    expires_at?: true
    created_by?: true
  }

  export type NotificationMaxAggregateInputType = {
    notification_id?: true
    message?: true
    message_type?: true
    private?: true
    audience_type?: true
    is_read?: true
    created_at?: true
    expires_at?: true
    created_by?: true
  }

  export type NotificationCountAggregateInputType = {
    notification_id?: true
    message?: true
    message_type?: true
    private?: true
    audience_type?: true
    is_read?: true
    created_at?: true
    expires_at?: true
    created_by?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notification to aggregate.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type notificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithAggregationInput | notificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: notificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    notification_id: number
    message: string
    message_type: string
    private: boolean
    audience_type: string
    is_read: boolean
    created_at: Date
    expires_at: Date | null
    created_by: string
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends notificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type notificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    notification_id?: boolean
    message?: boolean
    message_type?: boolean
    private?: boolean
    audience_type?: boolean
    is_read?: boolean
    created_at?: boolean
    expires_at?: boolean
    created_by?: boolean
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    notification_id?: boolean
    message?: boolean
    message_type?: boolean
    private?: boolean
    audience_type?: boolean
    is_read?: boolean
    created_at?: boolean
    expires_at?: boolean
    created_by?: boolean
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    notification_id?: boolean
    message?: boolean
    message_type?: boolean
    private?: boolean
    audience_type?: boolean
    is_read?: boolean
    created_at?: boolean
    expires_at?: boolean
    created_by?: boolean
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectScalar = {
    notification_id?: boolean
    message?: boolean
    message_type?: boolean
    private?: boolean
    audience_type?: boolean
    is_read?: boolean
    created_at?: boolean
    expires_at?: boolean
    created_by?: boolean
  }

  export type notificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"notification_id" | "message" | "message_type" | "private" | "audience_type" | "is_read" | "created_at" | "expires_at" | "created_by", ExtArgs["result"]["notification"]>

  export type $notificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notification"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      notification_id: number
      message: string
      message_type: string
      private: boolean
      audience_type: string
      is_read: boolean
      created_at: Date
      expires_at: Date | null
      created_by: string
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type notificationGetPayload<S extends boolean | null | undefined | notificationDefaultArgs> = $Result.GetResult<Prisma.$notificationPayload, S>

  type notificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface notificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notification'], meta: { name: 'notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {notificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationFindUniqueArgs>(args: SelectSubset<T, notificationFindUniqueArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationFindFirstArgs>(args?: SelectSubset<T, notificationFindFirstArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `notification_id`
     * const notificationWithNotification_idOnly = await prisma.notification.findMany({ select: { notification_id: true } })
     * 
     */
    findMany<T extends notificationFindManyArgs>(args?: SelectSubset<T, notificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {notificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends notificationCreateArgs>(args: SelectSubset<T, notificationCreateArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {notificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationCreateManyArgs>(args?: SelectSubset<T, notificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {notificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `notification_id`
     * const notificationWithNotification_idOnly = await prisma.notification.createManyAndReturn({
     *   select: { notification_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends notificationCreateManyAndReturnArgs>(args?: SelectSubset<T, notificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {notificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends notificationDeleteArgs>(args: SelectSubset<T, notificationDeleteArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {notificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationUpdateArgs>(args: SelectSubset<T, notificationUpdateArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {notificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationDeleteManyArgs>(args?: SelectSubset<T, notificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationUpdateManyArgs>(args: SelectSubset<T, notificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {notificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `notification_id`
     * const notificationWithNotification_idOnly = await prisma.notification.updateManyAndReturn({
     *   select: { notification_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends notificationUpdateManyAndReturnArgs>(args: SelectSubset<T, notificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {notificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends notificationUpsertArgs>(args: SelectSubset<T, notificationUpsertArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationCountArgs>(
      args?: Subset<T, notificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationGroupByArgs['orderBy'] }
        : { orderBy?: notificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notification model
   */
  readonly fields: notificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notification model
   */
  interface notificationFieldRefs {
    readonly notification_id: FieldRef<"notification", 'Int'>
    readonly message: FieldRef<"notification", 'String'>
    readonly message_type: FieldRef<"notification", 'String'>
    readonly private: FieldRef<"notification", 'Boolean'>
    readonly audience_type: FieldRef<"notification", 'String'>
    readonly is_read: FieldRef<"notification", 'Boolean'>
    readonly created_at: FieldRef<"notification", 'DateTime'>
    readonly expires_at: FieldRef<"notification", 'DateTime'>
    readonly created_by: FieldRef<"notification", 'String'>
  }
    

  // Custom InputTypes
  /**
   * notification findUnique
   */
  export type notificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification findUniqueOrThrow
   */
  export type notificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification findFirst
   */
  export type notificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification findFirstOrThrow
   */
  export type notificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification findMany
   */
  export type notificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification create
   */
  export type notificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The data needed to create a notification.
     */
    data: XOR<notificationCreateInput, notificationUncheckedCreateInput>
  }

  /**
   * notification createMany
   */
  export type notificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifications.
     */
    data: notificationCreateManyInput | notificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notification createManyAndReturn
   */
  export type notificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The data used to create many notifications.
     */
    data: notificationCreateManyInput | notificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notification update
   */
  export type notificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The data needed to update a notification.
     */
    data: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
    /**
     * Choose, which notification to update.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification updateMany
   */
  export type notificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notification updateManyAndReturn
   */
  export type notificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notification upsert
   */
  export type notificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The filter to search for the notification to update in case it exists.
     */
    where: notificationWhereUniqueInput
    /**
     * In case the notification found by the `where` argument doesn't exist, create a new notification with this data.
     */
    create: XOR<notificationCreateInput, notificationUncheckedCreateInput>
    /**
     * In case the notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
  }

  /**
   * notification delete
   */
  export type notificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Filter which notification to delete.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification deleteMany
   */
  export type notificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to delete
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to delete.
     */
    limit?: number
  }

  /**
   * notification without action
   */
  export type notificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
  }


  /**
   * Model order_detail
   */

  export type AggregateOrder_detail = {
    _count: Order_detailCountAggregateOutputType | null
    _avg: Order_detailAvgAggregateOutputType | null
    _sum: Order_detailSumAggregateOutputType | null
    _min: Order_detailMinAggregateOutputType | null
    _max: Order_detailMaxAggregateOutputType | null
  }

  export type Order_detailAvgAggregateOutputType = {
    detail_id: number | null
    order_id: number | null
    material_id: number | null
    drum_quantity: number | null
    drum_weight: Decimal | null
    drum_volume: Decimal | null
  }

  export type Order_detailSumAggregateOutputType = {
    detail_id: number | null
    order_id: number | null
    material_id: number | null
    drum_quantity: number | null
    drum_weight: Decimal | null
    drum_volume: Decimal | null
  }

  export type Order_detailMinAggregateOutputType = {
    detail_id: number | null
    order_id: number | null
    batch_code: string | null
    material_id: number | null
    material_name: string | null
    drum_quantity: number | null
    drum_weight: Decimal | null
    drum_volume: Decimal | null
    status: string | null
    notes: string | null
    material_code: string | null
  }

  export type Order_detailMaxAggregateOutputType = {
    detail_id: number | null
    order_id: number | null
    batch_code: string | null
    material_id: number | null
    material_name: string | null
    drum_quantity: number | null
    drum_weight: Decimal | null
    drum_volume: Decimal | null
    status: string | null
    notes: string | null
    material_code: string | null
  }

  export type Order_detailCountAggregateOutputType = {
    detail_id: number
    order_id: number
    batch_code: number
    material_id: number
    material_name: number
    drum_quantity: number
    drum_weight: number
    drum_volume: number
    status: number
    notes: number
    material_code: number
    _all: number
  }


  export type Order_detailAvgAggregateInputType = {
    detail_id?: true
    order_id?: true
    material_id?: true
    drum_quantity?: true
    drum_weight?: true
    drum_volume?: true
  }

  export type Order_detailSumAggregateInputType = {
    detail_id?: true
    order_id?: true
    material_id?: true
    drum_quantity?: true
    drum_weight?: true
    drum_volume?: true
  }

  export type Order_detailMinAggregateInputType = {
    detail_id?: true
    order_id?: true
    batch_code?: true
    material_id?: true
    material_name?: true
    drum_quantity?: true
    drum_weight?: true
    drum_volume?: true
    status?: true
    notes?: true
    material_code?: true
  }

  export type Order_detailMaxAggregateInputType = {
    detail_id?: true
    order_id?: true
    batch_code?: true
    material_id?: true
    material_name?: true
    drum_quantity?: true
    drum_weight?: true
    drum_volume?: true
    status?: true
    notes?: true
    material_code?: true
  }

  export type Order_detailCountAggregateInputType = {
    detail_id?: true
    order_id?: true
    batch_code?: true
    material_id?: true
    material_name?: true
    drum_quantity?: true
    drum_weight?: true
    drum_volume?: true
    status?: true
    notes?: true
    material_code?: true
    _all?: true
  }

  export type Order_detailAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_detail to aggregate.
     */
    where?: order_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_details to fetch.
     */
    orderBy?: order_detailOrderByWithRelationInput | order_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: order_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned order_details
    **/
    _count?: true | Order_detailCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Order_detailAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Order_detailSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Order_detailMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Order_detailMaxAggregateInputType
  }

  export type GetOrder_detailAggregateType<T extends Order_detailAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder_detail]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder_detail[P]>
      : GetScalarType<T[P], AggregateOrder_detail[P]>
  }




  export type order_detailGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detailWhereInput
    orderBy?: order_detailOrderByWithAggregationInput | order_detailOrderByWithAggregationInput[]
    by: Order_detailScalarFieldEnum[] | Order_detailScalarFieldEnum
    having?: order_detailScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Order_detailCountAggregateInputType | true
    _avg?: Order_detailAvgAggregateInputType
    _sum?: Order_detailSumAggregateInputType
    _min?: Order_detailMinAggregateInputType
    _max?: Order_detailMaxAggregateInputType
  }

  export type Order_detailGroupByOutputType = {
    detail_id: number
    order_id: number
    batch_code: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight: Decimal | null
    drum_volume: Decimal | null
    status: string
    notes: string | null
    material_code: string
    _count: Order_detailCountAggregateOutputType | null
    _avg: Order_detailAvgAggregateOutputType | null
    _sum: Order_detailSumAggregateOutputType | null
    _min: Order_detailMinAggregateOutputType | null
    _max: Order_detailMaxAggregateOutputType | null
  }

  type GetOrder_detailGroupByPayload<T extends order_detailGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Order_detailGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Order_detailGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Order_detailGroupByOutputType[P]>
            : GetScalarType<T[P], Order_detailGroupByOutputType[P]>
        }
      >
    >


  export type order_detailSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    detail_id?: boolean
    order_id?: boolean
    batch_code?: boolean
    material_id?: boolean
    material_name?: boolean
    drum_quantity?: boolean
    drum_weight?: boolean
    drum_volume?: boolean
    status?: boolean
    notes?: boolean
    material_code?: boolean
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    stock_order?: boolean | stock_orderDefaultArgs<ExtArgs>
    order_detail_stock_activity?: boolean | order_detail$order_detail_stock_activityArgs<ExtArgs>
    stock_activity?: boolean | order_detail$stock_activityArgs<ExtArgs>
    stock_drum?: boolean | order_detail$stock_drumArgs<ExtArgs>
    stock_drum_new?: boolean | order_detail$stock_drum_newArgs<ExtArgs>
    _count?: boolean | Order_detailCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_detail"]>

  export type order_detailSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    detail_id?: boolean
    order_id?: boolean
    batch_code?: boolean
    material_id?: boolean
    material_name?: boolean
    drum_quantity?: boolean
    drum_weight?: boolean
    drum_volume?: boolean
    status?: boolean
    notes?: boolean
    material_code?: boolean
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    stock_order?: boolean | stock_orderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_detail"]>

  export type order_detailSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    detail_id?: boolean
    order_id?: boolean
    batch_code?: boolean
    material_id?: boolean
    material_name?: boolean
    drum_quantity?: boolean
    drum_weight?: boolean
    drum_volume?: boolean
    status?: boolean
    notes?: boolean
    material_code?: boolean
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    stock_order?: boolean | stock_orderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_detail"]>

  export type order_detailSelectScalar = {
    detail_id?: boolean
    order_id?: boolean
    batch_code?: boolean
    material_id?: boolean
    material_name?: boolean
    drum_quantity?: boolean
    drum_weight?: boolean
    drum_volume?: boolean
    status?: boolean
    notes?: boolean
    material_code?: boolean
  }

  export type order_detailOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"detail_id" | "order_id" | "batch_code" | "material_id" | "material_name" | "drum_quantity" | "drum_weight" | "drum_volume" | "status" | "notes" | "material_code", ExtArgs["result"]["order_detail"]>
  export type order_detailInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    stock_order?: boolean | stock_orderDefaultArgs<ExtArgs>
    order_detail_stock_activity?: boolean | order_detail$order_detail_stock_activityArgs<ExtArgs>
    stock_activity?: boolean | order_detail$stock_activityArgs<ExtArgs>
    stock_drum?: boolean | order_detail$stock_drumArgs<ExtArgs>
    stock_drum_new?: boolean | order_detail$stock_drum_newArgs<ExtArgs>
    _count?: boolean | Order_detailCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type order_detailIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    stock_order?: boolean | stock_orderDefaultArgs<ExtArgs>
  }
  export type order_detailIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    stock_order?: boolean | stock_orderDefaultArgs<ExtArgs>
  }

  export type $order_detailPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "order_detail"
    objects: {
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs>
      stock_order: Prisma.$stock_orderPayload<ExtArgs>
      order_detail_stock_activity: Prisma.$order_detail_stock_activityPayload<ExtArgs>[]
      stock_activity: Prisma.$stock_activityPayload<ExtArgs>[]
      stock_drum: Prisma.$stock_drumPayload<ExtArgs>[]
      stock_drum_new: Prisma.$stock_drum_newPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      detail_id: number
      order_id: number
      batch_code: string | null
      material_id: number
      material_name: string
      drum_quantity: number
      drum_weight: Prisma.Decimal | null
      drum_volume: Prisma.Decimal | null
      status: string
      notes: string | null
      material_code: string
    }, ExtArgs["result"]["order_detail"]>
    composites: {}
  }

  type order_detailGetPayload<S extends boolean | null | undefined | order_detailDefaultArgs> = $Result.GetResult<Prisma.$order_detailPayload, S>

  type order_detailCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<order_detailFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Order_detailCountAggregateInputType | true
    }

  export interface order_detailDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_detail'], meta: { name: 'order_detail' } }
    /**
     * Find zero or one Order_detail that matches the filter.
     * @param {order_detailFindUniqueArgs} args - Arguments to find a Order_detail
     * @example
     * // Get one Order_detail
     * const order_detail = await prisma.order_detail.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends order_detailFindUniqueArgs>(args: SelectSubset<T, order_detailFindUniqueArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order_detail that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {order_detailFindUniqueOrThrowArgs} args - Arguments to find a Order_detail
     * @example
     * // Get one Order_detail
     * const order_detail = await prisma.order_detail.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends order_detailFindUniqueOrThrowArgs>(args: SelectSubset<T, order_detailFindUniqueOrThrowArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_detail that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailFindFirstArgs} args - Arguments to find a Order_detail
     * @example
     * // Get one Order_detail
     * const order_detail = await prisma.order_detail.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends order_detailFindFirstArgs>(args?: SelectSubset<T, order_detailFindFirstArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_detail that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailFindFirstOrThrowArgs} args - Arguments to find a Order_detail
     * @example
     * // Get one Order_detail
     * const order_detail = await prisma.order_detail.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends order_detailFindFirstOrThrowArgs>(args?: SelectSubset<T, order_detailFindFirstOrThrowArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Order_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Order_details
     * const order_details = await prisma.order_detail.findMany()
     * 
     * // Get first 10 Order_details
     * const order_details = await prisma.order_detail.findMany({ take: 10 })
     * 
     * // Only select the `detail_id`
     * const order_detailWithDetail_idOnly = await prisma.order_detail.findMany({ select: { detail_id: true } })
     * 
     */
    findMany<T extends order_detailFindManyArgs>(args?: SelectSubset<T, order_detailFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order_detail.
     * @param {order_detailCreateArgs} args - Arguments to create a Order_detail.
     * @example
     * // Create one Order_detail
     * const Order_detail = await prisma.order_detail.create({
     *   data: {
     *     // ... data to create a Order_detail
     *   }
     * })
     * 
     */
    create<T extends order_detailCreateArgs>(args: SelectSubset<T, order_detailCreateArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Order_details.
     * @param {order_detailCreateManyArgs} args - Arguments to create many Order_details.
     * @example
     * // Create many Order_details
     * const order_detail = await prisma.order_detail.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends order_detailCreateManyArgs>(args?: SelectSubset<T, order_detailCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Order_details and returns the data saved in the database.
     * @param {order_detailCreateManyAndReturnArgs} args - Arguments to create many Order_details.
     * @example
     * // Create many Order_details
     * const order_detail = await prisma.order_detail.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Order_details and only return the `detail_id`
     * const order_detailWithDetail_idOnly = await prisma.order_detail.createManyAndReturn({
     *   select: { detail_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends order_detailCreateManyAndReturnArgs>(args?: SelectSubset<T, order_detailCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order_detail.
     * @param {order_detailDeleteArgs} args - Arguments to delete one Order_detail.
     * @example
     * // Delete one Order_detail
     * const Order_detail = await prisma.order_detail.delete({
     *   where: {
     *     // ... filter to delete one Order_detail
     *   }
     * })
     * 
     */
    delete<T extends order_detailDeleteArgs>(args: SelectSubset<T, order_detailDeleteArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order_detail.
     * @param {order_detailUpdateArgs} args - Arguments to update one Order_detail.
     * @example
     * // Update one Order_detail
     * const order_detail = await prisma.order_detail.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends order_detailUpdateArgs>(args: SelectSubset<T, order_detailUpdateArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Order_details.
     * @param {order_detailDeleteManyArgs} args - Arguments to filter Order_details to delete.
     * @example
     * // Delete a few Order_details
     * const { count } = await prisma.order_detail.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends order_detailDeleteManyArgs>(args?: SelectSubset<T, order_detailDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Order_details
     * const order_detail = await prisma.order_detail.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends order_detailUpdateManyArgs>(args: SelectSubset<T, order_detailUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_details and returns the data updated in the database.
     * @param {order_detailUpdateManyAndReturnArgs} args - Arguments to update many Order_details.
     * @example
     * // Update many Order_details
     * const order_detail = await prisma.order_detail.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Order_details and only return the `detail_id`
     * const order_detailWithDetail_idOnly = await prisma.order_detail.updateManyAndReturn({
     *   select: { detail_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends order_detailUpdateManyAndReturnArgs>(args: SelectSubset<T, order_detailUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order_detail.
     * @param {order_detailUpsertArgs} args - Arguments to update or create a Order_detail.
     * @example
     * // Update or create a Order_detail
     * const order_detail = await prisma.order_detail.upsert({
     *   create: {
     *     // ... data to create a Order_detail
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order_detail we want to update
     *   }
     * })
     */
    upsert<T extends order_detailUpsertArgs>(args: SelectSubset<T, order_detailUpsertArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Order_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailCountArgs} args - Arguments to filter Order_details to count.
     * @example
     * // Count the number of Order_details
     * const count = await prisma.order_detail.count({
     *   where: {
     *     // ... the filter for the Order_details we want to count
     *   }
     * })
    **/
    count<T extends order_detailCountArgs>(
      args?: Subset<T, order_detailCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Order_detailCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order_detail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Order_detailAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Order_detailAggregateArgs>(args: Subset<T, Order_detailAggregateArgs>): Prisma.PrismaPromise<GetOrder_detailAggregateType<T>>

    /**
     * Group by Order_detail.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends order_detailGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: order_detailGroupByArgs['orderBy'] }
        : { orderBy?: order_detailGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, order_detailGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_detailGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the order_detail model
   */
  readonly fields: order_detailFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for order_detail.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__order_detailClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ref_materials<T extends ref_materialsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ref_materialsDefaultArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    stock_order<T extends stock_orderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, stock_orderDefaultArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    order_detail_stock_activity<T extends order_detail$order_detail_stock_activityArgs<ExtArgs> = {}>(args?: Subset<T, order_detail$order_detail_stock_activityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_activity<T extends order_detail$stock_activityArgs<ExtArgs> = {}>(args?: Subset<T, order_detail$stock_activityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_drum<T extends order_detail$stock_drumArgs<ExtArgs> = {}>(args?: Subset<T, order_detail$stock_drumArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_drum_new<T extends order_detail$stock_drum_newArgs<ExtArgs> = {}>(args?: Subset<T, order_detail$stock_drum_newArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the order_detail model
   */
  interface order_detailFieldRefs {
    readonly detail_id: FieldRef<"order_detail", 'Int'>
    readonly order_id: FieldRef<"order_detail", 'Int'>
    readonly batch_code: FieldRef<"order_detail", 'String'>
    readonly material_id: FieldRef<"order_detail", 'Int'>
    readonly material_name: FieldRef<"order_detail", 'String'>
    readonly drum_quantity: FieldRef<"order_detail", 'Int'>
    readonly drum_weight: FieldRef<"order_detail", 'Decimal'>
    readonly drum_volume: FieldRef<"order_detail", 'Decimal'>
    readonly status: FieldRef<"order_detail", 'String'>
    readonly notes: FieldRef<"order_detail", 'String'>
    readonly material_code: FieldRef<"order_detail", 'String'>
  }
    

  // Custom InputTypes
  /**
   * order_detail findUnique
   */
  export type order_detailFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * Filter, which order_detail to fetch.
     */
    where: order_detailWhereUniqueInput
  }

  /**
   * order_detail findUniqueOrThrow
   */
  export type order_detailFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * Filter, which order_detail to fetch.
     */
    where: order_detailWhereUniqueInput
  }

  /**
   * order_detail findFirst
   */
  export type order_detailFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * Filter, which order_detail to fetch.
     */
    where?: order_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_details to fetch.
     */
    orderBy?: order_detailOrderByWithRelationInput | order_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_details.
     */
    cursor?: order_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_details.
     */
    distinct?: Order_detailScalarFieldEnum | Order_detailScalarFieldEnum[]
  }

  /**
   * order_detail findFirstOrThrow
   */
  export type order_detailFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * Filter, which order_detail to fetch.
     */
    where?: order_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_details to fetch.
     */
    orderBy?: order_detailOrderByWithRelationInput | order_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_details.
     */
    cursor?: order_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_details.
     */
    distinct?: Order_detailScalarFieldEnum | Order_detailScalarFieldEnum[]
  }

  /**
   * order_detail findMany
   */
  export type order_detailFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * Filter, which order_details to fetch.
     */
    where?: order_detailWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_details to fetch.
     */
    orderBy?: order_detailOrderByWithRelationInput | order_detailOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing order_details.
     */
    cursor?: order_detailWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_details.
     */
    skip?: number
    distinct?: Order_detailScalarFieldEnum | Order_detailScalarFieldEnum[]
  }

  /**
   * order_detail create
   */
  export type order_detailCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * The data needed to create a order_detail.
     */
    data: XOR<order_detailCreateInput, order_detailUncheckedCreateInput>
  }

  /**
   * order_detail createMany
   */
  export type order_detailCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many order_details.
     */
    data: order_detailCreateManyInput | order_detailCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * order_detail createManyAndReturn
   */
  export type order_detailCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * The data used to create many order_details.
     */
    data: order_detailCreateManyInput | order_detailCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_detail update
   */
  export type order_detailUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * The data needed to update a order_detail.
     */
    data: XOR<order_detailUpdateInput, order_detailUncheckedUpdateInput>
    /**
     * Choose, which order_detail to update.
     */
    where: order_detailWhereUniqueInput
  }

  /**
   * order_detail updateMany
   */
  export type order_detailUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update order_details.
     */
    data: XOR<order_detailUpdateManyMutationInput, order_detailUncheckedUpdateManyInput>
    /**
     * Filter which order_details to update
     */
    where?: order_detailWhereInput
    /**
     * Limit how many order_details to update.
     */
    limit?: number
  }

  /**
   * order_detail updateManyAndReturn
   */
  export type order_detailUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * The data used to update order_details.
     */
    data: XOR<order_detailUpdateManyMutationInput, order_detailUncheckedUpdateManyInput>
    /**
     * Filter which order_details to update
     */
    where?: order_detailWhereInput
    /**
     * Limit how many order_details to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_detail upsert
   */
  export type order_detailUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * The filter to search for the order_detail to update in case it exists.
     */
    where: order_detailWhereUniqueInput
    /**
     * In case the order_detail found by the `where` argument doesn't exist, create a new order_detail with this data.
     */
    create: XOR<order_detailCreateInput, order_detailUncheckedCreateInput>
    /**
     * In case the order_detail was found with the provided `where` argument, update it with this data.
     */
    update: XOR<order_detailUpdateInput, order_detailUncheckedUpdateInput>
  }

  /**
   * order_detail delete
   */
  export type order_detailDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    /**
     * Filter which order_detail to delete.
     */
    where: order_detailWhereUniqueInput
  }

  /**
   * order_detail deleteMany
   */
  export type order_detailDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_details to delete
     */
    where?: order_detailWhereInput
    /**
     * Limit how many order_details to delete.
     */
    limit?: number
  }

  /**
   * order_detail.order_detail_stock_activity
   */
  export type order_detail$order_detail_stock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    where?: order_detail_stock_activityWhereInput
    orderBy?: order_detail_stock_activityOrderByWithRelationInput | order_detail_stock_activityOrderByWithRelationInput[]
    cursor?: order_detail_stock_activityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_detail_stock_activityScalarFieldEnum | Order_detail_stock_activityScalarFieldEnum[]
  }

  /**
   * order_detail.stock_activity
   */
  export type order_detail$stock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    where?: stock_activityWhereInput
    orderBy?: stock_activityOrderByWithRelationInput | stock_activityOrderByWithRelationInput[]
    cursor?: stock_activityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_activityScalarFieldEnum | Stock_activityScalarFieldEnum[]
  }

  /**
   * order_detail.stock_drum
   */
  export type order_detail$stock_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    where?: stock_drumWhereInput
    orderBy?: stock_drumOrderByWithRelationInput | stock_drumOrderByWithRelationInput[]
    cursor?: stock_drumWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_drumScalarFieldEnum | Stock_drumScalarFieldEnum[]
  }

  /**
   * order_detail.stock_drum_new
   */
  export type order_detail$stock_drum_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    where?: stock_drum_newWhereInput
    orderBy?: stock_drum_newOrderByWithRelationInput | stock_drum_newOrderByWithRelationInput[]
    cursor?: stock_drum_newWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_drum_newScalarFieldEnum | Stock_drum_newScalarFieldEnum[]
  }

  /**
   * order_detail without action
   */
  export type order_detailDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
  }


  /**
   * Model product_prices
   */

  export type AggregateProduct_prices = {
    _count: Product_pricesCountAggregateOutputType | null
    _avg: Product_pricesAvgAggregateOutputType | null
    _sum: Product_pricesSumAggregateOutputType | null
    _min: Product_pricesMinAggregateOutputType | null
    _max: Product_pricesMaxAggregateOutputType | null
  }

  export type Product_pricesAvgAggregateOutputType = {
    product_id: number | null
    bottle_size_id: number | null
    price: Decimal | null
  }

  export type Product_pricesSumAggregateOutputType = {
    product_id: number | null
    bottle_size_id: number | null
    price: Decimal | null
  }

  export type Product_pricesMinAggregateOutputType = {
    product_id: number | null
    bottle_size_id: number | null
    price: Decimal | null
  }

  export type Product_pricesMaxAggregateOutputType = {
    product_id: number | null
    bottle_size_id: number | null
    price: Decimal | null
  }

  export type Product_pricesCountAggregateOutputType = {
    product_id: number
    bottle_size_id: number
    price: number
    _all: number
  }


  export type Product_pricesAvgAggregateInputType = {
    product_id?: true
    bottle_size_id?: true
    price?: true
  }

  export type Product_pricesSumAggregateInputType = {
    product_id?: true
    bottle_size_id?: true
    price?: true
  }

  export type Product_pricesMinAggregateInputType = {
    product_id?: true
    bottle_size_id?: true
    price?: true
  }

  export type Product_pricesMaxAggregateInputType = {
    product_id?: true
    bottle_size_id?: true
    price?: true
  }

  export type Product_pricesCountAggregateInputType = {
    product_id?: true
    bottle_size_id?: true
    price?: true
    _all?: true
  }

  export type Product_pricesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_prices to aggregate.
     */
    where?: product_pricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_prices to fetch.
     */
    orderBy?: product_pricesOrderByWithRelationInput | product_pricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_pricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_prices
    **/
    _count?: true | Product_pricesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_pricesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_pricesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_pricesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_pricesMaxAggregateInputType
  }

  export type GetProduct_pricesAggregateType<T extends Product_pricesAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_prices]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_prices[P]>
      : GetScalarType<T[P], AggregateProduct_prices[P]>
  }




  export type product_pricesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_pricesWhereInput
    orderBy?: product_pricesOrderByWithAggregationInput | product_pricesOrderByWithAggregationInput[]
    by: Product_pricesScalarFieldEnum[] | Product_pricesScalarFieldEnum
    having?: product_pricesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_pricesCountAggregateInputType | true
    _avg?: Product_pricesAvgAggregateInputType
    _sum?: Product_pricesSumAggregateInputType
    _min?: Product_pricesMinAggregateInputType
    _max?: Product_pricesMaxAggregateInputType
  }

  export type Product_pricesGroupByOutputType = {
    product_id: number
    bottle_size_id: number
    price: Decimal
    _count: Product_pricesCountAggregateOutputType | null
    _avg: Product_pricesAvgAggregateOutputType | null
    _sum: Product_pricesSumAggregateOutputType | null
    _min: Product_pricesMinAggregateOutputType | null
    _max: Product_pricesMaxAggregateOutputType | null
  }

  type GetProduct_pricesGroupByPayload<T extends product_pricesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_pricesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_pricesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_pricesGroupByOutputType[P]>
            : GetScalarType<T[P], Product_pricesGroupByOutputType[P]>
        }
      >
    >


  export type product_pricesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_id?: boolean
    bottle_size_id?: boolean
    price?: boolean
    bottle_sizes?: boolean | bottle_sizesDefaultArgs<ExtArgs>
    products?: boolean | ref_productDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_prices"]>

  export type product_pricesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_id?: boolean
    bottle_size_id?: boolean
    price?: boolean
    bottle_sizes?: boolean | bottle_sizesDefaultArgs<ExtArgs>
    products?: boolean | ref_productDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_prices"]>

  export type product_pricesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_id?: boolean
    bottle_size_id?: boolean
    price?: boolean
    bottle_sizes?: boolean | bottle_sizesDefaultArgs<ExtArgs>
    products?: boolean | ref_productDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_prices"]>

  export type product_pricesSelectScalar = {
    product_id?: boolean
    bottle_size_id?: boolean
    price?: boolean
  }

  export type product_pricesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"product_id" | "bottle_size_id" | "price", ExtArgs["result"]["product_prices"]>
  export type product_pricesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bottle_sizes?: boolean | bottle_sizesDefaultArgs<ExtArgs>
    products?: boolean | ref_productDefaultArgs<ExtArgs>
  }
  export type product_pricesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bottle_sizes?: boolean | bottle_sizesDefaultArgs<ExtArgs>
    products?: boolean | ref_productDefaultArgs<ExtArgs>
  }
  export type product_pricesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bottle_sizes?: boolean | bottle_sizesDefaultArgs<ExtArgs>
    products?: boolean | ref_productDefaultArgs<ExtArgs>
  }

  export type $product_pricesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_prices"
    objects: {
      bottle_sizes: Prisma.$bottle_sizesPayload<ExtArgs>
      products: Prisma.$ref_productPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      product_id: number
      bottle_size_id: number
      price: Prisma.Decimal
    }, ExtArgs["result"]["product_prices"]>
    composites: {}
  }

  type product_pricesGetPayload<S extends boolean | null | undefined | product_pricesDefaultArgs> = $Result.GetResult<Prisma.$product_pricesPayload, S>

  type product_pricesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<product_pricesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Product_pricesCountAggregateInputType | true
    }

  export interface product_pricesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_prices'], meta: { name: 'product_prices' } }
    /**
     * Find zero or one Product_prices that matches the filter.
     * @param {product_pricesFindUniqueArgs} args - Arguments to find a Product_prices
     * @example
     * // Get one Product_prices
     * const product_prices = await prisma.product_prices.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_pricesFindUniqueArgs>(args: SelectSubset<T, product_pricesFindUniqueArgs<ExtArgs>>): Prisma__product_pricesClient<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product_prices that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {product_pricesFindUniqueOrThrowArgs} args - Arguments to find a Product_prices
     * @example
     * // Get one Product_prices
     * const product_prices = await prisma.product_prices.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_pricesFindUniqueOrThrowArgs>(args: SelectSubset<T, product_pricesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_pricesClient<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_pricesFindFirstArgs} args - Arguments to find a Product_prices
     * @example
     * // Get one Product_prices
     * const product_prices = await prisma.product_prices.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_pricesFindFirstArgs>(args?: SelectSubset<T, product_pricesFindFirstArgs<ExtArgs>>): Prisma__product_pricesClient<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_prices that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_pricesFindFirstOrThrowArgs} args - Arguments to find a Product_prices
     * @example
     * // Get one Product_prices
     * const product_prices = await prisma.product_prices.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_pricesFindFirstOrThrowArgs>(args?: SelectSubset<T, product_pricesFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_pricesClient<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Product_prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_pricesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_prices
     * const product_prices = await prisma.product_prices.findMany()
     * 
     * // Get first 10 Product_prices
     * const product_prices = await prisma.product_prices.findMany({ take: 10 })
     * 
     * // Only select the `product_id`
     * const product_pricesWithProduct_idOnly = await prisma.product_prices.findMany({ select: { product_id: true } })
     * 
     */
    findMany<T extends product_pricesFindManyArgs>(args?: SelectSubset<T, product_pricesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product_prices.
     * @param {product_pricesCreateArgs} args - Arguments to create a Product_prices.
     * @example
     * // Create one Product_prices
     * const Product_prices = await prisma.product_prices.create({
     *   data: {
     *     // ... data to create a Product_prices
     *   }
     * })
     * 
     */
    create<T extends product_pricesCreateArgs>(args: SelectSubset<T, product_pricesCreateArgs<ExtArgs>>): Prisma__product_pricesClient<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Product_prices.
     * @param {product_pricesCreateManyArgs} args - Arguments to create many Product_prices.
     * @example
     * // Create many Product_prices
     * const product_prices = await prisma.product_prices.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_pricesCreateManyArgs>(args?: SelectSubset<T, product_pricesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Product_prices and returns the data saved in the database.
     * @param {product_pricesCreateManyAndReturnArgs} args - Arguments to create many Product_prices.
     * @example
     * // Create many Product_prices
     * const product_prices = await prisma.product_prices.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Product_prices and only return the `product_id`
     * const product_pricesWithProduct_idOnly = await prisma.product_prices.createManyAndReturn({
     *   select: { product_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends product_pricesCreateManyAndReturnArgs>(args?: SelectSubset<T, product_pricesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product_prices.
     * @param {product_pricesDeleteArgs} args - Arguments to delete one Product_prices.
     * @example
     * // Delete one Product_prices
     * const Product_prices = await prisma.product_prices.delete({
     *   where: {
     *     // ... filter to delete one Product_prices
     *   }
     * })
     * 
     */
    delete<T extends product_pricesDeleteArgs>(args: SelectSubset<T, product_pricesDeleteArgs<ExtArgs>>): Prisma__product_pricesClient<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product_prices.
     * @param {product_pricesUpdateArgs} args - Arguments to update one Product_prices.
     * @example
     * // Update one Product_prices
     * const product_prices = await prisma.product_prices.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_pricesUpdateArgs>(args: SelectSubset<T, product_pricesUpdateArgs<ExtArgs>>): Prisma__product_pricesClient<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Product_prices.
     * @param {product_pricesDeleteManyArgs} args - Arguments to filter Product_prices to delete.
     * @example
     * // Delete a few Product_prices
     * const { count } = await prisma.product_prices.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_pricesDeleteManyArgs>(args?: SelectSubset<T, product_pricesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_pricesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_prices
     * const product_prices = await prisma.product_prices.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_pricesUpdateManyArgs>(args: SelectSubset<T, product_pricesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_prices and returns the data updated in the database.
     * @param {product_pricesUpdateManyAndReturnArgs} args - Arguments to update many Product_prices.
     * @example
     * // Update many Product_prices
     * const product_prices = await prisma.product_prices.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Product_prices and only return the `product_id`
     * const product_pricesWithProduct_idOnly = await prisma.product_prices.updateManyAndReturn({
     *   select: { product_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends product_pricesUpdateManyAndReturnArgs>(args: SelectSubset<T, product_pricesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product_prices.
     * @param {product_pricesUpsertArgs} args - Arguments to update or create a Product_prices.
     * @example
     * // Update or create a Product_prices
     * const product_prices = await prisma.product_prices.upsert({
     *   create: {
     *     // ... data to create a Product_prices
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_prices we want to update
     *   }
     * })
     */
    upsert<T extends product_pricesUpsertArgs>(args: SelectSubset<T, product_pricesUpsertArgs<ExtArgs>>): Prisma__product_pricesClient<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Product_prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_pricesCountArgs} args - Arguments to filter Product_prices to count.
     * @example
     * // Count the number of Product_prices
     * const count = await prisma.product_prices.count({
     *   where: {
     *     // ... the filter for the Product_prices we want to count
     *   }
     * })
    **/
    count<T extends product_pricesCountArgs>(
      args?: Subset<T, product_pricesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_pricesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_pricesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_pricesAggregateArgs>(args: Subset<T, Product_pricesAggregateArgs>): Prisma.PrismaPromise<GetProduct_pricesAggregateType<T>>

    /**
     * Group by Product_prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_pricesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_pricesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_pricesGroupByArgs['orderBy'] }
        : { orderBy?: product_pricesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_pricesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_pricesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_prices model
   */
  readonly fields: product_pricesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_prices.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_pricesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    bottle_sizes<T extends bottle_sizesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, bottle_sizesDefaultArgs<ExtArgs>>): Prisma__bottle_sizesClient<$Result.GetResult<Prisma.$bottle_sizesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products<T extends ref_productDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ref_productDefaultArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_prices model
   */
  interface product_pricesFieldRefs {
    readonly product_id: FieldRef<"product_prices", 'Int'>
    readonly bottle_size_id: FieldRef<"product_prices", 'Int'>
    readonly price: FieldRef<"product_prices", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * product_prices findUnique
   */
  export type product_pricesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * Filter, which product_prices to fetch.
     */
    where: product_pricesWhereUniqueInput
  }

  /**
   * product_prices findUniqueOrThrow
   */
  export type product_pricesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * Filter, which product_prices to fetch.
     */
    where: product_pricesWhereUniqueInput
  }

  /**
   * product_prices findFirst
   */
  export type product_pricesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * Filter, which product_prices to fetch.
     */
    where?: product_pricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_prices to fetch.
     */
    orderBy?: product_pricesOrderByWithRelationInput | product_pricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_prices.
     */
    cursor?: product_pricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_prices.
     */
    distinct?: Product_pricesScalarFieldEnum | Product_pricesScalarFieldEnum[]
  }

  /**
   * product_prices findFirstOrThrow
   */
  export type product_pricesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * Filter, which product_prices to fetch.
     */
    where?: product_pricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_prices to fetch.
     */
    orderBy?: product_pricesOrderByWithRelationInput | product_pricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_prices.
     */
    cursor?: product_pricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_prices.
     */
    distinct?: Product_pricesScalarFieldEnum | Product_pricesScalarFieldEnum[]
  }

  /**
   * product_prices findMany
   */
  export type product_pricesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * Filter, which product_prices to fetch.
     */
    where?: product_pricesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_prices to fetch.
     */
    orderBy?: product_pricesOrderByWithRelationInput | product_pricesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_prices.
     */
    cursor?: product_pricesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_prices.
     */
    skip?: number
    distinct?: Product_pricesScalarFieldEnum | Product_pricesScalarFieldEnum[]
  }

  /**
   * product_prices create
   */
  export type product_pricesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * The data needed to create a product_prices.
     */
    data: XOR<product_pricesCreateInput, product_pricesUncheckedCreateInput>
  }

  /**
   * product_prices createMany
   */
  export type product_pricesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_prices.
     */
    data: product_pricesCreateManyInput | product_pricesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_prices createManyAndReturn
   */
  export type product_pricesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * The data used to create many product_prices.
     */
    data: product_pricesCreateManyInput | product_pricesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * product_prices update
   */
  export type product_pricesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * The data needed to update a product_prices.
     */
    data: XOR<product_pricesUpdateInput, product_pricesUncheckedUpdateInput>
    /**
     * Choose, which product_prices to update.
     */
    where: product_pricesWhereUniqueInput
  }

  /**
   * product_prices updateMany
   */
  export type product_pricesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_prices.
     */
    data: XOR<product_pricesUpdateManyMutationInput, product_pricesUncheckedUpdateManyInput>
    /**
     * Filter which product_prices to update
     */
    where?: product_pricesWhereInput
    /**
     * Limit how many product_prices to update.
     */
    limit?: number
  }

  /**
   * product_prices updateManyAndReturn
   */
  export type product_pricesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * The data used to update product_prices.
     */
    data: XOR<product_pricesUpdateManyMutationInput, product_pricesUncheckedUpdateManyInput>
    /**
     * Filter which product_prices to update
     */
    where?: product_pricesWhereInput
    /**
     * Limit how many product_prices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * product_prices upsert
   */
  export type product_pricesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * The filter to search for the product_prices to update in case it exists.
     */
    where: product_pricesWhereUniqueInput
    /**
     * In case the product_prices found by the `where` argument doesn't exist, create a new product_prices with this data.
     */
    create: XOR<product_pricesCreateInput, product_pricesUncheckedCreateInput>
    /**
     * In case the product_prices was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_pricesUpdateInput, product_pricesUncheckedUpdateInput>
  }

  /**
   * product_prices delete
   */
  export type product_pricesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    /**
     * Filter which product_prices to delete.
     */
    where: product_pricesWhereUniqueInput
  }

  /**
   * product_prices deleteMany
   */
  export type product_pricesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_prices to delete
     */
    where?: product_pricesWhereInput
    /**
     * Limit how many product_prices to delete.
     */
    limit?: number
  }

  /**
   * product_prices without action
   */
  export type product_pricesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
  }


  /**
   * Model raw_materials
   */

  export type AggregateRaw_materials = {
    _count: Raw_materialsCountAggregateOutputType | null
    _avg: Raw_materialsAvgAggregateOutputType | null
    _sum: Raw_materialsSumAggregateOutputType | null
    _min: Raw_materialsMinAggregateOutputType | null
    _max: Raw_materialsMaxAggregateOutputType | null
  }

  export type Raw_materialsAvgAggregateOutputType = {
    material_id: number | null
    flash_point: number | null
    drum_weight: Decimal | null
    drum_volume: number | null
  }

  export type Raw_materialsSumAggregateOutputType = {
    material_id: number | null
    flash_point: number | null
    drum_weight: Decimal | null
    drum_volume: number | null
  }

  export type Raw_materialsMinAggregateOutputType = {
    material_id: number | null
    material_name: string | null
    cas_number: string | null
    chemical_group: string | null
    description: string | null
    un_code: string | null
    flash_point: number | null
    material_code: string | null
    drum_weight: Decimal | null
    drum_volume: number | null
  }

  export type Raw_materialsMaxAggregateOutputType = {
    material_id: number | null
    material_name: string | null
    cas_number: string | null
    chemical_group: string | null
    description: string | null
    un_code: string | null
    flash_point: number | null
    material_code: string | null
    drum_weight: Decimal | null
    drum_volume: number | null
  }

  export type Raw_materialsCountAggregateOutputType = {
    material_id: number
    material_name: number
    cas_number: number
    chemical_group: number
    description: number
    un_code: number
    flash_point: number
    material_code: number
    drum_weight: number
    drum_volume: number
    chemical_props: number
    _all: number
  }


  export type Raw_materialsAvgAggregateInputType = {
    material_id?: true
    flash_point?: true
    drum_weight?: true
    drum_volume?: true
  }

  export type Raw_materialsSumAggregateInputType = {
    material_id?: true
    flash_point?: true
    drum_weight?: true
    drum_volume?: true
  }

  export type Raw_materialsMinAggregateInputType = {
    material_id?: true
    material_name?: true
    cas_number?: true
    chemical_group?: true
    description?: true
    un_code?: true
    flash_point?: true
    material_code?: true
    drum_weight?: true
    drum_volume?: true
  }

  export type Raw_materialsMaxAggregateInputType = {
    material_id?: true
    material_name?: true
    cas_number?: true
    chemical_group?: true
    description?: true
    un_code?: true
    flash_point?: true
    material_code?: true
    drum_weight?: true
    drum_volume?: true
  }

  export type Raw_materialsCountAggregateInputType = {
    material_id?: true
    material_name?: true
    cas_number?: true
    chemical_group?: true
    description?: true
    un_code?: true
    flash_point?: true
    material_code?: true
    drum_weight?: true
    drum_volume?: true
    chemical_props?: true
    _all?: true
  }

  export type Raw_materialsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which raw_materials to aggregate.
     */
    where?: raw_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of raw_materials to fetch.
     */
    orderBy?: raw_materialsOrderByWithRelationInput | raw_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: raw_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` raw_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` raw_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned raw_materials
    **/
    _count?: true | Raw_materialsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Raw_materialsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Raw_materialsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Raw_materialsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Raw_materialsMaxAggregateInputType
  }

  export type GetRaw_materialsAggregateType<T extends Raw_materialsAggregateArgs> = {
        [P in keyof T & keyof AggregateRaw_materials]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRaw_materials[P]>
      : GetScalarType<T[P], AggregateRaw_materials[P]>
  }




  export type raw_materialsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: raw_materialsWhereInput
    orderBy?: raw_materialsOrderByWithAggregationInput | raw_materialsOrderByWithAggregationInput[]
    by: Raw_materialsScalarFieldEnum[] | Raw_materialsScalarFieldEnum
    having?: raw_materialsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Raw_materialsCountAggregateInputType | true
    _avg?: Raw_materialsAvgAggregateInputType
    _sum?: Raw_materialsSumAggregateInputType
    _min?: Raw_materialsMinAggregateInputType
    _max?: Raw_materialsMaxAggregateInputType
  }

  export type Raw_materialsGroupByOutputType = {
    material_id: number
    material_name: string
    cas_number: string
    chemical_group: string | null
    description: string | null
    un_code: string | null
    flash_point: number | null
    material_code: string
    drum_weight: Decimal | null
    drum_volume: number
    chemical_props: JsonValue | null
    _count: Raw_materialsCountAggregateOutputType | null
    _avg: Raw_materialsAvgAggregateOutputType | null
    _sum: Raw_materialsSumAggregateOutputType | null
    _min: Raw_materialsMinAggregateOutputType | null
    _max: Raw_materialsMaxAggregateOutputType | null
  }

  type GetRaw_materialsGroupByPayload<T extends raw_materialsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Raw_materialsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Raw_materialsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Raw_materialsGroupByOutputType[P]>
            : GetScalarType<T[P], Raw_materialsGroupByOutputType[P]>
        }
      >
    >


  export type raw_materialsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    material_id?: boolean
    material_name?: boolean
    cas_number?: boolean
    chemical_group?: boolean
    description?: boolean
    un_code?: boolean
    flash_point?: boolean
    material_code?: boolean
    drum_weight?: boolean
    drum_volume?: boolean
    chemical_props?: boolean
  }, ExtArgs["result"]["raw_materials"]>

  export type raw_materialsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    material_id?: boolean
    material_name?: boolean
    cas_number?: boolean
    chemical_group?: boolean
    description?: boolean
    un_code?: boolean
    flash_point?: boolean
    material_code?: boolean
    drum_weight?: boolean
    drum_volume?: boolean
    chemical_props?: boolean
  }, ExtArgs["result"]["raw_materials"]>

  export type raw_materialsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    material_id?: boolean
    material_name?: boolean
    cas_number?: boolean
    chemical_group?: boolean
    description?: boolean
    un_code?: boolean
    flash_point?: boolean
    material_code?: boolean
    drum_weight?: boolean
    drum_volume?: boolean
    chemical_props?: boolean
  }, ExtArgs["result"]["raw_materials"]>

  export type raw_materialsSelectScalar = {
    material_id?: boolean
    material_name?: boolean
    cas_number?: boolean
    chemical_group?: boolean
    description?: boolean
    un_code?: boolean
    flash_point?: boolean
    material_code?: boolean
    drum_weight?: boolean
    drum_volume?: boolean
    chemical_props?: boolean
  }

  export type raw_materialsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"material_id" | "material_name" | "cas_number" | "chemical_group" | "description" | "un_code" | "flash_point" | "material_code" | "drum_weight" | "drum_volume" | "chemical_props", ExtArgs["result"]["raw_materials"]>

  export type $raw_materialsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "raw_materials"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      material_id: number
      material_name: string
      cas_number: string
      chemical_group: string | null
      description: string | null
      un_code: string | null
      flash_point: number | null
      material_code: string
      drum_weight: Prisma.Decimal | null
      drum_volume: number
      chemical_props: Prisma.JsonValue | null
    }, ExtArgs["result"]["raw_materials"]>
    composites: {}
  }

  type raw_materialsGetPayload<S extends boolean | null | undefined | raw_materialsDefaultArgs> = $Result.GetResult<Prisma.$raw_materialsPayload, S>

  type raw_materialsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<raw_materialsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Raw_materialsCountAggregateInputType | true
    }

  export interface raw_materialsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['raw_materials'], meta: { name: 'raw_materials' } }
    /**
     * Find zero or one Raw_materials that matches the filter.
     * @param {raw_materialsFindUniqueArgs} args - Arguments to find a Raw_materials
     * @example
     * // Get one Raw_materials
     * const raw_materials = await prisma.raw_materials.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends raw_materialsFindUniqueArgs>(args: SelectSubset<T, raw_materialsFindUniqueArgs<ExtArgs>>): Prisma__raw_materialsClient<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Raw_materials that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {raw_materialsFindUniqueOrThrowArgs} args - Arguments to find a Raw_materials
     * @example
     * // Get one Raw_materials
     * const raw_materials = await prisma.raw_materials.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends raw_materialsFindUniqueOrThrowArgs>(args: SelectSubset<T, raw_materialsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__raw_materialsClient<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Raw_materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_materialsFindFirstArgs} args - Arguments to find a Raw_materials
     * @example
     * // Get one Raw_materials
     * const raw_materials = await prisma.raw_materials.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends raw_materialsFindFirstArgs>(args?: SelectSubset<T, raw_materialsFindFirstArgs<ExtArgs>>): Prisma__raw_materialsClient<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Raw_materials that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_materialsFindFirstOrThrowArgs} args - Arguments to find a Raw_materials
     * @example
     * // Get one Raw_materials
     * const raw_materials = await prisma.raw_materials.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends raw_materialsFindFirstOrThrowArgs>(args?: SelectSubset<T, raw_materialsFindFirstOrThrowArgs<ExtArgs>>): Prisma__raw_materialsClient<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Raw_materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_materialsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Raw_materials
     * const raw_materials = await prisma.raw_materials.findMany()
     * 
     * // Get first 10 Raw_materials
     * const raw_materials = await prisma.raw_materials.findMany({ take: 10 })
     * 
     * // Only select the `material_id`
     * const raw_materialsWithMaterial_idOnly = await prisma.raw_materials.findMany({ select: { material_id: true } })
     * 
     */
    findMany<T extends raw_materialsFindManyArgs>(args?: SelectSubset<T, raw_materialsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Raw_materials.
     * @param {raw_materialsCreateArgs} args - Arguments to create a Raw_materials.
     * @example
     * // Create one Raw_materials
     * const Raw_materials = await prisma.raw_materials.create({
     *   data: {
     *     // ... data to create a Raw_materials
     *   }
     * })
     * 
     */
    create<T extends raw_materialsCreateArgs>(args: SelectSubset<T, raw_materialsCreateArgs<ExtArgs>>): Prisma__raw_materialsClient<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Raw_materials.
     * @param {raw_materialsCreateManyArgs} args - Arguments to create many Raw_materials.
     * @example
     * // Create many Raw_materials
     * const raw_materials = await prisma.raw_materials.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends raw_materialsCreateManyArgs>(args?: SelectSubset<T, raw_materialsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Raw_materials and returns the data saved in the database.
     * @param {raw_materialsCreateManyAndReturnArgs} args - Arguments to create many Raw_materials.
     * @example
     * // Create many Raw_materials
     * const raw_materials = await prisma.raw_materials.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Raw_materials and only return the `material_id`
     * const raw_materialsWithMaterial_idOnly = await prisma.raw_materials.createManyAndReturn({
     *   select: { material_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends raw_materialsCreateManyAndReturnArgs>(args?: SelectSubset<T, raw_materialsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Raw_materials.
     * @param {raw_materialsDeleteArgs} args - Arguments to delete one Raw_materials.
     * @example
     * // Delete one Raw_materials
     * const Raw_materials = await prisma.raw_materials.delete({
     *   where: {
     *     // ... filter to delete one Raw_materials
     *   }
     * })
     * 
     */
    delete<T extends raw_materialsDeleteArgs>(args: SelectSubset<T, raw_materialsDeleteArgs<ExtArgs>>): Prisma__raw_materialsClient<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Raw_materials.
     * @param {raw_materialsUpdateArgs} args - Arguments to update one Raw_materials.
     * @example
     * // Update one Raw_materials
     * const raw_materials = await prisma.raw_materials.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends raw_materialsUpdateArgs>(args: SelectSubset<T, raw_materialsUpdateArgs<ExtArgs>>): Prisma__raw_materialsClient<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Raw_materials.
     * @param {raw_materialsDeleteManyArgs} args - Arguments to filter Raw_materials to delete.
     * @example
     * // Delete a few Raw_materials
     * const { count } = await prisma.raw_materials.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends raw_materialsDeleteManyArgs>(args?: SelectSubset<T, raw_materialsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Raw_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_materialsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Raw_materials
     * const raw_materials = await prisma.raw_materials.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends raw_materialsUpdateManyArgs>(args: SelectSubset<T, raw_materialsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Raw_materials and returns the data updated in the database.
     * @param {raw_materialsUpdateManyAndReturnArgs} args - Arguments to update many Raw_materials.
     * @example
     * // Update many Raw_materials
     * const raw_materials = await prisma.raw_materials.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Raw_materials and only return the `material_id`
     * const raw_materialsWithMaterial_idOnly = await prisma.raw_materials.updateManyAndReturn({
     *   select: { material_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends raw_materialsUpdateManyAndReturnArgs>(args: SelectSubset<T, raw_materialsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Raw_materials.
     * @param {raw_materialsUpsertArgs} args - Arguments to update or create a Raw_materials.
     * @example
     * // Update or create a Raw_materials
     * const raw_materials = await prisma.raw_materials.upsert({
     *   create: {
     *     // ... data to create a Raw_materials
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Raw_materials we want to update
     *   }
     * })
     */
    upsert<T extends raw_materialsUpsertArgs>(args: SelectSubset<T, raw_materialsUpsertArgs<ExtArgs>>): Prisma__raw_materialsClient<$Result.GetResult<Prisma.$raw_materialsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Raw_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_materialsCountArgs} args - Arguments to filter Raw_materials to count.
     * @example
     * // Count the number of Raw_materials
     * const count = await prisma.raw_materials.count({
     *   where: {
     *     // ... the filter for the Raw_materials we want to count
     *   }
     * })
    **/
    count<T extends raw_materialsCountArgs>(
      args?: Subset<T, raw_materialsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Raw_materialsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Raw_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Raw_materialsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Raw_materialsAggregateArgs>(args: Subset<T, Raw_materialsAggregateArgs>): Prisma.PrismaPromise<GetRaw_materialsAggregateType<T>>

    /**
     * Group by Raw_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_materialsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends raw_materialsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: raw_materialsGroupByArgs['orderBy'] }
        : { orderBy?: raw_materialsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, raw_materialsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRaw_materialsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the raw_materials model
   */
  readonly fields: raw_materialsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for raw_materials.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__raw_materialsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the raw_materials model
   */
  interface raw_materialsFieldRefs {
    readonly material_id: FieldRef<"raw_materials", 'Int'>
    readonly material_name: FieldRef<"raw_materials", 'String'>
    readonly cas_number: FieldRef<"raw_materials", 'String'>
    readonly chemical_group: FieldRef<"raw_materials", 'String'>
    readonly description: FieldRef<"raw_materials", 'String'>
    readonly un_code: FieldRef<"raw_materials", 'String'>
    readonly flash_point: FieldRef<"raw_materials", 'Int'>
    readonly material_code: FieldRef<"raw_materials", 'String'>
    readonly drum_weight: FieldRef<"raw_materials", 'Decimal'>
    readonly drum_volume: FieldRef<"raw_materials", 'Int'>
    readonly chemical_props: FieldRef<"raw_materials", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * raw_materials findUnique
   */
  export type raw_materialsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * Filter, which raw_materials to fetch.
     */
    where: raw_materialsWhereUniqueInput
  }

  /**
   * raw_materials findUniqueOrThrow
   */
  export type raw_materialsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * Filter, which raw_materials to fetch.
     */
    where: raw_materialsWhereUniqueInput
  }

  /**
   * raw_materials findFirst
   */
  export type raw_materialsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * Filter, which raw_materials to fetch.
     */
    where?: raw_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of raw_materials to fetch.
     */
    orderBy?: raw_materialsOrderByWithRelationInput | raw_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for raw_materials.
     */
    cursor?: raw_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` raw_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` raw_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of raw_materials.
     */
    distinct?: Raw_materialsScalarFieldEnum | Raw_materialsScalarFieldEnum[]
  }

  /**
   * raw_materials findFirstOrThrow
   */
  export type raw_materialsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * Filter, which raw_materials to fetch.
     */
    where?: raw_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of raw_materials to fetch.
     */
    orderBy?: raw_materialsOrderByWithRelationInput | raw_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for raw_materials.
     */
    cursor?: raw_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` raw_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` raw_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of raw_materials.
     */
    distinct?: Raw_materialsScalarFieldEnum | Raw_materialsScalarFieldEnum[]
  }

  /**
   * raw_materials findMany
   */
  export type raw_materialsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * Filter, which raw_materials to fetch.
     */
    where?: raw_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of raw_materials to fetch.
     */
    orderBy?: raw_materialsOrderByWithRelationInput | raw_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing raw_materials.
     */
    cursor?: raw_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` raw_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` raw_materials.
     */
    skip?: number
    distinct?: Raw_materialsScalarFieldEnum | Raw_materialsScalarFieldEnum[]
  }

  /**
   * raw_materials create
   */
  export type raw_materialsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * The data needed to create a raw_materials.
     */
    data: XOR<raw_materialsCreateInput, raw_materialsUncheckedCreateInput>
  }

  /**
   * raw_materials createMany
   */
  export type raw_materialsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many raw_materials.
     */
    data: raw_materialsCreateManyInput | raw_materialsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * raw_materials createManyAndReturn
   */
  export type raw_materialsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * The data used to create many raw_materials.
     */
    data: raw_materialsCreateManyInput | raw_materialsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * raw_materials update
   */
  export type raw_materialsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * The data needed to update a raw_materials.
     */
    data: XOR<raw_materialsUpdateInput, raw_materialsUncheckedUpdateInput>
    /**
     * Choose, which raw_materials to update.
     */
    where: raw_materialsWhereUniqueInput
  }

  /**
   * raw_materials updateMany
   */
  export type raw_materialsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update raw_materials.
     */
    data: XOR<raw_materialsUpdateManyMutationInput, raw_materialsUncheckedUpdateManyInput>
    /**
     * Filter which raw_materials to update
     */
    where?: raw_materialsWhereInput
    /**
     * Limit how many raw_materials to update.
     */
    limit?: number
  }

  /**
   * raw_materials updateManyAndReturn
   */
  export type raw_materialsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * The data used to update raw_materials.
     */
    data: XOR<raw_materialsUpdateManyMutationInput, raw_materialsUncheckedUpdateManyInput>
    /**
     * Filter which raw_materials to update
     */
    where?: raw_materialsWhereInput
    /**
     * Limit how many raw_materials to update.
     */
    limit?: number
  }

  /**
   * raw_materials upsert
   */
  export type raw_materialsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * The filter to search for the raw_materials to update in case it exists.
     */
    where: raw_materialsWhereUniqueInput
    /**
     * In case the raw_materials found by the `where` argument doesn't exist, create a new raw_materials with this data.
     */
    create: XOR<raw_materialsCreateInput, raw_materialsUncheckedCreateInput>
    /**
     * In case the raw_materials was found with the provided `where` argument, update it with this data.
     */
    update: XOR<raw_materialsUpdateInput, raw_materialsUncheckedUpdateInput>
  }

  /**
   * raw_materials delete
   */
  export type raw_materialsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
    /**
     * Filter which raw_materials to delete.
     */
    where: raw_materialsWhereUniqueInput
  }

  /**
   * raw_materials deleteMany
   */
  export type raw_materialsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which raw_materials to delete
     */
    where?: raw_materialsWhereInput
    /**
     * Limit how many raw_materials to delete.
     */
    limit?: number
  }

  /**
   * raw_materials without action
   */
  export type raw_materialsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_materials
     */
    select?: raw_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_materials
     */
    omit?: raw_materialsOmit<ExtArgs> | null
  }


  /**
   * Model ref_materials
   */

  export type AggregateRef_materials = {
    _count: Ref_materialsCountAggregateOutputType | null
    _min: Ref_materialsMinAggregateOutputType | null
    _max: Ref_materialsMaxAggregateOutputType | null
  }

  export type Ref_materialsMinAggregateOutputType = {
    value: string | null
    code: string | null
    chemical_group: string | null
    cas_number: string | null
  }

  export type Ref_materialsMaxAggregateOutputType = {
    value: string | null
    code: string | null
    chemical_group: string | null
    cas_number: string | null
  }

  export type Ref_materialsCountAggregateOutputType = {
    value: number
    code: number
    chemical_group: number
    cas_number: number
    _all: number
  }


  export type Ref_materialsMinAggregateInputType = {
    value?: true
    code?: true
    chemical_group?: true
    cas_number?: true
  }

  export type Ref_materialsMaxAggregateInputType = {
    value?: true
    code?: true
    chemical_group?: true
    cas_number?: true
  }

  export type Ref_materialsCountAggregateInputType = {
    value?: true
    code?: true
    chemical_group?: true
    cas_number?: true
    _all?: true
  }

  export type Ref_materialsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_materials to aggregate.
     */
    where?: ref_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_materials to fetch.
     */
    orderBy?: ref_materialsOrderByWithRelationInput | ref_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ref_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ref_materials
    **/
    _count?: true | Ref_materialsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ref_materialsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ref_materialsMaxAggregateInputType
  }

  export type GetRef_materialsAggregateType<T extends Ref_materialsAggregateArgs> = {
        [P in keyof T & keyof AggregateRef_materials]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRef_materials[P]>
      : GetScalarType<T[P], AggregateRef_materials[P]>
  }




  export type ref_materialsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_materialsWhereInput
    orderBy?: ref_materialsOrderByWithAggregationInput | ref_materialsOrderByWithAggregationInput[]
    by: Ref_materialsScalarFieldEnum[] | Ref_materialsScalarFieldEnum
    having?: ref_materialsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ref_materialsCountAggregateInputType | true
    _min?: Ref_materialsMinAggregateInputType
    _max?: Ref_materialsMaxAggregateInputType
  }

  export type Ref_materialsGroupByOutputType = {
    value: string
    code: string
    chemical_group: string
    cas_number: string | null
    _count: Ref_materialsCountAggregateOutputType | null
    _min: Ref_materialsMinAggregateOutputType | null
    _max: Ref_materialsMaxAggregateOutputType | null
  }

  type GetRef_materialsGroupByPayload<T extends ref_materialsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ref_materialsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ref_materialsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ref_materialsGroupByOutputType[P]>
            : GetScalarType<T[P], Ref_materialsGroupByOutputType[P]>
        }
      >
    >


  export type ref_materialsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    value?: boolean
    code?: boolean
    chemical_group?: boolean
    cas_number?: boolean
    order_detail?: boolean | ref_materials$order_detailArgs<ExtArgs>
    raw_stock_history?: boolean | ref_materials$raw_stock_historyArgs<ExtArgs>
    chemical_group_kind?: boolean | chemical_group_kindDefaultArgs<ExtArgs>
    ref_product?: boolean | ref_materials$ref_productArgs<ExtArgs>
    ref_supplier_material?: boolean | ref_materials$ref_supplier_materialArgs<ExtArgs>
    stock_activity?: boolean | ref_materials$stock_activityArgs<ExtArgs>
    stock_drum_new?: boolean | ref_materials$stock_drum_newArgs<ExtArgs>
    stock_history?: boolean | ref_materials$stock_historyArgs<ExtArgs>
    stock_new?: boolean | ref_materials$stock_newArgs<ExtArgs>
    stock_repro?: boolean | ref_materials$stock_reproArgs<ExtArgs>
    _count?: boolean | Ref_materialsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_materials"]>

  export type ref_materialsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    value?: boolean
    code?: boolean
    chemical_group?: boolean
    cas_number?: boolean
    chemical_group_kind?: boolean | chemical_group_kindDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_materials"]>

  export type ref_materialsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    value?: boolean
    code?: boolean
    chemical_group?: boolean
    cas_number?: boolean
    chemical_group_kind?: boolean | chemical_group_kindDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_materials"]>

  export type ref_materialsSelectScalar = {
    value?: boolean
    code?: boolean
    chemical_group?: boolean
    cas_number?: boolean
  }

  export type ref_materialsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"value" | "code" | "chemical_group" | "cas_number", ExtArgs["result"]["ref_materials"]>
  export type ref_materialsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail?: boolean | ref_materials$order_detailArgs<ExtArgs>
    raw_stock_history?: boolean | ref_materials$raw_stock_historyArgs<ExtArgs>
    chemical_group_kind?: boolean | chemical_group_kindDefaultArgs<ExtArgs>
    ref_product?: boolean | ref_materials$ref_productArgs<ExtArgs>
    ref_supplier_material?: boolean | ref_materials$ref_supplier_materialArgs<ExtArgs>
    stock_activity?: boolean | ref_materials$stock_activityArgs<ExtArgs>
    stock_drum_new?: boolean | ref_materials$stock_drum_newArgs<ExtArgs>
    stock_history?: boolean | ref_materials$stock_historyArgs<ExtArgs>
    stock_new?: boolean | ref_materials$stock_newArgs<ExtArgs>
    stock_repro?: boolean | ref_materials$stock_reproArgs<ExtArgs>
    _count?: boolean | Ref_materialsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ref_materialsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chemical_group_kind?: boolean | chemical_group_kindDefaultArgs<ExtArgs>
  }
  export type ref_materialsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chemical_group_kind?: boolean | chemical_group_kindDefaultArgs<ExtArgs>
  }

  export type $ref_materialsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ref_materials"
    objects: {
      order_detail: Prisma.$order_detailPayload<ExtArgs>[]
      raw_stock_history: Prisma.$raw_stock_historyPayload<ExtArgs>[]
      chemical_group_kind: Prisma.$chemical_group_kindPayload<ExtArgs>
      ref_product: Prisma.$ref_productPayload<ExtArgs>[]
      ref_supplier_material: Prisma.$ref_supplier_materialPayload<ExtArgs>[]
      stock_activity: Prisma.$stock_activityPayload<ExtArgs>[]
      stock_drum_new: Prisma.$stock_drum_newPayload<ExtArgs>[]
      stock_history: Prisma.$stock_historyPayload<ExtArgs>[]
      stock_new: Prisma.$stock_newPayload<ExtArgs>[]
      stock_repro: Prisma.$stock_reproPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      value: string
      code: string
      chemical_group: string
      cas_number: string | null
    }, ExtArgs["result"]["ref_materials"]>
    composites: {}
  }

  type ref_materialsGetPayload<S extends boolean | null | undefined | ref_materialsDefaultArgs> = $Result.GetResult<Prisma.$ref_materialsPayload, S>

  type ref_materialsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ref_materialsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ref_materialsCountAggregateInputType | true
    }

  export interface ref_materialsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ref_materials'], meta: { name: 'ref_materials' } }
    /**
     * Find zero or one Ref_materials that matches the filter.
     * @param {ref_materialsFindUniqueArgs} args - Arguments to find a Ref_materials
     * @example
     * // Get one Ref_materials
     * const ref_materials = await prisma.ref_materials.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ref_materialsFindUniqueArgs>(args: SelectSubset<T, ref_materialsFindUniqueArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ref_materials that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ref_materialsFindUniqueOrThrowArgs} args - Arguments to find a Ref_materials
     * @example
     * // Get one Ref_materials
     * const ref_materials = await prisma.ref_materials.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ref_materialsFindUniqueOrThrowArgs>(args: SelectSubset<T, ref_materialsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_materialsFindFirstArgs} args - Arguments to find a Ref_materials
     * @example
     * // Get one Ref_materials
     * const ref_materials = await prisma.ref_materials.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ref_materialsFindFirstArgs>(args?: SelectSubset<T, ref_materialsFindFirstArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_materials that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_materialsFindFirstOrThrowArgs} args - Arguments to find a Ref_materials
     * @example
     * // Get one Ref_materials
     * const ref_materials = await prisma.ref_materials.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ref_materialsFindFirstOrThrowArgs>(args?: SelectSubset<T, ref_materialsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ref_materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_materialsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ref_materials
     * const ref_materials = await prisma.ref_materials.findMany()
     * 
     * // Get first 10 Ref_materials
     * const ref_materials = await prisma.ref_materials.findMany({ take: 10 })
     * 
     * // Only select the `value`
     * const ref_materialsWithValueOnly = await prisma.ref_materials.findMany({ select: { value: true } })
     * 
     */
    findMany<T extends ref_materialsFindManyArgs>(args?: SelectSubset<T, ref_materialsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ref_materials.
     * @param {ref_materialsCreateArgs} args - Arguments to create a Ref_materials.
     * @example
     * // Create one Ref_materials
     * const Ref_materials = await prisma.ref_materials.create({
     *   data: {
     *     // ... data to create a Ref_materials
     *   }
     * })
     * 
     */
    create<T extends ref_materialsCreateArgs>(args: SelectSubset<T, ref_materialsCreateArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ref_materials.
     * @param {ref_materialsCreateManyArgs} args - Arguments to create many Ref_materials.
     * @example
     * // Create many Ref_materials
     * const ref_materials = await prisma.ref_materials.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ref_materialsCreateManyArgs>(args?: SelectSubset<T, ref_materialsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ref_materials and returns the data saved in the database.
     * @param {ref_materialsCreateManyAndReturnArgs} args - Arguments to create many Ref_materials.
     * @example
     * // Create many Ref_materials
     * const ref_materials = await prisma.ref_materials.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ref_materials and only return the `value`
     * const ref_materialsWithValueOnly = await prisma.ref_materials.createManyAndReturn({
     *   select: { value: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ref_materialsCreateManyAndReturnArgs>(args?: SelectSubset<T, ref_materialsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ref_materials.
     * @param {ref_materialsDeleteArgs} args - Arguments to delete one Ref_materials.
     * @example
     * // Delete one Ref_materials
     * const Ref_materials = await prisma.ref_materials.delete({
     *   where: {
     *     // ... filter to delete one Ref_materials
     *   }
     * })
     * 
     */
    delete<T extends ref_materialsDeleteArgs>(args: SelectSubset<T, ref_materialsDeleteArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ref_materials.
     * @param {ref_materialsUpdateArgs} args - Arguments to update one Ref_materials.
     * @example
     * // Update one Ref_materials
     * const ref_materials = await prisma.ref_materials.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ref_materialsUpdateArgs>(args: SelectSubset<T, ref_materialsUpdateArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ref_materials.
     * @param {ref_materialsDeleteManyArgs} args - Arguments to filter Ref_materials to delete.
     * @example
     * // Delete a few Ref_materials
     * const { count } = await prisma.ref_materials.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ref_materialsDeleteManyArgs>(args?: SelectSubset<T, ref_materialsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_materialsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ref_materials
     * const ref_materials = await prisma.ref_materials.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ref_materialsUpdateManyArgs>(args: SelectSubset<T, ref_materialsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_materials and returns the data updated in the database.
     * @param {ref_materialsUpdateManyAndReturnArgs} args - Arguments to update many Ref_materials.
     * @example
     * // Update many Ref_materials
     * const ref_materials = await prisma.ref_materials.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ref_materials and only return the `value`
     * const ref_materialsWithValueOnly = await prisma.ref_materials.updateManyAndReturn({
     *   select: { value: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ref_materialsUpdateManyAndReturnArgs>(args: SelectSubset<T, ref_materialsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ref_materials.
     * @param {ref_materialsUpsertArgs} args - Arguments to update or create a Ref_materials.
     * @example
     * // Update or create a Ref_materials
     * const ref_materials = await prisma.ref_materials.upsert({
     *   create: {
     *     // ... data to create a Ref_materials
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ref_materials we want to update
     *   }
     * })
     */
    upsert<T extends ref_materialsUpsertArgs>(args: SelectSubset<T, ref_materialsUpsertArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ref_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_materialsCountArgs} args - Arguments to filter Ref_materials to count.
     * @example
     * // Count the number of Ref_materials
     * const count = await prisma.ref_materials.count({
     *   where: {
     *     // ... the filter for the Ref_materials we want to count
     *   }
     * })
    **/
    count<T extends ref_materialsCountArgs>(
      args?: Subset<T, ref_materialsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ref_materialsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ref_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ref_materialsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ref_materialsAggregateArgs>(args: Subset<T, Ref_materialsAggregateArgs>): Prisma.PrismaPromise<GetRef_materialsAggregateType<T>>

    /**
     * Group by Ref_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_materialsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ref_materialsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ref_materialsGroupByArgs['orderBy'] }
        : { orderBy?: ref_materialsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ref_materialsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRef_materialsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ref_materials model
   */
  readonly fields: ref_materialsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ref_materials.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ref_materialsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_detail<T extends ref_materials$order_detailArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$order_detailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    raw_stock_history<T extends ref_materials$raw_stock_historyArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$raw_stock_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chemical_group_kind<T extends chemical_group_kindDefaultArgs<ExtArgs> = {}>(args?: Subset<T, chemical_group_kindDefaultArgs<ExtArgs>>): Prisma__chemical_group_kindClient<$Result.GetResult<Prisma.$chemical_group_kindPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ref_product<T extends ref_materials$ref_productArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$ref_productArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ref_supplier_material<T extends ref_materials$ref_supplier_materialArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$ref_supplier_materialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_activity<T extends ref_materials$stock_activityArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$stock_activityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_drum_new<T extends ref_materials$stock_drum_newArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$stock_drum_newArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_history<T extends ref_materials$stock_historyArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$stock_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_new<T extends ref_materials$stock_newArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$stock_newArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_repro<T extends ref_materials$stock_reproArgs<ExtArgs> = {}>(args?: Subset<T, ref_materials$stock_reproArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ref_materials model
   */
  interface ref_materialsFieldRefs {
    readonly value: FieldRef<"ref_materials", 'String'>
    readonly code: FieldRef<"ref_materials", 'String'>
    readonly chemical_group: FieldRef<"ref_materials", 'String'>
    readonly cas_number: FieldRef<"ref_materials", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ref_materials findUnique
   */
  export type ref_materialsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * Filter, which ref_materials to fetch.
     */
    where: ref_materialsWhereUniqueInput
  }

  /**
   * ref_materials findUniqueOrThrow
   */
  export type ref_materialsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * Filter, which ref_materials to fetch.
     */
    where: ref_materialsWhereUniqueInput
  }

  /**
   * ref_materials findFirst
   */
  export type ref_materialsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * Filter, which ref_materials to fetch.
     */
    where?: ref_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_materials to fetch.
     */
    orderBy?: ref_materialsOrderByWithRelationInput | ref_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_materials.
     */
    cursor?: ref_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_materials.
     */
    distinct?: Ref_materialsScalarFieldEnum | Ref_materialsScalarFieldEnum[]
  }

  /**
   * ref_materials findFirstOrThrow
   */
  export type ref_materialsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * Filter, which ref_materials to fetch.
     */
    where?: ref_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_materials to fetch.
     */
    orderBy?: ref_materialsOrderByWithRelationInput | ref_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_materials.
     */
    cursor?: ref_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_materials.
     */
    distinct?: Ref_materialsScalarFieldEnum | Ref_materialsScalarFieldEnum[]
  }

  /**
   * ref_materials findMany
   */
  export type ref_materialsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * Filter, which ref_materials to fetch.
     */
    where?: ref_materialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_materials to fetch.
     */
    orderBy?: ref_materialsOrderByWithRelationInput | ref_materialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ref_materials.
     */
    cursor?: ref_materialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_materials.
     */
    skip?: number
    distinct?: Ref_materialsScalarFieldEnum | Ref_materialsScalarFieldEnum[]
  }

  /**
   * ref_materials create
   */
  export type ref_materialsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * The data needed to create a ref_materials.
     */
    data: XOR<ref_materialsCreateInput, ref_materialsUncheckedCreateInput>
  }

  /**
   * ref_materials createMany
   */
  export type ref_materialsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ref_materials.
     */
    data: ref_materialsCreateManyInput | ref_materialsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ref_materials createManyAndReturn
   */
  export type ref_materialsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * The data used to create many ref_materials.
     */
    data: ref_materialsCreateManyInput | ref_materialsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ref_materials update
   */
  export type ref_materialsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * The data needed to update a ref_materials.
     */
    data: XOR<ref_materialsUpdateInput, ref_materialsUncheckedUpdateInput>
    /**
     * Choose, which ref_materials to update.
     */
    where: ref_materialsWhereUniqueInput
  }

  /**
   * ref_materials updateMany
   */
  export type ref_materialsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ref_materials.
     */
    data: XOR<ref_materialsUpdateManyMutationInput, ref_materialsUncheckedUpdateManyInput>
    /**
     * Filter which ref_materials to update
     */
    where?: ref_materialsWhereInput
    /**
     * Limit how many ref_materials to update.
     */
    limit?: number
  }

  /**
   * ref_materials updateManyAndReturn
   */
  export type ref_materialsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * The data used to update ref_materials.
     */
    data: XOR<ref_materialsUpdateManyMutationInput, ref_materialsUncheckedUpdateManyInput>
    /**
     * Filter which ref_materials to update
     */
    where?: ref_materialsWhereInput
    /**
     * Limit how many ref_materials to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ref_materials upsert
   */
  export type ref_materialsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * The filter to search for the ref_materials to update in case it exists.
     */
    where: ref_materialsWhereUniqueInput
    /**
     * In case the ref_materials found by the `where` argument doesn't exist, create a new ref_materials with this data.
     */
    create: XOR<ref_materialsCreateInput, ref_materialsUncheckedCreateInput>
    /**
     * In case the ref_materials was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ref_materialsUpdateInput, ref_materialsUncheckedUpdateInput>
  }

  /**
   * ref_materials delete
   */
  export type ref_materialsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    /**
     * Filter which ref_materials to delete.
     */
    where: ref_materialsWhereUniqueInput
  }

  /**
   * ref_materials deleteMany
   */
  export type ref_materialsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_materials to delete
     */
    where?: ref_materialsWhereInput
    /**
     * Limit how many ref_materials to delete.
     */
    limit?: number
  }

  /**
   * ref_materials.order_detail
   */
  export type ref_materials$order_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    where?: order_detailWhereInput
    orderBy?: order_detailOrderByWithRelationInput | order_detailOrderByWithRelationInput[]
    cursor?: order_detailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_detailScalarFieldEnum | Order_detailScalarFieldEnum[]
  }

  /**
   * ref_materials.raw_stock_history
   */
  export type ref_materials$raw_stock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    where?: raw_stock_historyWhereInput
    orderBy?: raw_stock_historyOrderByWithRelationInput | raw_stock_historyOrderByWithRelationInput[]
    cursor?: raw_stock_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Raw_stock_historyScalarFieldEnum | Raw_stock_historyScalarFieldEnum[]
  }

  /**
   * ref_materials.ref_product
   */
  export type ref_materials$ref_productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    where?: ref_productWhereInput
    orderBy?: ref_productOrderByWithRelationInput | ref_productOrderByWithRelationInput[]
    cursor?: ref_productWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ref_productScalarFieldEnum | Ref_productScalarFieldEnum[]
  }

  /**
   * ref_materials.ref_supplier_material
   */
  export type ref_materials$ref_supplier_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    where?: ref_supplier_materialWhereInput
    orderBy?: ref_supplier_materialOrderByWithRelationInput | ref_supplier_materialOrderByWithRelationInput[]
    cursor?: ref_supplier_materialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ref_supplier_materialScalarFieldEnum | Ref_supplier_materialScalarFieldEnum[]
  }

  /**
   * ref_materials.stock_activity
   */
  export type ref_materials$stock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    where?: stock_activityWhereInput
    orderBy?: stock_activityOrderByWithRelationInput | stock_activityOrderByWithRelationInput[]
    cursor?: stock_activityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_activityScalarFieldEnum | Stock_activityScalarFieldEnum[]
  }

  /**
   * ref_materials.stock_drum_new
   */
  export type ref_materials$stock_drum_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    where?: stock_drum_newWhereInput
    orderBy?: stock_drum_newOrderByWithRelationInput | stock_drum_newOrderByWithRelationInput[]
    cursor?: stock_drum_newWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_drum_newScalarFieldEnum | Stock_drum_newScalarFieldEnum[]
  }

  /**
   * ref_materials.stock_history
   */
  export type ref_materials$stock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    where?: stock_historyWhereInput
    orderBy?: stock_historyOrderByWithRelationInput | stock_historyOrderByWithRelationInput[]
    cursor?: stock_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_historyScalarFieldEnum | Stock_historyScalarFieldEnum[]
  }

  /**
   * ref_materials.stock_new
   */
  export type ref_materials$stock_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    where?: stock_newWhereInput
    orderBy?: stock_newOrderByWithRelationInput | stock_newOrderByWithRelationInput[]
    cursor?: stock_newWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_newScalarFieldEnum | Stock_newScalarFieldEnum[]
  }

  /**
   * ref_materials.stock_repro
   */
  export type ref_materials$stock_reproArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    where?: stock_reproWhereInput
    orderBy?: stock_reproOrderByWithRelationInput | stock_reproOrderByWithRelationInput[]
    cursor?: stock_reproWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_reproScalarFieldEnum | Stock_reproScalarFieldEnum[]
  }

  /**
   * ref_materials without action
   */
  export type ref_materialsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
  }


  /**
   * Model ref_stills
   */

  export type AggregateRef_stills = {
    _count: Ref_stillsCountAggregateOutputType | null
    _avg: Ref_stillsAvgAggregateOutputType | null
    _sum: Ref_stillsSumAggregateOutputType | null
    _min: Ref_stillsMinAggregateOutputType | null
    _max: Ref_stillsMaxAggregateOutputType | null
  }

  export type Ref_stillsAvgAggregateOutputType = {
    still_id: number | null
    max_capacity: Decimal | null
    power_rating_kw: number | null
    lab_id: number | null
  }

  export type Ref_stillsSumAggregateOutputType = {
    still_id: number | null
    max_capacity: Decimal | null
    power_rating_kw: number | null
    lab_id: number | null
  }

  export type Ref_stillsMinAggregateOutputType = {
    still_id: number | null
    still_code: string | null
    max_capacity: Decimal | null
    power_rating_kw: number | null
    lab_id: number | null
    is_vacuum: boolean | null
    is_operational: boolean | null
    description: string | null
  }

  export type Ref_stillsMaxAggregateOutputType = {
    still_id: number | null
    still_code: string | null
    max_capacity: Decimal | null
    power_rating_kw: number | null
    lab_id: number | null
    is_vacuum: boolean | null
    is_operational: boolean | null
    description: string | null
  }

  export type Ref_stillsCountAggregateOutputType = {
    still_id: number
    still_code: number
    max_capacity: number
    power_rating_kw: number
    lab_id: number
    is_vacuum: number
    is_operational: number
    description: number
    _all: number
  }


  export type Ref_stillsAvgAggregateInputType = {
    still_id?: true
    max_capacity?: true
    power_rating_kw?: true
    lab_id?: true
  }

  export type Ref_stillsSumAggregateInputType = {
    still_id?: true
    max_capacity?: true
    power_rating_kw?: true
    lab_id?: true
  }

  export type Ref_stillsMinAggregateInputType = {
    still_id?: true
    still_code?: true
    max_capacity?: true
    power_rating_kw?: true
    lab_id?: true
    is_vacuum?: true
    is_operational?: true
    description?: true
  }

  export type Ref_stillsMaxAggregateInputType = {
    still_id?: true
    still_code?: true
    max_capacity?: true
    power_rating_kw?: true
    lab_id?: true
    is_vacuum?: true
    is_operational?: true
    description?: true
  }

  export type Ref_stillsCountAggregateInputType = {
    still_id?: true
    still_code?: true
    max_capacity?: true
    power_rating_kw?: true
    lab_id?: true
    is_vacuum?: true
    is_operational?: true
    description?: true
    _all?: true
  }

  export type Ref_stillsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_stills to aggregate.
     */
    where?: ref_stillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_stills to fetch.
     */
    orderBy?: ref_stillsOrderByWithRelationInput | ref_stillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ref_stillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_stills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_stills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ref_stills
    **/
    _count?: true | Ref_stillsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ref_stillsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ref_stillsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ref_stillsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ref_stillsMaxAggregateInputType
  }

  export type GetRef_stillsAggregateType<T extends Ref_stillsAggregateArgs> = {
        [P in keyof T & keyof AggregateRef_stills]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRef_stills[P]>
      : GetScalarType<T[P], AggregateRef_stills[P]>
  }




  export type ref_stillsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_stillsWhereInput
    orderBy?: ref_stillsOrderByWithAggregationInput | ref_stillsOrderByWithAggregationInput[]
    by: Ref_stillsScalarFieldEnum[] | Ref_stillsScalarFieldEnum
    having?: ref_stillsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ref_stillsCountAggregateInputType | true
    _avg?: Ref_stillsAvgAggregateInputType
    _sum?: Ref_stillsSumAggregateInputType
    _min?: Ref_stillsMinAggregateInputType
    _max?: Ref_stillsMaxAggregateInputType
  }

  export type Ref_stillsGroupByOutputType = {
    still_id: number
    still_code: string
    max_capacity: Decimal
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description: string | null
    _count: Ref_stillsCountAggregateOutputType | null
    _avg: Ref_stillsAvgAggregateOutputType | null
    _sum: Ref_stillsSumAggregateOutputType | null
    _min: Ref_stillsMinAggregateOutputType | null
    _max: Ref_stillsMaxAggregateOutputType | null
  }

  type GetRef_stillsGroupByPayload<T extends ref_stillsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ref_stillsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ref_stillsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ref_stillsGroupByOutputType[P]>
            : GetScalarType<T[P], Ref_stillsGroupByOutputType[P]>
        }
      >
    >


  export type ref_stillsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    still_id?: boolean
    still_code?: boolean
    max_capacity?: boolean
    power_rating_kw?: boolean
    lab_id?: boolean
    is_vacuum?: boolean
    is_operational?: boolean
    description?: boolean
    active_context?: boolean | ref_stills$active_contextArgs<ExtArgs>
    distillation_schedule?: boolean | ref_stills$distillation_scheduleArgs<ExtArgs>
    log_load_still?: boolean | ref_stills$log_load_stillArgs<ExtArgs>
    log_start_distillation?: boolean | ref_stills$log_start_distillationArgs<ExtArgs>
    _count?: boolean | Ref_stillsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_stills"]>

  export type ref_stillsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    still_id?: boolean
    still_code?: boolean
    max_capacity?: boolean
    power_rating_kw?: boolean
    lab_id?: boolean
    is_vacuum?: boolean
    is_operational?: boolean
    description?: boolean
  }, ExtArgs["result"]["ref_stills"]>

  export type ref_stillsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    still_id?: boolean
    still_code?: boolean
    max_capacity?: boolean
    power_rating_kw?: boolean
    lab_id?: boolean
    is_vacuum?: boolean
    is_operational?: boolean
    description?: boolean
  }, ExtArgs["result"]["ref_stills"]>

  export type ref_stillsSelectScalar = {
    still_id?: boolean
    still_code?: boolean
    max_capacity?: boolean
    power_rating_kw?: boolean
    lab_id?: boolean
    is_vacuum?: boolean
    is_operational?: boolean
    description?: boolean
  }

  export type ref_stillsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"still_id" | "still_code" | "max_capacity" | "power_rating_kw" | "lab_id" | "is_vacuum" | "is_operational" | "description", ExtArgs["result"]["ref_stills"]>
  export type ref_stillsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    active_context?: boolean | ref_stills$active_contextArgs<ExtArgs>
    distillation_schedule?: boolean | ref_stills$distillation_scheduleArgs<ExtArgs>
    log_load_still?: boolean | ref_stills$log_load_stillArgs<ExtArgs>
    log_start_distillation?: boolean | ref_stills$log_start_distillationArgs<ExtArgs>
    _count?: boolean | Ref_stillsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ref_stillsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ref_stillsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ref_stillsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ref_stills"
    objects: {
      active_context: Prisma.$active_contextPayload<ExtArgs>[]
      distillation_schedule: Prisma.$distillation_schedulePayload<ExtArgs>[]
      log_load_still: Prisma.$log_load_stillPayload<ExtArgs>[]
      log_start_distillation: Prisma.$log_start_distillationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      still_id: number
      still_code: string
      max_capacity: Prisma.Decimal
      power_rating_kw: number
      lab_id: number
      is_vacuum: boolean
      is_operational: boolean
      description: string | null
    }, ExtArgs["result"]["ref_stills"]>
    composites: {}
  }

  type ref_stillsGetPayload<S extends boolean | null | undefined | ref_stillsDefaultArgs> = $Result.GetResult<Prisma.$ref_stillsPayload, S>

  type ref_stillsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ref_stillsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ref_stillsCountAggregateInputType | true
    }

  export interface ref_stillsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ref_stills'], meta: { name: 'ref_stills' } }
    /**
     * Find zero or one Ref_stills that matches the filter.
     * @param {ref_stillsFindUniqueArgs} args - Arguments to find a Ref_stills
     * @example
     * // Get one Ref_stills
     * const ref_stills = await prisma.ref_stills.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ref_stillsFindUniqueArgs>(args: SelectSubset<T, ref_stillsFindUniqueArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ref_stills that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ref_stillsFindUniqueOrThrowArgs} args - Arguments to find a Ref_stills
     * @example
     * // Get one Ref_stills
     * const ref_stills = await prisma.ref_stills.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ref_stillsFindUniqueOrThrowArgs>(args: SelectSubset<T, ref_stillsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_stills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_stillsFindFirstArgs} args - Arguments to find a Ref_stills
     * @example
     * // Get one Ref_stills
     * const ref_stills = await prisma.ref_stills.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ref_stillsFindFirstArgs>(args?: SelectSubset<T, ref_stillsFindFirstArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_stills that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_stillsFindFirstOrThrowArgs} args - Arguments to find a Ref_stills
     * @example
     * // Get one Ref_stills
     * const ref_stills = await prisma.ref_stills.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ref_stillsFindFirstOrThrowArgs>(args?: SelectSubset<T, ref_stillsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ref_stills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_stillsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ref_stills
     * const ref_stills = await prisma.ref_stills.findMany()
     * 
     * // Get first 10 Ref_stills
     * const ref_stills = await prisma.ref_stills.findMany({ take: 10 })
     * 
     * // Only select the `still_id`
     * const ref_stillsWithStill_idOnly = await prisma.ref_stills.findMany({ select: { still_id: true } })
     * 
     */
    findMany<T extends ref_stillsFindManyArgs>(args?: SelectSubset<T, ref_stillsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ref_stills.
     * @param {ref_stillsCreateArgs} args - Arguments to create a Ref_stills.
     * @example
     * // Create one Ref_stills
     * const Ref_stills = await prisma.ref_stills.create({
     *   data: {
     *     // ... data to create a Ref_stills
     *   }
     * })
     * 
     */
    create<T extends ref_stillsCreateArgs>(args: SelectSubset<T, ref_stillsCreateArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ref_stills.
     * @param {ref_stillsCreateManyArgs} args - Arguments to create many Ref_stills.
     * @example
     * // Create many Ref_stills
     * const ref_stills = await prisma.ref_stills.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ref_stillsCreateManyArgs>(args?: SelectSubset<T, ref_stillsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ref_stills and returns the data saved in the database.
     * @param {ref_stillsCreateManyAndReturnArgs} args - Arguments to create many Ref_stills.
     * @example
     * // Create many Ref_stills
     * const ref_stills = await prisma.ref_stills.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ref_stills and only return the `still_id`
     * const ref_stillsWithStill_idOnly = await prisma.ref_stills.createManyAndReturn({
     *   select: { still_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ref_stillsCreateManyAndReturnArgs>(args?: SelectSubset<T, ref_stillsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ref_stills.
     * @param {ref_stillsDeleteArgs} args - Arguments to delete one Ref_stills.
     * @example
     * // Delete one Ref_stills
     * const Ref_stills = await prisma.ref_stills.delete({
     *   where: {
     *     // ... filter to delete one Ref_stills
     *   }
     * })
     * 
     */
    delete<T extends ref_stillsDeleteArgs>(args: SelectSubset<T, ref_stillsDeleteArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ref_stills.
     * @param {ref_stillsUpdateArgs} args - Arguments to update one Ref_stills.
     * @example
     * // Update one Ref_stills
     * const ref_stills = await prisma.ref_stills.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ref_stillsUpdateArgs>(args: SelectSubset<T, ref_stillsUpdateArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ref_stills.
     * @param {ref_stillsDeleteManyArgs} args - Arguments to filter Ref_stills to delete.
     * @example
     * // Delete a few Ref_stills
     * const { count } = await prisma.ref_stills.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ref_stillsDeleteManyArgs>(args?: SelectSubset<T, ref_stillsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_stills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_stillsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ref_stills
     * const ref_stills = await prisma.ref_stills.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ref_stillsUpdateManyArgs>(args: SelectSubset<T, ref_stillsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_stills and returns the data updated in the database.
     * @param {ref_stillsUpdateManyAndReturnArgs} args - Arguments to update many Ref_stills.
     * @example
     * // Update many Ref_stills
     * const ref_stills = await prisma.ref_stills.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ref_stills and only return the `still_id`
     * const ref_stillsWithStill_idOnly = await prisma.ref_stills.updateManyAndReturn({
     *   select: { still_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ref_stillsUpdateManyAndReturnArgs>(args: SelectSubset<T, ref_stillsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ref_stills.
     * @param {ref_stillsUpsertArgs} args - Arguments to update or create a Ref_stills.
     * @example
     * // Update or create a Ref_stills
     * const ref_stills = await prisma.ref_stills.upsert({
     *   create: {
     *     // ... data to create a Ref_stills
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ref_stills we want to update
     *   }
     * })
     */
    upsert<T extends ref_stillsUpsertArgs>(args: SelectSubset<T, ref_stillsUpsertArgs<ExtArgs>>): Prisma__ref_stillsClient<$Result.GetResult<Prisma.$ref_stillsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ref_stills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_stillsCountArgs} args - Arguments to filter Ref_stills to count.
     * @example
     * // Count the number of Ref_stills
     * const count = await prisma.ref_stills.count({
     *   where: {
     *     // ... the filter for the Ref_stills we want to count
     *   }
     * })
    **/
    count<T extends ref_stillsCountArgs>(
      args?: Subset<T, ref_stillsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ref_stillsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ref_stills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ref_stillsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ref_stillsAggregateArgs>(args: Subset<T, Ref_stillsAggregateArgs>): Prisma.PrismaPromise<GetRef_stillsAggregateType<T>>

    /**
     * Group by Ref_stills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_stillsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ref_stillsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ref_stillsGroupByArgs['orderBy'] }
        : { orderBy?: ref_stillsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ref_stillsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRef_stillsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ref_stills model
   */
  readonly fields: ref_stillsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ref_stills.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ref_stillsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    active_context<T extends ref_stills$active_contextArgs<ExtArgs> = {}>(args?: Subset<T, ref_stills$active_contextArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$active_contextPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    distillation_schedule<T extends ref_stills$distillation_scheduleArgs<ExtArgs> = {}>(args?: Subset<T, ref_stills$distillation_scheduleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_load_still<T extends ref_stills$log_load_stillArgs<ExtArgs> = {}>(args?: Subset<T, ref_stills$log_load_stillArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_start_distillation<T extends ref_stills$log_start_distillationArgs<ExtArgs> = {}>(args?: Subset<T, ref_stills$log_start_distillationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_start_distillationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ref_stills model
   */
  interface ref_stillsFieldRefs {
    readonly still_id: FieldRef<"ref_stills", 'Int'>
    readonly still_code: FieldRef<"ref_stills", 'String'>
    readonly max_capacity: FieldRef<"ref_stills", 'Decimal'>
    readonly power_rating_kw: FieldRef<"ref_stills", 'Int'>
    readonly lab_id: FieldRef<"ref_stills", 'Int'>
    readonly is_vacuum: FieldRef<"ref_stills", 'Boolean'>
    readonly is_operational: FieldRef<"ref_stills", 'Boolean'>
    readonly description: FieldRef<"ref_stills", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ref_stills findUnique
   */
  export type ref_stillsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * Filter, which ref_stills to fetch.
     */
    where: ref_stillsWhereUniqueInput
  }

  /**
   * ref_stills findUniqueOrThrow
   */
  export type ref_stillsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * Filter, which ref_stills to fetch.
     */
    where: ref_stillsWhereUniqueInput
  }

  /**
   * ref_stills findFirst
   */
  export type ref_stillsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * Filter, which ref_stills to fetch.
     */
    where?: ref_stillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_stills to fetch.
     */
    orderBy?: ref_stillsOrderByWithRelationInput | ref_stillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_stills.
     */
    cursor?: ref_stillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_stills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_stills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_stills.
     */
    distinct?: Ref_stillsScalarFieldEnum | Ref_stillsScalarFieldEnum[]
  }

  /**
   * ref_stills findFirstOrThrow
   */
  export type ref_stillsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * Filter, which ref_stills to fetch.
     */
    where?: ref_stillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_stills to fetch.
     */
    orderBy?: ref_stillsOrderByWithRelationInput | ref_stillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_stills.
     */
    cursor?: ref_stillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_stills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_stills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_stills.
     */
    distinct?: Ref_stillsScalarFieldEnum | Ref_stillsScalarFieldEnum[]
  }

  /**
   * ref_stills findMany
   */
  export type ref_stillsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * Filter, which ref_stills to fetch.
     */
    where?: ref_stillsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_stills to fetch.
     */
    orderBy?: ref_stillsOrderByWithRelationInput | ref_stillsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ref_stills.
     */
    cursor?: ref_stillsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_stills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_stills.
     */
    skip?: number
    distinct?: Ref_stillsScalarFieldEnum | Ref_stillsScalarFieldEnum[]
  }

  /**
   * ref_stills create
   */
  export type ref_stillsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * The data needed to create a ref_stills.
     */
    data: XOR<ref_stillsCreateInput, ref_stillsUncheckedCreateInput>
  }

  /**
   * ref_stills createMany
   */
  export type ref_stillsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ref_stills.
     */
    data: ref_stillsCreateManyInput | ref_stillsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ref_stills createManyAndReturn
   */
  export type ref_stillsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * The data used to create many ref_stills.
     */
    data: ref_stillsCreateManyInput | ref_stillsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ref_stills update
   */
  export type ref_stillsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * The data needed to update a ref_stills.
     */
    data: XOR<ref_stillsUpdateInput, ref_stillsUncheckedUpdateInput>
    /**
     * Choose, which ref_stills to update.
     */
    where: ref_stillsWhereUniqueInput
  }

  /**
   * ref_stills updateMany
   */
  export type ref_stillsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ref_stills.
     */
    data: XOR<ref_stillsUpdateManyMutationInput, ref_stillsUncheckedUpdateManyInput>
    /**
     * Filter which ref_stills to update
     */
    where?: ref_stillsWhereInput
    /**
     * Limit how many ref_stills to update.
     */
    limit?: number
  }

  /**
   * ref_stills updateManyAndReturn
   */
  export type ref_stillsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * The data used to update ref_stills.
     */
    data: XOR<ref_stillsUpdateManyMutationInput, ref_stillsUncheckedUpdateManyInput>
    /**
     * Filter which ref_stills to update
     */
    where?: ref_stillsWhereInput
    /**
     * Limit how many ref_stills to update.
     */
    limit?: number
  }

  /**
   * ref_stills upsert
   */
  export type ref_stillsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * The filter to search for the ref_stills to update in case it exists.
     */
    where: ref_stillsWhereUniqueInput
    /**
     * In case the ref_stills found by the `where` argument doesn't exist, create a new ref_stills with this data.
     */
    create: XOR<ref_stillsCreateInput, ref_stillsUncheckedCreateInput>
    /**
     * In case the ref_stills was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ref_stillsUpdateInput, ref_stillsUncheckedUpdateInput>
  }

  /**
   * ref_stills delete
   */
  export type ref_stillsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
    /**
     * Filter which ref_stills to delete.
     */
    where: ref_stillsWhereUniqueInput
  }

  /**
   * ref_stills deleteMany
   */
  export type ref_stillsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_stills to delete
     */
    where?: ref_stillsWhereInput
    /**
     * Limit how many ref_stills to delete.
     */
    limit?: number
  }

  /**
   * ref_stills.active_context
   */
  export type ref_stills$active_contextArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the active_context
     */
    select?: active_contextSelect<ExtArgs> | null
    /**
     * Omit specific fields from the active_context
     */
    omit?: active_contextOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: active_contextInclude<ExtArgs> | null
    where?: active_contextWhereInput
    orderBy?: active_contextOrderByWithRelationInput | active_contextOrderByWithRelationInput[]
    cursor?: active_contextWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Active_contextScalarFieldEnum | Active_contextScalarFieldEnum[]
  }

  /**
   * ref_stills.distillation_schedule
   */
  export type ref_stills$distillation_scheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule
     */
    select?: distillation_scheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule
     */
    omit?: distillation_scheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_scheduleInclude<ExtArgs> | null
    where?: distillation_scheduleWhereInput
    orderBy?: distillation_scheduleOrderByWithRelationInput | distillation_scheduleOrderByWithRelationInput[]
    cursor?: distillation_scheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Distillation_scheduleScalarFieldEnum | Distillation_scheduleScalarFieldEnum[]
  }

  /**
   * ref_stills.log_load_still
   */
  export type ref_stills$log_load_stillArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    where?: log_load_stillWhereInput
    orderBy?: log_load_stillOrderByWithRelationInput | log_load_stillOrderByWithRelationInput[]
    cursor?: log_load_stillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_load_stillScalarFieldEnum | Log_load_stillScalarFieldEnum[]
  }

  /**
   * ref_stills.log_start_distillation
   */
  export type ref_stills$log_start_distillationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_start_distillation
     */
    select?: log_start_distillationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_start_distillation
     */
    omit?: log_start_distillationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_start_distillationInclude<ExtArgs> | null
    where?: log_start_distillationWhereInput
    orderBy?: log_start_distillationOrderByWithRelationInput | log_start_distillationOrderByWithRelationInput[]
    cursor?: log_start_distillationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_start_distillationScalarFieldEnum | Log_start_distillationScalarFieldEnum[]
  }

  /**
   * ref_stills without action
   */
  export type ref_stillsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_stills
     */
    select?: ref_stillsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_stills
     */
    omit?: ref_stillsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_stillsInclude<ExtArgs> | null
  }


  /**
   * Model ref_suppliers
   */

  export type AggregateRef_suppliers = {
    _count: Ref_suppliersCountAggregateOutputType | null
    _avg: Ref_suppliersAvgAggregateOutputType | null
    _sum: Ref_suppliersSumAggregateOutputType | null
    _min: Ref_suppliersMinAggregateOutputType | null
    _max: Ref_suppliersMaxAggregateOutputType | null
  }

  export type Ref_suppliersAvgAggregateOutputType = {
    supplier_id: number | null
  }

  export type Ref_suppliersSumAggregateOutputType = {
    supplier_id: number | null
  }

  export type Ref_suppliersMinAggregateOutputType = {
    supplier_id: number | null
    supplier_name: string | null
    addr_1: string | null
    addr_2: string | null
    city: string | null
    post_code: string | null
    country_code: string | null
  }

  export type Ref_suppliersMaxAggregateOutputType = {
    supplier_id: number | null
    supplier_name: string | null
    addr_1: string | null
    addr_2: string | null
    city: string | null
    post_code: string | null
    country_code: string | null
  }

  export type Ref_suppliersCountAggregateOutputType = {
    supplier_id: number
    supplier_name: number
    addr_1: number
    addr_2: number
    city: number
    post_code: number
    country_code: number
    _all: number
  }


  export type Ref_suppliersAvgAggregateInputType = {
    supplier_id?: true
  }

  export type Ref_suppliersSumAggregateInputType = {
    supplier_id?: true
  }

  export type Ref_suppliersMinAggregateInputType = {
    supplier_id?: true
    supplier_name?: true
    addr_1?: true
    addr_2?: true
    city?: true
    post_code?: true
    country_code?: true
  }

  export type Ref_suppliersMaxAggregateInputType = {
    supplier_id?: true
    supplier_name?: true
    addr_1?: true
    addr_2?: true
    city?: true
    post_code?: true
    country_code?: true
  }

  export type Ref_suppliersCountAggregateInputType = {
    supplier_id?: true
    supplier_name?: true
    addr_1?: true
    addr_2?: true
    city?: true
    post_code?: true
    country_code?: true
    _all?: true
  }

  export type Ref_suppliersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_suppliers to aggregate.
     */
    where?: ref_suppliersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_suppliers to fetch.
     */
    orderBy?: ref_suppliersOrderByWithRelationInput | ref_suppliersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ref_suppliersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ref_suppliers
    **/
    _count?: true | Ref_suppliersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ref_suppliersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ref_suppliersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ref_suppliersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ref_suppliersMaxAggregateInputType
  }

  export type GetRef_suppliersAggregateType<T extends Ref_suppliersAggregateArgs> = {
        [P in keyof T & keyof AggregateRef_suppliers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRef_suppliers[P]>
      : GetScalarType<T[P], AggregateRef_suppliers[P]>
  }




  export type ref_suppliersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_suppliersWhereInput
    orderBy?: ref_suppliersOrderByWithAggregationInput | ref_suppliersOrderByWithAggregationInput[]
    by: Ref_suppliersScalarFieldEnum[] | Ref_suppliersScalarFieldEnum
    having?: ref_suppliersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ref_suppliersCountAggregateInputType | true
    _avg?: Ref_suppliersAvgAggregateInputType
    _sum?: Ref_suppliersSumAggregateInputType
    _min?: Ref_suppliersMinAggregateInputType
    _max?: Ref_suppliersMaxAggregateInputType
  }

  export type Ref_suppliersGroupByOutputType = {
    supplier_id: number
    supplier_name: string
    addr_1: string | null
    addr_2: string | null
    city: string | null
    post_code: string | null
    country_code: string | null
    _count: Ref_suppliersCountAggregateOutputType | null
    _avg: Ref_suppliersAvgAggregateOutputType | null
    _sum: Ref_suppliersSumAggregateOutputType | null
    _min: Ref_suppliersMinAggregateOutputType | null
    _max: Ref_suppliersMaxAggregateOutputType | null
  }

  type GetRef_suppliersGroupByPayload<T extends ref_suppliersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ref_suppliersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ref_suppliersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ref_suppliersGroupByOutputType[P]>
            : GetScalarType<T[P], Ref_suppliersGroupByOutputType[P]>
        }
      >
    >


  export type ref_suppliersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    supplier_id?: boolean
    supplier_name?: boolean
    addr_1?: boolean
    addr_2?: boolean
    city?: boolean
    post_code?: boolean
    country_code?: boolean
    ref_supplier_material?: boolean | ref_suppliers$ref_supplier_materialArgs<ExtArgs>
    stock_activity?: boolean | ref_suppliers$stock_activityArgs<ExtArgs>
    stock_history?: boolean | ref_suppliers$stock_historyArgs<ExtArgs>
    stock_new?: boolean | ref_suppliers$stock_newArgs<ExtArgs>
    stock_order?: boolean | ref_suppliers$stock_orderArgs<ExtArgs>
    _count?: boolean | Ref_suppliersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_suppliers"]>

  export type ref_suppliersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    supplier_id?: boolean
    supplier_name?: boolean
    addr_1?: boolean
    addr_2?: boolean
    city?: boolean
    post_code?: boolean
    country_code?: boolean
  }, ExtArgs["result"]["ref_suppliers"]>

  export type ref_suppliersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    supplier_id?: boolean
    supplier_name?: boolean
    addr_1?: boolean
    addr_2?: boolean
    city?: boolean
    post_code?: boolean
    country_code?: boolean
  }, ExtArgs["result"]["ref_suppliers"]>

  export type ref_suppliersSelectScalar = {
    supplier_id?: boolean
    supplier_name?: boolean
    addr_1?: boolean
    addr_2?: boolean
    city?: boolean
    post_code?: boolean
    country_code?: boolean
  }

  export type ref_suppliersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"supplier_id" | "supplier_name" | "addr_1" | "addr_2" | "city" | "post_code" | "country_code", ExtArgs["result"]["ref_suppliers"]>
  export type ref_suppliersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_supplier_material?: boolean | ref_suppliers$ref_supplier_materialArgs<ExtArgs>
    stock_activity?: boolean | ref_suppliers$stock_activityArgs<ExtArgs>
    stock_history?: boolean | ref_suppliers$stock_historyArgs<ExtArgs>
    stock_new?: boolean | ref_suppliers$stock_newArgs<ExtArgs>
    stock_order?: boolean | ref_suppliers$stock_orderArgs<ExtArgs>
    _count?: boolean | Ref_suppliersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ref_suppliersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ref_suppliersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ref_suppliersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ref_suppliers"
    objects: {
      ref_supplier_material: Prisma.$ref_supplier_materialPayload<ExtArgs>[]
      stock_activity: Prisma.$stock_activityPayload<ExtArgs>[]
      stock_history: Prisma.$stock_historyPayload<ExtArgs>[]
      stock_new: Prisma.$stock_newPayload<ExtArgs>[]
      stock_order: Prisma.$stock_orderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      supplier_id: number
      supplier_name: string
      addr_1: string | null
      addr_2: string | null
      city: string | null
      post_code: string | null
      country_code: string | null
    }, ExtArgs["result"]["ref_suppliers"]>
    composites: {}
  }

  type ref_suppliersGetPayload<S extends boolean | null | undefined | ref_suppliersDefaultArgs> = $Result.GetResult<Prisma.$ref_suppliersPayload, S>

  type ref_suppliersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ref_suppliersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ref_suppliersCountAggregateInputType | true
    }

  export interface ref_suppliersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ref_suppliers'], meta: { name: 'ref_suppliers' } }
    /**
     * Find zero or one Ref_suppliers that matches the filter.
     * @param {ref_suppliersFindUniqueArgs} args - Arguments to find a Ref_suppliers
     * @example
     * // Get one Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ref_suppliersFindUniqueArgs>(args: SelectSubset<T, ref_suppliersFindUniqueArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ref_suppliers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ref_suppliersFindUniqueOrThrowArgs} args - Arguments to find a Ref_suppliers
     * @example
     * // Get one Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ref_suppliersFindUniqueOrThrowArgs>(args: SelectSubset<T, ref_suppliersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_suppliers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_suppliersFindFirstArgs} args - Arguments to find a Ref_suppliers
     * @example
     * // Get one Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ref_suppliersFindFirstArgs>(args?: SelectSubset<T, ref_suppliersFindFirstArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_suppliers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_suppliersFindFirstOrThrowArgs} args - Arguments to find a Ref_suppliers
     * @example
     * // Get one Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ref_suppliersFindFirstOrThrowArgs>(args?: SelectSubset<T, ref_suppliersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ref_suppliers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_suppliersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.findMany()
     * 
     * // Get first 10 Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.findMany({ take: 10 })
     * 
     * // Only select the `supplier_id`
     * const ref_suppliersWithSupplier_idOnly = await prisma.ref_suppliers.findMany({ select: { supplier_id: true } })
     * 
     */
    findMany<T extends ref_suppliersFindManyArgs>(args?: SelectSubset<T, ref_suppliersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ref_suppliers.
     * @param {ref_suppliersCreateArgs} args - Arguments to create a Ref_suppliers.
     * @example
     * // Create one Ref_suppliers
     * const Ref_suppliers = await prisma.ref_suppliers.create({
     *   data: {
     *     // ... data to create a Ref_suppliers
     *   }
     * })
     * 
     */
    create<T extends ref_suppliersCreateArgs>(args: SelectSubset<T, ref_suppliersCreateArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ref_suppliers.
     * @param {ref_suppliersCreateManyArgs} args - Arguments to create many Ref_suppliers.
     * @example
     * // Create many Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ref_suppliersCreateManyArgs>(args?: SelectSubset<T, ref_suppliersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ref_suppliers and returns the data saved in the database.
     * @param {ref_suppliersCreateManyAndReturnArgs} args - Arguments to create many Ref_suppliers.
     * @example
     * // Create many Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ref_suppliers and only return the `supplier_id`
     * const ref_suppliersWithSupplier_idOnly = await prisma.ref_suppliers.createManyAndReturn({
     *   select: { supplier_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ref_suppliersCreateManyAndReturnArgs>(args?: SelectSubset<T, ref_suppliersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ref_suppliers.
     * @param {ref_suppliersDeleteArgs} args - Arguments to delete one Ref_suppliers.
     * @example
     * // Delete one Ref_suppliers
     * const Ref_suppliers = await prisma.ref_suppliers.delete({
     *   where: {
     *     // ... filter to delete one Ref_suppliers
     *   }
     * })
     * 
     */
    delete<T extends ref_suppliersDeleteArgs>(args: SelectSubset<T, ref_suppliersDeleteArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ref_suppliers.
     * @param {ref_suppliersUpdateArgs} args - Arguments to update one Ref_suppliers.
     * @example
     * // Update one Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ref_suppliersUpdateArgs>(args: SelectSubset<T, ref_suppliersUpdateArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ref_suppliers.
     * @param {ref_suppliersDeleteManyArgs} args - Arguments to filter Ref_suppliers to delete.
     * @example
     * // Delete a few Ref_suppliers
     * const { count } = await prisma.ref_suppliers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ref_suppliersDeleteManyArgs>(args?: SelectSubset<T, ref_suppliersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_suppliersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ref_suppliersUpdateManyArgs>(args: SelectSubset<T, ref_suppliersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_suppliers and returns the data updated in the database.
     * @param {ref_suppliersUpdateManyAndReturnArgs} args - Arguments to update many Ref_suppliers.
     * @example
     * // Update many Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ref_suppliers and only return the `supplier_id`
     * const ref_suppliersWithSupplier_idOnly = await prisma.ref_suppliers.updateManyAndReturn({
     *   select: { supplier_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ref_suppliersUpdateManyAndReturnArgs>(args: SelectSubset<T, ref_suppliersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ref_suppliers.
     * @param {ref_suppliersUpsertArgs} args - Arguments to update or create a Ref_suppliers.
     * @example
     * // Update or create a Ref_suppliers
     * const ref_suppliers = await prisma.ref_suppliers.upsert({
     *   create: {
     *     // ... data to create a Ref_suppliers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ref_suppliers we want to update
     *   }
     * })
     */
    upsert<T extends ref_suppliersUpsertArgs>(args: SelectSubset<T, ref_suppliersUpsertArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ref_suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_suppliersCountArgs} args - Arguments to filter Ref_suppliers to count.
     * @example
     * // Count the number of Ref_suppliers
     * const count = await prisma.ref_suppliers.count({
     *   where: {
     *     // ... the filter for the Ref_suppliers we want to count
     *   }
     * })
    **/
    count<T extends ref_suppliersCountArgs>(
      args?: Subset<T, ref_suppliersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ref_suppliersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ref_suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ref_suppliersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ref_suppliersAggregateArgs>(args: Subset<T, Ref_suppliersAggregateArgs>): Prisma.PrismaPromise<GetRef_suppliersAggregateType<T>>

    /**
     * Group by Ref_suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_suppliersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ref_suppliersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ref_suppliersGroupByArgs['orderBy'] }
        : { orderBy?: ref_suppliersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ref_suppliersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRef_suppliersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ref_suppliers model
   */
  readonly fields: ref_suppliersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ref_suppliers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ref_suppliersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ref_supplier_material<T extends ref_suppliers$ref_supplier_materialArgs<ExtArgs> = {}>(args?: Subset<T, ref_suppliers$ref_supplier_materialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_activity<T extends ref_suppliers$stock_activityArgs<ExtArgs> = {}>(args?: Subset<T, ref_suppliers$stock_activityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_history<T extends ref_suppliers$stock_historyArgs<ExtArgs> = {}>(args?: Subset<T, ref_suppliers$stock_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_new<T extends ref_suppliers$stock_newArgs<ExtArgs> = {}>(args?: Subset<T, ref_suppliers$stock_newArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stock_order<T extends ref_suppliers$stock_orderArgs<ExtArgs> = {}>(args?: Subset<T, ref_suppliers$stock_orderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ref_suppliers model
   */
  interface ref_suppliersFieldRefs {
    readonly supplier_id: FieldRef<"ref_suppliers", 'Int'>
    readonly supplier_name: FieldRef<"ref_suppliers", 'String'>
    readonly addr_1: FieldRef<"ref_suppliers", 'String'>
    readonly addr_2: FieldRef<"ref_suppliers", 'String'>
    readonly city: FieldRef<"ref_suppliers", 'String'>
    readonly post_code: FieldRef<"ref_suppliers", 'String'>
    readonly country_code: FieldRef<"ref_suppliers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ref_suppliers findUnique
   */
  export type ref_suppliersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * Filter, which ref_suppliers to fetch.
     */
    where: ref_suppliersWhereUniqueInput
  }

  /**
   * ref_suppliers findUniqueOrThrow
   */
  export type ref_suppliersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * Filter, which ref_suppliers to fetch.
     */
    where: ref_suppliersWhereUniqueInput
  }

  /**
   * ref_suppliers findFirst
   */
  export type ref_suppliersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * Filter, which ref_suppliers to fetch.
     */
    where?: ref_suppliersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_suppliers to fetch.
     */
    orderBy?: ref_suppliersOrderByWithRelationInput | ref_suppliersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_suppliers.
     */
    cursor?: ref_suppliersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_suppliers.
     */
    distinct?: Ref_suppliersScalarFieldEnum | Ref_suppliersScalarFieldEnum[]
  }

  /**
   * ref_suppliers findFirstOrThrow
   */
  export type ref_suppliersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * Filter, which ref_suppliers to fetch.
     */
    where?: ref_suppliersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_suppliers to fetch.
     */
    orderBy?: ref_suppliersOrderByWithRelationInput | ref_suppliersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_suppliers.
     */
    cursor?: ref_suppliersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_suppliers.
     */
    distinct?: Ref_suppliersScalarFieldEnum | Ref_suppliersScalarFieldEnum[]
  }

  /**
   * ref_suppliers findMany
   */
  export type ref_suppliersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * Filter, which ref_suppliers to fetch.
     */
    where?: ref_suppliersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_suppliers to fetch.
     */
    orderBy?: ref_suppliersOrderByWithRelationInput | ref_suppliersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ref_suppliers.
     */
    cursor?: ref_suppliersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_suppliers.
     */
    skip?: number
    distinct?: Ref_suppliersScalarFieldEnum | Ref_suppliersScalarFieldEnum[]
  }

  /**
   * ref_suppliers create
   */
  export type ref_suppliersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * The data needed to create a ref_suppliers.
     */
    data: XOR<ref_suppliersCreateInput, ref_suppliersUncheckedCreateInput>
  }

  /**
   * ref_suppliers createMany
   */
  export type ref_suppliersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ref_suppliers.
     */
    data: ref_suppliersCreateManyInput | ref_suppliersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ref_suppliers createManyAndReturn
   */
  export type ref_suppliersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * The data used to create many ref_suppliers.
     */
    data: ref_suppliersCreateManyInput | ref_suppliersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ref_suppliers update
   */
  export type ref_suppliersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * The data needed to update a ref_suppliers.
     */
    data: XOR<ref_suppliersUpdateInput, ref_suppliersUncheckedUpdateInput>
    /**
     * Choose, which ref_suppliers to update.
     */
    where: ref_suppliersWhereUniqueInput
  }

  /**
   * ref_suppliers updateMany
   */
  export type ref_suppliersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ref_suppliers.
     */
    data: XOR<ref_suppliersUpdateManyMutationInput, ref_suppliersUncheckedUpdateManyInput>
    /**
     * Filter which ref_suppliers to update
     */
    where?: ref_suppliersWhereInput
    /**
     * Limit how many ref_suppliers to update.
     */
    limit?: number
  }

  /**
   * ref_suppliers updateManyAndReturn
   */
  export type ref_suppliersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * The data used to update ref_suppliers.
     */
    data: XOR<ref_suppliersUpdateManyMutationInput, ref_suppliersUncheckedUpdateManyInput>
    /**
     * Filter which ref_suppliers to update
     */
    where?: ref_suppliersWhereInput
    /**
     * Limit how many ref_suppliers to update.
     */
    limit?: number
  }

  /**
   * ref_suppliers upsert
   */
  export type ref_suppliersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * The filter to search for the ref_suppliers to update in case it exists.
     */
    where: ref_suppliersWhereUniqueInput
    /**
     * In case the ref_suppliers found by the `where` argument doesn't exist, create a new ref_suppliers with this data.
     */
    create: XOR<ref_suppliersCreateInput, ref_suppliersUncheckedCreateInput>
    /**
     * In case the ref_suppliers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ref_suppliersUpdateInput, ref_suppliersUncheckedUpdateInput>
  }

  /**
   * ref_suppliers delete
   */
  export type ref_suppliersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    /**
     * Filter which ref_suppliers to delete.
     */
    where: ref_suppliersWhereUniqueInput
  }

  /**
   * ref_suppliers deleteMany
   */
  export type ref_suppliersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_suppliers to delete
     */
    where?: ref_suppliersWhereInput
    /**
     * Limit how many ref_suppliers to delete.
     */
    limit?: number
  }

  /**
   * ref_suppliers.ref_supplier_material
   */
  export type ref_suppliers$ref_supplier_materialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    where?: ref_supplier_materialWhereInput
    orderBy?: ref_supplier_materialOrderByWithRelationInput | ref_supplier_materialOrderByWithRelationInput[]
    cursor?: ref_supplier_materialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ref_supplier_materialScalarFieldEnum | Ref_supplier_materialScalarFieldEnum[]
  }

  /**
   * ref_suppliers.stock_activity
   */
  export type ref_suppliers$stock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    where?: stock_activityWhereInput
    orderBy?: stock_activityOrderByWithRelationInput | stock_activityOrderByWithRelationInput[]
    cursor?: stock_activityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_activityScalarFieldEnum | Stock_activityScalarFieldEnum[]
  }

  /**
   * ref_suppliers.stock_history
   */
  export type ref_suppliers$stock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    where?: stock_historyWhereInput
    orderBy?: stock_historyOrderByWithRelationInput | stock_historyOrderByWithRelationInput[]
    cursor?: stock_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_historyScalarFieldEnum | Stock_historyScalarFieldEnum[]
  }

  /**
   * ref_suppliers.stock_new
   */
  export type ref_suppliers$stock_newArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    where?: stock_newWhereInput
    orderBy?: stock_newOrderByWithRelationInput | stock_newOrderByWithRelationInput[]
    cursor?: stock_newWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_newScalarFieldEnum | Stock_newScalarFieldEnum[]
  }

  /**
   * ref_suppliers.stock_order
   */
  export type ref_suppliers$stock_orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    where?: stock_orderWhereInput
    orderBy?: stock_orderOrderByWithRelationInput | stock_orderOrderByWithRelationInput[]
    cursor?: stock_orderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_orderScalarFieldEnum | Stock_orderScalarFieldEnum[]
  }

  /**
   * ref_suppliers without action
   */
  export type ref_suppliersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
  }


  /**
   * Model session_settings
   */

  export type AggregateSession_settings = {
    _count: Session_settingsCountAggregateOutputType | null
    _avg: Session_settingsAvgAggregateOutputType | null
    _sum: Session_settingsSumAggregateOutputType | null
    _min: Session_settingsMinAggregateOutputType | null
    _max: Session_settingsMaxAggregateOutputType | null
  }

  export type Session_settingsAvgAggregateOutputType = {
    session_duration_seconds: number | null
    inactivity_timeout_seconds: number | null
  }

  export type Session_settingsSumAggregateOutputType = {
    session_duration_seconds: number | null
    inactivity_timeout_seconds: number | null
  }

  export type Session_settingsMinAggregateOutputType = {
    id: string | null
    device_type: string | null
    session_duration_seconds: number | null
    inactivity_timeout_seconds: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Session_settingsMaxAggregateOutputType = {
    id: string | null
    device_type: string | null
    session_duration_seconds: number | null
    inactivity_timeout_seconds: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Session_settingsCountAggregateOutputType = {
    id: number
    device_type: number
    session_duration_seconds: number
    inactivity_timeout_seconds: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Session_settingsAvgAggregateInputType = {
    session_duration_seconds?: true
    inactivity_timeout_seconds?: true
  }

  export type Session_settingsSumAggregateInputType = {
    session_duration_seconds?: true
    inactivity_timeout_seconds?: true
  }

  export type Session_settingsMinAggregateInputType = {
    id?: true
    device_type?: true
    session_duration_seconds?: true
    inactivity_timeout_seconds?: true
    created_at?: true
    updated_at?: true
  }

  export type Session_settingsMaxAggregateInputType = {
    id?: true
    device_type?: true
    session_duration_seconds?: true
    inactivity_timeout_seconds?: true
    created_at?: true
    updated_at?: true
  }

  export type Session_settingsCountAggregateInputType = {
    id?: true
    device_type?: true
    session_duration_seconds?: true
    inactivity_timeout_seconds?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Session_settingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which session_settings to aggregate.
     */
    where?: session_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of session_settings to fetch.
     */
    orderBy?: session_settingsOrderByWithRelationInput | session_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: session_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` session_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` session_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned session_settings
    **/
    _count?: true | Session_settingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Session_settingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Session_settingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Session_settingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Session_settingsMaxAggregateInputType
  }

  export type GetSession_settingsAggregateType<T extends Session_settingsAggregateArgs> = {
        [P in keyof T & keyof AggregateSession_settings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession_settings[P]>
      : GetScalarType<T[P], AggregateSession_settings[P]>
  }




  export type session_settingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: session_settingsWhereInput
    orderBy?: session_settingsOrderByWithAggregationInput | session_settingsOrderByWithAggregationInput[]
    by: Session_settingsScalarFieldEnum[] | Session_settingsScalarFieldEnum
    having?: session_settingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Session_settingsCountAggregateInputType | true
    _avg?: Session_settingsAvgAggregateInputType
    _sum?: Session_settingsSumAggregateInputType
    _min?: Session_settingsMinAggregateInputType
    _max?: Session_settingsMaxAggregateInputType
  }

  export type Session_settingsGroupByOutputType = {
    id: string
    device_type: string
    session_duration_seconds: number
    inactivity_timeout_seconds: number | null
    created_at: Date | null
    updated_at: Date | null
    _count: Session_settingsCountAggregateOutputType | null
    _avg: Session_settingsAvgAggregateOutputType | null
    _sum: Session_settingsSumAggregateOutputType | null
    _min: Session_settingsMinAggregateOutputType | null
    _max: Session_settingsMaxAggregateOutputType | null
  }

  type GetSession_settingsGroupByPayload<T extends session_settingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Session_settingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Session_settingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Session_settingsGroupByOutputType[P]>
            : GetScalarType<T[P], Session_settingsGroupByOutputType[P]>
        }
      >
    >


  export type session_settingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_type?: boolean
    session_duration_seconds?: boolean
    inactivity_timeout_seconds?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["session_settings"]>

  export type session_settingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_type?: boolean
    session_duration_seconds?: boolean
    inactivity_timeout_seconds?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["session_settings"]>

  export type session_settingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    device_type?: boolean
    session_duration_seconds?: boolean
    inactivity_timeout_seconds?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["session_settings"]>

  export type session_settingsSelectScalar = {
    id?: boolean
    device_type?: boolean
    session_duration_seconds?: boolean
    inactivity_timeout_seconds?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type session_settingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "device_type" | "session_duration_seconds" | "inactivity_timeout_seconds" | "created_at" | "updated_at", ExtArgs["result"]["session_settings"]>

  export type $session_settingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "session_settings"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      device_type: string
      session_duration_seconds: number
      inactivity_timeout_seconds: number | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["session_settings"]>
    composites: {}
  }

  type session_settingsGetPayload<S extends boolean | null | undefined | session_settingsDefaultArgs> = $Result.GetResult<Prisma.$session_settingsPayload, S>

  type session_settingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<session_settingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Session_settingsCountAggregateInputType | true
    }

  export interface session_settingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['session_settings'], meta: { name: 'session_settings' } }
    /**
     * Find zero or one Session_settings that matches the filter.
     * @param {session_settingsFindUniqueArgs} args - Arguments to find a Session_settings
     * @example
     * // Get one Session_settings
     * const session_settings = await prisma.session_settings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends session_settingsFindUniqueArgs>(args: SelectSubset<T, session_settingsFindUniqueArgs<ExtArgs>>): Prisma__session_settingsClient<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session_settings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {session_settingsFindUniqueOrThrowArgs} args - Arguments to find a Session_settings
     * @example
     * // Get one Session_settings
     * const session_settings = await prisma.session_settings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends session_settingsFindUniqueOrThrowArgs>(args: SelectSubset<T, session_settingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__session_settingsClient<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session_settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {session_settingsFindFirstArgs} args - Arguments to find a Session_settings
     * @example
     * // Get one Session_settings
     * const session_settings = await prisma.session_settings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends session_settingsFindFirstArgs>(args?: SelectSubset<T, session_settingsFindFirstArgs<ExtArgs>>): Prisma__session_settingsClient<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session_settings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {session_settingsFindFirstOrThrowArgs} args - Arguments to find a Session_settings
     * @example
     * // Get one Session_settings
     * const session_settings = await prisma.session_settings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends session_settingsFindFirstOrThrowArgs>(args?: SelectSubset<T, session_settingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__session_settingsClient<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Session_settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {session_settingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Session_settings
     * const session_settings = await prisma.session_settings.findMany()
     * 
     * // Get first 10 Session_settings
     * const session_settings = await prisma.session_settings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const session_settingsWithIdOnly = await prisma.session_settings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends session_settingsFindManyArgs>(args?: SelectSubset<T, session_settingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session_settings.
     * @param {session_settingsCreateArgs} args - Arguments to create a Session_settings.
     * @example
     * // Create one Session_settings
     * const Session_settings = await prisma.session_settings.create({
     *   data: {
     *     // ... data to create a Session_settings
     *   }
     * })
     * 
     */
    create<T extends session_settingsCreateArgs>(args: SelectSubset<T, session_settingsCreateArgs<ExtArgs>>): Prisma__session_settingsClient<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Session_settings.
     * @param {session_settingsCreateManyArgs} args - Arguments to create many Session_settings.
     * @example
     * // Create many Session_settings
     * const session_settings = await prisma.session_settings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends session_settingsCreateManyArgs>(args?: SelectSubset<T, session_settingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Session_settings and returns the data saved in the database.
     * @param {session_settingsCreateManyAndReturnArgs} args - Arguments to create many Session_settings.
     * @example
     * // Create many Session_settings
     * const session_settings = await prisma.session_settings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Session_settings and only return the `id`
     * const session_settingsWithIdOnly = await prisma.session_settings.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends session_settingsCreateManyAndReturnArgs>(args?: SelectSubset<T, session_settingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session_settings.
     * @param {session_settingsDeleteArgs} args - Arguments to delete one Session_settings.
     * @example
     * // Delete one Session_settings
     * const Session_settings = await prisma.session_settings.delete({
     *   where: {
     *     // ... filter to delete one Session_settings
     *   }
     * })
     * 
     */
    delete<T extends session_settingsDeleteArgs>(args: SelectSubset<T, session_settingsDeleteArgs<ExtArgs>>): Prisma__session_settingsClient<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session_settings.
     * @param {session_settingsUpdateArgs} args - Arguments to update one Session_settings.
     * @example
     * // Update one Session_settings
     * const session_settings = await prisma.session_settings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends session_settingsUpdateArgs>(args: SelectSubset<T, session_settingsUpdateArgs<ExtArgs>>): Prisma__session_settingsClient<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Session_settings.
     * @param {session_settingsDeleteManyArgs} args - Arguments to filter Session_settings to delete.
     * @example
     * // Delete a few Session_settings
     * const { count } = await prisma.session_settings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends session_settingsDeleteManyArgs>(args?: SelectSubset<T, session_settingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Session_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {session_settingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Session_settings
     * const session_settings = await prisma.session_settings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends session_settingsUpdateManyArgs>(args: SelectSubset<T, session_settingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Session_settings and returns the data updated in the database.
     * @param {session_settingsUpdateManyAndReturnArgs} args - Arguments to update many Session_settings.
     * @example
     * // Update many Session_settings
     * const session_settings = await prisma.session_settings.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Session_settings and only return the `id`
     * const session_settingsWithIdOnly = await prisma.session_settings.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends session_settingsUpdateManyAndReturnArgs>(args: SelectSubset<T, session_settingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session_settings.
     * @param {session_settingsUpsertArgs} args - Arguments to update or create a Session_settings.
     * @example
     * // Update or create a Session_settings
     * const session_settings = await prisma.session_settings.upsert({
     *   create: {
     *     // ... data to create a Session_settings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session_settings we want to update
     *   }
     * })
     */
    upsert<T extends session_settingsUpsertArgs>(args: SelectSubset<T, session_settingsUpsertArgs<ExtArgs>>): Prisma__session_settingsClient<$Result.GetResult<Prisma.$session_settingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Session_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {session_settingsCountArgs} args - Arguments to filter Session_settings to count.
     * @example
     * // Count the number of Session_settings
     * const count = await prisma.session_settings.count({
     *   where: {
     *     // ... the filter for the Session_settings we want to count
     *   }
     * })
    **/
    count<T extends session_settingsCountArgs>(
      args?: Subset<T, session_settingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Session_settingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Session_settingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Session_settingsAggregateArgs>(args: Subset<T, Session_settingsAggregateArgs>): Prisma.PrismaPromise<GetSession_settingsAggregateType<T>>

    /**
     * Group by Session_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {session_settingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends session_settingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: session_settingsGroupByArgs['orderBy'] }
        : { orderBy?: session_settingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, session_settingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSession_settingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the session_settings model
   */
  readonly fields: session_settingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for session_settings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__session_settingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the session_settings model
   */
  interface session_settingsFieldRefs {
    readonly id: FieldRef<"session_settings", 'String'>
    readonly device_type: FieldRef<"session_settings", 'String'>
    readonly session_duration_seconds: FieldRef<"session_settings", 'Int'>
    readonly inactivity_timeout_seconds: FieldRef<"session_settings", 'Int'>
    readonly created_at: FieldRef<"session_settings", 'DateTime'>
    readonly updated_at: FieldRef<"session_settings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * session_settings findUnique
   */
  export type session_settingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * Filter, which session_settings to fetch.
     */
    where: session_settingsWhereUniqueInput
  }

  /**
   * session_settings findUniqueOrThrow
   */
  export type session_settingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * Filter, which session_settings to fetch.
     */
    where: session_settingsWhereUniqueInput
  }

  /**
   * session_settings findFirst
   */
  export type session_settingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * Filter, which session_settings to fetch.
     */
    where?: session_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of session_settings to fetch.
     */
    orderBy?: session_settingsOrderByWithRelationInput | session_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for session_settings.
     */
    cursor?: session_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` session_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` session_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of session_settings.
     */
    distinct?: Session_settingsScalarFieldEnum | Session_settingsScalarFieldEnum[]
  }

  /**
   * session_settings findFirstOrThrow
   */
  export type session_settingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * Filter, which session_settings to fetch.
     */
    where?: session_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of session_settings to fetch.
     */
    orderBy?: session_settingsOrderByWithRelationInput | session_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for session_settings.
     */
    cursor?: session_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` session_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` session_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of session_settings.
     */
    distinct?: Session_settingsScalarFieldEnum | Session_settingsScalarFieldEnum[]
  }

  /**
   * session_settings findMany
   */
  export type session_settingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * Filter, which session_settings to fetch.
     */
    where?: session_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of session_settings to fetch.
     */
    orderBy?: session_settingsOrderByWithRelationInput | session_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing session_settings.
     */
    cursor?: session_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` session_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` session_settings.
     */
    skip?: number
    distinct?: Session_settingsScalarFieldEnum | Session_settingsScalarFieldEnum[]
  }

  /**
   * session_settings create
   */
  export type session_settingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * The data needed to create a session_settings.
     */
    data: XOR<session_settingsCreateInput, session_settingsUncheckedCreateInput>
  }

  /**
   * session_settings createMany
   */
  export type session_settingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many session_settings.
     */
    data: session_settingsCreateManyInput | session_settingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * session_settings createManyAndReturn
   */
  export type session_settingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * The data used to create many session_settings.
     */
    data: session_settingsCreateManyInput | session_settingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * session_settings update
   */
  export type session_settingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * The data needed to update a session_settings.
     */
    data: XOR<session_settingsUpdateInput, session_settingsUncheckedUpdateInput>
    /**
     * Choose, which session_settings to update.
     */
    where: session_settingsWhereUniqueInput
  }

  /**
   * session_settings updateMany
   */
  export type session_settingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update session_settings.
     */
    data: XOR<session_settingsUpdateManyMutationInput, session_settingsUncheckedUpdateManyInput>
    /**
     * Filter which session_settings to update
     */
    where?: session_settingsWhereInput
    /**
     * Limit how many session_settings to update.
     */
    limit?: number
  }

  /**
   * session_settings updateManyAndReturn
   */
  export type session_settingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * The data used to update session_settings.
     */
    data: XOR<session_settingsUpdateManyMutationInput, session_settingsUncheckedUpdateManyInput>
    /**
     * Filter which session_settings to update
     */
    where?: session_settingsWhereInput
    /**
     * Limit how many session_settings to update.
     */
    limit?: number
  }

  /**
   * session_settings upsert
   */
  export type session_settingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * The filter to search for the session_settings to update in case it exists.
     */
    where: session_settingsWhereUniqueInput
    /**
     * In case the session_settings found by the `where` argument doesn't exist, create a new session_settings with this data.
     */
    create: XOR<session_settingsCreateInput, session_settingsUncheckedCreateInput>
    /**
     * In case the session_settings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<session_settingsUpdateInput, session_settingsUncheckedUpdateInput>
  }

  /**
   * session_settings delete
   */
  export type session_settingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
    /**
     * Filter which session_settings to delete.
     */
    where: session_settingsWhereUniqueInput
  }

  /**
   * session_settings deleteMany
   */
  export type session_settingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which session_settings to delete
     */
    where?: session_settingsWhereInput
    /**
     * Limit how many session_settings to delete.
     */
    limit?: number
  }

  /**
   * session_settings without action
   */
  export type session_settingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the session_settings
     */
    select?: session_settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the session_settings
     */
    omit?: session_settingsOmit<ExtArgs> | null
  }


  /**
   * Model stock_drum
   */

  export type AggregateStock_drum = {
    _count: Stock_drumCountAggregateOutputType | null
    _avg: Stock_drumAvgAggregateOutputType | null
    _sum: Stock_drumSumAggregateOutputType | null
    _min: Stock_drumMinAggregateOutputType | null
    _max: Stock_drumMaxAggregateOutputType | null
  }

  export type Stock_drumAvgAggregateOutputType = {
    drum_id: number | null
    order_detail_id: number | null
    fill_level: Decimal | null
    distillation_id: number | null
  }

  export type Stock_drumSumAggregateOutputType = {
    drum_id: number | null
    order_detail_id: number | null
    fill_level: Decimal | null
    distillation_id: number | null
  }

  export type Stock_drumMinAggregateOutputType = {
    drum_id: number | null
    drum_type: string | null
    order_detail_id: number | null
    fill_level: Decimal | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
    distillation_id: number | null
  }

  export type Stock_drumMaxAggregateOutputType = {
    drum_id: number | null
    drum_type: string | null
    order_detail_id: number | null
    fill_level: Decimal | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
    distillation_id: number | null
  }

  export type Stock_drumCountAggregateOutputType = {
    drum_id: number
    drum_type: number
    order_detail_id: number
    fill_level: number
    status: number
    created_at: number
    updated_at: number
    material_code: number
    distillation_id: number
    _all: number
  }


  export type Stock_drumAvgAggregateInputType = {
    drum_id?: true
    order_detail_id?: true
    fill_level?: true
    distillation_id?: true
  }

  export type Stock_drumSumAggregateInputType = {
    drum_id?: true
    order_detail_id?: true
    fill_level?: true
    distillation_id?: true
  }

  export type Stock_drumMinAggregateInputType = {
    drum_id?: true
    drum_type?: true
    order_detail_id?: true
    fill_level?: true
    status?: true
    created_at?: true
    updated_at?: true
    material_code?: true
    distillation_id?: true
  }

  export type Stock_drumMaxAggregateInputType = {
    drum_id?: true
    drum_type?: true
    order_detail_id?: true
    fill_level?: true
    status?: true
    created_at?: true
    updated_at?: true
    material_code?: true
    distillation_id?: true
  }

  export type Stock_drumCountAggregateInputType = {
    drum_id?: true
    drum_type?: true
    order_detail_id?: true
    fill_level?: true
    status?: true
    created_at?: true
    updated_at?: true
    material_code?: true
    distillation_id?: true
    _all?: true
  }

  export type Stock_drumAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_drum to aggregate.
     */
    where?: stock_drumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_drums to fetch.
     */
    orderBy?: stock_drumOrderByWithRelationInput | stock_drumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stock_drumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stock_drums
    **/
    _count?: true | Stock_drumCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stock_drumAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stock_drumSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stock_drumMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stock_drumMaxAggregateInputType
  }

  export type GetStock_drumAggregateType<T extends Stock_drumAggregateArgs> = {
        [P in keyof T & keyof AggregateStock_drum]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock_drum[P]>
      : GetScalarType<T[P], AggregateStock_drum[P]>
  }




  export type stock_drumGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_drumWhereInput
    orderBy?: stock_drumOrderByWithAggregationInput | stock_drumOrderByWithAggregationInput[]
    by: Stock_drumScalarFieldEnum[] | Stock_drumScalarFieldEnum
    having?: stock_drumScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stock_drumCountAggregateInputType | true
    _avg?: Stock_drumAvgAggregateInputType
    _sum?: Stock_drumSumAggregateInputType
    _min?: Stock_drumMinAggregateInputType
    _max?: Stock_drumMaxAggregateInputType
  }

  export type Stock_drumGroupByOutputType = {
    drum_id: number
    drum_type: string
    order_detail_id: number
    fill_level: Decimal | null
    status: string
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
    distillation_id: number | null
    _count: Stock_drumCountAggregateOutputType | null
    _avg: Stock_drumAvgAggregateOutputType | null
    _sum: Stock_drumSumAggregateOutputType | null
    _min: Stock_drumMinAggregateOutputType | null
    _max: Stock_drumMaxAggregateOutputType | null
  }

  type GetStock_drumGroupByPayload<T extends stock_drumGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stock_drumGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stock_drumGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stock_drumGroupByOutputType[P]>
            : GetScalarType<T[P], Stock_drumGroupByOutputType[P]>
        }
      >
    >


  export type stock_drumSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    drum_id?: boolean
    drum_type?: boolean
    order_detail_id?: boolean
    fill_level?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    distillation_id?: boolean
    distillation_pending_assignment?: boolean | stock_drum$distillation_pending_assignmentArgs<ExtArgs>
    log_drum_scan?: boolean | stock_drum$log_drum_scanArgs<ExtArgs>
    log_load_still?: boolean | stock_drum$log_load_stillArgs<ExtArgs>
    log_transport_drum?: boolean | stock_drum$log_transport_drumArgs<ExtArgs>
    log_volume_transfer?: boolean | stock_drum$log_volume_transferArgs<ExtArgs>
    distillation_record?: boolean | stock_drum$distillation_recordArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
    _count?: boolean | Stock_drumCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_drum"]>

  export type stock_drumSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    drum_id?: boolean
    drum_type?: boolean
    order_detail_id?: boolean
    fill_level?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    distillation_id?: boolean
    distillation_record?: boolean | stock_drum$distillation_recordArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_drum"]>

  export type stock_drumSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    drum_id?: boolean
    drum_type?: boolean
    order_detail_id?: boolean
    fill_level?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    distillation_id?: boolean
    distillation_record?: boolean | stock_drum$distillation_recordArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_drum"]>

  export type stock_drumSelectScalar = {
    drum_id?: boolean
    drum_type?: boolean
    order_detail_id?: boolean
    fill_level?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    distillation_id?: boolean
  }

  export type stock_drumOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"drum_id" | "drum_type" | "order_detail_id" | "fill_level" | "status" | "created_at" | "updated_at" | "material_code" | "distillation_id", ExtArgs["result"]["stock_drum"]>
  export type stock_drumInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_pending_assignment?: boolean | stock_drum$distillation_pending_assignmentArgs<ExtArgs>
    log_drum_scan?: boolean | stock_drum$log_drum_scanArgs<ExtArgs>
    log_load_still?: boolean | stock_drum$log_load_stillArgs<ExtArgs>
    log_transport_drum?: boolean | stock_drum$log_transport_drumArgs<ExtArgs>
    log_volume_transfer?: boolean | stock_drum$log_volume_transferArgs<ExtArgs>
    distillation_record?: boolean | stock_drum$distillation_recordArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
    _count?: boolean | Stock_drumCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type stock_drumIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_record?: boolean | stock_drum$distillation_recordArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }
  export type stock_drumIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_record?: boolean | stock_drum$distillation_recordArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }

  export type $stock_drumPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stock_drum"
    objects: {
      distillation_pending_assignment: Prisma.$distillation_pending_assignmentPayload<ExtArgs>[]
      log_drum_scan: Prisma.$log_drum_scanPayload<ExtArgs>[]
      log_load_still: Prisma.$log_load_stillPayload<ExtArgs>[]
      log_transport_drum: Prisma.$log_transport_drumPayload<ExtArgs>[]
      log_volume_transfer: Prisma.$log_volume_transferPayload<ExtArgs>[]
      distillation_record: Prisma.$distillation_recordPayload<ExtArgs> | null
      order_detail: Prisma.$order_detailPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      drum_id: number
      drum_type: string
      order_detail_id: number
      fill_level: Prisma.Decimal | null
      status: string
      created_at: Date | null
      updated_at: Date | null
      material_code: string | null
      distillation_id: number | null
    }, ExtArgs["result"]["stock_drum"]>
    composites: {}
  }

  type stock_drumGetPayload<S extends boolean | null | undefined | stock_drumDefaultArgs> = $Result.GetResult<Prisma.$stock_drumPayload, S>

  type stock_drumCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stock_drumFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stock_drumCountAggregateInputType | true
    }

  export interface stock_drumDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stock_drum'], meta: { name: 'stock_drum' } }
    /**
     * Find zero or one Stock_drum that matches the filter.
     * @param {stock_drumFindUniqueArgs} args - Arguments to find a Stock_drum
     * @example
     * // Get one Stock_drum
     * const stock_drum = await prisma.stock_drum.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stock_drumFindUniqueArgs>(args: SelectSubset<T, stock_drumFindUniqueArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stock_drum that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stock_drumFindUniqueOrThrowArgs} args - Arguments to find a Stock_drum
     * @example
     * // Get one Stock_drum
     * const stock_drum = await prisma.stock_drum.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stock_drumFindUniqueOrThrowArgs>(args: SelectSubset<T, stock_drumFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_drum that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drumFindFirstArgs} args - Arguments to find a Stock_drum
     * @example
     * // Get one Stock_drum
     * const stock_drum = await prisma.stock_drum.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stock_drumFindFirstArgs>(args?: SelectSubset<T, stock_drumFindFirstArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_drum that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drumFindFirstOrThrowArgs} args - Arguments to find a Stock_drum
     * @example
     * // Get one Stock_drum
     * const stock_drum = await prisma.stock_drum.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stock_drumFindFirstOrThrowArgs>(args?: SelectSubset<T, stock_drumFindFirstOrThrowArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stock_drums that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drumFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stock_drums
     * const stock_drums = await prisma.stock_drum.findMany()
     * 
     * // Get first 10 Stock_drums
     * const stock_drums = await prisma.stock_drum.findMany({ take: 10 })
     * 
     * // Only select the `drum_id`
     * const stock_drumWithDrum_idOnly = await prisma.stock_drum.findMany({ select: { drum_id: true } })
     * 
     */
    findMany<T extends stock_drumFindManyArgs>(args?: SelectSubset<T, stock_drumFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stock_drum.
     * @param {stock_drumCreateArgs} args - Arguments to create a Stock_drum.
     * @example
     * // Create one Stock_drum
     * const Stock_drum = await prisma.stock_drum.create({
     *   data: {
     *     // ... data to create a Stock_drum
     *   }
     * })
     * 
     */
    create<T extends stock_drumCreateArgs>(args: SelectSubset<T, stock_drumCreateArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stock_drums.
     * @param {stock_drumCreateManyArgs} args - Arguments to create many Stock_drums.
     * @example
     * // Create many Stock_drums
     * const stock_drum = await prisma.stock_drum.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stock_drumCreateManyArgs>(args?: SelectSubset<T, stock_drumCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stock_drums and returns the data saved in the database.
     * @param {stock_drumCreateManyAndReturnArgs} args - Arguments to create many Stock_drums.
     * @example
     * // Create many Stock_drums
     * const stock_drum = await prisma.stock_drum.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stock_drums and only return the `drum_id`
     * const stock_drumWithDrum_idOnly = await prisma.stock_drum.createManyAndReturn({
     *   select: { drum_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stock_drumCreateManyAndReturnArgs>(args?: SelectSubset<T, stock_drumCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stock_drum.
     * @param {stock_drumDeleteArgs} args - Arguments to delete one Stock_drum.
     * @example
     * // Delete one Stock_drum
     * const Stock_drum = await prisma.stock_drum.delete({
     *   where: {
     *     // ... filter to delete one Stock_drum
     *   }
     * })
     * 
     */
    delete<T extends stock_drumDeleteArgs>(args: SelectSubset<T, stock_drumDeleteArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stock_drum.
     * @param {stock_drumUpdateArgs} args - Arguments to update one Stock_drum.
     * @example
     * // Update one Stock_drum
     * const stock_drum = await prisma.stock_drum.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stock_drumUpdateArgs>(args: SelectSubset<T, stock_drumUpdateArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stock_drums.
     * @param {stock_drumDeleteManyArgs} args - Arguments to filter Stock_drums to delete.
     * @example
     * // Delete a few Stock_drums
     * const { count } = await prisma.stock_drum.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stock_drumDeleteManyArgs>(args?: SelectSubset<T, stock_drumDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_drums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drumUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stock_drums
     * const stock_drum = await prisma.stock_drum.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stock_drumUpdateManyArgs>(args: SelectSubset<T, stock_drumUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_drums and returns the data updated in the database.
     * @param {stock_drumUpdateManyAndReturnArgs} args - Arguments to update many Stock_drums.
     * @example
     * // Update many Stock_drums
     * const stock_drum = await prisma.stock_drum.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stock_drums and only return the `drum_id`
     * const stock_drumWithDrum_idOnly = await prisma.stock_drum.updateManyAndReturn({
     *   select: { drum_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stock_drumUpdateManyAndReturnArgs>(args: SelectSubset<T, stock_drumUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stock_drum.
     * @param {stock_drumUpsertArgs} args - Arguments to update or create a Stock_drum.
     * @example
     * // Update or create a Stock_drum
     * const stock_drum = await prisma.stock_drum.upsert({
     *   create: {
     *     // ... data to create a Stock_drum
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock_drum we want to update
     *   }
     * })
     */
    upsert<T extends stock_drumUpsertArgs>(args: SelectSubset<T, stock_drumUpsertArgs<ExtArgs>>): Prisma__stock_drumClient<$Result.GetResult<Prisma.$stock_drumPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stock_drums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drumCountArgs} args - Arguments to filter Stock_drums to count.
     * @example
     * // Count the number of Stock_drums
     * const count = await prisma.stock_drum.count({
     *   where: {
     *     // ... the filter for the Stock_drums we want to count
     *   }
     * })
    **/
    count<T extends stock_drumCountArgs>(
      args?: Subset<T, stock_drumCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stock_drumCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock_drum.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stock_drumAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stock_drumAggregateArgs>(args: Subset<T, Stock_drumAggregateArgs>): Prisma.PrismaPromise<GetStock_drumAggregateType<T>>

    /**
     * Group by Stock_drum.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drumGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stock_drumGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stock_drumGroupByArgs['orderBy'] }
        : { orderBy?: stock_drumGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stock_drumGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStock_drumGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stock_drum model
   */
  readonly fields: stock_drumFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stock_drum.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stock_drumClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_pending_assignment<T extends stock_drum$distillation_pending_assignmentArgs<ExtArgs> = {}>(args?: Subset<T, stock_drum$distillation_pending_assignmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_pending_assignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_drum_scan<T extends stock_drum$log_drum_scanArgs<ExtArgs> = {}>(args?: Subset<T, stock_drum$log_drum_scanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_drum_scanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_load_still<T extends stock_drum$log_load_stillArgs<ExtArgs> = {}>(args?: Subset<T, stock_drum$log_load_stillArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_load_stillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_transport_drum<T extends stock_drum$log_transport_drumArgs<ExtArgs> = {}>(args?: Subset<T, stock_drum$log_transport_drumArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_transport_drumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    log_volume_transfer<T extends stock_drum$log_volume_transferArgs<ExtArgs> = {}>(args?: Subset<T, stock_drum$log_volume_transferArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$log_volume_transferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    distillation_record<T extends stock_drum$distillation_recordArgs<ExtArgs> = {}>(args?: Subset<T, stock_drum$distillation_recordArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order_detail<T extends order_detailDefaultArgs<ExtArgs> = {}>(args?: Subset<T, order_detailDefaultArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stock_drum model
   */
  interface stock_drumFieldRefs {
    readonly drum_id: FieldRef<"stock_drum", 'Int'>
    readonly drum_type: FieldRef<"stock_drum", 'String'>
    readonly order_detail_id: FieldRef<"stock_drum", 'Int'>
    readonly fill_level: FieldRef<"stock_drum", 'Decimal'>
    readonly status: FieldRef<"stock_drum", 'String'>
    readonly created_at: FieldRef<"stock_drum", 'DateTime'>
    readonly updated_at: FieldRef<"stock_drum", 'DateTime'>
    readonly material_code: FieldRef<"stock_drum", 'String'>
    readonly distillation_id: FieldRef<"stock_drum", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * stock_drum findUnique
   */
  export type stock_drumFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum to fetch.
     */
    where: stock_drumWhereUniqueInput
  }

  /**
   * stock_drum findUniqueOrThrow
   */
  export type stock_drumFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum to fetch.
     */
    where: stock_drumWhereUniqueInput
  }

  /**
   * stock_drum findFirst
   */
  export type stock_drumFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum to fetch.
     */
    where?: stock_drumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_drums to fetch.
     */
    orderBy?: stock_drumOrderByWithRelationInput | stock_drumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_drums.
     */
    cursor?: stock_drumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_drums.
     */
    distinct?: Stock_drumScalarFieldEnum | Stock_drumScalarFieldEnum[]
  }

  /**
   * stock_drum findFirstOrThrow
   */
  export type stock_drumFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum to fetch.
     */
    where?: stock_drumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_drums to fetch.
     */
    orderBy?: stock_drumOrderByWithRelationInput | stock_drumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_drums.
     */
    cursor?: stock_drumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_drums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_drums.
     */
    distinct?: Stock_drumScalarFieldEnum | Stock_drumScalarFieldEnum[]
  }

  /**
   * stock_drum findMany
   */
  export type stock_drumFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * Filter, which stock_drums to fetch.
     */
    where?: stock_drumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_drums to fetch.
     */
    orderBy?: stock_drumOrderByWithRelationInput | stock_drumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stock_drums.
     */
    cursor?: stock_drumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_drums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_drums.
     */
    skip?: number
    distinct?: Stock_drumScalarFieldEnum | Stock_drumScalarFieldEnum[]
  }

  /**
   * stock_drum create
   */
  export type stock_drumCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * The data needed to create a stock_drum.
     */
    data: XOR<stock_drumCreateInput, stock_drumUncheckedCreateInput>
  }

  /**
   * stock_drum createMany
   */
  export type stock_drumCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stock_drums.
     */
    data: stock_drumCreateManyInput | stock_drumCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stock_drum createManyAndReturn
   */
  export type stock_drumCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * The data used to create many stock_drums.
     */
    data: stock_drumCreateManyInput | stock_drumCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_drum update
   */
  export type stock_drumUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * The data needed to update a stock_drum.
     */
    data: XOR<stock_drumUpdateInput, stock_drumUncheckedUpdateInput>
    /**
     * Choose, which stock_drum to update.
     */
    where: stock_drumWhereUniqueInput
  }

  /**
   * stock_drum updateMany
   */
  export type stock_drumUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stock_drums.
     */
    data: XOR<stock_drumUpdateManyMutationInput, stock_drumUncheckedUpdateManyInput>
    /**
     * Filter which stock_drums to update
     */
    where?: stock_drumWhereInput
    /**
     * Limit how many stock_drums to update.
     */
    limit?: number
  }

  /**
   * stock_drum updateManyAndReturn
   */
  export type stock_drumUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * The data used to update stock_drums.
     */
    data: XOR<stock_drumUpdateManyMutationInput, stock_drumUncheckedUpdateManyInput>
    /**
     * Filter which stock_drums to update
     */
    where?: stock_drumWhereInput
    /**
     * Limit how many stock_drums to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_drum upsert
   */
  export type stock_drumUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * The filter to search for the stock_drum to update in case it exists.
     */
    where: stock_drumWhereUniqueInput
    /**
     * In case the stock_drum found by the `where` argument doesn't exist, create a new stock_drum with this data.
     */
    create: XOR<stock_drumCreateInput, stock_drumUncheckedCreateInput>
    /**
     * In case the stock_drum was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stock_drumUpdateInput, stock_drumUncheckedUpdateInput>
  }

  /**
   * stock_drum delete
   */
  export type stock_drumDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
    /**
     * Filter which stock_drum to delete.
     */
    where: stock_drumWhereUniqueInput
  }

  /**
   * stock_drum deleteMany
   */
  export type stock_drumDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_drums to delete
     */
    where?: stock_drumWhereInput
    /**
     * Limit how many stock_drums to delete.
     */
    limit?: number
  }

  /**
   * stock_drum.distillation_pending_assignment
   */
  export type stock_drum$distillation_pending_assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_pending_assignment
     */
    select?: distillation_pending_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_pending_assignment
     */
    omit?: distillation_pending_assignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_pending_assignmentInclude<ExtArgs> | null
    where?: distillation_pending_assignmentWhereInput
    orderBy?: distillation_pending_assignmentOrderByWithRelationInput | distillation_pending_assignmentOrderByWithRelationInput[]
    cursor?: distillation_pending_assignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Distillation_pending_assignmentScalarFieldEnum | Distillation_pending_assignmentScalarFieldEnum[]
  }

  /**
   * stock_drum.log_drum_scan
   */
  export type stock_drum$log_drum_scanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_drum_scan
     */
    select?: log_drum_scanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_drum_scan
     */
    omit?: log_drum_scanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_drum_scanInclude<ExtArgs> | null
    where?: log_drum_scanWhereInput
    orderBy?: log_drum_scanOrderByWithRelationInput | log_drum_scanOrderByWithRelationInput[]
    cursor?: log_drum_scanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_drum_scanScalarFieldEnum | Log_drum_scanScalarFieldEnum[]
  }

  /**
   * stock_drum.log_load_still
   */
  export type stock_drum$log_load_stillArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_load_still
     */
    select?: log_load_stillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_load_still
     */
    omit?: log_load_stillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_load_stillInclude<ExtArgs> | null
    where?: log_load_stillWhereInput
    orderBy?: log_load_stillOrderByWithRelationInput | log_load_stillOrderByWithRelationInput[]
    cursor?: log_load_stillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_load_stillScalarFieldEnum | Log_load_stillScalarFieldEnum[]
  }

  /**
   * stock_drum.log_transport_drum
   */
  export type stock_drum$log_transport_drumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_transport_drum
     */
    select?: log_transport_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_transport_drum
     */
    omit?: log_transport_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_transport_drumInclude<ExtArgs> | null
    where?: log_transport_drumWhereInput
    orderBy?: log_transport_drumOrderByWithRelationInput | log_transport_drumOrderByWithRelationInput[]
    cursor?: log_transport_drumWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_transport_drumScalarFieldEnum | Log_transport_drumScalarFieldEnum[]
  }

  /**
   * stock_drum.log_volume_transfer
   */
  export type stock_drum$log_volume_transferArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the log_volume_transfer
     */
    select?: log_volume_transferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the log_volume_transfer
     */
    omit?: log_volume_transferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: log_volume_transferInclude<ExtArgs> | null
    where?: log_volume_transferWhereInput
    orderBy?: log_volume_transferOrderByWithRelationInput | log_volume_transferOrderByWithRelationInput[]
    cursor?: log_volume_transferWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Log_volume_transferScalarFieldEnum | Log_volume_transferScalarFieldEnum[]
  }

  /**
   * stock_drum.distillation_record
   */
  export type stock_drum$distillation_recordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    where?: distillation_recordWhereInput
  }

  /**
   * stock_drum without action
   */
  export type stock_drumDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum
     */
    select?: stock_drumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum
     */
    omit?: stock_drumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drumInclude<ExtArgs> | null
  }


  /**
   * Model stock_drum_new
   */

  export type AggregateStock_drum_new = {
    _count: Stock_drum_newCountAggregateOutputType | null
    _avg: Stock_drum_newAvgAggregateOutputType | null
    _sum: Stock_drum_newSumAggregateOutputType | null
    _min: Stock_drum_newMinAggregateOutputType | null
    _max: Stock_drum_newMaxAggregateOutputType | null
  }

  export type Stock_drum_newAvgAggregateOutputType = {
    drum_id: number | null
    order_detail_id: number | null
    fill_level: Decimal | null
    distillation_id: number | null
  }

  export type Stock_drum_newSumAggregateOutputType = {
    drum_id: number | null
    order_detail_id: number | null
    fill_level: Decimal | null
    distillation_id: number | null
  }

  export type Stock_drum_newMinAggregateOutputType = {
    drum_id: number | null
    material_code: string | null
    drum_type: string | null
    order_detail_id: number | null
    status: string | null
    fill_level: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    distillation_id: number | null
  }

  export type Stock_drum_newMaxAggregateOutputType = {
    drum_id: number | null
    material_code: string | null
    drum_type: string | null
    order_detail_id: number | null
    status: string | null
    fill_level: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    distillation_id: number | null
  }

  export type Stock_drum_newCountAggregateOutputType = {
    drum_id: number
    material_code: number
    drum_type: number
    order_detail_id: number
    status: number
    fill_level: number
    created_at: number
    updated_at: number
    distillation_id: number
    _all: number
  }


  export type Stock_drum_newAvgAggregateInputType = {
    drum_id?: true
    order_detail_id?: true
    fill_level?: true
    distillation_id?: true
  }

  export type Stock_drum_newSumAggregateInputType = {
    drum_id?: true
    order_detail_id?: true
    fill_level?: true
    distillation_id?: true
  }

  export type Stock_drum_newMinAggregateInputType = {
    drum_id?: true
    material_code?: true
    drum_type?: true
    order_detail_id?: true
    status?: true
    fill_level?: true
    created_at?: true
    updated_at?: true
    distillation_id?: true
  }

  export type Stock_drum_newMaxAggregateInputType = {
    drum_id?: true
    material_code?: true
    drum_type?: true
    order_detail_id?: true
    status?: true
    fill_level?: true
    created_at?: true
    updated_at?: true
    distillation_id?: true
  }

  export type Stock_drum_newCountAggregateInputType = {
    drum_id?: true
    material_code?: true
    drum_type?: true
    order_detail_id?: true
    status?: true
    fill_level?: true
    created_at?: true
    updated_at?: true
    distillation_id?: true
    _all?: true
  }

  export type Stock_drum_newAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_drum_new to aggregate.
     */
    where?: stock_drum_newWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_drum_news to fetch.
     */
    orderBy?: stock_drum_newOrderByWithRelationInput | stock_drum_newOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stock_drum_newWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_drum_news from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_drum_news.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stock_drum_news
    **/
    _count?: true | Stock_drum_newCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stock_drum_newAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stock_drum_newSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stock_drum_newMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stock_drum_newMaxAggregateInputType
  }

  export type GetStock_drum_newAggregateType<T extends Stock_drum_newAggregateArgs> = {
        [P in keyof T & keyof AggregateStock_drum_new]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock_drum_new[P]>
      : GetScalarType<T[P], AggregateStock_drum_new[P]>
  }




  export type stock_drum_newGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_drum_newWhereInput
    orderBy?: stock_drum_newOrderByWithAggregationInput | stock_drum_newOrderByWithAggregationInput[]
    by: Stock_drum_newScalarFieldEnum[] | Stock_drum_newScalarFieldEnum
    having?: stock_drum_newScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stock_drum_newCountAggregateInputType | true
    _avg?: Stock_drum_newAvgAggregateInputType
    _sum?: Stock_drum_newSumAggregateInputType
    _min?: Stock_drum_newMinAggregateInputType
    _max?: Stock_drum_newMaxAggregateInputType
  }

  export type Stock_drum_newGroupByOutputType = {
    drum_id: number
    material_code: string | null
    drum_type: string
    order_detail_id: number
    status: string
    fill_level: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    distillation_id: number | null
    _count: Stock_drum_newCountAggregateOutputType | null
    _avg: Stock_drum_newAvgAggregateOutputType | null
    _sum: Stock_drum_newSumAggregateOutputType | null
    _min: Stock_drum_newMinAggregateOutputType | null
    _max: Stock_drum_newMaxAggregateOutputType | null
  }

  type GetStock_drum_newGroupByPayload<T extends stock_drum_newGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stock_drum_newGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stock_drum_newGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stock_drum_newGroupByOutputType[P]>
            : GetScalarType<T[P], Stock_drum_newGroupByOutputType[P]>
        }
      >
    >


  export type stock_drum_newSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    drum_id?: boolean
    material_code?: boolean
    drum_type?: boolean
    order_detail_id?: boolean
    status?: boolean
    fill_level?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_id?: boolean
    distillation_record?: boolean | stock_drum_new$distillation_recordArgs<ExtArgs>
    ref_materials?: boolean | stock_drum_new$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_drum_new"]>

  export type stock_drum_newSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    drum_id?: boolean
    material_code?: boolean
    drum_type?: boolean
    order_detail_id?: boolean
    status?: boolean
    fill_level?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_id?: boolean
    distillation_record?: boolean | stock_drum_new$distillation_recordArgs<ExtArgs>
    ref_materials?: boolean | stock_drum_new$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_drum_new"]>

  export type stock_drum_newSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    drum_id?: boolean
    material_code?: boolean
    drum_type?: boolean
    order_detail_id?: boolean
    status?: boolean
    fill_level?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_id?: boolean
    distillation_record?: boolean | stock_drum_new$distillation_recordArgs<ExtArgs>
    ref_materials?: boolean | stock_drum_new$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_drum_new"]>

  export type stock_drum_newSelectScalar = {
    drum_id?: boolean
    material_code?: boolean
    drum_type?: boolean
    order_detail_id?: boolean
    status?: boolean
    fill_level?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_id?: boolean
  }

  export type stock_drum_newOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"drum_id" | "material_code" | "drum_type" | "order_detail_id" | "status" | "fill_level" | "created_at" | "updated_at" | "distillation_id", ExtArgs["result"]["stock_drum_new"]>
  export type stock_drum_newInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_record?: boolean | stock_drum_new$distillation_recordArgs<ExtArgs>
    ref_materials?: boolean | stock_drum_new$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }
  export type stock_drum_newIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_record?: boolean | stock_drum_new$distillation_recordArgs<ExtArgs>
    ref_materials?: boolean | stock_drum_new$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }
  export type stock_drum_newIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_record?: boolean | stock_drum_new$distillation_recordArgs<ExtArgs>
    ref_materials?: boolean | stock_drum_new$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
  }

  export type $stock_drum_newPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stock_drum_new"
    objects: {
      distillation_record: Prisma.$distillation_recordPayload<ExtArgs> | null
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs> | null
      order_detail: Prisma.$order_detailPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      drum_id: number
      material_code: string | null
      drum_type: string
      order_detail_id: number
      status: string
      fill_level: Prisma.Decimal | null
      created_at: Date | null
      updated_at: Date | null
      distillation_id: number | null
    }, ExtArgs["result"]["stock_drum_new"]>
    composites: {}
  }

  type stock_drum_newGetPayload<S extends boolean | null | undefined | stock_drum_newDefaultArgs> = $Result.GetResult<Prisma.$stock_drum_newPayload, S>

  type stock_drum_newCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stock_drum_newFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stock_drum_newCountAggregateInputType | true
    }

  export interface stock_drum_newDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stock_drum_new'], meta: { name: 'stock_drum_new' } }
    /**
     * Find zero or one Stock_drum_new that matches the filter.
     * @param {stock_drum_newFindUniqueArgs} args - Arguments to find a Stock_drum_new
     * @example
     * // Get one Stock_drum_new
     * const stock_drum_new = await prisma.stock_drum_new.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stock_drum_newFindUniqueArgs>(args: SelectSubset<T, stock_drum_newFindUniqueArgs<ExtArgs>>): Prisma__stock_drum_newClient<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stock_drum_new that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stock_drum_newFindUniqueOrThrowArgs} args - Arguments to find a Stock_drum_new
     * @example
     * // Get one Stock_drum_new
     * const stock_drum_new = await prisma.stock_drum_new.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stock_drum_newFindUniqueOrThrowArgs>(args: SelectSubset<T, stock_drum_newFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stock_drum_newClient<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_drum_new that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drum_newFindFirstArgs} args - Arguments to find a Stock_drum_new
     * @example
     * // Get one Stock_drum_new
     * const stock_drum_new = await prisma.stock_drum_new.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stock_drum_newFindFirstArgs>(args?: SelectSubset<T, stock_drum_newFindFirstArgs<ExtArgs>>): Prisma__stock_drum_newClient<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_drum_new that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drum_newFindFirstOrThrowArgs} args - Arguments to find a Stock_drum_new
     * @example
     * // Get one Stock_drum_new
     * const stock_drum_new = await prisma.stock_drum_new.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stock_drum_newFindFirstOrThrowArgs>(args?: SelectSubset<T, stock_drum_newFindFirstOrThrowArgs<ExtArgs>>): Prisma__stock_drum_newClient<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stock_drum_news that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drum_newFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stock_drum_news
     * const stock_drum_news = await prisma.stock_drum_new.findMany()
     * 
     * // Get first 10 Stock_drum_news
     * const stock_drum_news = await prisma.stock_drum_new.findMany({ take: 10 })
     * 
     * // Only select the `drum_id`
     * const stock_drum_newWithDrum_idOnly = await prisma.stock_drum_new.findMany({ select: { drum_id: true } })
     * 
     */
    findMany<T extends stock_drum_newFindManyArgs>(args?: SelectSubset<T, stock_drum_newFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stock_drum_new.
     * @param {stock_drum_newCreateArgs} args - Arguments to create a Stock_drum_new.
     * @example
     * // Create one Stock_drum_new
     * const Stock_drum_new = await prisma.stock_drum_new.create({
     *   data: {
     *     // ... data to create a Stock_drum_new
     *   }
     * })
     * 
     */
    create<T extends stock_drum_newCreateArgs>(args: SelectSubset<T, stock_drum_newCreateArgs<ExtArgs>>): Prisma__stock_drum_newClient<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stock_drum_news.
     * @param {stock_drum_newCreateManyArgs} args - Arguments to create many Stock_drum_news.
     * @example
     * // Create many Stock_drum_news
     * const stock_drum_new = await prisma.stock_drum_new.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stock_drum_newCreateManyArgs>(args?: SelectSubset<T, stock_drum_newCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stock_drum_news and returns the data saved in the database.
     * @param {stock_drum_newCreateManyAndReturnArgs} args - Arguments to create many Stock_drum_news.
     * @example
     * // Create many Stock_drum_news
     * const stock_drum_new = await prisma.stock_drum_new.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stock_drum_news and only return the `drum_id`
     * const stock_drum_newWithDrum_idOnly = await prisma.stock_drum_new.createManyAndReturn({
     *   select: { drum_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stock_drum_newCreateManyAndReturnArgs>(args?: SelectSubset<T, stock_drum_newCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stock_drum_new.
     * @param {stock_drum_newDeleteArgs} args - Arguments to delete one Stock_drum_new.
     * @example
     * // Delete one Stock_drum_new
     * const Stock_drum_new = await prisma.stock_drum_new.delete({
     *   where: {
     *     // ... filter to delete one Stock_drum_new
     *   }
     * })
     * 
     */
    delete<T extends stock_drum_newDeleteArgs>(args: SelectSubset<T, stock_drum_newDeleteArgs<ExtArgs>>): Prisma__stock_drum_newClient<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stock_drum_new.
     * @param {stock_drum_newUpdateArgs} args - Arguments to update one Stock_drum_new.
     * @example
     * // Update one Stock_drum_new
     * const stock_drum_new = await prisma.stock_drum_new.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stock_drum_newUpdateArgs>(args: SelectSubset<T, stock_drum_newUpdateArgs<ExtArgs>>): Prisma__stock_drum_newClient<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stock_drum_news.
     * @param {stock_drum_newDeleteManyArgs} args - Arguments to filter Stock_drum_news to delete.
     * @example
     * // Delete a few Stock_drum_news
     * const { count } = await prisma.stock_drum_new.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stock_drum_newDeleteManyArgs>(args?: SelectSubset<T, stock_drum_newDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_drum_news.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drum_newUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stock_drum_news
     * const stock_drum_new = await prisma.stock_drum_new.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stock_drum_newUpdateManyArgs>(args: SelectSubset<T, stock_drum_newUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_drum_news and returns the data updated in the database.
     * @param {stock_drum_newUpdateManyAndReturnArgs} args - Arguments to update many Stock_drum_news.
     * @example
     * // Update many Stock_drum_news
     * const stock_drum_new = await prisma.stock_drum_new.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stock_drum_news and only return the `drum_id`
     * const stock_drum_newWithDrum_idOnly = await prisma.stock_drum_new.updateManyAndReturn({
     *   select: { drum_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stock_drum_newUpdateManyAndReturnArgs>(args: SelectSubset<T, stock_drum_newUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stock_drum_new.
     * @param {stock_drum_newUpsertArgs} args - Arguments to update or create a Stock_drum_new.
     * @example
     * // Update or create a Stock_drum_new
     * const stock_drum_new = await prisma.stock_drum_new.upsert({
     *   create: {
     *     // ... data to create a Stock_drum_new
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock_drum_new we want to update
     *   }
     * })
     */
    upsert<T extends stock_drum_newUpsertArgs>(args: SelectSubset<T, stock_drum_newUpsertArgs<ExtArgs>>): Prisma__stock_drum_newClient<$Result.GetResult<Prisma.$stock_drum_newPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stock_drum_news.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drum_newCountArgs} args - Arguments to filter Stock_drum_news to count.
     * @example
     * // Count the number of Stock_drum_news
     * const count = await prisma.stock_drum_new.count({
     *   where: {
     *     // ... the filter for the Stock_drum_news we want to count
     *   }
     * })
    **/
    count<T extends stock_drum_newCountArgs>(
      args?: Subset<T, stock_drum_newCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stock_drum_newCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock_drum_new.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stock_drum_newAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stock_drum_newAggregateArgs>(args: Subset<T, Stock_drum_newAggregateArgs>): Prisma.PrismaPromise<GetStock_drum_newAggregateType<T>>

    /**
     * Group by Stock_drum_new.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_drum_newGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stock_drum_newGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stock_drum_newGroupByArgs['orderBy'] }
        : { orderBy?: stock_drum_newGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stock_drum_newGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStock_drum_newGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stock_drum_new model
   */
  readonly fields: stock_drum_newFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stock_drum_new.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stock_drum_newClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_record<T extends stock_drum_new$distillation_recordArgs<ExtArgs> = {}>(args?: Subset<T, stock_drum_new$distillation_recordArgs<ExtArgs>>): Prisma__distillation_recordClient<$Result.GetResult<Prisma.$distillation_recordPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ref_materials<T extends stock_drum_new$ref_materialsArgs<ExtArgs> = {}>(args?: Subset<T, stock_drum_new$ref_materialsArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order_detail<T extends order_detailDefaultArgs<ExtArgs> = {}>(args?: Subset<T, order_detailDefaultArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stock_drum_new model
   */
  interface stock_drum_newFieldRefs {
    readonly drum_id: FieldRef<"stock_drum_new", 'Int'>
    readonly material_code: FieldRef<"stock_drum_new", 'String'>
    readonly drum_type: FieldRef<"stock_drum_new", 'String'>
    readonly order_detail_id: FieldRef<"stock_drum_new", 'Int'>
    readonly status: FieldRef<"stock_drum_new", 'String'>
    readonly fill_level: FieldRef<"stock_drum_new", 'Decimal'>
    readonly created_at: FieldRef<"stock_drum_new", 'DateTime'>
    readonly updated_at: FieldRef<"stock_drum_new", 'DateTime'>
    readonly distillation_id: FieldRef<"stock_drum_new", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * stock_drum_new findUnique
   */
  export type stock_drum_newFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum_new to fetch.
     */
    where: stock_drum_newWhereUniqueInput
  }

  /**
   * stock_drum_new findUniqueOrThrow
   */
  export type stock_drum_newFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum_new to fetch.
     */
    where: stock_drum_newWhereUniqueInput
  }

  /**
   * stock_drum_new findFirst
   */
  export type stock_drum_newFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum_new to fetch.
     */
    where?: stock_drum_newWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_drum_news to fetch.
     */
    orderBy?: stock_drum_newOrderByWithRelationInput | stock_drum_newOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_drum_news.
     */
    cursor?: stock_drum_newWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_drum_news from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_drum_news.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_drum_news.
     */
    distinct?: Stock_drum_newScalarFieldEnum | Stock_drum_newScalarFieldEnum[]
  }

  /**
   * stock_drum_new findFirstOrThrow
   */
  export type stock_drum_newFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum_new to fetch.
     */
    where?: stock_drum_newWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_drum_news to fetch.
     */
    orderBy?: stock_drum_newOrderByWithRelationInput | stock_drum_newOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_drum_news.
     */
    cursor?: stock_drum_newWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_drum_news from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_drum_news.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_drum_news.
     */
    distinct?: Stock_drum_newScalarFieldEnum | Stock_drum_newScalarFieldEnum[]
  }

  /**
   * stock_drum_new findMany
   */
  export type stock_drum_newFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_drum_news to fetch.
     */
    where?: stock_drum_newWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_drum_news to fetch.
     */
    orderBy?: stock_drum_newOrderByWithRelationInput | stock_drum_newOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stock_drum_news.
     */
    cursor?: stock_drum_newWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_drum_news from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_drum_news.
     */
    skip?: number
    distinct?: Stock_drum_newScalarFieldEnum | Stock_drum_newScalarFieldEnum[]
  }

  /**
   * stock_drum_new create
   */
  export type stock_drum_newCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * The data needed to create a stock_drum_new.
     */
    data: XOR<stock_drum_newCreateInput, stock_drum_newUncheckedCreateInput>
  }

  /**
   * stock_drum_new createMany
   */
  export type stock_drum_newCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stock_drum_news.
     */
    data: stock_drum_newCreateManyInput | stock_drum_newCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stock_drum_new createManyAndReturn
   */
  export type stock_drum_newCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * The data used to create many stock_drum_news.
     */
    data: stock_drum_newCreateManyInput | stock_drum_newCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_drum_new update
   */
  export type stock_drum_newUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * The data needed to update a stock_drum_new.
     */
    data: XOR<stock_drum_newUpdateInput, stock_drum_newUncheckedUpdateInput>
    /**
     * Choose, which stock_drum_new to update.
     */
    where: stock_drum_newWhereUniqueInput
  }

  /**
   * stock_drum_new updateMany
   */
  export type stock_drum_newUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stock_drum_news.
     */
    data: XOR<stock_drum_newUpdateManyMutationInput, stock_drum_newUncheckedUpdateManyInput>
    /**
     * Filter which stock_drum_news to update
     */
    where?: stock_drum_newWhereInput
    /**
     * Limit how many stock_drum_news to update.
     */
    limit?: number
  }

  /**
   * stock_drum_new updateManyAndReturn
   */
  export type stock_drum_newUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * The data used to update stock_drum_news.
     */
    data: XOR<stock_drum_newUpdateManyMutationInput, stock_drum_newUncheckedUpdateManyInput>
    /**
     * Filter which stock_drum_news to update
     */
    where?: stock_drum_newWhereInput
    /**
     * Limit how many stock_drum_news to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_drum_new upsert
   */
  export type stock_drum_newUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * The filter to search for the stock_drum_new to update in case it exists.
     */
    where: stock_drum_newWhereUniqueInput
    /**
     * In case the stock_drum_new found by the `where` argument doesn't exist, create a new stock_drum_new with this data.
     */
    create: XOR<stock_drum_newCreateInput, stock_drum_newUncheckedCreateInput>
    /**
     * In case the stock_drum_new was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stock_drum_newUpdateInput, stock_drum_newUncheckedUpdateInput>
  }

  /**
   * stock_drum_new delete
   */
  export type stock_drum_newDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
    /**
     * Filter which stock_drum_new to delete.
     */
    where: stock_drum_newWhereUniqueInput
  }

  /**
   * stock_drum_new deleteMany
   */
  export type stock_drum_newDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_drum_news to delete
     */
    where?: stock_drum_newWhereInput
    /**
     * Limit how many stock_drum_news to delete.
     */
    limit?: number
  }

  /**
   * stock_drum_new.distillation_record
   */
  export type stock_drum_new$distillation_recordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_record
     */
    select?: distillation_recordSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_record
     */
    omit?: distillation_recordOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_recordInclude<ExtArgs> | null
    where?: distillation_recordWhereInput
  }

  /**
   * stock_drum_new.ref_materials
   */
  export type stock_drum_new$ref_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    where?: ref_materialsWhereInput
  }

  /**
   * stock_drum_new without action
   */
  export type stock_drum_newDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_drum_new
     */
    select?: stock_drum_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_drum_new
     */
    omit?: stock_drum_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_drum_newInclude<ExtArgs> | null
  }


  /**
   * Model stock_new
   */

  export type AggregateStock_new = {
    _count: Stock_newCountAggregateOutputType | null
    _avg: Stock_newAvgAggregateOutputType | null
    _sum: Stock_newSumAggregateOutputType | null
    _min: Stock_newMinAggregateOutputType | null
    _max: Stock_newMaxAggregateOutputType | null
  }

  export type Stock_newAvgAggregateOutputType = {
    stock_id: number | null
    supplier_id: number | null
    quantity: number | null
  }

  export type Stock_newSumAggregateOutputType = {
    stock_id: number | null
    supplier_id: number | null
    quantity: number | null
  }

  export type Stock_newMinAggregateOutputType = {
    stock_id: number | null
    supplier_id: number | null
    quantity: number | null
    batch_code: string | null
    location: string | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
  }

  export type Stock_newMaxAggregateOutputType = {
    stock_id: number | null
    supplier_id: number | null
    quantity: number | null
    batch_code: string | null
    location: string | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
  }

  export type Stock_newCountAggregateOutputType = {
    stock_id: number
    supplier_id: number
    quantity: number
    batch_code: number
    location: number
    notes: number
    created_at: number
    updated_at: number
    material_code: number
    _all: number
  }


  export type Stock_newAvgAggregateInputType = {
    stock_id?: true
    supplier_id?: true
    quantity?: true
  }

  export type Stock_newSumAggregateInputType = {
    stock_id?: true
    supplier_id?: true
    quantity?: true
  }

  export type Stock_newMinAggregateInputType = {
    stock_id?: true
    supplier_id?: true
    quantity?: true
    batch_code?: true
    location?: true
    notes?: true
    created_at?: true
    updated_at?: true
    material_code?: true
  }

  export type Stock_newMaxAggregateInputType = {
    stock_id?: true
    supplier_id?: true
    quantity?: true
    batch_code?: true
    location?: true
    notes?: true
    created_at?: true
    updated_at?: true
    material_code?: true
  }

  export type Stock_newCountAggregateInputType = {
    stock_id?: true
    supplier_id?: true
    quantity?: true
    batch_code?: true
    location?: true
    notes?: true
    created_at?: true
    updated_at?: true
    material_code?: true
    _all?: true
  }

  export type Stock_newAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_new to aggregate.
     */
    where?: stock_newWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_news to fetch.
     */
    orderBy?: stock_newOrderByWithRelationInput | stock_newOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stock_newWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_news from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_news.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stock_news
    **/
    _count?: true | Stock_newCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stock_newAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stock_newSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stock_newMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stock_newMaxAggregateInputType
  }

  export type GetStock_newAggregateType<T extends Stock_newAggregateArgs> = {
        [P in keyof T & keyof AggregateStock_new]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock_new[P]>
      : GetScalarType<T[P], AggregateStock_new[P]>
  }




  export type stock_newGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_newWhereInput
    orderBy?: stock_newOrderByWithAggregationInput | stock_newOrderByWithAggregationInput[]
    by: Stock_newScalarFieldEnum[] | Stock_newScalarFieldEnum
    having?: stock_newScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stock_newCountAggregateInputType | true
    _avg?: Stock_newAvgAggregateInputType
    _sum?: Stock_newSumAggregateInputType
    _min?: Stock_newMinAggregateInputType
    _max?: Stock_newMaxAggregateInputType
  }

  export type Stock_newGroupByOutputType = {
    stock_id: number
    supplier_id: number | null
    quantity: number
    batch_code: string
    location: string | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
    _count: Stock_newCountAggregateOutputType | null
    _avg: Stock_newAvgAggregateOutputType | null
    _sum: Stock_newSumAggregateOutputType | null
    _min: Stock_newMinAggregateOutputType | null
    _max: Stock_newMaxAggregateOutputType | null
  }

  type GetStock_newGroupByPayload<T extends stock_newGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stock_newGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stock_newGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stock_newGroupByOutputType[P]>
            : GetScalarType<T[P], Stock_newGroupByOutputType[P]>
        }
      >
    >


  export type stock_newSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stock_id?: boolean
    supplier_id?: boolean
    quantity?: boolean
    batch_code?: boolean
    location?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    distillation_schedule_items?: boolean | stock_new$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_new$ref_materialsArgs<ExtArgs>
    ref_suppliers?: boolean | stock_new$ref_suppliersArgs<ExtArgs>
    _count?: boolean | Stock_newCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_new"]>

  export type stock_newSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stock_id?: boolean
    supplier_id?: boolean
    quantity?: boolean
    batch_code?: boolean
    location?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | stock_new$ref_materialsArgs<ExtArgs>
    ref_suppliers?: boolean | stock_new$ref_suppliersArgs<ExtArgs>
  }, ExtArgs["result"]["stock_new"]>

  export type stock_newSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stock_id?: boolean
    supplier_id?: boolean
    quantity?: boolean
    batch_code?: boolean
    location?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | stock_new$ref_materialsArgs<ExtArgs>
    ref_suppliers?: boolean | stock_new$ref_suppliersArgs<ExtArgs>
  }, ExtArgs["result"]["stock_new"]>

  export type stock_newSelectScalar = {
    stock_id?: boolean
    supplier_id?: boolean
    quantity?: boolean
    batch_code?: boolean
    location?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
  }

  export type stock_newOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"stock_id" | "supplier_id" | "quantity" | "batch_code" | "location" | "notes" | "created_at" | "updated_at" | "material_code", ExtArgs["result"]["stock_new"]>
  export type stock_newInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule_items?: boolean | stock_new$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_new$ref_materialsArgs<ExtArgs>
    ref_suppliers?: boolean | stock_new$ref_suppliersArgs<ExtArgs>
    _count?: boolean | Stock_newCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type stock_newIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | stock_new$ref_materialsArgs<ExtArgs>
    ref_suppliers?: boolean | stock_new$ref_suppliersArgs<ExtArgs>
  }
  export type stock_newIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | stock_new$ref_materialsArgs<ExtArgs>
    ref_suppliers?: boolean | stock_new$ref_suppliersArgs<ExtArgs>
  }

  export type $stock_newPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stock_new"
    objects: {
      distillation_schedule_items: Prisma.$distillation_schedule_itemsPayload<ExtArgs>[]
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs> | null
      ref_suppliers: Prisma.$ref_suppliersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      stock_id: number
      supplier_id: number | null
      quantity: number
      batch_code: string
      location: string | null
      notes: string | null
      created_at: Date | null
      updated_at: Date | null
      material_code: string | null
    }, ExtArgs["result"]["stock_new"]>
    composites: {}
  }

  type stock_newGetPayload<S extends boolean | null | undefined | stock_newDefaultArgs> = $Result.GetResult<Prisma.$stock_newPayload, S>

  type stock_newCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stock_newFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stock_newCountAggregateInputType | true
    }

  export interface stock_newDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stock_new'], meta: { name: 'stock_new' } }
    /**
     * Find zero or one Stock_new that matches the filter.
     * @param {stock_newFindUniqueArgs} args - Arguments to find a Stock_new
     * @example
     * // Get one Stock_new
     * const stock_new = await prisma.stock_new.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stock_newFindUniqueArgs>(args: SelectSubset<T, stock_newFindUniqueArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stock_new that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stock_newFindUniqueOrThrowArgs} args - Arguments to find a Stock_new
     * @example
     * // Get one Stock_new
     * const stock_new = await prisma.stock_new.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stock_newFindUniqueOrThrowArgs>(args: SelectSubset<T, stock_newFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_new that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_newFindFirstArgs} args - Arguments to find a Stock_new
     * @example
     * // Get one Stock_new
     * const stock_new = await prisma.stock_new.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stock_newFindFirstArgs>(args?: SelectSubset<T, stock_newFindFirstArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_new that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_newFindFirstOrThrowArgs} args - Arguments to find a Stock_new
     * @example
     * // Get one Stock_new
     * const stock_new = await prisma.stock_new.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stock_newFindFirstOrThrowArgs>(args?: SelectSubset<T, stock_newFindFirstOrThrowArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stock_news that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_newFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stock_news
     * const stock_news = await prisma.stock_new.findMany()
     * 
     * // Get first 10 Stock_news
     * const stock_news = await prisma.stock_new.findMany({ take: 10 })
     * 
     * // Only select the `stock_id`
     * const stock_newWithStock_idOnly = await prisma.stock_new.findMany({ select: { stock_id: true } })
     * 
     */
    findMany<T extends stock_newFindManyArgs>(args?: SelectSubset<T, stock_newFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stock_new.
     * @param {stock_newCreateArgs} args - Arguments to create a Stock_new.
     * @example
     * // Create one Stock_new
     * const Stock_new = await prisma.stock_new.create({
     *   data: {
     *     // ... data to create a Stock_new
     *   }
     * })
     * 
     */
    create<T extends stock_newCreateArgs>(args: SelectSubset<T, stock_newCreateArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stock_news.
     * @param {stock_newCreateManyArgs} args - Arguments to create many Stock_news.
     * @example
     * // Create many Stock_news
     * const stock_new = await prisma.stock_new.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stock_newCreateManyArgs>(args?: SelectSubset<T, stock_newCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stock_news and returns the data saved in the database.
     * @param {stock_newCreateManyAndReturnArgs} args - Arguments to create many Stock_news.
     * @example
     * // Create many Stock_news
     * const stock_new = await prisma.stock_new.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stock_news and only return the `stock_id`
     * const stock_newWithStock_idOnly = await prisma.stock_new.createManyAndReturn({
     *   select: { stock_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stock_newCreateManyAndReturnArgs>(args?: SelectSubset<T, stock_newCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stock_new.
     * @param {stock_newDeleteArgs} args - Arguments to delete one Stock_new.
     * @example
     * // Delete one Stock_new
     * const Stock_new = await prisma.stock_new.delete({
     *   where: {
     *     // ... filter to delete one Stock_new
     *   }
     * })
     * 
     */
    delete<T extends stock_newDeleteArgs>(args: SelectSubset<T, stock_newDeleteArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stock_new.
     * @param {stock_newUpdateArgs} args - Arguments to update one Stock_new.
     * @example
     * // Update one Stock_new
     * const stock_new = await prisma.stock_new.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stock_newUpdateArgs>(args: SelectSubset<T, stock_newUpdateArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stock_news.
     * @param {stock_newDeleteManyArgs} args - Arguments to filter Stock_news to delete.
     * @example
     * // Delete a few Stock_news
     * const { count } = await prisma.stock_new.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stock_newDeleteManyArgs>(args?: SelectSubset<T, stock_newDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_news.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_newUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stock_news
     * const stock_new = await prisma.stock_new.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stock_newUpdateManyArgs>(args: SelectSubset<T, stock_newUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_news and returns the data updated in the database.
     * @param {stock_newUpdateManyAndReturnArgs} args - Arguments to update many Stock_news.
     * @example
     * // Update many Stock_news
     * const stock_new = await prisma.stock_new.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stock_news and only return the `stock_id`
     * const stock_newWithStock_idOnly = await prisma.stock_new.updateManyAndReturn({
     *   select: { stock_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stock_newUpdateManyAndReturnArgs>(args: SelectSubset<T, stock_newUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stock_new.
     * @param {stock_newUpsertArgs} args - Arguments to update or create a Stock_new.
     * @example
     * // Update or create a Stock_new
     * const stock_new = await prisma.stock_new.upsert({
     *   create: {
     *     // ... data to create a Stock_new
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock_new we want to update
     *   }
     * })
     */
    upsert<T extends stock_newUpsertArgs>(args: SelectSubset<T, stock_newUpsertArgs<ExtArgs>>): Prisma__stock_newClient<$Result.GetResult<Prisma.$stock_newPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stock_news.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_newCountArgs} args - Arguments to filter Stock_news to count.
     * @example
     * // Count the number of Stock_news
     * const count = await prisma.stock_new.count({
     *   where: {
     *     // ... the filter for the Stock_news we want to count
     *   }
     * })
    **/
    count<T extends stock_newCountArgs>(
      args?: Subset<T, stock_newCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stock_newCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock_new.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stock_newAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stock_newAggregateArgs>(args: Subset<T, Stock_newAggregateArgs>): Prisma.PrismaPromise<GetStock_newAggregateType<T>>

    /**
     * Group by Stock_new.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_newGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stock_newGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stock_newGroupByArgs['orderBy'] }
        : { orderBy?: stock_newGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stock_newGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStock_newGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stock_new model
   */
  readonly fields: stock_newFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stock_new.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stock_newClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_schedule_items<T extends stock_new$distillation_schedule_itemsArgs<ExtArgs> = {}>(args?: Subset<T, stock_new$distillation_schedule_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ref_materials<T extends stock_new$ref_materialsArgs<ExtArgs> = {}>(args?: Subset<T, stock_new$ref_materialsArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ref_suppliers<T extends stock_new$ref_suppliersArgs<ExtArgs> = {}>(args?: Subset<T, stock_new$ref_suppliersArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stock_new model
   */
  interface stock_newFieldRefs {
    readonly stock_id: FieldRef<"stock_new", 'Int'>
    readonly supplier_id: FieldRef<"stock_new", 'Int'>
    readonly quantity: FieldRef<"stock_new", 'Int'>
    readonly batch_code: FieldRef<"stock_new", 'String'>
    readonly location: FieldRef<"stock_new", 'String'>
    readonly notes: FieldRef<"stock_new", 'String'>
    readonly created_at: FieldRef<"stock_new", 'DateTime'>
    readonly updated_at: FieldRef<"stock_new", 'DateTime'>
    readonly material_code: FieldRef<"stock_new", 'String'>
  }
    

  // Custom InputTypes
  /**
   * stock_new findUnique
   */
  export type stock_newFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_new to fetch.
     */
    where: stock_newWhereUniqueInput
  }

  /**
   * stock_new findUniqueOrThrow
   */
  export type stock_newFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_new to fetch.
     */
    where: stock_newWhereUniqueInput
  }

  /**
   * stock_new findFirst
   */
  export type stock_newFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_new to fetch.
     */
    where?: stock_newWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_news to fetch.
     */
    orderBy?: stock_newOrderByWithRelationInput | stock_newOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_news.
     */
    cursor?: stock_newWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_news from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_news.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_news.
     */
    distinct?: Stock_newScalarFieldEnum | Stock_newScalarFieldEnum[]
  }

  /**
   * stock_new findFirstOrThrow
   */
  export type stock_newFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_new to fetch.
     */
    where?: stock_newWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_news to fetch.
     */
    orderBy?: stock_newOrderByWithRelationInput | stock_newOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_news.
     */
    cursor?: stock_newWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_news from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_news.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_news.
     */
    distinct?: Stock_newScalarFieldEnum | Stock_newScalarFieldEnum[]
  }

  /**
   * stock_new findMany
   */
  export type stock_newFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * Filter, which stock_news to fetch.
     */
    where?: stock_newWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_news to fetch.
     */
    orderBy?: stock_newOrderByWithRelationInput | stock_newOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stock_news.
     */
    cursor?: stock_newWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_news from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_news.
     */
    skip?: number
    distinct?: Stock_newScalarFieldEnum | Stock_newScalarFieldEnum[]
  }

  /**
   * stock_new create
   */
  export type stock_newCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * The data needed to create a stock_new.
     */
    data: XOR<stock_newCreateInput, stock_newUncheckedCreateInput>
  }

  /**
   * stock_new createMany
   */
  export type stock_newCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stock_news.
     */
    data: stock_newCreateManyInput | stock_newCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stock_new createManyAndReturn
   */
  export type stock_newCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * The data used to create many stock_news.
     */
    data: stock_newCreateManyInput | stock_newCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_new update
   */
  export type stock_newUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * The data needed to update a stock_new.
     */
    data: XOR<stock_newUpdateInput, stock_newUncheckedUpdateInput>
    /**
     * Choose, which stock_new to update.
     */
    where: stock_newWhereUniqueInput
  }

  /**
   * stock_new updateMany
   */
  export type stock_newUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stock_news.
     */
    data: XOR<stock_newUpdateManyMutationInput, stock_newUncheckedUpdateManyInput>
    /**
     * Filter which stock_news to update
     */
    where?: stock_newWhereInput
    /**
     * Limit how many stock_news to update.
     */
    limit?: number
  }

  /**
   * stock_new updateManyAndReturn
   */
  export type stock_newUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * The data used to update stock_news.
     */
    data: XOR<stock_newUpdateManyMutationInput, stock_newUncheckedUpdateManyInput>
    /**
     * Filter which stock_news to update
     */
    where?: stock_newWhereInput
    /**
     * Limit how many stock_news to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_new upsert
   */
  export type stock_newUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * The filter to search for the stock_new to update in case it exists.
     */
    where: stock_newWhereUniqueInput
    /**
     * In case the stock_new found by the `where` argument doesn't exist, create a new stock_new with this data.
     */
    create: XOR<stock_newCreateInput, stock_newUncheckedCreateInput>
    /**
     * In case the stock_new was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stock_newUpdateInput, stock_newUncheckedUpdateInput>
  }

  /**
   * stock_new delete
   */
  export type stock_newDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
    /**
     * Filter which stock_new to delete.
     */
    where: stock_newWhereUniqueInput
  }

  /**
   * stock_new deleteMany
   */
  export type stock_newDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_news to delete
     */
    where?: stock_newWhereInput
    /**
     * Limit how many stock_news to delete.
     */
    limit?: number
  }

  /**
   * stock_new.distillation_schedule_items
   */
  export type stock_new$distillation_schedule_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    where?: distillation_schedule_itemsWhereInput
    orderBy?: distillation_schedule_itemsOrderByWithRelationInput | distillation_schedule_itemsOrderByWithRelationInput[]
    cursor?: distillation_schedule_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Distillation_schedule_itemsScalarFieldEnum | Distillation_schedule_itemsScalarFieldEnum[]
  }

  /**
   * stock_new.ref_materials
   */
  export type stock_new$ref_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    where?: ref_materialsWhereInput
  }

  /**
   * stock_new.ref_suppliers
   */
  export type stock_new$ref_suppliersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    where?: ref_suppliersWhereInput
  }

  /**
   * stock_new without action
   */
  export type stock_newDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_new
     */
    select?: stock_newSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_new
     */
    omit?: stock_newOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_newInclude<ExtArgs> | null
  }


  /**
   * Model stock_order
   */

  export type AggregateStock_order = {
    _count: Stock_orderCountAggregateOutputType | null
    _avg: Stock_orderAvgAggregateOutputType | null
    _sum: Stock_orderSumAggregateOutputType | null
    _min: Stock_orderMinAggregateOutputType | null
    _max: Stock_orderMaxAggregateOutputType | null
  }

  export type Stock_orderAvgAggregateOutputType = {
    order_id: number | null
    supplier_id: number | null
  }

  export type Stock_orderSumAggregateOutputType = {
    order_id: number | null
    supplier_id: number | null
  }

  export type Stock_orderMinAggregateOutputType = {
    order_id: number | null
    po_number: string | null
    date_ordered: Date | null
    supplier_id: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Stock_orderMaxAggregateOutputType = {
    order_id: number | null
    po_number: string | null
    date_ordered: Date | null
    supplier_id: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Stock_orderCountAggregateOutputType = {
    order_id: number
    po_number: number
    date_ordered: number
    supplier_id: number
    notes: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Stock_orderAvgAggregateInputType = {
    order_id?: true
    supplier_id?: true
  }

  export type Stock_orderSumAggregateInputType = {
    order_id?: true
    supplier_id?: true
  }

  export type Stock_orderMinAggregateInputType = {
    order_id?: true
    po_number?: true
    date_ordered?: true
    supplier_id?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type Stock_orderMaxAggregateInputType = {
    order_id?: true
    po_number?: true
    date_ordered?: true
    supplier_id?: true
    notes?: true
    created_at?: true
    updated_at?: true
  }

  export type Stock_orderCountAggregateInputType = {
    order_id?: true
    po_number?: true
    date_ordered?: true
    supplier_id?: true
    notes?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Stock_orderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_order to aggregate.
     */
    where?: stock_orderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_orders to fetch.
     */
    orderBy?: stock_orderOrderByWithRelationInput | stock_orderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stock_orderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stock_orders
    **/
    _count?: true | Stock_orderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stock_orderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stock_orderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stock_orderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stock_orderMaxAggregateInputType
  }

  export type GetStock_orderAggregateType<T extends Stock_orderAggregateArgs> = {
        [P in keyof T & keyof AggregateStock_order]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock_order[P]>
      : GetScalarType<T[P], AggregateStock_order[P]>
  }




  export type stock_orderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_orderWhereInput
    orderBy?: stock_orderOrderByWithAggregationInput | stock_orderOrderByWithAggregationInput[]
    by: Stock_orderScalarFieldEnum[] | Stock_orderScalarFieldEnum
    having?: stock_orderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stock_orderCountAggregateInputType | true
    _avg?: Stock_orderAvgAggregateInputType
    _sum?: Stock_orderSumAggregateInputType
    _min?: Stock_orderMinAggregateInputType
    _max?: Stock_orderMaxAggregateInputType
  }

  export type Stock_orderGroupByOutputType = {
    order_id: number
    po_number: string | null
    date_ordered: Date
    supplier_id: number
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Stock_orderCountAggregateOutputType | null
    _avg: Stock_orderAvgAggregateOutputType | null
    _sum: Stock_orderSumAggregateOutputType | null
    _min: Stock_orderMinAggregateOutputType | null
    _max: Stock_orderMaxAggregateOutputType | null
  }

  type GetStock_orderGroupByPayload<T extends stock_orderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stock_orderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stock_orderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stock_orderGroupByOutputType[P]>
            : GetScalarType<T[P], Stock_orderGroupByOutputType[P]>
        }
      >
    >


  export type stock_orderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    order_id?: boolean
    po_number?: boolean
    date_ordered?: boolean
    supplier_id?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    order_detail?: boolean | stock_order$order_detailArgs<ExtArgs>
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
    _count?: boolean | Stock_orderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_order"]>

  export type stock_orderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    order_id?: boolean
    po_number?: boolean
    date_ordered?: boolean
    supplier_id?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_order"]>

  export type stock_orderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    order_id?: boolean
    po_number?: boolean
    date_ordered?: boolean
    supplier_id?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_order"]>

  export type stock_orderSelectScalar = {
    order_id?: boolean
    po_number?: boolean
    date_ordered?: boolean
    supplier_id?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type stock_orderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"order_id" | "po_number" | "date_ordered" | "supplier_id" | "notes" | "created_at" | "updated_at", ExtArgs["result"]["stock_order"]>
  export type stock_orderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail?: boolean | stock_order$order_detailArgs<ExtArgs>
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
    _count?: boolean | Stock_orderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type stock_orderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }
  export type stock_orderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }

  export type $stock_orderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stock_order"
    objects: {
      order_detail: Prisma.$order_detailPayload<ExtArgs>[]
      ref_suppliers: Prisma.$ref_suppliersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      order_id: number
      po_number: string | null
      date_ordered: Date
      supplier_id: number
      notes: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["stock_order"]>
    composites: {}
  }

  type stock_orderGetPayload<S extends boolean | null | undefined | stock_orderDefaultArgs> = $Result.GetResult<Prisma.$stock_orderPayload, S>

  type stock_orderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stock_orderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stock_orderCountAggregateInputType | true
    }

  export interface stock_orderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stock_order'], meta: { name: 'stock_order' } }
    /**
     * Find zero or one Stock_order that matches the filter.
     * @param {stock_orderFindUniqueArgs} args - Arguments to find a Stock_order
     * @example
     * // Get one Stock_order
     * const stock_order = await prisma.stock_order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stock_orderFindUniqueArgs>(args: SelectSubset<T, stock_orderFindUniqueArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stock_order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stock_orderFindUniqueOrThrowArgs} args - Arguments to find a Stock_order
     * @example
     * // Get one Stock_order
     * const stock_order = await prisma.stock_order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stock_orderFindUniqueOrThrowArgs>(args: SelectSubset<T, stock_orderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_orderFindFirstArgs} args - Arguments to find a Stock_order
     * @example
     * // Get one Stock_order
     * const stock_order = await prisma.stock_order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stock_orderFindFirstArgs>(args?: SelectSubset<T, stock_orderFindFirstArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_orderFindFirstOrThrowArgs} args - Arguments to find a Stock_order
     * @example
     * // Get one Stock_order
     * const stock_order = await prisma.stock_order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stock_orderFindFirstOrThrowArgs>(args?: SelectSubset<T, stock_orderFindFirstOrThrowArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stock_orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_orderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stock_orders
     * const stock_orders = await prisma.stock_order.findMany()
     * 
     * // Get first 10 Stock_orders
     * const stock_orders = await prisma.stock_order.findMany({ take: 10 })
     * 
     * // Only select the `order_id`
     * const stock_orderWithOrder_idOnly = await prisma.stock_order.findMany({ select: { order_id: true } })
     * 
     */
    findMany<T extends stock_orderFindManyArgs>(args?: SelectSubset<T, stock_orderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stock_order.
     * @param {stock_orderCreateArgs} args - Arguments to create a Stock_order.
     * @example
     * // Create one Stock_order
     * const Stock_order = await prisma.stock_order.create({
     *   data: {
     *     // ... data to create a Stock_order
     *   }
     * })
     * 
     */
    create<T extends stock_orderCreateArgs>(args: SelectSubset<T, stock_orderCreateArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stock_orders.
     * @param {stock_orderCreateManyArgs} args - Arguments to create many Stock_orders.
     * @example
     * // Create many Stock_orders
     * const stock_order = await prisma.stock_order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stock_orderCreateManyArgs>(args?: SelectSubset<T, stock_orderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stock_orders and returns the data saved in the database.
     * @param {stock_orderCreateManyAndReturnArgs} args - Arguments to create many Stock_orders.
     * @example
     * // Create many Stock_orders
     * const stock_order = await prisma.stock_order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stock_orders and only return the `order_id`
     * const stock_orderWithOrder_idOnly = await prisma.stock_order.createManyAndReturn({
     *   select: { order_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stock_orderCreateManyAndReturnArgs>(args?: SelectSubset<T, stock_orderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stock_order.
     * @param {stock_orderDeleteArgs} args - Arguments to delete one Stock_order.
     * @example
     * // Delete one Stock_order
     * const Stock_order = await prisma.stock_order.delete({
     *   where: {
     *     // ... filter to delete one Stock_order
     *   }
     * })
     * 
     */
    delete<T extends stock_orderDeleteArgs>(args: SelectSubset<T, stock_orderDeleteArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stock_order.
     * @param {stock_orderUpdateArgs} args - Arguments to update one Stock_order.
     * @example
     * // Update one Stock_order
     * const stock_order = await prisma.stock_order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stock_orderUpdateArgs>(args: SelectSubset<T, stock_orderUpdateArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stock_orders.
     * @param {stock_orderDeleteManyArgs} args - Arguments to filter Stock_orders to delete.
     * @example
     * // Delete a few Stock_orders
     * const { count } = await prisma.stock_order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stock_orderDeleteManyArgs>(args?: SelectSubset<T, stock_orderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_orderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stock_orders
     * const stock_order = await prisma.stock_order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stock_orderUpdateManyArgs>(args: SelectSubset<T, stock_orderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_orders and returns the data updated in the database.
     * @param {stock_orderUpdateManyAndReturnArgs} args - Arguments to update many Stock_orders.
     * @example
     * // Update many Stock_orders
     * const stock_order = await prisma.stock_order.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stock_orders and only return the `order_id`
     * const stock_orderWithOrder_idOnly = await prisma.stock_order.updateManyAndReturn({
     *   select: { order_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stock_orderUpdateManyAndReturnArgs>(args: SelectSubset<T, stock_orderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stock_order.
     * @param {stock_orderUpsertArgs} args - Arguments to update or create a Stock_order.
     * @example
     * // Update or create a Stock_order
     * const stock_order = await prisma.stock_order.upsert({
     *   create: {
     *     // ... data to create a Stock_order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock_order we want to update
     *   }
     * })
     */
    upsert<T extends stock_orderUpsertArgs>(args: SelectSubset<T, stock_orderUpsertArgs<ExtArgs>>): Prisma__stock_orderClient<$Result.GetResult<Prisma.$stock_orderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stock_orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_orderCountArgs} args - Arguments to filter Stock_orders to count.
     * @example
     * // Count the number of Stock_orders
     * const count = await prisma.stock_order.count({
     *   where: {
     *     // ... the filter for the Stock_orders we want to count
     *   }
     * })
    **/
    count<T extends stock_orderCountArgs>(
      args?: Subset<T, stock_orderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stock_orderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock_order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stock_orderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stock_orderAggregateArgs>(args: Subset<T, Stock_orderAggregateArgs>): Prisma.PrismaPromise<GetStock_orderAggregateType<T>>

    /**
     * Group by Stock_order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_orderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stock_orderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stock_orderGroupByArgs['orderBy'] }
        : { orderBy?: stock_orderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stock_orderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStock_orderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stock_order model
   */
  readonly fields: stock_orderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stock_order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stock_orderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_detail<T extends stock_order$order_detailArgs<ExtArgs> = {}>(args?: Subset<T, stock_order$order_detailArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ref_suppliers<T extends ref_suppliersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ref_suppliersDefaultArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stock_order model
   */
  interface stock_orderFieldRefs {
    readonly order_id: FieldRef<"stock_order", 'Int'>
    readonly po_number: FieldRef<"stock_order", 'String'>
    readonly date_ordered: FieldRef<"stock_order", 'DateTime'>
    readonly supplier_id: FieldRef<"stock_order", 'Int'>
    readonly notes: FieldRef<"stock_order", 'String'>
    readonly created_at: FieldRef<"stock_order", 'DateTime'>
    readonly updated_at: FieldRef<"stock_order", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * stock_order findUnique
   */
  export type stock_orderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * Filter, which stock_order to fetch.
     */
    where: stock_orderWhereUniqueInput
  }

  /**
   * stock_order findUniqueOrThrow
   */
  export type stock_orderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * Filter, which stock_order to fetch.
     */
    where: stock_orderWhereUniqueInput
  }

  /**
   * stock_order findFirst
   */
  export type stock_orderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * Filter, which stock_order to fetch.
     */
    where?: stock_orderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_orders to fetch.
     */
    orderBy?: stock_orderOrderByWithRelationInput | stock_orderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_orders.
     */
    cursor?: stock_orderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_orders.
     */
    distinct?: Stock_orderScalarFieldEnum | Stock_orderScalarFieldEnum[]
  }

  /**
   * stock_order findFirstOrThrow
   */
  export type stock_orderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * Filter, which stock_order to fetch.
     */
    where?: stock_orderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_orders to fetch.
     */
    orderBy?: stock_orderOrderByWithRelationInput | stock_orderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_orders.
     */
    cursor?: stock_orderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_orders.
     */
    distinct?: Stock_orderScalarFieldEnum | Stock_orderScalarFieldEnum[]
  }

  /**
   * stock_order findMany
   */
  export type stock_orderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * Filter, which stock_orders to fetch.
     */
    where?: stock_orderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_orders to fetch.
     */
    orderBy?: stock_orderOrderByWithRelationInput | stock_orderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stock_orders.
     */
    cursor?: stock_orderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_orders.
     */
    skip?: number
    distinct?: Stock_orderScalarFieldEnum | Stock_orderScalarFieldEnum[]
  }

  /**
   * stock_order create
   */
  export type stock_orderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * The data needed to create a stock_order.
     */
    data: XOR<stock_orderCreateInput, stock_orderUncheckedCreateInput>
  }

  /**
   * stock_order createMany
   */
  export type stock_orderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stock_orders.
     */
    data: stock_orderCreateManyInput | stock_orderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stock_order createManyAndReturn
   */
  export type stock_orderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * The data used to create many stock_orders.
     */
    data: stock_orderCreateManyInput | stock_orderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_order update
   */
  export type stock_orderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * The data needed to update a stock_order.
     */
    data: XOR<stock_orderUpdateInput, stock_orderUncheckedUpdateInput>
    /**
     * Choose, which stock_order to update.
     */
    where: stock_orderWhereUniqueInput
  }

  /**
   * stock_order updateMany
   */
  export type stock_orderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stock_orders.
     */
    data: XOR<stock_orderUpdateManyMutationInput, stock_orderUncheckedUpdateManyInput>
    /**
     * Filter which stock_orders to update
     */
    where?: stock_orderWhereInput
    /**
     * Limit how many stock_orders to update.
     */
    limit?: number
  }

  /**
   * stock_order updateManyAndReturn
   */
  export type stock_orderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * The data used to update stock_orders.
     */
    data: XOR<stock_orderUpdateManyMutationInput, stock_orderUncheckedUpdateManyInput>
    /**
     * Filter which stock_orders to update
     */
    where?: stock_orderWhereInput
    /**
     * Limit how many stock_orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_order upsert
   */
  export type stock_orderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * The filter to search for the stock_order to update in case it exists.
     */
    where: stock_orderWhereUniqueInput
    /**
     * In case the stock_order found by the `where` argument doesn't exist, create a new stock_order with this data.
     */
    create: XOR<stock_orderCreateInput, stock_orderUncheckedCreateInput>
    /**
     * In case the stock_order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stock_orderUpdateInput, stock_orderUncheckedUpdateInput>
  }

  /**
   * stock_order delete
   */
  export type stock_orderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
    /**
     * Filter which stock_order to delete.
     */
    where: stock_orderWhereUniqueInput
  }

  /**
   * stock_order deleteMany
   */
  export type stock_orderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_orders to delete
     */
    where?: stock_orderWhereInput
    /**
     * Limit how many stock_orders to delete.
     */
    limit?: number
  }

  /**
   * stock_order.order_detail
   */
  export type stock_order$order_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    where?: order_detailWhereInput
    orderBy?: order_detailOrderByWithRelationInput | order_detailOrderByWithRelationInput[]
    cursor?: order_detailWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_detailScalarFieldEnum | Order_detailScalarFieldEnum[]
  }

  /**
   * stock_order without action
   */
  export type stock_orderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_order
     */
    select?: stock_orderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_order
     */
    omit?: stock_orderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_orderInclude<ExtArgs> | null
  }


  /**
   * Model stock_repro
   */

  export type AggregateStock_repro = {
    _count: Stock_reproCountAggregateOutputType | null
    _avg: Stock_reproAvgAggregateOutputType | null
    _sum: Stock_reproSumAggregateOutputType | null
    _min: Stock_reproMinAggregateOutputType | null
    _max: Stock_reproMaxAggregateOutputType | null
  }

  export type Stock_reproAvgAggregateOutputType = {
    stock_id: number | null
    quantity: number | null
  }

  export type Stock_reproSumAggregateOutputType = {
    stock_id: number | null
    quantity: number | null
  }

  export type Stock_reproMinAggregateOutputType = {
    stock_id: number | null
    location: string | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    quantity: number | null
    material_description: string | null
    material_code: string | null
  }

  export type Stock_reproMaxAggregateOutputType = {
    stock_id: number | null
    location: string | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    quantity: number | null
    material_description: string | null
    material_code: string | null
  }

  export type Stock_reproCountAggregateOutputType = {
    stock_id: number
    location: number
    notes: number
    created_at: number
    updated_at: number
    quantity: number
    material_description: number
    material_code: number
    _all: number
  }


  export type Stock_reproAvgAggregateInputType = {
    stock_id?: true
    quantity?: true
  }

  export type Stock_reproSumAggregateInputType = {
    stock_id?: true
    quantity?: true
  }

  export type Stock_reproMinAggregateInputType = {
    stock_id?: true
    location?: true
    notes?: true
    created_at?: true
    updated_at?: true
    quantity?: true
    material_description?: true
    material_code?: true
  }

  export type Stock_reproMaxAggregateInputType = {
    stock_id?: true
    location?: true
    notes?: true
    created_at?: true
    updated_at?: true
    quantity?: true
    material_description?: true
    material_code?: true
  }

  export type Stock_reproCountAggregateInputType = {
    stock_id?: true
    location?: true
    notes?: true
    created_at?: true
    updated_at?: true
    quantity?: true
    material_description?: true
    material_code?: true
    _all?: true
  }

  export type Stock_reproAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_repro to aggregate.
     */
    where?: stock_reproWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_repros to fetch.
     */
    orderBy?: stock_reproOrderByWithRelationInput | stock_reproOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stock_reproWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_repros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_repros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stock_repros
    **/
    _count?: true | Stock_reproCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stock_reproAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stock_reproSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stock_reproMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stock_reproMaxAggregateInputType
  }

  export type GetStock_reproAggregateType<T extends Stock_reproAggregateArgs> = {
        [P in keyof T & keyof AggregateStock_repro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock_repro[P]>
      : GetScalarType<T[P], AggregateStock_repro[P]>
  }




  export type stock_reproGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_reproWhereInput
    orderBy?: stock_reproOrderByWithAggregationInput | stock_reproOrderByWithAggregationInput[]
    by: Stock_reproScalarFieldEnum[] | Stock_reproScalarFieldEnum
    having?: stock_reproScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stock_reproCountAggregateInputType | true
    _avg?: Stock_reproAvgAggregateInputType
    _sum?: Stock_reproSumAggregateInputType
    _min?: Stock_reproMinAggregateInputType
    _max?: Stock_reproMaxAggregateInputType
  }

  export type Stock_reproGroupByOutputType = {
    stock_id: number
    location: string
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    quantity: number
    material_description: string | null
    material_code: string | null
    _count: Stock_reproCountAggregateOutputType | null
    _avg: Stock_reproAvgAggregateOutputType | null
    _sum: Stock_reproSumAggregateOutputType | null
    _min: Stock_reproMinAggregateOutputType | null
    _max: Stock_reproMaxAggregateOutputType | null
  }

  type GetStock_reproGroupByPayload<T extends stock_reproGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stock_reproGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stock_reproGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stock_reproGroupByOutputType[P]>
            : GetScalarType<T[P], Stock_reproGroupByOutputType[P]>
        }
      >
    >


  export type stock_reproSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stock_id?: boolean
    location?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    quantity?: boolean
    material_description?: boolean
    material_code?: boolean
    distillation_schedule_items?: boolean | stock_repro$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_repro$ref_materialsArgs<ExtArgs>
    _count?: boolean | Stock_reproCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_repro"]>

  export type stock_reproSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stock_id?: boolean
    location?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    quantity?: boolean
    material_description?: boolean
    material_code?: boolean
    ref_materials?: boolean | stock_repro$ref_materialsArgs<ExtArgs>
  }, ExtArgs["result"]["stock_repro"]>

  export type stock_reproSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    stock_id?: boolean
    location?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    quantity?: boolean
    material_description?: boolean
    material_code?: boolean
    ref_materials?: boolean | stock_repro$ref_materialsArgs<ExtArgs>
  }, ExtArgs["result"]["stock_repro"]>

  export type stock_reproSelectScalar = {
    stock_id?: boolean
    location?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    quantity?: boolean
    material_description?: boolean
    material_code?: boolean
  }

  export type stock_reproOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"stock_id" | "location" | "notes" | "created_at" | "updated_at" | "quantity" | "material_description" | "material_code", ExtArgs["result"]["stock_repro"]>
  export type stock_reproInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule_items?: boolean | stock_repro$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_repro$ref_materialsArgs<ExtArgs>
    _count?: boolean | Stock_reproCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type stock_reproIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | stock_repro$ref_materialsArgs<ExtArgs>
  }
  export type stock_reproIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | stock_repro$ref_materialsArgs<ExtArgs>
  }

  export type $stock_reproPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stock_repro"
    objects: {
      distillation_schedule_items: Prisma.$distillation_schedule_itemsPayload<ExtArgs>[]
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      stock_id: number
      location: string
      notes: string | null
      created_at: Date | null
      updated_at: Date | null
      quantity: number
      material_description: string | null
      material_code: string | null
    }, ExtArgs["result"]["stock_repro"]>
    composites: {}
  }

  type stock_reproGetPayload<S extends boolean | null | undefined | stock_reproDefaultArgs> = $Result.GetResult<Prisma.$stock_reproPayload, S>

  type stock_reproCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stock_reproFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stock_reproCountAggregateInputType | true
    }

  export interface stock_reproDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stock_repro'], meta: { name: 'stock_repro' } }
    /**
     * Find zero or one Stock_repro that matches the filter.
     * @param {stock_reproFindUniqueArgs} args - Arguments to find a Stock_repro
     * @example
     * // Get one Stock_repro
     * const stock_repro = await prisma.stock_repro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stock_reproFindUniqueArgs>(args: SelectSubset<T, stock_reproFindUniqueArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stock_repro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stock_reproFindUniqueOrThrowArgs} args - Arguments to find a Stock_repro
     * @example
     * // Get one Stock_repro
     * const stock_repro = await prisma.stock_repro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stock_reproFindUniqueOrThrowArgs>(args: SelectSubset<T, stock_reproFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_repro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_reproFindFirstArgs} args - Arguments to find a Stock_repro
     * @example
     * // Get one Stock_repro
     * const stock_repro = await prisma.stock_repro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stock_reproFindFirstArgs>(args?: SelectSubset<T, stock_reproFindFirstArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_repro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_reproFindFirstOrThrowArgs} args - Arguments to find a Stock_repro
     * @example
     * // Get one Stock_repro
     * const stock_repro = await prisma.stock_repro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stock_reproFindFirstOrThrowArgs>(args?: SelectSubset<T, stock_reproFindFirstOrThrowArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stock_repros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_reproFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stock_repros
     * const stock_repros = await prisma.stock_repro.findMany()
     * 
     * // Get first 10 Stock_repros
     * const stock_repros = await prisma.stock_repro.findMany({ take: 10 })
     * 
     * // Only select the `stock_id`
     * const stock_reproWithStock_idOnly = await prisma.stock_repro.findMany({ select: { stock_id: true } })
     * 
     */
    findMany<T extends stock_reproFindManyArgs>(args?: SelectSubset<T, stock_reproFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stock_repro.
     * @param {stock_reproCreateArgs} args - Arguments to create a Stock_repro.
     * @example
     * // Create one Stock_repro
     * const Stock_repro = await prisma.stock_repro.create({
     *   data: {
     *     // ... data to create a Stock_repro
     *   }
     * })
     * 
     */
    create<T extends stock_reproCreateArgs>(args: SelectSubset<T, stock_reproCreateArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stock_repros.
     * @param {stock_reproCreateManyArgs} args - Arguments to create many Stock_repros.
     * @example
     * // Create many Stock_repros
     * const stock_repro = await prisma.stock_repro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stock_reproCreateManyArgs>(args?: SelectSubset<T, stock_reproCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stock_repros and returns the data saved in the database.
     * @param {stock_reproCreateManyAndReturnArgs} args - Arguments to create many Stock_repros.
     * @example
     * // Create many Stock_repros
     * const stock_repro = await prisma.stock_repro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stock_repros and only return the `stock_id`
     * const stock_reproWithStock_idOnly = await prisma.stock_repro.createManyAndReturn({
     *   select: { stock_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stock_reproCreateManyAndReturnArgs>(args?: SelectSubset<T, stock_reproCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stock_repro.
     * @param {stock_reproDeleteArgs} args - Arguments to delete one Stock_repro.
     * @example
     * // Delete one Stock_repro
     * const Stock_repro = await prisma.stock_repro.delete({
     *   where: {
     *     // ... filter to delete one Stock_repro
     *   }
     * })
     * 
     */
    delete<T extends stock_reproDeleteArgs>(args: SelectSubset<T, stock_reproDeleteArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stock_repro.
     * @param {stock_reproUpdateArgs} args - Arguments to update one Stock_repro.
     * @example
     * // Update one Stock_repro
     * const stock_repro = await prisma.stock_repro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stock_reproUpdateArgs>(args: SelectSubset<T, stock_reproUpdateArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stock_repros.
     * @param {stock_reproDeleteManyArgs} args - Arguments to filter Stock_repros to delete.
     * @example
     * // Delete a few Stock_repros
     * const { count } = await prisma.stock_repro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stock_reproDeleteManyArgs>(args?: SelectSubset<T, stock_reproDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_repros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_reproUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stock_repros
     * const stock_repro = await prisma.stock_repro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stock_reproUpdateManyArgs>(args: SelectSubset<T, stock_reproUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_repros and returns the data updated in the database.
     * @param {stock_reproUpdateManyAndReturnArgs} args - Arguments to update many Stock_repros.
     * @example
     * // Update many Stock_repros
     * const stock_repro = await prisma.stock_repro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stock_repros and only return the `stock_id`
     * const stock_reproWithStock_idOnly = await prisma.stock_repro.updateManyAndReturn({
     *   select: { stock_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stock_reproUpdateManyAndReturnArgs>(args: SelectSubset<T, stock_reproUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stock_repro.
     * @param {stock_reproUpsertArgs} args - Arguments to update or create a Stock_repro.
     * @example
     * // Update or create a Stock_repro
     * const stock_repro = await prisma.stock_repro.upsert({
     *   create: {
     *     // ... data to create a Stock_repro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock_repro we want to update
     *   }
     * })
     */
    upsert<T extends stock_reproUpsertArgs>(args: SelectSubset<T, stock_reproUpsertArgs<ExtArgs>>): Prisma__stock_reproClient<$Result.GetResult<Prisma.$stock_reproPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stock_repros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_reproCountArgs} args - Arguments to filter Stock_repros to count.
     * @example
     * // Count the number of Stock_repros
     * const count = await prisma.stock_repro.count({
     *   where: {
     *     // ... the filter for the Stock_repros we want to count
     *   }
     * })
    **/
    count<T extends stock_reproCountArgs>(
      args?: Subset<T, stock_reproCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stock_reproCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock_repro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stock_reproAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stock_reproAggregateArgs>(args: Subset<T, Stock_reproAggregateArgs>): Prisma.PrismaPromise<GetStock_reproAggregateType<T>>

    /**
     * Group by Stock_repro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_reproGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stock_reproGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stock_reproGroupByArgs['orderBy'] }
        : { orderBy?: stock_reproGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stock_reproGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStock_reproGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stock_repro model
   */
  readonly fields: stock_reproFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stock_repro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stock_reproClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    distillation_schedule_items<T extends stock_repro$distillation_schedule_itemsArgs<ExtArgs> = {}>(args?: Subset<T, stock_repro$distillation_schedule_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ref_materials<T extends stock_repro$ref_materialsArgs<ExtArgs> = {}>(args?: Subset<T, stock_repro$ref_materialsArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stock_repro model
   */
  interface stock_reproFieldRefs {
    readonly stock_id: FieldRef<"stock_repro", 'Int'>
    readonly location: FieldRef<"stock_repro", 'String'>
    readonly notes: FieldRef<"stock_repro", 'String'>
    readonly created_at: FieldRef<"stock_repro", 'DateTime'>
    readonly updated_at: FieldRef<"stock_repro", 'DateTime'>
    readonly quantity: FieldRef<"stock_repro", 'Int'>
    readonly material_description: FieldRef<"stock_repro", 'String'>
    readonly material_code: FieldRef<"stock_repro", 'String'>
  }
    

  // Custom InputTypes
  /**
   * stock_repro findUnique
   */
  export type stock_reproFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * Filter, which stock_repro to fetch.
     */
    where: stock_reproWhereUniqueInput
  }

  /**
   * stock_repro findUniqueOrThrow
   */
  export type stock_reproFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * Filter, which stock_repro to fetch.
     */
    where: stock_reproWhereUniqueInput
  }

  /**
   * stock_repro findFirst
   */
  export type stock_reproFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * Filter, which stock_repro to fetch.
     */
    where?: stock_reproWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_repros to fetch.
     */
    orderBy?: stock_reproOrderByWithRelationInput | stock_reproOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_repros.
     */
    cursor?: stock_reproWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_repros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_repros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_repros.
     */
    distinct?: Stock_reproScalarFieldEnum | Stock_reproScalarFieldEnum[]
  }

  /**
   * stock_repro findFirstOrThrow
   */
  export type stock_reproFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * Filter, which stock_repro to fetch.
     */
    where?: stock_reproWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_repros to fetch.
     */
    orderBy?: stock_reproOrderByWithRelationInput | stock_reproOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_repros.
     */
    cursor?: stock_reproWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_repros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_repros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_repros.
     */
    distinct?: Stock_reproScalarFieldEnum | Stock_reproScalarFieldEnum[]
  }

  /**
   * stock_repro findMany
   */
  export type stock_reproFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * Filter, which stock_repros to fetch.
     */
    where?: stock_reproWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_repros to fetch.
     */
    orderBy?: stock_reproOrderByWithRelationInput | stock_reproOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stock_repros.
     */
    cursor?: stock_reproWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_repros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_repros.
     */
    skip?: number
    distinct?: Stock_reproScalarFieldEnum | Stock_reproScalarFieldEnum[]
  }

  /**
   * stock_repro create
   */
  export type stock_reproCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * The data needed to create a stock_repro.
     */
    data: XOR<stock_reproCreateInput, stock_reproUncheckedCreateInput>
  }

  /**
   * stock_repro createMany
   */
  export type stock_reproCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stock_repros.
     */
    data: stock_reproCreateManyInput | stock_reproCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stock_repro createManyAndReturn
   */
  export type stock_reproCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * The data used to create many stock_repros.
     */
    data: stock_reproCreateManyInput | stock_reproCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_repro update
   */
  export type stock_reproUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * The data needed to update a stock_repro.
     */
    data: XOR<stock_reproUpdateInput, stock_reproUncheckedUpdateInput>
    /**
     * Choose, which stock_repro to update.
     */
    where: stock_reproWhereUniqueInput
  }

  /**
   * stock_repro updateMany
   */
  export type stock_reproUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stock_repros.
     */
    data: XOR<stock_reproUpdateManyMutationInput, stock_reproUncheckedUpdateManyInput>
    /**
     * Filter which stock_repros to update
     */
    where?: stock_reproWhereInput
    /**
     * Limit how many stock_repros to update.
     */
    limit?: number
  }

  /**
   * stock_repro updateManyAndReturn
   */
  export type stock_reproUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * The data used to update stock_repros.
     */
    data: XOR<stock_reproUpdateManyMutationInput, stock_reproUncheckedUpdateManyInput>
    /**
     * Filter which stock_repros to update
     */
    where?: stock_reproWhereInput
    /**
     * Limit how many stock_repros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_repro upsert
   */
  export type stock_reproUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * The filter to search for the stock_repro to update in case it exists.
     */
    where: stock_reproWhereUniqueInput
    /**
     * In case the stock_repro found by the `where` argument doesn't exist, create a new stock_repro with this data.
     */
    create: XOR<stock_reproCreateInput, stock_reproUncheckedCreateInput>
    /**
     * In case the stock_repro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stock_reproUpdateInput, stock_reproUncheckedUpdateInput>
  }

  /**
   * stock_repro delete
   */
  export type stock_reproDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
    /**
     * Filter which stock_repro to delete.
     */
    where: stock_reproWhereUniqueInput
  }

  /**
   * stock_repro deleteMany
   */
  export type stock_reproDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_repros to delete
     */
    where?: stock_reproWhereInput
    /**
     * Limit how many stock_repros to delete.
     */
    limit?: number
  }

  /**
   * stock_repro.distillation_schedule_items
   */
  export type stock_repro$distillation_schedule_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    where?: distillation_schedule_itemsWhereInput
    orderBy?: distillation_schedule_itemsOrderByWithRelationInput | distillation_schedule_itemsOrderByWithRelationInput[]
    cursor?: distillation_schedule_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Distillation_schedule_itemsScalarFieldEnum | Distillation_schedule_itemsScalarFieldEnum[]
  }

  /**
   * stock_repro.ref_materials
   */
  export type stock_repro$ref_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    where?: ref_materialsWhereInput
  }

  /**
   * stock_repro without action
   */
  export type stock_reproDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_repro
     */
    select?: stock_reproSelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_repro
     */
    omit?: stock_reproOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_reproInclude<ExtArgs> | null
  }


  /**
   * Model user_profiles
   */

  export type AggregateUser_profiles = {
    _count: User_profilesCountAggregateOutputType | null
    _min: User_profilesMinAggregateOutputType | null
    _max: User_profilesMaxAggregateOutputType | null
  }

  export type User_profilesMinAggregateOutputType = {
    id: string | null
    full_name: string | null
    email: string | null
    avatar_url: string | null
  }

  export type User_profilesMaxAggregateOutputType = {
    id: string | null
    full_name: string | null
    email: string | null
    avatar_url: string | null
  }

  export type User_profilesCountAggregateOutputType = {
    id: number
    full_name: number
    email: number
    avatar_url: number
    _all: number
  }


  export type User_profilesMinAggregateInputType = {
    id?: true
    full_name?: true
    email?: true
    avatar_url?: true
  }

  export type User_profilesMaxAggregateInputType = {
    id?: true
    full_name?: true
    email?: true
    avatar_url?: true
  }

  export type User_profilesCountAggregateInputType = {
    id?: true
    full_name?: true
    email?: true
    avatar_url?: true
    _all?: true
  }

  export type User_profilesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_profiles to aggregate.
     */
    where?: user_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profilesOrderByWithRelationInput | user_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_profiles
    **/
    _count?: true | User_profilesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_profilesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_profilesMaxAggregateInputType
  }

  export type GetUser_profilesAggregateType<T extends User_profilesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_profiles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_profiles[P]>
      : GetScalarType<T[P], AggregateUser_profiles[P]>
  }




  export type user_profilesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_profilesWhereInput
    orderBy?: user_profilesOrderByWithAggregationInput | user_profilesOrderByWithAggregationInput[]
    by: User_profilesScalarFieldEnum[] | User_profilesScalarFieldEnum
    having?: user_profilesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_profilesCountAggregateInputType | true
    _min?: User_profilesMinAggregateInputType
    _max?: User_profilesMaxAggregateInputType
  }

  export type User_profilesGroupByOutputType = {
    id: string
    full_name: string | null
    email: string | null
    avatar_url: string | null
    _count: User_profilesCountAggregateOutputType | null
    _min: User_profilesMinAggregateOutputType | null
    _max: User_profilesMaxAggregateOutputType | null
  }

  type GetUser_profilesGroupByPayload<T extends user_profilesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_profilesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_profilesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_profilesGroupByOutputType[P]>
            : GetScalarType<T[P], User_profilesGroupByOutputType[P]>
        }
      >
    >


  export type user_profilesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    full_name?: boolean
    email?: boolean
    avatar_url?: boolean
  }, ExtArgs["result"]["user_profiles"]>

  export type user_profilesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    full_name?: boolean
    email?: boolean
    avatar_url?: boolean
  }, ExtArgs["result"]["user_profiles"]>

  export type user_profilesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    full_name?: boolean
    email?: boolean
    avatar_url?: boolean
  }, ExtArgs["result"]["user_profiles"]>

  export type user_profilesSelectScalar = {
    id?: boolean
    full_name?: boolean
    email?: boolean
    avatar_url?: boolean
  }

  export type user_profilesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "full_name" | "email" | "avatar_url", ExtArgs["result"]["user_profiles"]>

  export type $user_profilesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_profiles"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      full_name: string | null
      email: string | null
      avatar_url: string | null
    }, ExtArgs["result"]["user_profiles"]>
    composites: {}
  }

  type user_profilesGetPayload<S extends boolean | null | undefined | user_profilesDefaultArgs> = $Result.GetResult<Prisma.$user_profilesPayload, S>

  type user_profilesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_profilesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_profilesCountAggregateInputType | true
    }

  export interface user_profilesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_profiles'], meta: { name: 'user_profiles' } }
    /**
     * Find zero or one User_profiles that matches the filter.
     * @param {user_profilesFindUniqueArgs} args - Arguments to find a User_profiles
     * @example
     * // Get one User_profiles
     * const user_profiles = await prisma.user_profiles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_profilesFindUniqueArgs>(args: SelectSubset<T, user_profilesFindUniqueArgs<ExtArgs>>): Prisma__user_profilesClient<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_profiles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_profilesFindUniqueOrThrowArgs} args - Arguments to find a User_profiles
     * @example
     * // Get one User_profiles
     * const user_profiles = await prisma.user_profiles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_profilesFindUniqueOrThrowArgs>(args: SelectSubset<T, user_profilesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_profilesClient<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profilesFindFirstArgs} args - Arguments to find a User_profiles
     * @example
     * // Get one User_profiles
     * const user_profiles = await prisma.user_profiles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_profilesFindFirstArgs>(args?: SelectSubset<T, user_profilesFindFirstArgs<ExtArgs>>): Prisma__user_profilesClient<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_profiles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profilesFindFirstOrThrowArgs} args - Arguments to find a User_profiles
     * @example
     * // Get one User_profiles
     * const user_profiles = await prisma.user_profiles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_profilesFindFirstOrThrowArgs>(args?: SelectSubset<T, user_profilesFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_profilesClient<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profilesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_profiles
     * const user_profiles = await prisma.user_profiles.findMany()
     * 
     * // Get first 10 User_profiles
     * const user_profiles = await prisma.user_profiles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_profilesWithIdOnly = await prisma.user_profiles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_profilesFindManyArgs>(args?: SelectSubset<T, user_profilesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_profiles.
     * @param {user_profilesCreateArgs} args - Arguments to create a User_profiles.
     * @example
     * // Create one User_profiles
     * const User_profiles = await prisma.user_profiles.create({
     *   data: {
     *     // ... data to create a User_profiles
     *   }
     * })
     * 
     */
    create<T extends user_profilesCreateArgs>(args: SelectSubset<T, user_profilesCreateArgs<ExtArgs>>): Prisma__user_profilesClient<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_profiles.
     * @param {user_profilesCreateManyArgs} args - Arguments to create many User_profiles.
     * @example
     * // Create many User_profiles
     * const user_profiles = await prisma.user_profiles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_profilesCreateManyArgs>(args?: SelectSubset<T, user_profilesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_profiles and returns the data saved in the database.
     * @param {user_profilesCreateManyAndReturnArgs} args - Arguments to create many User_profiles.
     * @example
     * // Create many User_profiles
     * const user_profiles = await prisma.user_profiles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_profiles and only return the `id`
     * const user_profilesWithIdOnly = await prisma.user_profiles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_profilesCreateManyAndReturnArgs>(args?: SelectSubset<T, user_profilesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_profiles.
     * @param {user_profilesDeleteArgs} args - Arguments to delete one User_profiles.
     * @example
     * // Delete one User_profiles
     * const User_profiles = await prisma.user_profiles.delete({
     *   where: {
     *     // ... filter to delete one User_profiles
     *   }
     * })
     * 
     */
    delete<T extends user_profilesDeleteArgs>(args: SelectSubset<T, user_profilesDeleteArgs<ExtArgs>>): Prisma__user_profilesClient<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_profiles.
     * @param {user_profilesUpdateArgs} args - Arguments to update one User_profiles.
     * @example
     * // Update one User_profiles
     * const user_profiles = await prisma.user_profiles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_profilesUpdateArgs>(args: SelectSubset<T, user_profilesUpdateArgs<ExtArgs>>): Prisma__user_profilesClient<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_profiles.
     * @param {user_profilesDeleteManyArgs} args - Arguments to filter User_profiles to delete.
     * @example
     * // Delete a few User_profiles
     * const { count } = await prisma.user_profiles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_profilesDeleteManyArgs>(args?: SelectSubset<T, user_profilesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profilesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_profiles
     * const user_profiles = await prisma.user_profiles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_profilesUpdateManyArgs>(args: SelectSubset<T, user_profilesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_profiles and returns the data updated in the database.
     * @param {user_profilesUpdateManyAndReturnArgs} args - Arguments to update many User_profiles.
     * @example
     * // Update many User_profiles
     * const user_profiles = await prisma.user_profiles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_profiles and only return the `id`
     * const user_profilesWithIdOnly = await prisma.user_profiles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_profilesUpdateManyAndReturnArgs>(args: SelectSubset<T, user_profilesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_profiles.
     * @param {user_profilesUpsertArgs} args - Arguments to update or create a User_profiles.
     * @example
     * // Update or create a User_profiles
     * const user_profiles = await prisma.user_profiles.upsert({
     *   create: {
     *     // ... data to create a User_profiles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_profiles we want to update
     *   }
     * })
     */
    upsert<T extends user_profilesUpsertArgs>(args: SelectSubset<T, user_profilesUpsertArgs<ExtArgs>>): Prisma__user_profilesClient<$Result.GetResult<Prisma.$user_profilesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profilesCountArgs} args - Arguments to filter User_profiles to count.
     * @example
     * // Count the number of User_profiles
     * const count = await prisma.user_profiles.count({
     *   where: {
     *     // ... the filter for the User_profiles we want to count
     *   }
     * })
    **/
    count<T extends user_profilesCountArgs>(
      args?: Subset<T, user_profilesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_profilesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_profilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_profilesAggregateArgs>(args: Subset<T, User_profilesAggregateArgs>): Prisma.PrismaPromise<GetUser_profilesAggregateType<T>>

    /**
     * Group by User_profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_profilesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_profilesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_profilesGroupByArgs['orderBy'] }
        : { orderBy?: user_profilesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_profilesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_profilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_profiles model
   */
  readonly fields: user_profilesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_profiles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_profilesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_profiles model
   */
  interface user_profilesFieldRefs {
    readonly id: FieldRef<"user_profiles", 'String'>
    readonly full_name: FieldRef<"user_profiles", 'String'>
    readonly email: FieldRef<"user_profiles", 'String'>
    readonly avatar_url: FieldRef<"user_profiles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_profiles findUnique
   */
  export type user_profilesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * Filter, which user_profiles to fetch.
     */
    where: user_profilesWhereUniqueInput
  }

  /**
   * user_profiles findUniqueOrThrow
   */
  export type user_profilesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * Filter, which user_profiles to fetch.
     */
    where: user_profilesWhereUniqueInput
  }

  /**
   * user_profiles findFirst
   */
  export type user_profilesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * Filter, which user_profiles to fetch.
     */
    where?: user_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profilesOrderByWithRelationInput | user_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_profiles.
     */
    cursor?: user_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_profiles.
     */
    distinct?: User_profilesScalarFieldEnum | User_profilesScalarFieldEnum[]
  }

  /**
   * user_profiles findFirstOrThrow
   */
  export type user_profilesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * Filter, which user_profiles to fetch.
     */
    where?: user_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profilesOrderByWithRelationInput | user_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_profiles.
     */
    cursor?: user_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_profiles.
     */
    distinct?: User_profilesScalarFieldEnum | User_profilesScalarFieldEnum[]
  }

  /**
   * user_profiles findMany
   */
  export type user_profilesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * Filter, which user_profiles to fetch.
     */
    where?: user_profilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_profiles to fetch.
     */
    orderBy?: user_profilesOrderByWithRelationInput | user_profilesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_profiles.
     */
    cursor?: user_profilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_profiles.
     */
    skip?: number
    distinct?: User_profilesScalarFieldEnum | User_profilesScalarFieldEnum[]
  }

  /**
   * user_profiles create
   */
  export type user_profilesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * The data needed to create a user_profiles.
     */
    data: XOR<user_profilesCreateInput, user_profilesUncheckedCreateInput>
  }

  /**
   * user_profiles createMany
   */
  export type user_profilesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_profiles.
     */
    data: user_profilesCreateManyInput | user_profilesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_profiles createManyAndReturn
   */
  export type user_profilesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * The data used to create many user_profiles.
     */
    data: user_profilesCreateManyInput | user_profilesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_profiles update
   */
  export type user_profilesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * The data needed to update a user_profiles.
     */
    data: XOR<user_profilesUpdateInput, user_profilesUncheckedUpdateInput>
    /**
     * Choose, which user_profiles to update.
     */
    where: user_profilesWhereUniqueInput
  }

  /**
   * user_profiles updateMany
   */
  export type user_profilesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_profiles.
     */
    data: XOR<user_profilesUpdateManyMutationInput, user_profilesUncheckedUpdateManyInput>
    /**
     * Filter which user_profiles to update
     */
    where?: user_profilesWhereInput
    /**
     * Limit how many user_profiles to update.
     */
    limit?: number
  }

  /**
   * user_profiles updateManyAndReturn
   */
  export type user_profilesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * The data used to update user_profiles.
     */
    data: XOR<user_profilesUpdateManyMutationInput, user_profilesUncheckedUpdateManyInput>
    /**
     * Filter which user_profiles to update
     */
    where?: user_profilesWhereInput
    /**
     * Limit how many user_profiles to update.
     */
    limit?: number
  }

  /**
   * user_profiles upsert
   */
  export type user_profilesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * The filter to search for the user_profiles to update in case it exists.
     */
    where: user_profilesWhereUniqueInput
    /**
     * In case the user_profiles found by the `where` argument doesn't exist, create a new user_profiles with this data.
     */
    create: XOR<user_profilesCreateInput, user_profilesUncheckedCreateInput>
    /**
     * In case the user_profiles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_profilesUpdateInput, user_profilesUncheckedUpdateInput>
  }

  /**
   * user_profiles delete
   */
  export type user_profilesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
    /**
     * Filter which user_profiles to delete.
     */
    where: user_profilesWhereUniqueInput
  }

  /**
   * user_profiles deleteMany
   */
  export type user_profilesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_profiles to delete
     */
    where?: user_profilesWhereInput
    /**
     * Limit how many user_profiles to delete.
     */
    limit?: number
  }

  /**
   * user_profiles without action
   */
  export type user_profilesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_profiles
     */
    select?: user_profilesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_profiles
     */
    omit?: user_profilesOmit<ExtArgs> | null
  }


  /**
   * Model user_roles
   */

  export type AggregateUser_roles = {
    _count: User_rolesCountAggregateOutputType | null
    _min: User_rolesMinAggregateOutputType | null
    _max: User_rolesMaxAggregateOutputType | null
  }

  export type User_rolesMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    role: string | null
    created_at: Date | null
  }

  export type User_rolesMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    role: string | null
    created_at: Date | null
  }

  export type User_rolesCountAggregateOutputType = {
    id: number
    user_id: number
    role: number
    created_at: number
    _all: number
  }


  export type User_rolesMinAggregateInputType = {
    id?: true
    user_id?: true
    role?: true
    created_at?: true
  }

  export type User_rolesMaxAggregateInputType = {
    id?: true
    user_id?: true
    role?: true
    created_at?: true
  }

  export type User_rolesCountAggregateInputType = {
    id?: true
    user_id?: true
    role?: true
    created_at?: true
    _all?: true
  }

  export type User_rolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_roles to aggregate.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_roles
    **/
    _count?: true | User_rolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_rolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_rolesMaxAggregateInputType
  }

  export type GetUser_rolesAggregateType<T extends User_rolesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_roles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_roles[P]>
      : GetScalarType<T[P], AggregateUser_roles[P]>
  }




  export type user_rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_rolesWhereInput
    orderBy?: user_rolesOrderByWithAggregationInput | user_rolesOrderByWithAggregationInput[]
    by: User_rolesScalarFieldEnum[] | User_rolesScalarFieldEnum
    having?: user_rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_rolesCountAggregateInputType | true
    _min?: User_rolesMinAggregateInputType
    _max?: User_rolesMaxAggregateInputType
  }

  export type User_rolesGroupByOutputType = {
    id: string
    user_id: string
    role: string
    created_at: Date
    _count: User_rolesCountAggregateOutputType | null
    _min: User_rolesMinAggregateOutputType | null
    _max: User_rolesMaxAggregateOutputType | null
  }

  type GetUser_rolesGroupByPayload<T extends user_rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_rolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_rolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_rolesGroupByOutputType[P]>
            : GetScalarType<T[P], User_rolesGroupByOutputType[P]>
        }
      >
    >


  export type user_rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["user_roles"]>

  export type user_rolesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["user_roles"]>

  export type user_rolesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["user_roles"]>

  export type user_rolesSelectScalar = {
    id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
  }

  export type user_rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "role" | "created_at", ExtArgs["result"]["user_roles"]>

  export type $user_rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_roles"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      role: string
      created_at: Date
    }, ExtArgs["result"]["user_roles"]>
    composites: {}
  }

  type user_rolesGetPayload<S extends boolean | null | undefined | user_rolesDefaultArgs> = $Result.GetResult<Prisma.$user_rolesPayload, S>

  type user_rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_rolesCountAggregateInputType | true
    }

  export interface user_rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_roles'], meta: { name: 'user_roles' } }
    /**
     * Find zero or one User_roles that matches the filter.
     * @param {user_rolesFindUniqueArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_rolesFindUniqueArgs>(args: SelectSubset<T, user_rolesFindUniqueArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_rolesFindUniqueOrThrowArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, user_rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindFirstArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_rolesFindFirstArgs>(args?: SelectSubset<T, user_rolesFindFirstArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindFirstOrThrowArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, user_rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_roles
     * const user_roles = await prisma.user_roles.findMany()
     * 
     * // Get first 10 User_roles
     * const user_roles = await prisma.user_roles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_rolesWithIdOnly = await prisma.user_roles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_rolesFindManyArgs>(args?: SelectSubset<T, user_rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_roles.
     * @param {user_rolesCreateArgs} args - Arguments to create a User_roles.
     * @example
     * // Create one User_roles
     * const User_roles = await prisma.user_roles.create({
     *   data: {
     *     // ... data to create a User_roles
     *   }
     * })
     * 
     */
    create<T extends user_rolesCreateArgs>(args: SelectSubset<T, user_rolesCreateArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_roles.
     * @param {user_rolesCreateManyArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_roles = await prisma.user_roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_rolesCreateManyArgs>(args?: SelectSubset<T, user_rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_roles and returns the data saved in the database.
     * @param {user_rolesCreateManyAndReturnArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_roles = await prisma.user_roles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_roles and only return the `id`
     * const user_rolesWithIdOnly = await prisma.user_roles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_rolesCreateManyAndReturnArgs>(args?: SelectSubset<T, user_rolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_roles.
     * @param {user_rolesDeleteArgs} args - Arguments to delete one User_roles.
     * @example
     * // Delete one User_roles
     * const User_roles = await prisma.user_roles.delete({
     *   where: {
     *     // ... filter to delete one User_roles
     *   }
     * })
     * 
     */
    delete<T extends user_rolesDeleteArgs>(args: SelectSubset<T, user_rolesDeleteArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_roles.
     * @param {user_rolesUpdateArgs} args - Arguments to update one User_roles.
     * @example
     * // Update one User_roles
     * const user_roles = await prisma.user_roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_rolesUpdateArgs>(args: SelectSubset<T, user_rolesUpdateArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_roles.
     * @param {user_rolesDeleteManyArgs} args - Arguments to filter User_roles to delete.
     * @example
     * // Delete a few User_roles
     * const { count } = await prisma.user_roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_rolesDeleteManyArgs>(args?: SelectSubset<T, user_rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_roles
     * const user_roles = await prisma.user_roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_rolesUpdateManyArgs>(args: SelectSubset<T, user_rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles and returns the data updated in the database.
     * @param {user_rolesUpdateManyAndReturnArgs} args - Arguments to update many User_roles.
     * @example
     * // Update many User_roles
     * const user_roles = await prisma.user_roles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_roles and only return the `id`
     * const user_rolesWithIdOnly = await prisma.user_roles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_rolesUpdateManyAndReturnArgs>(args: SelectSubset<T, user_rolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_roles.
     * @param {user_rolesUpsertArgs} args - Arguments to update or create a User_roles.
     * @example
     * // Update or create a User_roles
     * const user_roles = await prisma.user_roles.upsert({
     *   create: {
     *     // ... data to create a User_roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_roles we want to update
     *   }
     * })
     */
    upsert<T extends user_rolesUpsertArgs>(args: SelectSubset<T, user_rolesUpsertArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesCountArgs} args - Arguments to filter User_roles to count.
     * @example
     * // Count the number of User_roles
     * const count = await prisma.user_roles.count({
     *   where: {
     *     // ... the filter for the User_roles we want to count
     *   }
     * })
    **/
    count<T extends user_rolesCountArgs>(
      args?: Subset<T, user_rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_rolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_rolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_rolesAggregateArgs>(args: Subset<T, User_rolesAggregateArgs>): Prisma.PrismaPromise<GetUser_rolesAggregateType<T>>

    /**
     * Group by User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_rolesGroupByArgs['orderBy'] }
        : { orderBy?: user_rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_rolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_roles model
   */
  readonly fields: user_rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_roles model
   */
  interface user_rolesFieldRefs {
    readonly id: FieldRef<"user_roles", 'String'>
    readonly user_id: FieldRef<"user_roles", 'String'>
    readonly role: FieldRef<"user_roles", 'String'>
    readonly created_at: FieldRef<"user_roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_roles findUnique
   */
  export type user_rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles findUniqueOrThrow
   */
  export type user_rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles findFirst
   */
  export type user_rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_roles.
     */
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles findFirstOrThrow
   */
  export type user_rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_roles.
     */
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles findMany
   */
  export type user_rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles create
   */
  export type user_rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * The data needed to create a user_roles.
     */
    data?: XOR<user_rolesCreateInput, user_rolesUncheckedCreateInput>
  }

  /**
   * user_roles createMany
   */
  export type user_rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_roles.
     */
    data: user_rolesCreateManyInput | user_rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_roles createManyAndReturn
   */
  export type user_rolesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * The data used to create many user_roles.
     */
    data: user_rolesCreateManyInput | user_rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_roles update
   */
  export type user_rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * The data needed to update a user_roles.
     */
    data: XOR<user_rolesUpdateInput, user_rolesUncheckedUpdateInput>
    /**
     * Choose, which user_roles to update.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles updateMany
   */
  export type user_rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_roles.
     */
    data: XOR<user_rolesUpdateManyMutationInput, user_rolesUncheckedUpdateManyInput>
    /**
     * Filter which user_roles to update
     */
    where?: user_rolesWhereInput
    /**
     * Limit how many user_roles to update.
     */
    limit?: number
  }

  /**
   * user_roles updateManyAndReturn
   */
  export type user_rolesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * The data used to update user_roles.
     */
    data: XOR<user_rolesUpdateManyMutationInput, user_rolesUncheckedUpdateManyInput>
    /**
     * Filter which user_roles to update
     */
    where?: user_rolesWhereInput
    /**
     * Limit how many user_roles to update.
     */
    limit?: number
  }

  /**
   * user_roles upsert
   */
  export type user_rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * The filter to search for the user_roles to update in case it exists.
     */
    where: user_rolesWhereUniqueInput
    /**
     * In case the user_roles found by the `where` argument doesn't exist, create a new user_roles with this data.
     */
    create: XOR<user_rolesCreateInput, user_rolesUncheckedCreateInput>
    /**
     * In case the user_roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_rolesUpdateInput, user_rolesUncheckedUpdateInput>
  }

  /**
   * user_roles delete
   */
  export type user_rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Filter which user_roles to delete.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles deleteMany
   */
  export type user_rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_roles to delete
     */
    where?: user_rolesWhereInput
    /**
     * Limit how many user_roles to delete.
     */
    limit?: number
  }

  /**
   * user_roles without action
   */
  export type user_rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
  }


  /**
   * Model worker_passcodes
   */

  export type AggregateWorker_passcodes = {
    _count: Worker_passcodesCountAggregateOutputType | null
    _min: Worker_passcodesMinAggregateOutputType | null
    _max: Worker_passcodesMaxAggregateOutputType | null
  }

  export type Worker_passcodesMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    worker_name: string | null
    role: string | null
    passcode: string | null
    is_active: boolean | null
    last_login_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type Worker_passcodesMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    worker_name: string | null
    role: string | null
    passcode: string | null
    is_active: boolean | null
    last_login_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    created_by: string | null
    updated_by: string | null
  }

  export type Worker_passcodesCountAggregateOutputType = {
    id: number
    user_id: number
    worker_name: number
    role: number
    passcode: number
    is_active: number
    last_login_at: number
    created_at: number
    updated_at: number
    created_by: number
    updated_by: number
    _all: number
  }


  export type Worker_passcodesMinAggregateInputType = {
    id?: true
    user_id?: true
    worker_name?: true
    role?: true
    passcode?: true
    is_active?: true
    last_login_at?: true
    created_at?: true
    updated_at?: true
    created_by?: true
    updated_by?: true
  }

  export type Worker_passcodesMaxAggregateInputType = {
    id?: true
    user_id?: true
    worker_name?: true
    role?: true
    passcode?: true
    is_active?: true
    last_login_at?: true
    created_at?: true
    updated_at?: true
    created_by?: true
    updated_by?: true
  }

  export type Worker_passcodesCountAggregateInputType = {
    id?: true
    user_id?: true
    worker_name?: true
    role?: true
    passcode?: true
    is_active?: true
    last_login_at?: true
    created_at?: true
    updated_at?: true
    created_by?: true
    updated_by?: true
    _all?: true
  }

  export type Worker_passcodesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which worker_passcodes to aggregate.
     */
    where?: worker_passcodesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of worker_passcodes to fetch.
     */
    orderBy?: worker_passcodesOrderByWithRelationInput | worker_passcodesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: worker_passcodesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` worker_passcodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` worker_passcodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned worker_passcodes
    **/
    _count?: true | Worker_passcodesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Worker_passcodesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Worker_passcodesMaxAggregateInputType
  }

  export type GetWorker_passcodesAggregateType<T extends Worker_passcodesAggregateArgs> = {
        [P in keyof T & keyof AggregateWorker_passcodes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorker_passcodes[P]>
      : GetScalarType<T[P], AggregateWorker_passcodes[P]>
  }




  export type worker_passcodesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: worker_passcodesWhereInput
    orderBy?: worker_passcodesOrderByWithAggregationInput | worker_passcodesOrderByWithAggregationInput[]
    by: Worker_passcodesScalarFieldEnum[] | Worker_passcodesScalarFieldEnum
    having?: worker_passcodesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Worker_passcodesCountAggregateInputType | true
    _min?: Worker_passcodesMinAggregateInputType
    _max?: Worker_passcodesMaxAggregateInputType
  }

  export type Worker_passcodesGroupByOutputType = {
    id: string
    user_id: string
    worker_name: string
    role: string
    passcode: string
    is_active: boolean | null
    last_login_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    created_by: string | null
    updated_by: string | null
    _count: Worker_passcodesCountAggregateOutputType | null
    _min: Worker_passcodesMinAggregateOutputType | null
    _max: Worker_passcodesMaxAggregateOutputType | null
  }

  type GetWorker_passcodesGroupByPayload<T extends worker_passcodesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Worker_passcodesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Worker_passcodesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Worker_passcodesGroupByOutputType[P]>
            : GetScalarType<T[P], Worker_passcodesGroupByOutputType[P]>
        }
      >
    >


  export type worker_passcodesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    worker_name?: boolean
    role?: boolean
    passcode?: boolean
    is_active?: boolean
    last_login_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["worker_passcodes"]>

  export type worker_passcodesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    worker_name?: boolean
    role?: boolean
    passcode?: boolean
    is_active?: boolean
    last_login_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["worker_passcodes"]>

  export type worker_passcodesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    worker_name?: boolean
    role?: boolean
    passcode?: boolean
    is_active?: boolean
    last_login_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["worker_passcodes"]>

  export type worker_passcodesSelectScalar = {
    id?: boolean
    user_id?: boolean
    worker_name?: boolean
    role?: boolean
    passcode?: boolean
    is_active?: boolean
    last_login_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_by?: boolean
    updated_by?: boolean
  }

  export type worker_passcodesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "worker_name" | "role" | "passcode" | "is_active" | "last_login_at" | "created_at" | "updated_at" | "created_by" | "updated_by", ExtArgs["result"]["worker_passcodes"]>

  export type $worker_passcodesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "worker_passcodes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      worker_name: string
      role: string
      passcode: string
      is_active: boolean | null
      last_login_at: Date | null
      created_at: Date | null
      updated_at: Date | null
      created_by: string | null
      updated_by: string | null
    }, ExtArgs["result"]["worker_passcodes"]>
    composites: {}
  }

  type worker_passcodesGetPayload<S extends boolean | null | undefined | worker_passcodesDefaultArgs> = $Result.GetResult<Prisma.$worker_passcodesPayload, S>

  type worker_passcodesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<worker_passcodesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Worker_passcodesCountAggregateInputType | true
    }

  export interface worker_passcodesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['worker_passcodes'], meta: { name: 'worker_passcodes' } }
    /**
     * Find zero or one Worker_passcodes that matches the filter.
     * @param {worker_passcodesFindUniqueArgs} args - Arguments to find a Worker_passcodes
     * @example
     * // Get one Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends worker_passcodesFindUniqueArgs>(args: SelectSubset<T, worker_passcodesFindUniqueArgs<ExtArgs>>): Prisma__worker_passcodesClient<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Worker_passcodes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {worker_passcodesFindUniqueOrThrowArgs} args - Arguments to find a Worker_passcodes
     * @example
     * // Get one Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends worker_passcodesFindUniqueOrThrowArgs>(args: SelectSubset<T, worker_passcodesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__worker_passcodesClient<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Worker_passcodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {worker_passcodesFindFirstArgs} args - Arguments to find a Worker_passcodes
     * @example
     * // Get one Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends worker_passcodesFindFirstArgs>(args?: SelectSubset<T, worker_passcodesFindFirstArgs<ExtArgs>>): Prisma__worker_passcodesClient<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Worker_passcodes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {worker_passcodesFindFirstOrThrowArgs} args - Arguments to find a Worker_passcodes
     * @example
     * // Get one Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends worker_passcodesFindFirstOrThrowArgs>(args?: SelectSubset<T, worker_passcodesFindFirstOrThrowArgs<ExtArgs>>): Prisma__worker_passcodesClient<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Worker_passcodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {worker_passcodesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.findMany()
     * 
     * // Get first 10 Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const worker_passcodesWithIdOnly = await prisma.worker_passcodes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends worker_passcodesFindManyArgs>(args?: SelectSubset<T, worker_passcodesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Worker_passcodes.
     * @param {worker_passcodesCreateArgs} args - Arguments to create a Worker_passcodes.
     * @example
     * // Create one Worker_passcodes
     * const Worker_passcodes = await prisma.worker_passcodes.create({
     *   data: {
     *     // ... data to create a Worker_passcodes
     *   }
     * })
     * 
     */
    create<T extends worker_passcodesCreateArgs>(args: SelectSubset<T, worker_passcodesCreateArgs<ExtArgs>>): Prisma__worker_passcodesClient<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Worker_passcodes.
     * @param {worker_passcodesCreateManyArgs} args - Arguments to create many Worker_passcodes.
     * @example
     * // Create many Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends worker_passcodesCreateManyArgs>(args?: SelectSubset<T, worker_passcodesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Worker_passcodes and returns the data saved in the database.
     * @param {worker_passcodesCreateManyAndReturnArgs} args - Arguments to create many Worker_passcodes.
     * @example
     * // Create many Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Worker_passcodes and only return the `id`
     * const worker_passcodesWithIdOnly = await prisma.worker_passcodes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends worker_passcodesCreateManyAndReturnArgs>(args?: SelectSubset<T, worker_passcodesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Worker_passcodes.
     * @param {worker_passcodesDeleteArgs} args - Arguments to delete one Worker_passcodes.
     * @example
     * // Delete one Worker_passcodes
     * const Worker_passcodes = await prisma.worker_passcodes.delete({
     *   where: {
     *     // ... filter to delete one Worker_passcodes
     *   }
     * })
     * 
     */
    delete<T extends worker_passcodesDeleteArgs>(args: SelectSubset<T, worker_passcodesDeleteArgs<ExtArgs>>): Prisma__worker_passcodesClient<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Worker_passcodes.
     * @param {worker_passcodesUpdateArgs} args - Arguments to update one Worker_passcodes.
     * @example
     * // Update one Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends worker_passcodesUpdateArgs>(args: SelectSubset<T, worker_passcodesUpdateArgs<ExtArgs>>): Prisma__worker_passcodesClient<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Worker_passcodes.
     * @param {worker_passcodesDeleteManyArgs} args - Arguments to filter Worker_passcodes to delete.
     * @example
     * // Delete a few Worker_passcodes
     * const { count } = await prisma.worker_passcodes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends worker_passcodesDeleteManyArgs>(args?: SelectSubset<T, worker_passcodesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Worker_passcodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {worker_passcodesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends worker_passcodesUpdateManyArgs>(args: SelectSubset<T, worker_passcodesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Worker_passcodes and returns the data updated in the database.
     * @param {worker_passcodesUpdateManyAndReturnArgs} args - Arguments to update many Worker_passcodes.
     * @example
     * // Update many Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Worker_passcodes and only return the `id`
     * const worker_passcodesWithIdOnly = await prisma.worker_passcodes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends worker_passcodesUpdateManyAndReturnArgs>(args: SelectSubset<T, worker_passcodesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Worker_passcodes.
     * @param {worker_passcodesUpsertArgs} args - Arguments to update or create a Worker_passcodes.
     * @example
     * // Update or create a Worker_passcodes
     * const worker_passcodes = await prisma.worker_passcodes.upsert({
     *   create: {
     *     // ... data to create a Worker_passcodes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Worker_passcodes we want to update
     *   }
     * })
     */
    upsert<T extends worker_passcodesUpsertArgs>(args: SelectSubset<T, worker_passcodesUpsertArgs<ExtArgs>>): Prisma__worker_passcodesClient<$Result.GetResult<Prisma.$worker_passcodesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Worker_passcodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {worker_passcodesCountArgs} args - Arguments to filter Worker_passcodes to count.
     * @example
     * // Count the number of Worker_passcodes
     * const count = await prisma.worker_passcodes.count({
     *   where: {
     *     // ... the filter for the Worker_passcodes we want to count
     *   }
     * })
    **/
    count<T extends worker_passcodesCountArgs>(
      args?: Subset<T, worker_passcodesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Worker_passcodesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Worker_passcodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Worker_passcodesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Worker_passcodesAggregateArgs>(args: Subset<T, Worker_passcodesAggregateArgs>): Prisma.PrismaPromise<GetWorker_passcodesAggregateType<T>>

    /**
     * Group by Worker_passcodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {worker_passcodesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends worker_passcodesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: worker_passcodesGroupByArgs['orderBy'] }
        : { orderBy?: worker_passcodesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, worker_passcodesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorker_passcodesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the worker_passcodes model
   */
  readonly fields: worker_passcodesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for worker_passcodes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__worker_passcodesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the worker_passcodes model
   */
  interface worker_passcodesFieldRefs {
    readonly id: FieldRef<"worker_passcodes", 'String'>
    readonly user_id: FieldRef<"worker_passcodes", 'String'>
    readonly worker_name: FieldRef<"worker_passcodes", 'String'>
    readonly role: FieldRef<"worker_passcodes", 'String'>
    readonly passcode: FieldRef<"worker_passcodes", 'String'>
    readonly is_active: FieldRef<"worker_passcodes", 'Boolean'>
    readonly last_login_at: FieldRef<"worker_passcodes", 'DateTime'>
    readonly created_at: FieldRef<"worker_passcodes", 'DateTime'>
    readonly updated_at: FieldRef<"worker_passcodes", 'DateTime'>
    readonly created_by: FieldRef<"worker_passcodes", 'String'>
    readonly updated_by: FieldRef<"worker_passcodes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * worker_passcodes findUnique
   */
  export type worker_passcodesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * Filter, which worker_passcodes to fetch.
     */
    where: worker_passcodesWhereUniqueInput
  }

  /**
   * worker_passcodes findUniqueOrThrow
   */
  export type worker_passcodesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * Filter, which worker_passcodes to fetch.
     */
    where: worker_passcodesWhereUniqueInput
  }

  /**
   * worker_passcodes findFirst
   */
  export type worker_passcodesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * Filter, which worker_passcodes to fetch.
     */
    where?: worker_passcodesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of worker_passcodes to fetch.
     */
    orderBy?: worker_passcodesOrderByWithRelationInput | worker_passcodesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for worker_passcodes.
     */
    cursor?: worker_passcodesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` worker_passcodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` worker_passcodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of worker_passcodes.
     */
    distinct?: Worker_passcodesScalarFieldEnum | Worker_passcodesScalarFieldEnum[]
  }

  /**
   * worker_passcodes findFirstOrThrow
   */
  export type worker_passcodesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * Filter, which worker_passcodes to fetch.
     */
    where?: worker_passcodesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of worker_passcodes to fetch.
     */
    orderBy?: worker_passcodesOrderByWithRelationInput | worker_passcodesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for worker_passcodes.
     */
    cursor?: worker_passcodesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` worker_passcodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` worker_passcodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of worker_passcodes.
     */
    distinct?: Worker_passcodesScalarFieldEnum | Worker_passcodesScalarFieldEnum[]
  }

  /**
   * worker_passcodes findMany
   */
  export type worker_passcodesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * Filter, which worker_passcodes to fetch.
     */
    where?: worker_passcodesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of worker_passcodes to fetch.
     */
    orderBy?: worker_passcodesOrderByWithRelationInput | worker_passcodesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing worker_passcodes.
     */
    cursor?: worker_passcodesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` worker_passcodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` worker_passcodes.
     */
    skip?: number
    distinct?: Worker_passcodesScalarFieldEnum | Worker_passcodesScalarFieldEnum[]
  }

  /**
   * worker_passcodes create
   */
  export type worker_passcodesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * The data needed to create a worker_passcodes.
     */
    data: XOR<worker_passcodesCreateInput, worker_passcodesUncheckedCreateInput>
  }

  /**
   * worker_passcodes createMany
   */
  export type worker_passcodesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many worker_passcodes.
     */
    data: worker_passcodesCreateManyInput | worker_passcodesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * worker_passcodes createManyAndReturn
   */
  export type worker_passcodesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * The data used to create many worker_passcodes.
     */
    data: worker_passcodesCreateManyInput | worker_passcodesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * worker_passcodes update
   */
  export type worker_passcodesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * The data needed to update a worker_passcodes.
     */
    data: XOR<worker_passcodesUpdateInput, worker_passcodesUncheckedUpdateInput>
    /**
     * Choose, which worker_passcodes to update.
     */
    where: worker_passcodesWhereUniqueInput
  }

  /**
   * worker_passcodes updateMany
   */
  export type worker_passcodesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update worker_passcodes.
     */
    data: XOR<worker_passcodesUpdateManyMutationInput, worker_passcodesUncheckedUpdateManyInput>
    /**
     * Filter which worker_passcodes to update
     */
    where?: worker_passcodesWhereInput
    /**
     * Limit how many worker_passcodes to update.
     */
    limit?: number
  }

  /**
   * worker_passcodes updateManyAndReturn
   */
  export type worker_passcodesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * The data used to update worker_passcodes.
     */
    data: XOR<worker_passcodesUpdateManyMutationInput, worker_passcodesUncheckedUpdateManyInput>
    /**
     * Filter which worker_passcodes to update
     */
    where?: worker_passcodesWhereInput
    /**
     * Limit how many worker_passcodes to update.
     */
    limit?: number
  }

  /**
   * worker_passcodes upsert
   */
  export type worker_passcodesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * The filter to search for the worker_passcodes to update in case it exists.
     */
    where: worker_passcodesWhereUniqueInput
    /**
     * In case the worker_passcodes found by the `where` argument doesn't exist, create a new worker_passcodes with this data.
     */
    create: XOR<worker_passcodesCreateInput, worker_passcodesUncheckedCreateInput>
    /**
     * In case the worker_passcodes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<worker_passcodesUpdateInput, worker_passcodesUncheckedUpdateInput>
  }

  /**
   * worker_passcodes delete
   */
  export type worker_passcodesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
    /**
     * Filter which worker_passcodes to delete.
     */
    where: worker_passcodesWhereUniqueInput
  }

  /**
   * worker_passcodes deleteMany
   */
  export type worker_passcodesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which worker_passcodes to delete
     */
    where?: worker_passcodesWhereInput
    /**
     * Limit how many worker_passcodes to delete.
     */
    limit?: number
  }

  /**
   * worker_passcodes without action
   */
  export type worker_passcodesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the worker_passcodes
     */
    select?: worker_passcodesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the worker_passcodes
     */
    omit?: worker_passcodesOmit<ExtArgs> | null
  }


  /**
   * Model order_detail_stock_activity
   */

  export type AggregateOrder_detail_stock_activity = {
    _count: Order_detail_stock_activityCountAggregateOutputType | null
    _avg: Order_detail_stock_activityAvgAggregateOutputType | null
    _sum: Order_detail_stock_activitySumAggregateOutputType | null
    _min: Order_detail_stock_activityMinAggregateOutputType | null
    _max: Order_detail_stock_activityMaxAggregateOutputType | null
  }

  export type Order_detail_stock_activityAvgAggregateOutputType = {
    id: number | null
    order_detail_id: number | null
    stock_activity_id: number | null
  }

  export type Order_detail_stock_activitySumAggregateOutputType = {
    id: number | null
    order_detail_id: number | null
    stock_activity_id: number | null
  }

  export type Order_detail_stock_activityMinAggregateOutputType = {
    id: number | null
    order_detail_id: number | null
    stock_activity_id: number | null
    created_at: Date | null
  }

  export type Order_detail_stock_activityMaxAggregateOutputType = {
    id: number | null
    order_detail_id: number | null
    stock_activity_id: number | null
    created_at: Date | null
  }

  export type Order_detail_stock_activityCountAggregateOutputType = {
    id: number
    order_detail_id: number
    stock_activity_id: number
    created_at: number
    _all: number
  }


  export type Order_detail_stock_activityAvgAggregateInputType = {
    id?: true
    order_detail_id?: true
    stock_activity_id?: true
  }

  export type Order_detail_stock_activitySumAggregateInputType = {
    id?: true
    order_detail_id?: true
    stock_activity_id?: true
  }

  export type Order_detail_stock_activityMinAggregateInputType = {
    id?: true
    order_detail_id?: true
    stock_activity_id?: true
    created_at?: true
  }

  export type Order_detail_stock_activityMaxAggregateInputType = {
    id?: true
    order_detail_id?: true
    stock_activity_id?: true
    created_at?: true
  }

  export type Order_detail_stock_activityCountAggregateInputType = {
    id?: true
    order_detail_id?: true
    stock_activity_id?: true
    created_at?: true
    _all?: true
  }

  export type Order_detail_stock_activityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_detail_stock_activity to aggregate.
     */
    where?: order_detail_stock_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_detail_stock_activities to fetch.
     */
    orderBy?: order_detail_stock_activityOrderByWithRelationInput | order_detail_stock_activityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: order_detail_stock_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_detail_stock_activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_detail_stock_activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned order_detail_stock_activities
    **/
    _count?: true | Order_detail_stock_activityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Order_detail_stock_activityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Order_detail_stock_activitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Order_detail_stock_activityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Order_detail_stock_activityMaxAggregateInputType
  }

  export type GetOrder_detail_stock_activityAggregateType<T extends Order_detail_stock_activityAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder_detail_stock_activity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder_detail_stock_activity[P]>
      : GetScalarType<T[P], AggregateOrder_detail_stock_activity[P]>
  }




  export type order_detail_stock_activityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detail_stock_activityWhereInput
    orderBy?: order_detail_stock_activityOrderByWithAggregationInput | order_detail_stock_activityOrderByWithAggregationInput[]
    by: Order_detail_stock_activityScalarFieldEnum[] | Order_detail_stock_activityScalarFieldEnum
    having?: order_detail_stock_activityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Order_detail_stock_activityCountAggregateInputType | true
    _avg?: Order_detail_stock_activityAvgAggregateInputType
    _sum?: Order_detail_stock_activitySumAggregateInputType
    _min?: Order_detail_stock_activityMinAggregateInputType
    _max?: Order_detail_stock_activityMaxAggregateInputType
  }

  export type Order_detail_stock_activityGroupByOutputType = {
    id: number
    order_detail_id: number
    stock_activity_id: number
    created_at: Date | null
    _count: Order_detail_stock_activityCountAggregateOutputType | null
    _avg: Order_detail_stock_activityAvgAggregateOutputType | null
    _sum: Order_detail_stock_activitySumAggregateOutputType | null
    _min: Order_detail_stock_activityMinAggregateOutputType | null
    _max: Order_detail_stock_activityMaxAggregateOutputType | null
  }

  type GetOrder_detail_stock_activityGroupByPayload<T extends order_detail_stock_activityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Order_detail_stock_activityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Order_detail_stock_activityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Order_detail_stock_activityGroupByOutputType[P]>
            : GetScalarType<T[P], Order_detail_stock_activityGroupByOutputType[P]>
        }
      >
    >


  export type order_detail_stock_activitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_detail_id?: boolean
    stock_activity_id?: boolean
    created_at?: boolean
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
    stock_activity?: boolean | stock_activityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_detail_stock_activity"]>

  export type order_detail_stock_activitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_detail_id?: boolean
    stock_activity_id?: boolean
    created_at?: boolean
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
    stock_activity?: boolean | stock_activityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_detail_stock_activity"]>

  export type order_detail_stock_activitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_detail_id?: boolean
    stock_activity_id?: boolean
    created_at?: boolean
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
    stock_activity?: boolean | stock_activityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_detail_stock_activity"]>

  export type order_detail_stock_activitySelectScalar = {
    id?: boolean
    order_detail_id?: boolean
    stock_activity_id?: boolean
    created_at?: boolean
  }

  export type order_detail_stock_activityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_detail_id" | "stock_activity_id" | "created_at", ExtArgs["result"]["order_detail_stock_activity"]>
  export type order_detail_stock_activityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
    stock_activity?: boolean | stock_activityDefaultArgs<ExtArgs>
  }
  export type order_detail_stock_activityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
    stock_activity?: boolean | stock_activityDefaultArgs<ExtArgs>
  }
  export type order_detail_stock_activityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail?: boolean | order_detailDefaultArgs<ExtArgs>
    stock_activity?: boolean | stock_activityDefaultArgs<ExtArgs>
  }

  export type $order_detail_stock_activityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "order_detail_stock_activity"
    objects: {
      order_detail: Prisma.$order_detailPayload<ExtArgs>
      stock_activity: Prisma.$stock_activityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      order_detail_id: number
      stock_activity_id: number
      created_at: Date | null
    }, ExtArgs["result"]["order_detail_stock_activity"]>
    composites: {}
  }

  type order_detail_stock_activityGetPayload<S extends boolean | null | undefined | order_detail_stock_activityDefaultArgs> = $Result.GetResult<Prisma.$order_detail_stock_activityPayload, S>

  type order_detail_stock_activityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<order_detail_stock_activityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Order_detail_stock_activityCountAggregateInputType | true
    }

  export interface order_detail_stock_activityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_detail_stock_activity'], meta: { name: 'order_detail_stock_activity' } }
    /**
     * Find zero or one Order_detail_stock_activity that matches the filter.
     * @param {order_detail_stock_activityFindUniqueArgs} args - Arguments to find a Order_detail_stock_activity
     * @example
     * // Get one Order_detail_stock_activity
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends order_detail_stock_activityFindUniqueArgs>(args: SelectSubset<T, order_detail_stock_activityFindUniqueArgs<ExtArgs>>): Prisma__order_detail_stock_activityClient<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order_detail_stock_activity that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {order_detail_stock_activityFindUniqueOrThrowArgs} args - Arguments to find a Order_detail_stock_activity
     * @example
     * // Get one Order_detail_stock_activity
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends order_detail_stock_activityFindUniqueOrThrowArgs>(args: SelectSubset<T, order_detail_stock_activityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__order_detail_stock_activityClient<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_detail_stock_activity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detail_stock_activityFindFirstArgs} args - Arguments to find a Order_detail_stock_activity
     * @example
     * // Get one Order_detail_stock_activity
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends order_detail_stock_activityFindFirstArgs>(args?: SelectSubset<T, order_detail_stock_activityFindFirstArgs<ExtArgs>>): Prisma__order_detail_stock_activityClient<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_detail_stock_activity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detail_stock_activityFindFirstOrThrowArgs} args - Arguments to find a Order_detail_stock_activity
     * @example
     * // Get one Order_detail_stock_activity
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends order_detail_stock_activityFindFirstOrThrowArgs>(args?: SelectSubset<T, order_detail_stock_activityFindFirstOrThrowArgs<ExtArgs>>): Prisma__order_detail_stock_activityClient<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Order_detail_stock_activities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detail_stock_activityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Order_detail_stock_activities
     * const order_detail_stock_activities = await prisma.order_detail_stock_activity.findMany()
     * 
     * // Get first 10 Order_detail_stock_activities
     * const order_detail_stock_activities = await prisma.order_detail_stock_activity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const order_detail_stock_activityWithIdOnly = await prisma.order_detail_stock_activity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends order_detail_stock_activityFindManyArgs>(args?: SelectSubset<T, order_detail_stock_activityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order_detail_stock_activity.
     * @param {order_detail_stock_activityCreateArgs} args - Arguments to create a Order_detail_stock_activity.
     * @example
     * // Create one Order_detail_stock_activity
     * const Order_detail_stock_activity = await prisma.order_detail_stock_activity.create({
     *   data: {
     *     // ... data to create a Order_detail_stock_activity
     *   }
     * })
     * 
     */
    create<T extends order_detail_stock_activityCreateArgs>(args: SelectSubset<T, order_detail_stock_activityCreateArgs<ExtArgs>>): Prisma__order_detail_stock_activityClient<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Order_detail_stock_activities.
     * @param {order_detail_stock_activityCreateManyArgs} args - Arguments to create many Order_detail_stock_activities.
     * @example
     * // Create many Order_detail_stock_activities
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends order_detail_stock_activityCreateManyArgs>(args?: SelectSubset<T, order_detail_stock_activityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Order_detail_stock_activities and returns the data saved in the database.
     * @param {order_detail_stock_activityCreateManyAndReturnArgs} args - Arguments to create many Order_detail_stock_activities.
     * @example
     * // Create many Order_detail_stock_activities
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Order_detail_stock_activities and only return the `id`
     * const order_detail_stock_activityWithIdOnly = await prisma.order_detail_stock_activity.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends order_detail_stock_activityCreateManyAndReturnArgs>(args?: SelectSubset<T, order_detail_stock_activityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order_detail_stock_activity.
     * @param {order_detail_stock_activityDeleteArgs} args - Arguments to delete one Order_detail_stock_activity.
     * @example
     * // Delete one Order_detail_stock_activity
     * const Order_detail_stock_activity = await prisma.order_detail_stock_activity.delete({
     *   where: {
     *     // ... filter to delete one Order_detail_stock_activity
     *   }
     * })
     * 
     */
    delete<T extends order_detail_stock_activityDeleteArgs>(args: SelectSubset<T, order_detail_stock_activityDeleteArgs<ExtArgs>>): Prisma__order_detail_stock_activityClient<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order_detail_stock_activity.
     * @param {order_detail_stock_activityUpdateArgs} args - Arguments to update one Order_detail_stock_activity.
     * @example
     * // Update one Order_detail_stock_activity
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends order_detail_stock_activityUpdateArgs>(args: SelectSubset<T, order_detail_stock_activityUpdateArgs<ExtArgs>>): Prisma__order_detail_stock_activityClient<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Order_detail_stock_activities.
     * @param {order_detail_stock_activityDeleteManyArgs} args - Arguments to filter Order_detail_stock_activities to delete.
     * @example
     * // Delete a few Order_detail_stock_activities
     * const { count } = await prisma.order_detail_stock_activity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends order_detail_stock_activityDeleteManyArgs>(args?: SelectSubset<T, order_detail_stock_activityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_detail_stock_activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detail_stock_activityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Order_detail_stock_activities
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends order_detail_stock_activityUpdateManyArgs>(args: SelectSubset<T, order_detail_stock_activityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_detail_stock_activities and returns the data updated in the database.
     * @param {order_detail_stock_activityUpdateManyAndReturnArgs} args - Arguments to update many Order_detail_stock_activities.
     * @example
     * // Update many Order_detail_stock_activities
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Order_detail_stock_activities and only return the `id`
     * const order_detail_stock_activityWithIdOnly = await prisma.order_detail_stock_activity.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends order_detail_stock_activityUpdateManyAndReturnArgs>(args: SelectSubset<T, order_detail_stock_activityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order_detail_stock_activity.
     * @param {order_detail_stock_activityUpsertArgs} args - Arguments to update or create a Order_detail_stock_activity.
     * @example
     * // Update or create a Order_detail_stock_activity
     * const order_detail_stock_activity = await prisma.order_detail_stock_activity.upsert({
     *   create: {
     *     // ... data to create a Order_detail_stock_activity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order_detail_stock_activity we want to update
     *   }
     * })
     */
    upsert<T extends order_detail_stock_activityUpsertArgs>(args: SelectSubset<T, order_detail_stock_activityUpsertArgs<ExtArgs>>): Prisma__order_detail_stock_activityClient<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Order_detail_stock_activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detail_stock_activityCountArgs} args - Arguments to filter Order_detail_stock_activities to count.
     * @example
     * // Count the number of Order_detail_stock_activities
     * const count = await prisma.order_detail_stock_activity.count({
     *   where: {
     *     // ... the filter for the Order_detail_stock_activities we want to count
     *   }
     * })
    **/
    count<T extends order_detail_stock_activityCountArgs>(
      args?: Subset<T, order_detail_stock_activityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Order_detail_stock_activityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order_detail_stock_activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Order_detail_stock_activityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Order_detail_stock_activityAggregateArgs>(args: Subset<T, Order_detail_stock_activityAggregateArgs>): Prisma.PrismaPromise<GetOrder_detail_stock_activityAggregateType<T>>

    /**
     * Group by Order_detail_stock_activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detail_stock_activityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends order_detail_stock_activityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: order_detail_stock_activityGroupByArgs['orderBy'] }
        : { orderBy?: order_detail_stock_activityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, order_detail_stock_activityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_detail_stock_activityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the order_detail_stock_activity model
   */
  readonly fields: order_detail_stock_activityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for order_detail_stock_activity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__order_detail_stock_activityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_detail<T extends order_detailDefaultArgs<ExtArgs> = {}>(args?: Subset<T, order_detailDefaultArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    stock_activity<T extends stock_activityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, stock_activityDefaultArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the order_detail_stock_activity model
   */
  interface order_detail_stock_activityFieldRefs {
    readonly id: FieldRef<"order_detail_stock_activity", 'Int'>
    readonly order_detail_id: FieldRef<"order_detail_stock_activity", 'Int'>
    readonly stock_activity_id: FieldRef<"order_detail_stock_activity", 'Int'>
    readonly created_at: FieldRef<"order_detail_stock_activity", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * order_detail_stock_activity findUnique
   */
  export type order_detail_stock_activityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which order_detail_stock_activity to fetch.
     */
    where: order_detail_stock_activityWhereUniqueInput
  }

  /**
   * order_detail_stock_activity findUniqueOrThrow
   */
  export type order_detail_stock_activityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which order_detail_stock_activity to fetch.
     */
    where: order_detail_stock_activityWhereUniqueInput
  }

  /**
   * order_detail_stock_activity findFirst
   */
  export type order_detail_stock_activityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which order_detail_stock_activity to fetch.
     */
    where?: order_detail_stock_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_detail_stock_activities to fetch.
     */
    orderBy?: order_detail_stock_activityOrderByWithRelationInput | order_detail_stock_activityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_detail_stock_activities.
     */
    cursor?: order_detail_stock_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_detail_stock_activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_detail_stock_activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_detail_stock_activities.
     */
    distinct?: Order_detail_stock_activityScalarFieldEnum | Order_detail_stock_activityScalarFieldEnum[]
  }

  /**
   * order_detail_stock_activity findFirstOrThrow
   */
  export type order_detail_stock_activityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which order_detail_stock_activity to fetch.
     */
    where?: order_detail_stock_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_detail_stock_activities to fetch.
     */
    orderBy?: order_detail_stock_activityOrderByWithRelationInput | order_detail_stock_activityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_detail_stock_activities.
     */
    cursor?: order_detail_stock_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_detail_stock_activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_detail_stock_activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_detail_stock_activities.
     */
    distinct?: Order_detail_stock_activityScalarFieldEnum | Order_detail_stock_activityScalarFieldEnum[]
  }

  /**
   * order_detail_stock_activity findMany
   */
  export type order_detail_stock_activityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which order_detail_stock_activities to fetch.
     */
    where?: order_detail_stock_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_detail_stock_activities to fetch.
     */
    orderBy?: order_detail_stock_activityOrderByWithRelationInput | order_detail_stock_activityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing order_detail_stock_activities.
     */
    cursor?: order_detail_stock_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_detail_stock_activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_detail_stock_activities.
     */
    skip?: number
    distinct?: Order_detail_stock_activityScalarFieldEnum | Order_detail_stock_activityScalarFieldEnum[]
  }

  /**
   * order_detail_stock_activity create
   */
  export type order_detail_stock_activityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * The data needed to create a order_detail_stock_activity.
     */
    data: XOR<order_detail_stock_activityCreateInput, order_detail_stock_activityUncheckedCreateInput>
  }

  /**
   * order_detail_stock_activity createMany
   */
  export type order_detail_stock_activityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many order_detail_stock_activities.
     */
    data: order_detail_stock_activityCreateManyInput | order_detail_stock_activityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * order_detail_stock_activity createManyAndReturn
   */
  export type order_detail_stock_activityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * The data used to create many order_detail_stock_activities.
     */
    data: order_detail_stock_activityCreateManyInput | order_detail_stock_activityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_detail_stock_activity update
   */
  export type order_detail_stock_activityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * The data needed to update a order_detail_stock_activity.
     */
    data: XOR<order_detail_stock_activityUpdateInput, order_detail_stock_activityUncheckedUpdateInput>
    /**
     * Choose, which order_detail_stock_activity to update.
     */
    where: order_detail_stock_activityWhereUniqueInput
  }

  /**
   * order_detail_stock_activity updateMany
   */
  export type order_detail_stock_activityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update order_detail_stock_activities.
     */
    data: XOR<order_detail_stock_activityUpdateManyMutationInput, order_detail_stock_activityUncheckedUpdateManyInput>
    /**
     * Filter which order_detail_stock_activities to update
     */
    where?: order_detail_stock_activityWhereInput
    /**
     * Limit how many order_detail_stock_activities to update.
     */
    limit?: number
  }

  /**
   * order_detail_stock_activity updateManyAndReturn
   */
  export type order_detail_stock_activityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * The data used to update order_detail_stock_activities.
     */
    data: XOR<order_detail_stock_activityUpdateManyMutationInput, order_detail_stock_activityUncheckedUpdateManyInput>
    /**
     * Filter which order_detail_stock_activities to update
     */
    where?: order_detail_stock_activityWhereInput
    /**
     * Limit how many order_detail_stock_activities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_detail_stock_activity upsert
   */
  export type order_detail_stock_activityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * The filter to search for the order_detail_stock_activity to update in case it exists.
     */
    where: order_detail_stock_activityWhereUniqueInput
    /**
     * In case the order_detail_stock_activity found by the `where` argument doesn't exist, create a new order_detail_stock_activity with this data.
     */
    create: XOR<order_detail_stock_activityCreateInput, order_detail_stock_activityUncheckedCreateInput>
    /**
     * In case the order_detail_stock_activity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<order_detail_stock_activityUpdateInput, order_detail_stock_activityUncheckedUpdateInput>
  }

  /**
   * order_detail_stock_activity delete
   */
  export type order_detail_stock_activityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    /**
     * Filter which order_detail_stock_activity to delete.
     */
    where: order_detail_stock_activityWhereUniqueInput
  }

  /**
   * order_detail_stock_activity deleteMany
   */
  export type order_detail_stock_activityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_detail_stock_activities to delete
     */
    where?: order_detail_stock_activityWhereInput
    /**
     * Limit how many order_detail_stock_activities to delete.
     */
    limit?: number
  }

  /**
   * order_detail_stock_activity without action
   */
  export type order_detail_stock_activityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
  }


  /**
   * Model raw_stock_history
   */

  export type AggregateRaw_stock_history = {
    _count: Raw_stock_historyCountAggregateOutputType | null
    _avg: Raw_stock_historyAvgAggregateOutputType | null
    _sum: Raw_stock_historySumAggregateOutputType | null
    _min: Raw_stock_historyMinAggregateOutputType | null
    _max: Raw_stock_historyMaxAggregateOutputType | null
  }

  export type Raw_stock_historyAvgAggregateOutputType = {
    id: number | null
    no_events: number | null
  }

  export type Raw_stock_historySumAggregateOutputType = {
    id: number | null
    no_events: number | null
  }

  export type Raw_stock_historyMinAggregateOutputType = {
    id: number | null
    date: Date | null
    event_str: string | null
    drum_type: string | null
    no_events: number | null
    notes_ids: string | null
    notes_batch: string | null
    source: string | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
  }

  export type Raw_stock_historyMaxAggregateOutputType = {
    id: number | null
    date: Date | null
    event_str: string | null
    drum_type: string | null
    no_events: number | null
    notes_ids: string | null
    notes_batch: string | null
    source: string | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
  }

  export type Raw_stock_historyCountAggregateOutputType = {
    id: number
    date: number
    event_str: number
    drum_type: number
    no_events: number
    notes_ids: number
    notes_batch: number
    source: number
    created_at: number
    updated_at: number
    material_code: number
    _all: number
  }


  export type Raw_stock_historyAvgAggregateInputType = {
    id?: true
    no_events?: true
  }

  export type Raw_stock_historySumAggregateInputType = {
    id?: true
    no_events?: true
  }

  export type Raw_stock_historyMinAggregateInputType = {
    id?: true
    date?: true
    event_str?: true
    drum_type?: true
    no_events?: true
    notes_ids?: true
    notes_batch?: true
    source?: true
    created_at?: true
    updated_at?: true
    material_code?: true
  }

  export type Raw_stock_historyMaxAggregateInputType = {
    id?: true
    date?: true
    event_str?: true
    drum_type?: true
    no_events?: true
    notes_ids?: true
    notes_batch?: true
    source?: true
    created_at?: true
    updated_at?: true
    material_code?: true
  }

  export type Raw_stock_historyCountAggregateInputType = {
    id?: true
    date?: true
    event_str?: true
    drum_type?: true
    no_events?: true
    notes_ids?: true
    notes_batch?: true
    source?: true
    created_at?: true
    updated_at?: true
    material_code?: true
    _all?: true
  }

  export type Raw_stock_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which raw_stock_history to aggregate.
     */
    where?: raw_stock_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of raw_stock_histories to fetch.
     */
    orderBy?: raw_stock_historyOrderByWithRelationInput | raw_stock_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: raw_stock_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` raw_stock_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` raw_stock_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned raw_stock_histories
    **/
    _count?: true | Raw_stock_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Raw_stock_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Raw_stock_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Raw_stock_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Raw_stock_historyMaxAggregateInputType
  }

  export type GetRaw_stock_historyAggregateType<T extends Raw_stock_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateRaw_stock_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRaw_stock_history[P]>
      : GetScalarType<T[P], AggregateRaw_stock_history[P]>
  }




  export type raw_stock_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: raw_stock_historyWhereInput
    orderBy?: raw_stock_historyOrderByWithAggregationInput | raw_stock_historyOrderByWithAggregationInput[]
    by: Raw_stock_historyScalarFieldEnum[] | Raw_stock_historyScalarFieldEnum
    having?: raw_stock_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Raw_stock_historyCountAggregateInputType | true
    _avg?: Raw_stock_historyAvgAggregateInputType
    _sum?: Raw_stock_historySumAggregateInputType
    _min?: Raw_stock_historyMinAggregateInputType
    _max?: Raw_stock_historyMaxAggregateInputType
  }

  export type Raw_stock_historyGroupByOutputType = {
    id: number
    date: Date | null
    event_str: string | null
    drum_type: string | null
    no_events: number | null
    notes_ids: string | null
    notes_batch: string | null
    source: string | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
    _count: Raw_stock_historyCountAggregateOutputType | null
    _avg: Raw_stock_historyAvgAggregateOutputType | null
    _sum: Raw_stock_historySumAggregateOutputType | null
    _min: Raw_stock_historyMinAggregateOutputType | null
    _max: Raw_stock_historyMaxAggregateOutputType | null
  }

  type GetRaw_stock_historyGroupByPayload<T extends raw_stock_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Raw_stock_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Raw_stock_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Raw_stock_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Raw_stock_historyGroupByOutputType[P]>
        }
      >
    >


  export type raw_stock_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    event_str?: boolean
    drum_type?: boolean
    no_events?: boolean
    notes_ids?: boolean
    notes_batch?: boolean
    source?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | raw_stock_history$ref_materialsArgs<ExtArgs>
    stock_history?: boolean | raw_stock_history$stock_historyArgs<ExtArgs>
    _count?: boolean | Raw_stock_historyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["raw_stock_history"]>

  export type raw_stock_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    event_str?: boolean
    drum_type?: boolean
    no_events?: boolean
    notes_ids?: boolean
    notes_batch?: boolean
    source?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | raw_stock_history$ref_materialsArgs<ExtArgs>
  }, ExtArgs["result"]["raw_stock_history"]>

  export type raw_stock_historySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    event_str?: boolean
    drum_type?: boolean
    no_events?: boolean
    notes_ids?: boolean
    notes_batch?: boolean
    source?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | raw_stock_history$ref_materialsArgs<ExtArgs>
  }, ExtArgs["result"]["raw_stock_history"]>

  export type raw_stock_historySelectScalar = {
    id?: boolean
    date?: boolean
    event_str?: boolean
    drum_type?: boolean
    no_events?: boolean
    notes_ids?: boolean
    notes_batch?: boolean
    source?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
  }

  export type raw_stock_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "date" | "event_str" | "drum_type" | "no_events" | "notes_ids" | "notes_batch" | "source" | "created_at" | "updated_at" | "material_code", ExtArgs["result"]["raw_stock_history"]>
  export type raw_stock_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | raw_stock_history$ref_materialsArgs<ExtArgs>
    stock_history?: boolean | raw_stock_history$stock_historyArgs<ExtArgs>
    _count?: boolean | Raw_stock_historyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type raw_stock_historyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | raw_stock_history$ref_materialsArgs<ExtArgs>
  }
  export type raw_stock_historyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | raw_stock_history$ref_materialsArgs<ExtArgs>
  }

  export type $raw_stock_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "raw_stock_history"
    objects: {
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs> | null
      stock_history: Prisma.$stock_historyPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      date: Date | null
      event_str: string | null
      drum_type: string | null
      no_events: number | null
      notes_ids: string | null
      notes_batch: string | null
      source: string | null
      created_at: Date | null
      updated_at: Date | null
      material_code: string | null
    }, ExtArgs["result"]["raw_stock_history"]>
    composites: {}
  }

  type raw_stock_historyGetPayload<S extends boolean | null | undefined | raw_stock_historyDefaultArgs> = $Result.GetResult<Prisma.$raw_stock_historyPayload, S>

  type raw_stock_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<raw_stock_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Raw_stock_historyCountAggregateInputType | true
    }

  export interface raw_stock_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['raw_stock_history'], meta: { name: 'raw_stock_history' } }
    /**
     * Find zero or one Raw_stock_history that matches the filter.
     * @param {raw_stock_historyFindUniqueArgs} args - Arguments to find a Raw_stock_history
     * @example
     * // Get one Raw_stock_history
     * const raw_stock_history = await prisma.raw_stock_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends raw_stock_historyFindUniqueArgs>(args: SelectSubset<T, raw_stock_historyFindUniqueArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Raw_stock_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {raw_stock_historyFindUniqueOrThrowArgs} args - Arguments to find a Raw_stock_history
     * @example
     * // Get one Raw_stock_history
     * const raw_stock_history = await prisma.raw_stock_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends raw_stock_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, raw_stock_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Raw_stock_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_stock_historyFindFirstArgs} args - Arguments to find a Raw_stock_history
     * @example
     * // Get one Raw_stock_history
     * const raw_stock_history = await prisma.raw_stock_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends raw_stock_historyFindFirstArgs>(args?: SelectSubset<T, raw_stock_historyFindFirstArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Raw_stock_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_stock_historyFindFirstOrThrowArgs} args - Arguments to find a Raw_stock_history
     * @example
     * // Get one Raw_stock_history
     * const raw_stock_history = await prisma.raw_stock_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends raw_stock_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, raw_stock_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Raw_stock_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_stock_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Raw_stock_histories
     * const raw_stock_histories = await prisma.raw_stock_history.findMany()
     * 
     * // Get first 10 Raw_stock_histories
     * const raw_stock_histories = await prisma.raw_stock_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const raw_stock_historyWithIdOnly = await prisma.raw_stock_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends raw_stock_historyFindManyArgs>(args?: SelectSubset<T, raw_stock_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Raw_stock_history.
     * @param {raw_stock_historyCreateArgs} args - Arguments to create a Raw_stock_history.
     * @example
     * // Create one Raw_stock_history
     * const Raw_stock_history = await prisma.raw_stock_history.create({
     *   data: {
     *     // ... data to create a Raw_stock_history
     *   }
     * })
     * 
     */
    create<T extends raw_stock_historyCreateArgs>(args: SelectSubset<T, raw_stock_historyCreateArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Raw_stock_histories.
     * @param {raw_stock_historyCreateManyArgs} args - Arguments to create many Raw_stock_histories.
     * @example
     * // Create many Raw_stock_histories
     * const raw_stock_history = await prisma.raw_stock_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends raw_stock_historyCreateManyArgs>(args?: SelectSubset<T, raw_stock_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Raw_stock_histories and returns the data saved in the database.
     * @param {raw_stock_historyCreateManyAndReturnArgs} args - Arguments to create many Raw_stock_histories.
     * @example
     * // Create many Raw_stock_histories
     * const raw_stock_history = await prisma.raw_stock_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Raw_stock_histories and only return the `id`
     * const raw_stock_historyWithIdOnly = await prisma.raw_stock_history.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends raw_stock_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, raw_stock_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Raw_stock_history.
     * @param {raw_stock_historyDeleteArgs} args - Arguments to delete one Raw_stock_history.
     * @example
     * // Delete one Raw_stock_history
     * const Raw_stock_history = await prisma.raw_stock_history.delete({
     *   where: {
     *     // ... filter to delete one Raw_stock_history
     *   }
     * })
     * 
     */
    delete<T extends raw_stock_historyDeleteArgs>(args: SelectSubset<T, raw_stock_historyDeleteArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Raw_stock_history.
     * @param {raw_stock_historyUpdateArgs} args - Arguments to update one Raw_stock_history.
     * @example
     * // Update one Raw_stock_history
     * const raw_stock_history = await prisma.raw_stock_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends raw_stock_historyUpdateArgs>(args: SelectSubset<T, raw_stock_historyUpdateArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Raw_stock_histories.
     * @param {raw_stock_historyDeleteManyArgs} args - Arguments to filter Raw_stock_histories to delete.
     * @example
     * // Delete a few Raw_stock_histories
     * const { count } = await prisma.raw_stock_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends raw_stock_historyDeleteManyArgs>(args?: SelectSubset<T, raw_stock_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Raw_stock_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_stock_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Raw_stock_histories
     * const raw_stock_history = await prisma.raw_stock_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends raw_stock_historyUpdateManyArgs>(args: SelectSubset<T, raw_stock_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Raw_stock_histories and returns the data updated in the database.
     * @param {raw_stock_historyUpdateManyAndReturnArgs} args - Arguments to update many Raw_stock_histories.
     * @example
     * // Update many Raw_stock_histories
     * const raw_stock_history = await prisma.raw_stock_history.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Raw_stock_histories and only return the `id`
     * const raw_stock_historyWithIdOnly = await prisma.raw_stock_history.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends raw_stock_historyUpdateManyAndReturnArgs>(args: SelectSubset<T, raw_stock_historyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Raw_stock_history.
     * @param {raw_stock_historyUpsertArgs} args - Arguments to update or create a Raw_stock_history.
     * @example
     * // Update or create a Raw_stock_history
     * const raw_stock_history = await prisma.raw_stock_history.upsert({
     *   create: {
     *     // ... data to create a Raw_stock_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Raw_stock_history we want to update
     *   }
     * })
     */
    upsert<T extends raw_stock_historyUpsertArgs>(args: SelectSubset<T, raw_stock_historyUpsertArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Raw_stock_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_stock_historyCountArgs} args - Arguments to filter Raw_stock_histories to count.
     * @example
     * // Count the number of Raw_stock_histories
     * const count = await prisma.raw_stock_history.count({
     *   where: {
     *     // ... the filter for the Raw_stock_histories we want to count
     *   }
     * })
    **/
    count<T extends raw_stock_historyCountArgs>(
      args?: Subset<T, raw_stock_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Raw_stock_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Raw_stock_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Raw_stock_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Raw_stock_historyAggregateArgs>(args: Subset<T, Raw_stock_historyAggregateArgs>): Prisma.PrismaPromise<GetRaw_stock_historyAggregateType<T>>

    /**
     * Group by Raw_stock_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {raw_stock_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends raw_stock_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: raw_stock_historyGroupByArgs['orderBy'] }
        : { orderBy?: raw_stock_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, raw_stock_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRaw_stock_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the raw_stock_history model
   */
  readonly fields: raw_stock_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for raw_stock_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__raw_stock_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ref_materials<T extends raw_stock_history$ref_materialsArgs<ExtArgs> = {}>(args?: Subset<T, raw_stock_history$ref_materialsArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stock_history<T extends raw_stock_history$stock_historyArgs<ExtArgs> = {}>(args?: Subset<T, raw_stock_history$stock_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the raw_stock_history model
   */
  interface raw_stock_historyFieldRefs {
    readonly id: FieldRef<"raw_stock_history", 'Int'>
    readonly date: FieldRef<"raw_stock_history", 'DateTime'>
    readonly event_str: FieldRef<"raw_stock_history", 'String'>
    readonly drum_type: FieldRef<"raw_stock_history", 'String'>
    readonly no_events: FieldRef<"raw_stock_history", 'Int'>
    readonly notes_ids: FieldRef<"raw_stock_history", 'String'>
    readonly notes_batch: FieldRef<"raw_stock_history", 'String'>
    readonly source: FieldRef<"raw_stock_history", 'String'>
    readonly created_at: FieldRef<"raw_stock_history", 'DateTime'>
    readonly updated_at: FieldRef<"raw_stock_history", 'DateTime'>
    readonly material_code: FieldRef<"raw_stock_history", 'String'>
  }
    

  // Custom InputTypes
  /**
   * raw_stock_history findUnique
   */
  export type raw_stock_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which raw_stock_history to fetch.
     */
    where: raw_stock_historyWhereUniqueInput
  }

  /**
   * raw_stock_history findUniqueOrThrow
   */
  export type raw_stock_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which raw_stock_history to fetch.
     */
    where: raw_stock_historyWhereUniqueInput
  }

  /**
   * raw_stock_history findFirst
   */
  export type raw_stock_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which raw_stock_history to fetch.
     */
    where?: raw_stock_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of raw_stock_histories to fetch.
     */
    orderBy?: raw_stock_historyOrderByWithRelationInput | raw_stock_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for raw_stock_histories.
     */
    cursor?: raw_stock_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` raw_stock_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` raw_stock_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of raw_stock_histories.
     */
    distinct?: Raw_stock_historyScalarFieldEnum | Raw_stock_historyScalarFieldEnum[]
  }

  /**
   * raw_stock_history findFirstOrThrow
   */
  export type raw_stock_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which raw_stock_history to fetch.
     */
    where?: raw_stock_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of raw_stock_histories to fetch.
     */
    orderBy?: raw_stock_historyOrderByWithRelationInput | raw_stock_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for raw_stock_histories.
     */
    cursor?: raw_stock_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` raw_stock_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` raw_stock_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of raw_stock_histories.
     */
    distinct?: Raw_stock_historyScalarFieldEnum | Raw_stock_historyScalarFieldEnum[]
  }

  /**
   * raw_stock_history findMany
   */
  export type raw_stock_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which raw_stock_histories to fetch.
     */
    where?: raw_stock_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of raw_stock_histories to fetch.
     */
    orderBy?: raw_stock_historyOrderByWithRelationInput | raw_stock_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing raw_stock_histories.
     */
    cursor?: raw_stock_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` raw_stock_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` raw_stock_histories.
     */
    skip?: number
    distinct?: Raw_stock_historyScalarFieldEnum | Raw_stock_historyScalarFieldEnum[]
  }

  /**
   * raw_stock_history create
   */
  export type raw_stock_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a raw_stock_history.
     */
    data?: XOR<raw_stock_historyCreateInput, raw_stock_historyUncheckedCreateInput>
  }

  /**
   * raw_stock_history createMany
   */
  export type raw_stock_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many raw_stock_histories.
     */
    data: raw_stock_historyCreateManyInput | raw_stock_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * raw_stock_history createManyAndReturn
   */
  export type raw_stock_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * The data used to create many raw_stock_histories.
     */
    data: raw_stock_historyCreateManyInput | raw_stock_historyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * raw_stock_history update
   */
  export type raw_stock_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a raw_stock_history.
     */
    data: XOR<raw_stock_historyUpdateInput, raw_stock_historyUncheckedUpdateInput>
    /**
     * Choose, which raw_stock_history to update.
     */
    where: raw_stock_historyWhereUniqueInput
  }

  /**
   * raw_stock_history updateMany
   */
  export type raw_stock_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update raw_stock_histories.
     */
    data: XOR<raw_stock_historyUpdateManyMutationInput, raw_stock_historyUncheckedUpdateManyInput>
    /**
     * Filter which raw_stock_histories to update
     */
    where?: raw_stock_historyWhereInput
    /**
     * Limit how many raw_stock_histories to update.
     */
    limit?: number
  }

  /**
   * raw_stock_history updateManyAndReturn
   */
  export type raw_stock_historyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * The data used to update raw_stock_histories.
     */
    data: XOR<raw_stock_historyUpdateManyMutationInput, raw_stock_historyUncheckedUpdateManyInput>
    /**
     * Filter which raw_stock_histories to update
     */
    where?: raw_stock_historyWhereInput
    /**
     * Limit how many raw_stock_histories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * raw_stock_history upsert
   */
  export type raw_stock_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the raw_stock_history to update in case it exists.
     */
    where: raw_stock_historyWhereUniqueInput
    /**
     * In case the raw_stock_history found by the `where` argument doesn't exist, create a new raw_stock_history with this data.
     */
    create: XOR<raw_stock_historyCreateInput, raw_stock_historyUncheckedCreateInput>
    /**
     * In case the raw_stock_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<raw_stock_historyUpdateInput, raw_stock_historyUncheckedUpdateInput>
  }

  /**
   * raw_stock_history delete
   */
  export type raw_stock_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    /**
     * Filter which raw_stock_history to delete.
     */
    where: raw_stock_historyWhereUniqueInput
  }

  /**
   * raw_stock_history deleteMany
   */
  export type raw_stock_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which raw_stock_histories to delete
     */
    where?: raw_stock_historyWhereInput
    /**
     * Limit how many raw_stock_histories to delete.
     */
    limit?: number
  }

  /**
   * raw_stock_history.ref_materials
   */
  export type raw_stock_history$ref_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    where?: ref_materialsWhereInput
  }

  /**
   * raw_stock_history.stock_history
   */
  export type raw_stock_history$stock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    where?: stock_historyWhereInput
    orderBy?: stock_historyOrderByWithRelationInput | stock_historyOrderByWithRelationInput[]
    cursor?: stock_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Stock_historyScalarFieldEnum | Stock_historyScalarFieldEnum[]
  }

  /**
   * raw_stock_history without action
   */
  export type raw_stock_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
  }


  /**
   * Model stock_activity
   */

  export type AggregateStock_activity = {
    _count: Stock_activityCountAggregateOutputType | null
    _avg: Stock_activityAvgAggregateOutputType | null
    _sum: Stock_activitySumAggregateOutputType | null
    _min: Stock_activityMinAggregateOutputType | null
    _max: Stock_activityMaxAggregateOutputType | null
  }

  export type Stock_activityAvgAggregateOutputType = {
    id: number | null
    supplier_id: number | null
    quantity: Decimal | null
    order_detail_id: number | null
    distillation_detail_id: number | null
    source_record_id: number | null
  }

  export type Stock_activitySumAggregateOutputType = {
    id: number | null
    supplier_id: number | null
    quantity: Decimal | null
    order_detail_id: number | null
    distillation_detail_id: number | null
    source_record_id: number | null
  }

  export type Stock_activityMinAggregateOutputType = {
    id: number | null
    activity_date: Date | null
    material_code: string | null
    supplier_id: number | null
    quantity: Decimal | null
    drum_type: string | null
    drum_ids: string | null
    batch_code: string | null
    order_detail_id: number | null
    distillation_detail_id: number | null
    activity_type: string | null
    status: string | null
    notes: string | null
    source_record_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Stock_activityMaxAggregateOutputType = {
    id: number | null
    activity_date: Date | null
    material_code: string | null
    supplier_id: number | null
    quantity: Decimal | null
    drum_type: string | null
    drum_ids: string | null
    batch_code: string | null
    order_detail_id: number | null
    distillation_detail_id: number | null
    activity_type: string | null
    status: string | null
    notes: string | null
    source_record_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Stock_activityCountAggregateOutputType = {
    id: number
    activity_date: number
    material_code: number
    supplier_id: number
    quantity: number
    drum_type: number
    drum_ids: number
    batch_code: number
    order_detail_id: number
    distillation_detail_id: number
    activity_type: number
    status: number
    notes: number
    source_record_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Stock_activityAvgAggregateInputType = {
    id?: true
    supplier_id?: true
    quantity?: true
    order_detail_id?: true
    distillation_detail_id?: true
    source_record_id?: true
  }

  export type Stock_activitySumAggregateInputType = {
    id?: true
    supplier_id?: true
    quantity?: true
    order_detail_id?: true
    distillation_detail_id?: true
    source_record_id?: true
  }

  export type Stock_activityMinAggregateInputType = {
    id?: true
    activity_date?: true
    material_code?: true
    supplier_id?: true
    quantity?: true
    drum_type?: true
    drum_ids?: true
    batch_code?: true
    order_detail_id?: true
    distillation_detail_id?: true
    activity_type?: true
    status?: true
    notes?: true
    source_record_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Stock_activityMaxAggregateInputType = {
    id?: true
    activity_date?: true
    material_code?: true
    supplier_id?: true
    quantity?: true
    drum_type?: true
    drum_ids?: true
    batch_code?: true
    order_detail_id?: true
    distillation_detail_id?: true
    activity_type?: true
    status?: true
    notes?: true
    source_record_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Stock_activityCountAggregateInputType = {
    id?: true
    activity_date?: true
    material_code?: true
    supplier_id?: true
    quantity?: true
    drum_type?: true
    drum_ids?: true
    batch_code?: true
    order_detail_id?: true
    distillation_detail_id?: true
    activity_type?: true
    status?: true
    notes?: true
    source_record_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Stock_activityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_activity to aggregate.
     */
    where?: stock_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_activities to fetch.
     */
    orderBy?: stock_activityOrderByWithRelationInput | stock_activityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stock_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stock_activities
    **/
    _count?: true | Stock_activityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stock_activityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stock_activitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stock_activityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stock_activityMaxAggregateInputType
  }

  export type GetStock_activityAggregateType<T extends Stock_activityAggregateArgs> = {
        [P in keyof T & keyof AggregateStock_activity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock_activity[P]>
      : GetScalarType<T[P], AggregateStock_activity[P]>
  }




  export type stock_activityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_activityWhereInput
    orderBy?: stock_activityOrderByWithAggregationInput | stock_activityOrderByWithAggregationInput[]
    by: Stock_activityScalarFieldEnum[] | Stock_activityScalarFieldEnum
    having?: stock_activityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stock_activityCountAggregateInputType | true
    _avg?: Stock_activityAvgAggregateInputType
    _sum?: Stock_activitySumAggregateInputType
    _min?: Stock_activityMinAggregateInputType
    _max?: Stock_activityMaxAggregateInputType
  }

  export type Stock_activityGroupByOutputType = {
    id: number
    activity_date: Date
    material_code: string | null
    supplier_id: number | null
    quantity: Decimal
    drum_type: string
    drum_ids: string | null
    batch_code: string | null
    order_detail_id: number | null
    distillation_detail_id: number | null
    activity_type: string
    status: string | null
    notes: string | null
    source_record_id: number | null
    created_at: Date | null
    updated_at: Date | null
    _count: Stock_activityCountAggregateOutputType | null
    _avg: Stock_activityAvgAggregateOutputType | null
    _sum: Stock_activitySumAggregateOutputType | null
    _min: Stock_activityMinAggregateOutputType | null
    _max: Stock_activityMaxAggregateOutputType | null
  }

  type GetStock_activityGroupByPayload<T extends stock_activityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stock_activityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stock_activityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stock_activityGroupByOutputType[P]>
            : GetScalarType<T[P], Stock_activityGroupByOutputType[P]>
        }
      >
    >


  export type stock_activitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    activity_date?: boolean
    material_code?: boolean
    supplier_id?: boolean
    quantity?: boolean
    drum_type?: boolean
    drum_ids?: boolean
    batch_code?: boolean
    order_detail_id?: boolean
    distillation_detail_id?: boolean
    activity_type?: boolean
    status?: boolean
    notes?: boolean
    source_record_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    order_detail_stock_activity?: boolean | stock_activity$order_detail_stock_activityArgs<ExtArgs>
    distillation_schedule_items?: boolean | stock_activity$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_activity$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | stock_activity$order_detailArgs<ExtArgs>
    ref_suppliers?: boolean | stock_activity$ref_suppliersArgs<ExtArgs>
    _count?: boolean | Stock_activityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock_activity"]>

  export type stock_activitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    activity_date?: boolean
    material_code?: boolean
    supplier_id?: boolean
    quantity?: boolean
    drum_type?: boolean
    drum_ids?: boolean
    batch_code?: boolean
    order_detail_id?: boolean
    distillation_detail_id?: boolean
    activity_type?: boolean
    status?: boolean
    notes?: boolean
    source_record_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_schedule_items?: boolean | stock_activity$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_activity$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | stock_activity$order_detailArgs<ExtArgs>
    ref_suppliers?: boolean | stock_activity$ref_suppliersArgs<ExtArgs>
  }, ExtArgs["result"]["stock_activity"]>

  export type stock_activitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    activity_date?: boolean
    material_code?: boolean
    supplier_id?: boolean
    quantity?: boolean
    drum_type?: boolean
    drum_ids?: boolean
    batch_code?: boolean
    order_detail_id?: boolean
    distillation_detail_id?: boolean
    activity_type?: boolean
    status?: boolean
    notes?: boolean
    source_record_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    distillation_schedule_items?: boolean | stock_activity$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_activity$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | stock_activity$order_detailArgs<ExtArgs>
    ref_suppliers?: boolean | stock_activity$ref_suppliersArgs<ExtArgs>
  }, ExtArgs["result"]["stock_activity"]>

  export type stock_activitySelectScalar = {
    id?: boolean
    activity_date?: boolean
    material_code?: boolean
    supplier_id?: boolean
    quantity?: boolean
    drum_type?: boolean
    drum_ids?: boolean
    batch_code?: boolean
    order_detail_id?: boolean
    distillation_detail_id?: boolean
    activity_type?: boolean
    status?: boolean
    notes?: boolean
    source_record_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type stock_activityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "activity_date" | "material_code" | "supplier_id" | "quantity" | "drum_type" | "drum_ids" | "batch_code" | "order_detail_id" | "distillation_detail_id" | "activity_type" | "status" | "notes" | "source_record_id" | "created_at" | "updated_at", ExtArgs["result"]["stock_activity"]>
  export type stock_activityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_detail_stock_activity?: boolean | stock_activity$order_detail_stock_activityArgs<ExtArgs>
    distillation_schedule_items?: boolean | stock_activity$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_activity$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | stock_activity$order_detailArgs<ExtArgs>
    ref_suppliers?: boolean | stock_activity$ref_suppliersArgs<ExtArgs>
    _count?: boolean | Stock_activityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type stock_activityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule_items?: boolean | stock_activity$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_activity$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | stock_activity$order_detailArgs<ExtArgs>
    ref_suppliers?: boolean | stock_activity$ref_suppliersArgs<ExtArgs>
  }
  export type stock_activityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    distillation_schedule_items?: boolean | stock_activity$distillation_schedule_itemsArgs<ExtArgs>
    ref_materials?: boolean | stock_activity$ref_materialsArgs<ExtArgs>
    order_detail?: boolean | stock_activity$order_detailArgs<ExtArgs>
    ref_suppliers?: boolean | stock_activity$ref_suppliersArgs<ExtArgs>
  }

  export type $stock_activityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stock_activity"
    objects: {
      order_detail_stock_activity: Prisma.$order_detail_stock_activityPayload<ExtArgs>[]
      distillation_schedule_items: Prisma.$distillation_schedule_itemsPayload<ExtArgs> | null
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs> | null
      order_detail: Prisma.$order_detailPayload<ExtArgs> | null
      ref_suppliers: Prisma.$ref_suppliersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      activity_date: Date
      material_code: string | null
      supplier_id: number | null
      quantity: Prisma.Decimal
      drum_type: string
      drum_ids: string | null
      batch_code: string | null
      order_detail_id: number | null
      distillation_detail_id: number | null
      activity_type: string
      status: string | null
      notes: string | null
      source_record_id: number | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["stock_activity"]>
    composites: {}
  }

  type stock_activityGetPayload<S extends boolean | null | undefined | stock_activityDefaultArgs> = $Result.GetResult<Prisma.$stock_activityPayload, S>

  type stock_activityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stock_activityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stock_activityCountAggregateInputType | true
    }

  export interface stock_activityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stock_activity'], meta: { name: 'stock_activity' } }
    /**
     * Find zero or one Stock_activity that matches the filter.
     * @param {stock_activityFindUniqueArgs} args - Arguments to find a Stock_activity
     * @example
     * // Get one Stock_activity
     * const stock_activity = await prisma.stock_activity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stock_activityFindUniqueArgs>(args: SelectSubset<T, stock_activityFindUniqueArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stock_activity that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stock_activityFindUniqueOrThrowArgs} args - Arguments to find a Stock_activity
     * @example
     * // Get one Stock_activity
     * const stock_activity = await prisma.stock_activity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stock_activityFindUniqueOrThrowArgs>(args: SelectSubset<T, stock_activityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_activity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_activityFindFirstArgs} args - Arguments to find a Stock_activity
     * @example
     * // Get one Stock_activity
     * const stock_activity = await prisma.stock_activity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stock_activityFindFirstArgs>(args?: SelectSubset<T, stock_activityFindFirstArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_activity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_activityFindFirstOrThrowArgs} args - Arguments to find a Stock_activity
     * @example
     * // Get one Stock_activity
     * const stock_activity = await prisma.stock_activity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stock_activityFindFirstOrThrowArgs>(args?: SelectSubset<T, stock_activityFindFirstOrThrowArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stock_activities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_activityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stock_activities
     * const stock_activities = await prisma.stock_activity.findMany()
     * 
     * // Get first 10 Stock_activities
     * const stock_activities = await prisma.stock_activity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stock_activityWithIdOnly = await prisma.stock_activity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends stock_activityFindManyArgs>(args?: SelectSubset<T, stock_activityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stock_activity.
     * @param {stock_activityCreateArgs} args - Arguments to create a Stock_activity.
     * @example
     * // Create one Stock_activity
     * const Stock_activity = await prisma.stock_activity.create({
     *   data: {
     *     // ... data to create a Stock_activity
     *   }
     * })
     * 
     */
    create<T extends stock_activityCreateArgs>(args: SelectSubset<T, stock_activityCreateArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stock_activities.
     * @param {stock_activityCreateManyArgs} args - Arguments to create many Stock_activities.
     * @example
     * // Create many Stock_activities
     * const stock_activity = await prisma.stock_activity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stock_activityCreateManyArgs>(args?: SelectSubset<T, stock_activityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stock_activities and returns the data saved in the database.
     * @param {stock_activityCreateManyAndReturnArgs} args - Arguments to create many Stock_activities.
     * @example
     * // Create many Stock_activities
     * const stock_activity = await prisma.stock_activity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stock_activities and only return the `id`
     * const stock_activityWithIdOnly = await prisma.stock_activity.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stock_activityCreateManyAndReturnArgs>(args?: SelectSubset<T, stock_activityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stock_activity.
     * @param {stock_activityDeleteArgs} args - Arguments to delete one Stock_activity.
     * @example
     * // Delete one Stock_activity
     * const Stock_activity = await prisma.stock_activity.delete({
     *   where: {
     *     // ... filter to delete one Stock_activity
     *   }
     * })
     * 
     */
    delete<T extends stock_activityDeleteArgs>(args: SelectSubset<T, stock_activityDeleteArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stock_activity.
     * @param {stock_activityUpdateArgs} args - Arguments to update one Stock_activity.
     * @example
     * // Update one Stock_activity
     * const stock_activity = await prisma.stock_activity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stock_activityUpdateArgs>(args: SelectSubset<T, stock_activityUpdateArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stock_activities.
     * @param {stock_activityDeleteManyArgs} args - Arguments to filter Stock_activities to delete.
     * @example
     * // Delete a few Stock_activities
     * const { count } = await prisma.stock_activity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stock_activityDeleteManyArgs>(args?: SelectSubset<T, stock_activityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_activityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stock_activities
     * const stock_activity = await prisma.stock_activity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stock_activityUpdateManyArgs>(args: SelectSubset<T, stock_activityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_activities and returns the data updated in the database.
     * @param {stock_activityUpdateManyAndReturnArgs} args - Arguments to update many Stock_activities.
     * @example
     * // Update many Stock_activities
     * const stock_activity = await prisma.stock_activity.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stock_activities and only return the `id`
     * const stock_activityWithIdOnly = await prisma.stock_activity.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stock_activityUpdateManyAndReturnArgs>(args: SelectSubset<T, stock_activityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stock_activity.
     * @param {stock_activityUpsertArgs} args - Arguments to update or create a Stock_activity.
     * @example
     * // Update or create a Stock_activity
     * const stock_activity = await prisma.stock_activity.upsert({
     *   create: {
     *     // ... data to create a Stock_activity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock_activity we want to update
     *   }
     * })
     */
    upsert<T extends stock_activityUpsertArgs>(args: SelectSubset<T, stock_activityUpsertArgs<ExtArgs>>): Prisma__stock_activityClient<$Result.GetResult<Prisma.$stock_activityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stock_activities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_activityCountArgs} args - Arguments to filter Stock_activities to count.
     * @example
     * // Count the number of Stock_activities
     * const count = await prisma.stock_activity.count({
     *   where: {
     *     // ... the filter for the Stock_activities we want to count
     *   }
     * })
    **/
    count<T extends stock_activityCountArgs>(
      args?: Subset<T, stock_activityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stock_activityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock_activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stock_activityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stock_activityAggregateArgs>(args: Subset<T, Stock_activityAggregateArgs>): Prisma.PrismaPromise<GetStock_activityAggregateType<T>>

    /**
     * Group by Stock_activity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_activityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stock_activityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stock_activityGroupByArgs['orderBy'] }
        : { orderBy?: stock_activityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stock_activityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStock_activityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stock_activity model
   */
  readonly fields: stock_activityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stock_activity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stock_activityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_detail_stock_activity<T extends stock_activity$order_detail_stock_activityArgs<ExtArgs> = {}>(args?: Subset<T, stock_activity$order_detail_stock_activityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detail_stock_activityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    distillation_schedule_items<T extends stock_activity$distillation_schedule_itemsArgs<ExtArgs> = {}>(args?: Subset<T, stock_activity$distillation_schedule_itemsArgs<ExtArgs>>): Prisma__distillation_schedule_itemsClient<$Result.GetResult<Prisma.$distillation_schedule_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ref_materials<T extends stock_activity$ref_materialsArgs<ExtArgs> = {}>(args?: Subset<T, stock_activity$ref_materialsArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order_detail<T extends stock_activity$order_detailArgs<ExtArgs> = {}>(args?: Subset<T, stock_activity$order_detailArgs<ExtArgs>>): Prisma__order_detailClient<$Result.GetResult<Prisma.$order_detailPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ref_suppliers<T extends stock_activity$ref_suppliersArgs<ExtArgs> = {}>(args?: Subset<T, stock_activity$ref_suppliersArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stock_activity model
   */
  interface stock_activityFieldRefs {
    readonly id: FieldRef<"stock_activity", 'Int'>
    readonly activity_date: FieldRef<"stock_activity", 'DateTime'>
    readonly material_code: FieldRef<"stock_activity", 'String'>
    readonly supplier_id: FieldRef<"stock_activity", 'Int'>
    readonly quantity: FieldRef<"stock_activity", 'Decimal'>
    readonly drum_type: FieldRef<"stock_activity", 'String'>
    readonly drum_ids: FieldRef<"stock_activity", 'String'>
    readonly batch_code: FieldRef<"stock_activity", 'String'>
    readonly order_detail_id: FieldRef<"stock_activity", 'Int'>
    readonly distillation_detail_id: FieldRef<"stock_activity", 'Int'>
    readonly activity_type: FieldRef<"stock_activity", 'String'>
    readonly status: FieldRef<"stock_activity", 'String'>
    readonly notes: FieldRef<"stock_activity", 'String'>
    readonly source_record_id: FieldRef<"stock_activity", 'Int'>
    readonly created_at: FieldRef<"stock_activity", 'DateTime'>
    readonly updated_at: FieldRef<"stock_activity", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * stock_activity findUnique
   */
  export type stock_activityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which stock_activity to fetch.
     */
    where: stock_activityWhereUniqueInput
  }

  /**
   * stock_activity findUniqueOrThrow
   */
  export type stock_activityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which stock_activity to fetch.
     */
    where: stock_activityWhereUniqueInput
  }

  /**
   * stock_activity findFirst
   */
  export type stock_activityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which stock_activity to fetch.
     */
    where?: stock_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_activities to fetch.
     */
    orderBy?: stock_activityOrderByWithRelationInput | stock_activityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_activities.
     */
    cursor?: stock_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_activities.
     */
    distinct?: Stock_activityScalarFieldEnum | Stock_activityScalarFieldEnum[]
  }

  /**
   * stock_activity findFirstOrThrow
   */
  export type stock_activityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which stock_activity to fetch.
     */
    where?: stock_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_activities to fetch.
     */
    orderBy?: stock_activityOrderByWithRelationInput | stock_activityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_activities.
     */
    cursor?: stock_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_activities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_activities.
     */
    distinct?: Stock_activityScalarFieldEnum | Stock_activityScalarFieldEnum[]
  }

  /**
   * stock_activity findMany
   */
  export type stock_activityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * Filter, which stock_activities to fetch.
     */
    where?: stock_activityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_activities to fetch.
     */
    orderBy?: stock_activityOrderByWithRelationInput | stock_activityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stock_activities.
     */
    cursor?: stock_activityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_activities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_activities.
     */
    skip?: number
    distinct?: Stock_activityScalarFieldEnum | Stock_activityScalarFieldEnum[]
  }

  /**
   * stock_activity create
   */
  export type stock_activityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * The data needed to create a stock_activity.
     */
    data: XOR<stock_activityCreateInput, stock_activityUncheckedCreateInput>
  }

  /**
   * stock_activity createMany
   */
  export type stock_activityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stock_activities.
     */
    data: stock_activityCreateManyInput | stock_activityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stock_activity createManyAndReturn
   */
  export type stock_activityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * The data used to create many stock_activities.
     */
    data: stock_activityCreateManyInput | stock_activityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_activity update
   */
  export type stock_activityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * The data needed to update a stock_activity.
     */
    data: XOR<stock_activityUpdateInput, stock_activityUncheckedUpdateInput>
    /**
     * Choose, which stock_activity to update.
     */
    where: stock_activityWhereUniqueInput
  }

  /**
   * stock_activity updateMany
   */
  export type stock_activityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stock_activities.
     */
    data: XOR<stock_activityUpdateManyMutationInput, stock_activityUncheckedUpdateManyInput>
    /**
     * Filter which stock_activities to update
     */
    where?: stock_activityWhereInput
    /**
     * Limit how many stock_activities to update.
     */
    limit?: number
  }

  /**
   * stock_activity updateManyAndReturn
   */
  export type stock_activityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * The data used to update stock_activities.
     */
    data: XOR<stock_activityUpdateManyMutationInput, stock_activityUncheckedUpdateManyInput>
    /**
     * Filter which stock_activities to update
     */
    where?: stock_activityWhereInput
    /**
     * Limit how many stock_activities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_activity upsert
   */
  export type stock_activityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * The filter to search for the stock_activity to update in case it exists.
     */
    where: stock_activityWhereUniqueInput
    /**
     * In case the stock_activity found by the `where` argument doesn't exist, create a new stock_activity with this data.
     */
    create: XOR<stock_activityCreateInput, stock_activityUncheckedCreateInput>
    /**
     * In case the stock_activity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stock_activityUpdateInput, stock_activityUncheckedUpdateInput>
  }

  /**
   * stock_activity delete
   */
  export type stock_activityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
    /**
     * Filter which stock_activity to delete.
     */
    where: stock_activityWhereUniqueInput
  }

  /**
   * stock_activity deleteMany
   */
  export type stock_activityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_activities to delete
     */
    where?: stock_activityWhereInput
    /**
     * Limit how many stock_activities to delete.
     */
    limit?: number
  }

  /**
   * stock_activity.order_detail_stock_activity
   */
  export type stock_activity$order_detail_stock_activityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail_stock_activity
     */
    select?: order_detail_stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail_stock_activity
     */
    omit?: order_detail_stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detail_stock_activityInclude<ExtArgs> | null
    where?: order_detail_stock_activityWhereInput
    orderBy?: order_detail_stock_activityOrderByWithRelationInput | order_detail_stock_activityOrderByWithRelationInput[]
    cursor?: order_detail_stock_activityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_detail_stock_activityScalarFieldEnum | Order_detail_stock_activityScalarFieldEnum[]
  }

  /**
   * stock_activity.distillation_schedule_items
   */
  export type stock_activity$distillation_schedule_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the distillation_schedule_items
     */
    select?: distillation_schedule_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the distillation_schedule_items
     */
    omit?: distillation_schedule_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: distillation_schedule_itemsInclude<ExtArgs> | null
    where?: distillation_schedule_itemsWhereInput
  }

  /**
   * stock_activity.ref_materials
   */
  export type stock_activity$ref_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    where?: ref_materialsWhereInput
  }

  /**
   * stock_activity.order_detail
   */
  export type stock_activity$order_detailArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_detail
     */
    select?: order_detailSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_detail
     */
    omit?: order_detailOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailInclude<ExtArgs> | null
    where?: order_detailWhereInput
  }

  /**
   * stock_activity.ref_suppliers
   */
  export type stock_activity$ref_suppliersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    where?: ref_suppliersWhereInput
  }

  /**
   * stock_activity without action
   */
  export type stock_activityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_activity
     */
    select?: stock_activitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_activity
     */
    omit?: stock_activityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_activityInclude<ExtArgs> | null
  }


  /**
   * Model stock_history
   */

  export type AggregateStock_history = {
    _count: Stock_historyCountAggregateOutputType | null
    _avg: Stock_historyAvgAggregateOutputType | null
    _sum: Stock_historySumAggregateOutputType | null
    _min: Stock_historyMinAggregateOutputType | null
    _max: Stock_historyMaxAggregateOutputType | null
  }

  export type Stock_historyAvgAggregateOutputType = {
    id: number | null
    supplier_id: number | null
    change: number | null
    source_record_id: number | null
  }

  export type Stock_historySumAggregateOutputType = {
    id: number | null
    supplier_id: number | null
    change: number | null
    source_record_id: number | null
  }

  export type Stock_historyMinAggregateOutputType = {
    id: number | null
    date: Date | null
    material_name: string | null
    supplier_id: number | null
    supplier_name: string | null
    change: number | null
    drum_type: string | null
    drum_ids: string | null
    batch_code: string | null
    source_record_id: number | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
  }

  export type Stock_historyMaxAggregateOutputType = {
    id: number | null
    date: Date | null
    material_name: string | null
    supplier_id: number | null
    supplier_name: string | null
    change: number | null
    drum_type: string | null
    drum_ids: string | null
    batch_code: string | null
    source_record_id: number | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
  }

  export type Stock_historyCountAggregateOutputType = {
    id: number
    date: number
    material_name: number
    supplier_id: number
    supplier_name: number
    change: number
    drum_type: number
    drum_ids: number
    batch_code: number
    source_record_id: number
    created_at: number
    updated_at: number
    material_code: number
    _all: number
  }


  export type Stock_historyAvgAggregateInputType = {
    id?: true
    supplier_id?: true
    change?: true
    source_record_id?: true
  }

  export type Stock_historySumAggregateInputType = {
    id?: true
    supplier_id?: true
    change?: true
    source_record_id?: true
  }

  export type Stock_historyMinAggregateInputType = {
    id?: true
    date?: true
    material_name?: true
    supplier_id?: true
    supplier_name?: true
    change?: true
    drum_type?: true
    drum_ids?: true
    batch_code?: true
    source_record_id?: true
    created_at?: true
    updated_at?: true
    material_code?: true
  }

  export type Stock_historyMaxAggregateInputType = {
    id?: true
    date?: true
    material_name?: true
    supplier_id?: true
    supplier_name?: true
    change?: true
    drum_type?: true
    drum_ids?: true
    batch_code?: true
    source_record_id?: true
    created_at?: true
    updated_at?: true
    material_code?: true
  }

  export type Stock_historyCountAggregateInputType = {
    id?: true
    date?: true
    material_name?: true
    supplier_id?: true
    supplier_name?: true
    change?: true
    drum_type?: true
    drum_ids?: true
    batch_code?: true
    source_record_id?: true
    created_at?: true
    updated_at?: true
    material_code?: true
    _all?: true
  }

  export type Stock_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_history to aggregate.
     */
    where?: stock_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_histories to fetch.
     */
    orderBy?: stock_historyOrderByWithRelationInput | stock_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: stock_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned stock_histories
    **/
    _count?: true | Stock_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Stock_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Stock_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Stock_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Stock_historyMaxAggregateInputType
  }

  export type GetStock_historyAggregateType<T extends Stock_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateStock_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock_history[P]>
      : GetScalarType<T[P], AggregateStock_history[P]>
  }




  export type stock_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: stock_historyWhereInput
    orderBy?: stock_historyOrderByWithAggregationInput | stock_historyOrderByWithAggregationInput[]
    by: Stock_historyScalarFieldEnum[] | Stock_historyScalarFieldEnum
    having?: stock_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Stock_historyCountAggregateInputType | true
    _avg?: Stock_historyAvgAggregateInputType
    _sum?: Stock_historySumAggregateInputType
    _min?: Stock_historyMinAggregateInputType
    _max?: Stock_historyMaxAggregateInputType
  }

  export type Stock_historyGroupByOutputType = {
    id: number
    date: Date
    material_name: string
    supplier_id: number | null
    supplier_name: string | null
    change: number | null
    drum_type: string
    drum_ids: string | null
    batch_code: string | null
    source_record_id: number | null
    created_at: Date | null
    updated_at: Date | null
    material_code: string | null
    _count: Stock_historyCountAggregateOutputType | null
    _avg: Stock_historyAvgAggregateOutputType | null
    _sum: Stock_historySumAggregateOutputType | null
    _min: Stock_historyMinAggregateOutputType | null
    _max: Stock_historyMaxAggregateOutputType | null
  }

  type GetStock_historyGroupByPayload<T extends stock_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Stock_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Stock_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Stock_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Stock_historyGroupByOutputType[P]>
        }
      >
    >


  export type stock_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    material_name?: boolean
    supplier_id?: boolean
    supplier_name?: boolean
    change?: boolean
    drum_type?: boolean
    drum_ids?: boolean
    batch_code?: boolean
    source_record_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | stock_history$ref_materialsArgs<ExtArgs>
    raw_stock_history?: boolean | stock_history$raw_stock_historyArgs<ExtArgs>
    ref_suppliers?: boolean | stock_history$ref_suppliersArgs<ExtArgs>
  }, ExtArgs["result"]["stock_history"]>

  export type stock_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    material_name?: boolean
    supplier_id?: boolean
    supplier_name?: boolean
    change?: boolean
    drum_type?: boolean
    drum_ids?: boolean
    batch_code?: boolean
    source_record_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | stock_history$ref_materialsArgs<ExtArgs>
    raw_stock_history?: boolean | stock_history$raw_stock_historyArgs<ExtArgs>
    ref_suppliers?: boolean | stock_history$ref_suppliersArgs<ExtArgs>
  }, ExtArgs["result"]["stock_history"]>

  export type stock_historySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date?: boolean
    material_name?: boolean
    supplier_id?: boolean
    supplier_name?: boolean
    change?: boolean
    drum_type?: boolean
    drum_ids?: boolean
    batch_code?: boolean
    source_record_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | stock_history$ref_materialsArgs<ExtArgs>
    raw_stock_history?: boolean | stock_history$raw_stock_historyArgs<ExtArgs>
    ref_suppliers?: boolean | stock_history$ref_suppliersArgs<ExtArgs>
  }, ExtArgs["result"]["stock_history"]>

  export type stock_historySelectScalar = {
    id?: boolean
    date?: boolean
    material_name?: boolean
    supplier_id?: boolean
    supplier_name?: boolean
    change?: boolean
    drum_type?: boolean
    drum_ids?: boolean
    batch_code?: boolean
    source_record_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    material_code?: boolean
  }

  export type stock_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "date" | "material_name" | "supplier_id" | "supplier_name" | "change" | "drum_type" | "drum_ids" | "batch_code" | "source_record_id" | "created_at" | "updated_at" | "material_code", ExtArgs["result"]["stock_history"]>
  export type stock_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | stock_history$ref_materialsArgs<ExtArgs>
    raw_stock_history?: boolean | stock_history$raw_stock_historyArgs<ExtArgs>
    ref_suppliers?: boolean | stock_history$ref_suppliersArgs<ExtArgs>
  }
  export type stock_historyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | stock_history$ref_materialsArgs<ExtArgs>
    raw_stock_history?: boolean | stock_history$raw_stock_historyArgs<ExtArgs>
    ref_suppliers?: boolean | stock_history$ref_suppliersArgs<ExtArgs>
  }
  export type stock_historyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | stock_history$ref_materialsArgs<ExtArgs>
    raw_stock_history?: boolean | stock_history$raw_stock_historyArgs<ExtArgs>
    ref_suppliers?: boolean | stock_history$ref_suppliersArgs<ExtArgs>
  }

  export type $stock_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "stock_history"
    objects: {
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs> | null
      raw_stock_history: Prisma.$raw_stock_historyPayload<ExtArgs> | null
      ref_suppliers: Prisma.$ref_suppliersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      date: Date
      material_name: string
      supplier_id: number | null
      supplier_name: string | null
      change: number | null
      drum_type: string
      drum_ids: string | null
      batch_code: string | null
      source_record_id: number | null
      created_at: Date | null
      updated_at: Date | null
      material_code: string | null
    }, ExtArgs["result"]["stock_history"]>
    composites: {}
  }

  type stock_historyGetPayload<S extends boolean | null | undefined | stock_historyDefaultArgs> = $Result.GetResult<Prisma.$stock_historyPayload, S>

  type stock_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<stock_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Stock_historyCountAggregateInputType | true
    }

  export interface stock_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stock_history'], meta: { name: 'stock_history' } }
    /**
     * Find zero or one Stock_history that matches the filter.
     * @param {stock_historyFindUniqueArgs} args - Arguments to find a Stock_history
     * @example
     * // Get one Stock_history
     * const stock_history = await prisma.stock_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends stock_historyFindUniqueArgs>(args: SelectSubset<T, stock_historyFindUniqueArgs<ExtArgs>>): Prisma__stock_historyClient<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stock_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {stock_historyFindUniqueOrThrowArgs} args - Arguments to find a Stock_history
     * @example
     * // Get one Stock_history
     * const stock_history = await prisma.stock_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends stock_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, stock_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__stock_historyClient<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_historyFindFirstArgs} args - Arguments to find a Stock_history
     * @example
     * // Get one Stock_history
     * const stock_history = await prisma.stock_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends stock_historyFindFirstArgs>(args?: SelectSubset<T, stock_historyFindFirstArgs<ExtArgs>>): Prisma__stock_historyClient<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_historyFindFirstOrThrowArgs} args - Arguments to find a Stock_history
     * @example
     * // Get one Stock_history
     * const stock_history = await prisma.stock_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends stock_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, stock_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__stock_historyClient<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stock_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stock_histories
     * const stock_histories = await prisma.stock_history.findMany()
     * 
     * // Get first 10 Stock_histories
     * const stock_histories = await prisma.stock_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stock_historyWithIdOnly = await prisma.stock_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends stock_historyFindManyArgs>(args?: SelectSubset<T, stock_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stock_history.
     * @param {stock_historyCreateArgs} args - Arguments to create a Stock_history.
     * @example
     * // Create one Stock_history
     * const Stock_history = await prisma.stock_history.create({
     *   data: {
     *     // ... data to create a Stock_history
     *   }
     * })
     * 
     */
    create<T extends stock_historyCreateArgs>(args: SelectSubset<T, stock_historyCreateArgs<ExtArgs>>): Prisma__stock_historyClient<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stock_histories.
     * @param {stock_historyCreateManyArgs} args - Arguments to create many Stock_histories.
     * @example
     * // Create many Stock_histories
     * const stock_history = await prisma.stock_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends stock_historyCreateManyArgs>(args?: SelectSubset<T, stock_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stock_histories and returns the data saved in the database.
     * @param {stock_historyCreateManyAndReturnArgs} args - Arguments to create many Stock_histories.
     * @example
     * // Create many Stock_histories
     * const stock_history = await prisma.stock_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stock_histories and only return the `id`
     * const stock_historyWithIdOnly = await prisma.stock_history.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends stock_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, stock_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stock_history.
     * @param {stock_historyDeleteArgs} args - Arguments to delete one Stock_history.
     * @example
     * // Delete one Stock_history
     * const Stock_history = await prisma.stock_history.delete({
     *   where: {
     *     // ... filter to delete one Stock_history
     *   }
     * })
     * 
     */
    delete<T extends stock_historyDeleteArgs>(args: SelectSubset<T, stock_historyDeleteArgs<ExtArgs>>): Prisma__stock_historyClient<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stock_history.
     * @param {stock_historyUpdateArgs} args - Arguments to update one Stock_history.
     * @example
     * // Update one Stock_history
     * const stock_history = await prisma.stock_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends stock_historyUpdateArgs>(args: SelectSubset<T, stock_historyUpdateArgs<ExtArgs>>): Prisma__stock_historyClient<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stock_histories.
     * @param {stock_historyDeleteManyArgs} args - Arguments to filter Stock_histories to delete.
     * @example
     * // Delete a few Stock_histories
     * const { count } = await prisma.stock_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends stock_historyDeleteManyArgs>(args?: SelectSubset<T, stock_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stock_histories
     * const stock_history = await prisma.stock_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends stock_historyUpdateManyArgs>(args: SelectSubset<T, stock_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stock_histories and returns the data updated in the database.
     * @param {stock_historyUpdateManyAndReturnArgs} args - Arguments to update many Stock_histories.
     * @example
     * // Update many Stock_histories
     * const stock_history = await prisma.stock_history.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stock_histories and only return the `id`
     * const stock_historyWithIdOnly = await prisma.stock_history.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends stock_historyUpdateManyAndReturnArgs>(args: SelectSubset<T, stock_historyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stock_history.
     * @param {stock_historyUpsertArgs} args - Arguments to update or create a Stock_history.
     * @example
     * // Update or create a Stock_history
     * const stock_history = await prisma.stock_history.upsert({
     *   create: {
     *     // ... data to create a Stock_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock_history we want to update
     *   }
     * })
     */
    upsert<T extends stock_historyUpsertArgs>(args: SelectSubset<T, stock_historyUpsertArgs<ExtArgs>>): Prisma__stock_historyClient<$Result.GetResult<Prisma.$stock_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stock_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_historyCountArgs} args - Arguments to filter Stock_histories to count.
     * @example
     * // Count the number of Stock_histories
     * const count = await prisma.stock_history.count({
     *   where: {
     *     // ... the filter for the Stock_histories we want to count
     *   }
     * })
    **/
    count<T extends stock_historyCountArgs>(
      args?: Subset<T, stock_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Stock_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Stock_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Stock_historyAggregateArgs>(args: Subset<T, Stock_historyAggregateArgs>): Prisma.PrismaPromise<GetStock_historyAggregateType<T>>

    /**
     * Group by Stock_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {stock_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends stock_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: stock_historyGroupByArgs['orderBy'] }
        : { orderBy?: stock_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, stock_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStock_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the stock_history model
   */
  readonly fields: stock_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for stock_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__stock_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ref_materials<T extends stock_history$ref_materialsArgs<ExtArgs> = {}>(args?: Subset<T, stock_history$ref_materialsArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    raw_stock_history<T extends stock_history$raw_stock_historyArgs<ExtArgs> = {}>(args?: Subset<T, stock_history$raw_stock_historyArgs<ExtArgs>>): Prisma__raw_stock_historyClient<$Result.GetResult<Prisma.$raw_stock_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ref_suppliers<T extends stock_history$ref_suppliersArgs<ExtArgs> = {}>(args?: Subset<T, stock_history$ref_suppliersArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the stock_history model
   */
  interface stock_historyFieldRefs {
    readonly id: FieldRef<"stock_history", 'Int'>
    readonly date: FieldRef<"stock_history", 'DateTime'>
    readonly material_name: FieldRef<"stock_history", 'String'>
    readonly supplier_id: FieldRef<"stock_history", 'Int'>
    readonly supplier_name: FieldRef<"stock_history", 'String'>
    readonly change: FieldRef<"stock_history", 'Int'>
    readonly drum_type: FieldRef<"stock_history", 'String'>
    readonly drum_ids: FieldRef<"stock_history", 'String'>
    readonly batch_code: FieldRef<"stock_history", 'String'>
    readonly source_record_id: FieldRef<"stock_history", 'Int'>
    readonly created_at: FieldRef<"stock_history", 'DateTime'>
    readonly updated_at: FieldRef<"stock_history", 'DateTime'>
    readonly material_code: FieldRef<"stock_history", 'String'>
  }
    

  // Custom InputTypes
  /**
   * stock_history findUnique
   */
  export type stock_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which stock_history to fetch.
     */
    where: stock_historyWhereUniqueInput
  }

  /**
   * stock_history findUniqueOrThrow
   */
  export type stock_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which stock_history to fetch.
     */
    where: stock_historyWhereUniqueInput
  }

  /**
   * stock_history findFirst
   */
  export type stock_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which stock_history to fetch.
     */
    where?: stock_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_histories to fetch.
     */
    orderBy?: stock_historyOrderByWithRelationInput | stock_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_histories.
     */
    cursor?: stock_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_histories.
     */
    distinct?: Stock_historyScalarFieldEnum | Stock_historyScalarFieldEnum[]
  }

  /**
   * stock_history findFirstOrThrow
   */
  export type stock_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which stock_history to fetch.
     */
    where?: stock_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_histories to fetch.
     */
    orderBy?: stock_historyOrderByWithRelationInput | stock_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for stock_histories.
     */
    cursor?: stock_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of stock_histories.
     */
    distinct?: Stock_historyScalarFieldEnum | Stock_historyScalarFieldEnum[]
  }

  /**
   * stock_history findMany
   */
  export type stock_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * Filter, which stock_histories to fetch.
     */
    where?: stock_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of stock_histories to fetch.
     */
    orderBy?: stock_historyOrderByWithRelationInput | stock_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing stock_histories.
     */
    cursor?: stock_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` stock_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` stock_histories.
     */
    skip?: number
    distinct?: Stock_historyScalarFieldEnum | Stock_historyScalarFieldEnum[]
  }

  /**
   * stock_history create
   */
  export type stock_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a stock_history.
     */
    data: XOR<stock_historyCreateInput, stock_historyUncheckedCreateInput>
  }

  /**
   * stock_history createMany
   */
  export type stock_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many stock_histories.
     */
    data: stock_historyCreateManyInput | stock_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * stock_history createManyAndReturn
   */
  export type stock_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * The data used to create many stock_histories.
     */
    data: stock_historyCreateManyInput | stock_historyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_history update
   */
  export type stock_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a stock_history.
     */
    data: XOR<stock_historyUpdateInput, stock_historyUncheckedUpdateInput>
    /**
     * Choose, which stock_history to update.
     */
    where: stock_historyWhereUniqueInput
  }

  /**
   * stock_history updateMany
   */
  export type stock_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update stock_histories.
     */
    data: XOR<stock_historyUpdateManyMutationInput, stock_historyUncheckedUpdateManyInput>
    /**
     * Filter which stock_histories to update
     */
    where?: stock_historyWhereInput
    /**
     * Limit how many stock_histories to update.
     */
    limit?: number
  }

  /**
   * stock_history updateManyAndReturn
   */
  export type stock_historyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * The data used to update stock_histories.
     */
    data: XOR<stock_historyUpdateManyMutationInput, stock_historyUncheckedUpdateManyInput>
    /**
     * Filter which stock_histories to update
     */
    where?: stock_historyWhereInput
    /**
     * Limit how many stock_histories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * stock_history upsert
   */
  export type stock_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the stock_history to update in case it exists.
     */
    where: stock_historyWhereUniqueInput
    /**
     * In case the stock_history found by the `where` argument doesn't exist, create a new stock_history with this data.
     */
    create: XOR<stock_historyCreateInput, stock_historyUncheckedCreateInput>
    /**
     * In case the stock_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<stock_historyUpdateInput, stock_historyUncheckedUpdateInput>
  }

  /**
   * stock_history delete
   */
  export type stock_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
    /**
     * Filter which stock_history to delete.
     */
    where: stock_historyWhereUniqueInput
  }

  /**
   * stock_history deleteMany
   */
  export type stock_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which stock_histories to delete
     */
    where?: stock_historyWhereInput
    /**
     * Limit how many stock_histories to delete.
     */
    limit?: number
  }

  /**
   * stock_history.ref_materials
   */
  export type stock_history$ref_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    where?: ref_materialsWhereInput
  }

  /**
   * stock_history.raw_stock_history
   */
  export type stock_history$raw_stock_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the raw_stock_history
     */
    select?: raw_stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the raw_stock_history
     */
    omit?: raw_stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: raw_stock_historyInclude<ExtArgs> | null
    where?: raw_stock_historyWhereInput
  }

  /**
   * stock_history.ref_suppliers
   */
  export type stock_history$ref_suppliersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_suppliers
     */
    select?: ref_suppliersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_suppliers
     */
    omit?: ref_suppliersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_suppliersInclude<ExtArgs> | null
    where?: ref_suppliersWhereInput
  }

  /**
   * stock_history without action
   */
  export type stock_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the stock_history
     */
    select?: stock_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the stock_history
     */
    omit?: stock_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: stock_historyInclude<ExtArgs> | null
  }


  /**
   * Model ref_product
   */

  export type AggregateRef_product = {
    _count: Ref_productCountAggregateOutputType | null
    _avg: Ref_productAvgAggregateOutputType | null
    _sum: Ref_productSumAggregateOutputType | null
    _min: Ref_productMinAggregateOutputType | null
    _max: Ref_productMaxAggregateOutputType | null
  }

  export type Ref_productAvgAggregateOutputType = {
    product_id: number | null
    raw_material_id: number | null
  }

  export type Ref_productSumAggregateOutputType = {
    product_id: number | null
    raw_material_id: number | null
  }

  export type Ref_productMinAggregateOutputType = {
    product_id: number | null
    name: string | null
    sku: string | null
    raw_material_id: number | null
    grade: string | null
    material_code: string | null
  }

  export type Ref_productMaxAggregateOutputType = {
    product_id: number | null
    name: string | null
    sku: string | null
    raw_material_id: number | null
    grade: string | null
    material_code: string | null
  }

  export type Ref_productCountAggregateOutputType = {
    product_id: number
    name: number
    sku: number
    raw_material_id: number
    grade: number
    material_code: number
    _all: number
  }


  export type Ref_productAvgAggregateInputType = {
    product_id?: true
    raw_material_id?: true
  }

  export type Ref_productSumAggregateInputType = {
    product_id?: true
    raw_material_id?: true
  }

  export type Ref_productMinAggregateInputType = {
    product_id?: true
    name?: true
    sku?: true
    raw_material_id?: true
    grade?: true
    material_code?: true
  }

  export type Ref_productMaxAggregateInputType = {
    product_id?: true
    name?: true
    sku?: true
    raw_material_id?: true
    grade?: true
    material_code?: true
  }

  export type Ref_productCountAggregateInputType = {
    product_id?: true
    name?: true
    sku?: true
    raw_material_id?: true
    grade?: true
    material_code?: true
    _all?: true
  }

  export type Ref_productAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_product to aggregate.
     */
    where?: ref_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_products to fetch.
     */
    orderBy?: ref_productOrderByWithRelationInput | ref_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ref_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ref_products
    **/
    _count?: true | Ref_productCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ref_productAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ref_productSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ref_productMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ref_productMaxAggregateInputType
  }

  export type GetRef_productAggregateType<T extends Ref_productAggregateArgs> = {
        [P in keyof T & keyof AggregateRef_product]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRef_product[P]>
      : GetScalarType<T[P], AggregateRef_product[P]>
  }




  export type ref_productGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_productWhereInput
    orderBy?: ref_productOrderByWithAggregationInput | ref_productOrderByWithAggregationInput[]
    by: Ref_productScalarFieldEnum[] | Ref_productScalarFieldEnum
    having?: ref_productScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ref_productCountAggregateInputType | true
    _avg?: Ref_productAvgAggregateInputType
    _sum?: Ref_productSumAggregateInputType
    _min?: Ref_productMinAggregateInputType
    _max?: Ref_productMaxAggregateInputType
  }

  export type Ref_productGroupByOutputType = {
    product_id: number
    name: string
    sku: string
    raw_material_id: number | null
    grade: string
    material_code: string | null
    _count: Ref_productCountAggregateOutputType | null
    _avg: Ref_productAvgAggregateOutputType | null
    _sum: Ref_productSumAggregateOutputType | null
    _min: Ref_productMinAggregateOutputType | null
    _max: Ref_productMaxAggregateOutputType | null
  }

  type GetRef_productGroupByPayload<T extends ref_productGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ref_productGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ref_productGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ref_productGroupByOutputType[P]>
            : GetScalarType<T[P], Ref_productGroupByOutputType[P]>
        }
      >
    >


  export type ref_productSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_id?: boolean
    name?: boolean
    sku?: boolean
    raw_material_id?: boolean
    grade?: boolean
    material_code?: boolean
    product_prices?: boolean | ref_product$product_pricesArgs<ExtArgs>
    ref_materials?: boolean | ref_product$ref_materialsArgs<ExtArgs>
    _count?: boolean | Ref_productCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_product"]>

  export type ref_productSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_id?: boolean
    name?: boolean
    sku?: boolean
    raw_material_id?: boolean
    grade?: boolean
    material_code?: boolean
    ref_materials?: boolean | ref_product$ref_materialsArgs<ExtArgs>
  }, ExtArgs["result"]["ref_product"]>

  export type ref_productSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_id?: boolean
    name?: boolean
    sku?: boolean
    raw_material_id?: boolean
    grade?: boolean
    material_code?: boolean
    ref_materials?: boolean | ref_product$ref_materialsArgs<ExtArgs>
  }, ExtArgs["result"]["ref_product"]>

  export type ref_productSelectScalar = {
    product_id?: boolean
    name?: boolean
    sku?: boolean
    raw_material_id?: boolean
    grade?: boolean
    material_code?: boolean
  }

  export type ref_productOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"product_id" | "name" | "sku" | "raw_material_id" | "grade" | "material_code", ExtArgs["result"]["ref_product"]>
  export type ref_productInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_prices?: boolean | ref_product$product_pricesArgs<ExtArgs>
    ref_materials?: boolean | ref_product$ref_materialsArgs<ExtArgs>
    _count?: boolean | Ref_productCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ref_productIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | ref_product$ref_materialsArgs<ExtArgs>
  }
  export type ref_productIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | ref_product$ref_materialsArgs<ExtArgs>
  }

  export type $ref_productPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ref_product"
    objects: {
      product_prices: Prisma.$product_pricesPayload<ExtArgs>[]
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      product_id: number
      name: string
      sku: string
      raw_material_id: number | null
      grade: string
      material_code: string | null
    }, ExtArgs["result"]["ref_product"]>
    composites: {}
  }

  type ref_productGetPayload<S extends boolean | null | undefined | ref_productDefaultArgs> = $Result.GetResult<Prisma.$ref_productPayload, S>

  type ref_productCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ref_productFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ref_productCountAggregateInputType | true
    }

  export interface ref_productDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ref_product'], meta: { name: 'ref_product' } }
    /**
     * Find zero or one Ref_product that matches the filter.
     * @param {ref_productFindUniqueArgs} args - Arguments to find a Ref_product
     * @example
     * // Get one Ref_product
     * const ref_product = await prisma.ref_product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ref_productFindUniqueArgs>(args: SelectSubset<T, ref_productFindUniqueArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ref_product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ref_productFindUniqueOrThrowArgs} args - Arguments to find a Ref_product
     * @example
     * // Get one Ref_product
     * const ref_product = await prisma.ref_product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ref_productFindUniqueOrThrowArgs>(args: SelectSubset<T, ref_productFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_productFindFirstArgs} args - Arguments to find a Ref_product
     * @example
     * // Get one Ref_product
     * const ref_product = await prisma.ref_product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ref_productFindFirstArgs>(args?: SelectSubset<T, ref_productFindFirstArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_productFindFirstOrThrowArgs} args - Arguments to find a Ref_product
     * @example
     * // Get one Ref_product
     * const ref_product = await prisma.ref_product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ref_productFindFirstOrThrowArgs>(args?: SelectSubset<T, ref_productFindFirstOrThrowArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ref_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_productFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ref_products
     * const ref_products = await prisma.ref_product.findMany()
     * 
     * // Get first 10 Ref_products
     * const ref_products = await prisma.ref_product.findMany({ take: 10 })
     * 
     * // Only select the `product_id`
     * const ref_productWithProduct_idOnly = await prisma.ref_product.findMany({ select: { product_id: true } })
     * 
     */
    findMany<T extends ref_productFindManyArgs>(args?: SelectSubset<T, ref_productFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ref_product.
     * @param {ref_productCreateArgs} args - Arguments to create a Ref_product.
     * @example
     * // Create one Ref_product
     * const Ref_product = await prisma.ref_product.create({
     *   data: {
     *     // ... data to create a Ref_product
     *   }
     * })
     * 
     */
    create<T extends ref_productCreateArgs>(args: SelectSubset<T, ref_productCreateArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ref_products.
     * @param {ref_productCreateManyArgs} args - Arguments to create many Ref_products.
     * @example
     * // Create many Ref_products
     * const ref_product = await prisma.ref_product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ref_productCreateManyArgs>(args?: SelectSubset<T, ref_productCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ref_products and returns the data saved in the database.
     * @param {ref_productCreateManyAndReturnArgs} args - Arguments to create many Ref_products.
     * @example
     * // Create many Ref_products
     * const ref_product = await prisma.ref_product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ref_products and only return the `product_id`
     * const ref_productWithProduct_idOnly = await prisma.ref_product.createManyAndReturn({
     *   select: { product_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ref_productCreateManyAndReturnArgs>(args?: SelectSubset<T, ref_productCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ref_product.
     * @param {ref_productDeleteArgs} args - Arguments to delete one Ref_product.
     * @example
     * // Delete one Ref_product
     * const Ref_product = await prisma.ref_product.delete({
     *   where: {
     *     // ... filter to delete one Ref_product
     *   }
     * })
     * 
     */
    delete<T extends ref_productDeleteArgs>(args: SelectSubset<T, ref_productDeleteArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ref_product.
     * @param {ref_productUpdateArgs} args - Arguments to update one Ref_product.
     * @example
     * // Update one Ref_product
     * const ref_product = await prisma.ref_product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ref_productUpdateArgs>(args: SelectSubset<T, ref_productUpdateArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ref_products.
     * @param {ref_productDeleteManyArgs} args - Arguments to filter Ref_products to delete.
     * @example
     * // Delete a few Ref_products
     * const { count } = await prisma.ref_product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ref_productDeleteManyArgs>(args?: SelectSubset<T, ref_productDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_productUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ref_products
     * const ref_product = await prisma.ref_product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ref_productUpdateManyArgs>(args: SelectSubset<T, ref_productUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_products and returns the data updated in the database.
     * @param {ref_productUpdateManyAndReturnArgs} args - Arguments to update many Ref_products.
     * @example
     * // Update many Ref_products
     * const ref_product = await prisma.ref_product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ref_products and only return the `product_id`
     * const ref_productWithProduct_idOnly = await prisma.ref_product.updateManyAndReturn({
     *   select: { product_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ref_productUpdateManyAndReturnArgs>(args: SelectSubset<T, ref_productUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ref_product.
     * @param {ref_productUpsertArgs} args - Arguments to update or create a Ref_product.
     * @example
     * // Update or create a Ref_product
     * const ref_product = await prisma.ref_product.upsert({
     *   create: {
     *     // ... data to create a Ref_product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ref_product we want to update
     *   }
     * })
     */
    upsert<T extends ref_productUpsertArgs>(args: SelectSubset<T, ref_productUpsertArgs<ExtArgs>>): Prisma__ref_productClient<$Result.GetResult<Prisma.$ref_productPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ref_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_productCountArgs} args - Arguments to filter Ref_products to count.
     * @example
     * // Count the number of Ref_products
     * const count = await prisma.ref_product.count({
     *   where: {
     *     // ... the filter for the Ref_products we want to count
     *   }
     * })
    **/
    count<T extends ref_productCountArgs>(
      args?: Subset<T, ref_productCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ref_productCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ref_product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ref_productAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ref_productAggregateArgs>(args: Subset<T, Ref_productAggregateArgs>): Prisma.PrismaPromise<GetRef_productAggregateType<T>>

    /**
     * Group by Ref_product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_productGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ref_productGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ref_productGroupByArgs['orderBy'] }
        : { orderBy?: ref_productGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ref_productGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRef_productGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ref_product model
   */
  readonly fields: ref_productFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ref_product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ref_productClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_prices<T extends ref_product$product_pricesArgs<ExtArgs> = {}>(args?: Subset<T, ref_product$product_pricesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_pricesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ref_materials<T extends ref_product$ref_materialsArgs<ExtArgs> = {}>(args?: Subset<T, ref_product$ref_materialsArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ref_product model
   */
  interface ref_productFieldRefs {
    readonly product_id: FieldRef<"ref_product", 'Int'>
    readonly name: FieldRef<"ref_product", 'String'>
    readonly sku: FieldRef<"ref_product", 'String'>
    readonly raw_material_id: FieldRef<"ref_product", 'Int'>
    readonly grade: FieldRef<"ref_product", 'String'>
    readonly material_code: FieldRef<"ref_product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ref_product findUnique
   */
  export type ref_productFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * Filter, which ref_product to fetch.
     */
    where: ref_productWhereUniqueInput
  }

  /**
   * ref_product findUniqueOrThrow
   */
  export type ref_productFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * Filter, which ref_product to fetch.
     */
    where: ref_productWhereUniqueInput
  }

  /**
   * ref_product findFirst
   */
  export type ref_productFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * Filter, which ref_product to fetch.
     */
    where?: ref_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_products to fetch.
     */
    orderBy?: ref_productOrderByWithRelationInput | ref_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_products.
     */
    cursor?: ref_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_products.
     */
    distinct?: Ref_productScalarFieldEnum | Ref_productScalarFieldEnum[]
  }

  /**
   * ref_product findFirstOrThrow
   */
  export type ref_productFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * Filter, which ref_product to fetch.
     */
    where?: ref_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_products to fetch.
     */
    orderBy?: ref_productOrderByWithRelationInput | ref_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_products.
     */
    cursor?: ref_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_products.
     */
    distinct?: Ref_productScalarFieldEnum | Ref_productScalarFieldEnum[]
  }

  /**
   * ref_product findMany
   */
  export type ref_productFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * Filter, which ref_products to fetch.
     */
    where?: ref_productWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_products to fetch.
     */
    orderBy?: ref_productOrderByWithRelationInput | ref_productOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ref_products.
     */
    cursor?: ref_productWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_products.
     */
    skip?: number
    distinct?: Ref_productScalarFieldEnum | Ref_productScalarFieldEnum[]
  }

  /**
   * ref_product create
   */
  export type ref_productCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * The data needed to create a ref_product.
     */
    data: XOR<ref_productCreateInput, ref_productUncheckedCreateInput>
  }

  /**
   * ref_product createMany
   */
  export type ref_productCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ref_products.
     */
    data: ref_productCreateManyInput | ref_productCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ref_product createManyAndReturn
   */
  export type ref_productCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * The data used to create many ref_products.
     */
    data: ref_productCreateManyInput | ref_productCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ref_product update
   */
  export type ref_productUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * The data needed to update a ref_product.
     */
    data: XOR<ref_productUpdateInput, ref_productUncheckedUpdateInput>
    /**
     * Choose, which ref_product to update.
     */
    where: ref_productWhereUniqueInput
  }

  /**
   * ref_product updateMany
   */
  export type ref_productUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ref_products.
     */
    data: XOR<ref_productUpdateManyMutationInput, ref_productUncheckedUpdateManyInput>
    /**
     * Filter which ref_products to update
     */
    where?: ref_productWhereInput
    /**
     * Limit how many ref_products to update.
     */
    limit?: number
  }

  /**
   * ref_product updateManyAndReturn
   */
  export type ref_productUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * The data used to update ref_products.
     */
    data: XOR<ref_productUpdateManyMutationInput, ref_productUncheckedUpdateManyInput>
    /**
     * Filter which ref_products to update
     */
    where?: ref_productWhereInput
    /**
     * Limit how many ref_products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ref_product upsert
   */
  export type ref_productUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * The filter to search for the ref_product to update in case it exists.
     */
    where: ref_productWhereUniqueInput
    /**
     * In case the ref_product found by the `where` argument doesn't exist, create a new ref_product with this data.
     */
    create: XOR<ref_productCreateInput, ref_productUncheckedCreateInput>
    /**
     * In case the ref_product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ref_productUpdateInput, ref_productUncheckedUpdateInput>
  }

  /**
   * ref_product delete
   */
  export type ref_productDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
    /**
     * Filter which ref_product to delete.
     */
    where: ref_productWhereUniqueInput
  }

  /**
   * ref_product deleteMany
   */
  export type ref_productDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_products to delete
     */
    where?: ref_productWhereInput
    /**
     * Limit how many ref_products to delete.
     */
    limit?: number
  }

  /**
   * ref_product.product_prices
   */
  export type ref_product$product_pricesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_prices
     */
    select?: product_pricesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_prices
     */
    omit?: product_pricesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_pricesInclude<ExtArgs> | null
    where?: product_pricesWhereInput
    orderBy?: product_pricesOrderByWithRelationInput | product_pricesOrderByWithRelationInput[]
    cursor?: product_pricesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_pricesScalarFieldEnum | Product_pricesScalarFieldEnum[]
  }

  /**
   * ref_product.ref_materials
   */
  export type ref_product$ref_materialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_materials
     */
    select?: ref_materialsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_materials
     */
    omit?: ref_materialsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_materialsInclude<ExtArgs> | null
    where?: ref_materialsWhereInput
  }

  /**
   * ref_product without action
   */
  export type ref_productDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_product
     */
    select?: ref_productSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_product
     */
    omit?: ref_productOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_productInclude<ExtArgs> | null
  }


  /**
   * Model ref_supplier_material
   */

  export type AggregateRef_supplier_material = {
    _count: Ref_supplier_materialCountAggregateOutputType | null
    _avg: Ref_supplier_materialAvgAggregateOutputType | null
    _sum: Ref_supplier_materialSumAggregateOutputType | null
    _min: Ref_supplier_materialMinAggregateOutputType | null
    _max: Ref_supplier_materialMaxAggregateOutputType | null
  }

  export type Ref_supplier_materialAvgAggregateOutputType = {
    supplier_id: number | null
    quantity: number | null
  }

  export type Ref_supplier_materialSumAggregateOutputType = {
    supplier_id: number | null
    quantity: number | null
  }

  export type Ref_supplier_materialMinAggregateOutputType = {
    supplier_id: number | null
    material_name: string | null
    quantity: number | null
    location: string | null
    updated_at: Date | null
    material_code: string | null
  }

  export type Ref_supplier_materialMaxAggregateOutputType = {
    supplier_id: number | null
    material_name: string | null
    quantity: number | null
    location: string | null
    updated_at: Date | null
    material_code: string | null
  }

  export type Ref_supplier_materialCountAggregateOutputType = {
    supplier_id: number
    material_name: number
    quantity: number
    location: number
    updated_at: number
    material_code: number
    _all: number
  }


  export type Ref_supplier_materialAvgAggregateInputType = {
    supplier_id?: true
    quantity?: true
  }

  export type Ref_supplier_materialSumAggregateInputType = {
    supplier_id?: true
    quantity?: true
  }

  export type Ref_supplier_materialMinAggregateInputType = {
    supplier_id?: true
    material_name?: true
    quantity?: true
    location?: true
    updated_at?: true
    material_code?: true
  }

  export type Ref_supplier_materialMaxAggregateInputType = {
    supplier_id?: true
    material_name?: true
    quantity?: true
    location?: true
    updated_at?: true
    material_code?: true
  }

  export type Ref_supplier_materialCountAggregateInputType = {
    supplier_id?: true
    material_name?: true
    quantity?: true
    location?: true
    updated_at?: true
    material_code?: true
    _all?: true
  }

  export type Ref_supplier_materialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_supplier_material to aggregate.
     */
    where?: ref_supplier_materialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_supplier_materials to fetch.
     */
    orderBy?: ref_supplier_materialOrderByWithRelationInput | ref_supplier_materialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ref_supplier_materialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_supplier_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_supplier_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ref_supplier_materials
    **/
    _count?: true | Ref_supplier_materialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ref_supplier_materialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ref_supplier_materialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ref_supplier_materialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ref_supplier_materialMaxAggregateInputType
  }

  export type GetRef_supplier_materialAggregateType<T extends Ref_supplier_materialAggregateArgs> = {
        [P in keyof T & keyof AggregateRef_supplier_material]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRef_supplier_material[P]>
      : GetScalarType<T[P], AggregateRef_supplier_material[P]>
  }




  export type ref_supplier_materialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ref_supplier_materialWhereInput
    orderBy?: ref_supplier_materialOrderByWithAggregationInput | ref_supplier_materialOrderByWithAggregationInput[]
    by: Ref_supplier_materialScalarFieldEnum[] | Ref_supplier_materialScalarFieldEnum
    having?: ref_supplier_materialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ref_supplier_materialCountAggregateInputType | true
    _avg?: Ref_supplier_materialAvgAggregateInputType
    _sum?: Ref_supplier_materialSumAggregateInputType
    _min?: Ref_supplier_materialMinAggregateInputType
    _max?: Ref_supplier_materialMaxAggregateInputType
  }

  export type Ref_supplier_materialGroupByOutputType = {
    supplier_id: number
    material_name: string
    quantity: number
    location: string
    updated_at: Date | null
    material_code: string
    _count: Ref_supplier_materialCountAggregateOutputType | null
    _avg: Ref_supplier_materialAvgAggregateOutputType | null
    _sum: Ref_supplier_materialSumAggregateOutputType | null
    _min: Ref_supplier_materialMinAggregateOutputType | null
    _max: Ref_supplier_materialMaxAggregateOutputType | null
  }

  type GetRef_supplier_materialGroupByPayload<T extends ref_supplier_materialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ref_supplier_materialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ref_supplier_materialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ref_supplier_materialGroupByOutputType[P]>
            : GetScalarType<T[P], Ref_supplier_materialGroupByOutputType[P]>
        }
      >
    >


  export type ref_supplier_materialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    supplier_id?: boolean
    material_name?: boolean
    quantity?: boolean
    location?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_supplier_material"]>

  export type ref_supplier_materialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    supplier_id?: boolean
    material_name?: boolean
    quantity?: boolean
    location?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_supplier_material"]>

  export type ref_supplier_materialSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    supplier_id?: boolean
    material_name?: boolean
    quantity?: boolean
    location?: boolean
    updated_at?: boolean
    material_code?: boolean
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ref_supplier_material"]>

  export type ref_supplier_materialSelectScalar = {
    supplier_id?: boolean
    material_name?: boolean
    quantity?: boolean
    location?: boolean
    updated_at?: boolean
    material_code?: boolean
  }

  export type ref_supplier_materialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"supplier_id" | "material_name" | "quantity" | "location" | "updated_at" | "material_code", ExtArgs["result"]["ref_supplier_material"]>
  export type ref_supplier_materialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }
  export type ref_supplier_materialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }
  export type ref_supplier_materialIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ref_materials?: boolean | ref_materialsDefaultArgs<ExtArgs>
    ref_suppliers?: boolean | ref_suppliersDefaultArgs<ExtArgs>
  }

  export type $ref_supplier_materialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ref_supplier_material"
    objects: {
      ref_materials: Prisma.$ref_materialsPayload<ExtArgs>
      ref_suppliers: Prisma.$ref_suppliersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      supplier_id: number
      material_name: string
      quantity: number
      location: string
      updated_at: Date | null
      material_code: string
    }, ExtArgs["result"]["ref_supplier_material"]>
    composites: {}
  }

  type ref_supplier_materialGetPayload<S extends boolean | null | undefined | ref_supplier_materialDefaultArgs> = $Result.GetResult<Prisma.$ref_supplier_materialPayload, S>

  type ref_supplier_materialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ref_supplier_materialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ref_supplier_materialCountAggregateInputType | true
    }

  export interface ref_supplier_materialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ref_supplier_material'], meta: { name: 'ref_supplier_material' } }
    /**
     * Find zero or one Ref_supplier_material that matches the filter.
     * @param {ref_supplier_materialFindUniqueArgs} args - Arguments to find a Ref_supplier_material
     * @example
     * // Get one Ref_supplier_material
     * const ref_supplier_material = await prisma.ref_supplier_material.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ref_supplier_materialFindUniqueArgs>(args: SelectSubset<T, ref_supplier_materialFindUniqueArgs<ExtArgs>>): Prisma__ref_supplier_materialClient<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ref_supplier_material that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ref_supplier_materialFindUniqueOrThrowArgs} args - Arguments to find a Ref_supplier_material
     * @example
     * // Get one Ref_supplier_material
     * const ref_supplier_material = await prisma.ref_supplier_material.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ref_supplier_materialFindUniqueOrThrowArgs>(args: SelectSubset<T, ref_supplier_materialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ref_supplier_materialClient<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_supplier_material that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_supplier_materialFindFirstArgs} args - Arguments to find a Ref_supplier_material
     * @example
     * // Get one Ref_supplier_material
     * const ref_supplier_material = await prisma.ref_supplier_material.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ref_supplier_materialFindFirstArgs>(args?: SelectSubset<T, ref_supplier_materialFindFirstArgs<ExtArgs>>): Prisma__ref_supplier_materialClient<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ref_supplier_material that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_supplier_materialFindFirstOrThrowArgs} args - Arguments to find a Ref_supplier_material
     * @example
     * // Get one Ref_supplier_material
     * const ref_supplier_material = await prisma.ref_supplier_material.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ref_supplier_materialFindFirstOrThrowArgs>(args?: SelectSubset<T, ref_supplier_materialFindFirstOrThrowArgs<ExtArgs>>): Prisma__ref_supplier_materialClient<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ref_supplier_materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_supplier_materialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ref_supplier_materials
     * const ref_supplier_materials = await prisma.ref_supplier_material.findMany()
     * 
     * // Get first 10 Ref_supplier_materials
     * const ref_supplier_materials = await prisma.ref_supplier_material.findMany({ take: 10 })
     * 
     * // Only select the `supplier_id`
     * const ref_supplier_materialWithSupplier_idOnly = await prisma.ref_supplier_material.findMany({ select: { supplier_id: true } })
     * 
     */
    findMany<T extends ref_supplier_materialFindManyArgs>(args?: SelectSubset<T, ref_supplier_materialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ref_supplier_material.
     * @param {ref_supplier_materialCreateArgs} args - Arguments to create a Ref_supplier_material.
     * @example
     * // Create one Ref_supplier_material
     * const Ref_supplier_material = await prisma.ref_supplier_material.create({
     *   data: {
     *     // ... data to create a Ref_supplier_material
     *   }
     * })
     * 
     */
    create<T extends ref_supplier_materialCreateArgs>(args: SelectSubset<T, ref_supplier_materialCreateArgs<ExtArgs>>): Prisma__ref_supplier_materialClient<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ref_supplier_materials.
     * @param {ref_supplier_materialCreateManyArgs} args - Arguments to create many Ref_supplier_materials.
     * @example
     * // Create many Ref_supplier_materials
     * const ref_supplier_material = await prisma.ref_supplier_material.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ref_supplier_materialCreateManyArgs>(args?: SelectSubset<T, ref_supplier_materialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ref_supplier_materials and returns the data saved in the database.
     * @param {ref_supplier_materialCreateManyAndReturnArgs} args - Arguments to create many Ref_supplier_materials.
     * @example
     * // Create many Ref_supplier_materials
     * const ref_supplier_material = await prisma.ref_supplier_material.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ref_supplier_materials and only return the `supplier_id`
     * const ref_supplier_materialWithSupplier_idOnly = await prisma.ref_supplier_material.createManyAndReturn({
     *   select: { supplier_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ref_supplier_materialCreateManyAndReturnArgs>(args?: SelectSubset<T, ref_supplier_materialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ref_supplier_material.
     * @param {ref_supplier_materialDeleteArgs} args - Arguments to delete one Ref_supplier_material.
     * @example
     * // Delete one Ref_supplier_material
     * const Ref_supplier_material = await prisma.ref_supplier_material.delete({
     *   where: {
     *     // ... filter to delete one Ref_supplier_material
     *   }
     * })
     * 
     */
    delete<T extends ref_supplier_materialDeleteArgs>(args: SelectSubset<T, ref_supplier_materialDeleteArgs<ExtArgs>>): Prisma__ref_supplier_materialClient<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ref_supplier_material.
     * @param {ref_supplier_materialUpdateArgs} args - Arguments to update one Ref_supplier_material.
     * @example
     * // Update one Ref_supplier_material
     * const ref_supplier_material = await prisma.ref_supplier_material.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ref_supplier_materialUpdateArgs>(args: SelectSubset<T, ref_supplier_materialUpdateArgs<ExtArgs>>): Prisma__ref_supplier_materialClient<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ref_supplier_materials.
     * @param {ref_supplier_materialDeleteManyArgs} args - Arguments to filter Ref_supplier_materials to delete.
     * @example
     * // Delete a few Ref_supplier_materials
     * const { count } = await prisma.ref_supplier_material.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ref_supplier_materialDeleteManyArgs>(args?: SelectSubset<T, ref_supplier_materialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_supplier_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_supplier_materialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ref_supplier_materials
     * const ref_supplier_material = await prisma.ref_supplier_material.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ref_supplier_materialUpdateManyArgs>(args: SelectSubset<T, ref_supplier_materialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ref_supplier_materials and returns the data updated in the database.
     * @param {ref_supplier_materialUpdateManyAndReturnArgs} args - Arguments to update many Ref_supplier_materials.
     * @example
     * // Update many Ref_supplier_materials
     * const ref_supplier_material = await prisma.ref_supplier_material.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ref_supplier_materials and only return the `supplier_id`
     * const ref_supplier_materialWithSupplier_idOnly = await prisma.ref_supplier_material.updateManyAndReturn({
     *   select: { supplier_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ref_supplier_materialUpdateManyAndReturnArgs>(args: SelectSubset<T, ref_supplier_materialUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ref_supplier_material.
     * @param {ref_supplier_materialUpsertArgs} args - Arguments to update or create a Ref_supplier_material.
     * @example
     * // Update or create a Ref_supplier_material
     * const ref_supplier_material = await prisma.ref_supplier_material.upsert({
     *   create: {
     *     // ... data to create a Ref_supplier_material
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ref_supplier_material we want to update
     *   }
     * })
     */
    upsert<T extends ref_supplier_materialUpsertArgs>(args: SelectSubset<T, ref_supplier_materialUpsertArgs<ExtArgs>>): Prisma__ref_supplier_materialClient<$Result.GetResult<Prisma.$ref_supplier_materialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ref_supplier_materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_supplier_materialCountArgs} args - Arguments to filter Ref_supplier_materials to count.
     * @example
     * // Count the number of Ref_supplier_materials
     * const count = await prisma.ref_supplier_material.count({
     *   where: {
     *     // ... the filter for the Ref_supplier_materials we want to count
     *   }
     * })
    **/
    count<T extends ref_supplier_materialCountArgs>(
      args?: Subset<T, ref_supplier_materialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ref_supplier_materialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ref_supplier_material.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ref_supplier_materialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ref_supplier_materialAggregateArgs>(args: Subset<T, Ref_supplier_materialAggregateArgs>): Prisma.PrismaPromise<GetRef_supplier_materialAggregateType<T>>

    /**
     * Group by Ref_supplier_material.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ref_supplier_materialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ref_supplier_materialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ref_supplier_materialGroupByArgs['orderBy'] }
        : { orderBy?: ref_supplier_materialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ref_supplier_materialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRef_supplier_materialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ref_supplier_material model
   */
  readonly fields: ref_supplier_materialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ref_supplier_material.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ref_supplier_materialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ref_materials<T extends ref_materialsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ref_materialsDefaultArgs<ExtArgs>>): Prisma__ref_materialsClient<$Result.GetResult<Prisma.$ref_materialsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ref_suppliers<T extends ref_suppliersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ref_suppliersDefaultArgs<ExtArgs>>): Prisma__ref_suppliersClient<$Result.GetResult<Prisma.$ref_suppliersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ref_supplier_material model
   */
  interface ref_supplier_materialFieldRefs {
    readonly supplier_id: FieldRef<"ref_supplier_material", 'Int'>
    readonly material_name: FieldRef<"ref_supplier_material", 'String'>
    readonly quantity: FieldRef<"ref_supplier_material", 'Int'>
    readonly location: FieldRef<"ref_supplier_material", 'String'>
    readonly updated_at: FieldRef<"ref_supplier_material", 'DateTime'>
    readonly material_code: FieldRef<"ref_supplier_material", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ref_supplier_material findUnique
   */
  export type ref_supplier_materialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * Filter, which ref_supplier_material to fetch.
     */
    where: ref_supplier_materialWhereUniqueInput
  }

  /**
   * ref_supplier_material findUniqueOrThrow
   */
  export type ref_supplier_materialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * Filter, which ref_supplier_material to fetch.
     */
    where: ref_supplier_materialWhereUniqueInput
  }

  /**
   * ref_supplier_material findFirst
   */
  export type ref_supplier_materialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * Filter, which ref_supplier_material to fetch.
     */
    where?: ref_supplier_materialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_supplier_materials to fetch.
     */
    orderBy?: ref_supplier_materialOrderByWithRelationInput | ref_supplier_materialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_supplier_materials.
     */
    cursor?: ref_supplier_materialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_supplier_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_supplier_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_supplier_materials.
     */
    distinct?: Ref_supplier_materialScalarFieldEnum | Ref_supplier_materialScalarFieldEnum[]
  }

  /**
   * ref_supplier_material findFirstOrThrow
   */
  export type ref_supplier_materialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * Filter, which ref_supplier_material to fetch.
     */
    where?: ref_supplier_materialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_supplier_materials to fetch.
     */
    orderBy?: ref_supplier_materialOrderByWithRelationInput | ref_supplier_materialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ref_supplier_materials.
     */
    cursor?: ref_supplier_materialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_supplier_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_supplier_materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ref_supplier_materials.
     */
    distinct?: Ref_supplier_materialScalarFieldEnum | Ref_supplier_materialScalarFieldEnum[]
  }

  /**
   * ref_supplier_material findMany
   */
  export type ref_supplier_materialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * Filter, which ref_supplier_materials to fetch.
     */
    where?: ref_supplier_materialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ref_supplier_materials to fetch.
     */
    orderBy?: ref_supplier_materialOrderByWithRelationInput | ref_supplier_materialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ref_supplier_materials.
     */
    cursor?: ref_supplier_materialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ref_supplier_materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ref_supplier_materials.
     */
    skip?: number
    distinct?: Ref_supplier_materialScalarFieldEnum | Ref_supplier_materialScalarFieldEnum[]
  }

  /**
   * ref_supplier_material create
   */
  export type ref_supplier_materialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * The data needed to create a ref_supplier_material.
     */
    data: XOR<ref_supplier_materialCreateInput, ref_supplier_materialUncheckedCreateInput>
  }

  /**
   * ref_supplier_material createMany
   */
  export type ref_supplier_materialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ref_supplier_materials.
     */
    data: ref_supplier_materialCreateManyInput | ref_supplier_materialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ref_supplier_material createManyAndReturn
   */
  export type ref_supplier_materialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * The data used to create many ref_supplier_materials.
     */
    data: ref_supplier_materialCreateManyInput | ref_supplier_materialCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ref_supplier_material update
   */
  export type ref_supplier_materialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * The data needed to update a ref_supplier_material.
     */
    data: XOR<ref_supplier_materialUpdateInput, ref_supplier_materialUncheckedUpdateInput>
    /**
     * Choose, which ref_supplier_material to update.
     */
    where: ref_supplier_materialWhereUniqueInput
  }

  /**
   * ref_supplier_material updateMany
   */
  export type ref_supplier_materialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ref_supplier_materials.
     */
    data: XOR<ref_supplier_materialUpdateManyMutationInput, ref_supplier_materialUncheckedUpdateManyInput>
    /**
     * Filter which ref_supplier_materials to update
     */
    where?: ref_supplier_materialWhereInput
    /**
     * Limit how many ref_supplier_materials to update.
     */
    limit?: number
  }

  /**
   * ref_supplier_material updateManyAndReturn
   */
  export type ref_supplier_materialUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * The data used to update ref_supplier_materials.
     */
    data: XOR<ref_supplier_materialUpdateManyMutationInput, ref_supplier_materialUncheckedUpdateManyInput>
    /**
     * Filter which ref_supplier_materials to update
     */
    where?: ref_supplier_materialWhereInput
    /**
     * Limit how many ref_supplier_materials to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ref_supplier_material upsert
   */
  export type ref_supplier_materialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * The filter to search for the ref_supplier_material to update in case it exists.
     */
    where: ref_supplier_materialWhereUniqueInput
    /**
     * In case the ref_supplier_material found by the `where` argument doesn't exist, create a new ref_supplier_material with this data.
     */
    create: XOR<ref_supplier_materialCreateInput, ref_supplier_materialUncheckedCreateInput>
    /**
     * In case the ref_supplier_material was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ref_supplier_materialUpdateInput, ref_supplier_materialUncheckedUpdateInput>
  }

  /**
   * ref_supplier_material delete
   */
  export type ref_supplier_materialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
    /**
     * Filter which ref_supplier_material to delete.
     */
    where: ref_supplier_materialWhereUniqueInput
  }

  /**
   * ref_supplier_material deleteMany
   */
  export type ref_supplier_materialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ref_supplier_materials to delete
     */
    where?: ref_supplier_materialWhereInput
    /**
     * Limit how many ref_supplier_materials to delete.
     */
    limit?: number
  }

  /**
   * ref_supplier_material without action
   */
  export type ref_supplier_materialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ref_supplier_material
     */
    select?: ref_supplier_materialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ref_supplier_material
     */
    omit?: ref_supplier_materialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ref_supplier_materialInclude<ExtArgs> | null
  }


  /**
   * Model user_queries
   */

  export type AggregateUser_queries = {
    _count: User_queriesCountAggregateOutputType | null
    _avg: User_queriesAvgAggregateOutputType | null
    _sum: User_queriesSumAggregateOutputType | null
    _min: User_queriesMinAggregateOutputType | null
    _max: User_queriesMaxAggregateOutputType | null
  }

  export type User_queriesAvgAggregateOutputType = {
    execution_count: number | null
  }

  export type User_queriesSumAggregateOutputType = {
    execution_count: number | null
  }

  export type User_queriesMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    query_name: string | null
    created_at: Date | null
    last_executed_at: Date | null
    execution_count: number | null
    selected_table: string | null
    join_table: string | null
    join_type: string | null
    generated_sql: string | null
  }

  export type User_queriesMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    query_name: string | null
    created_at: Date | null
    last_executed_at: Date | null
    execution_count: number | null
    selected_table: string | null
    join_table: string | null
    join_type: string | null
    generated_sql: string | null
  }

  export type User_queriesCountAggregateOutputType = {
    id: number
    user_id: number
    query_name: number
    created_at: number
    last_executed_at: number
    execution_count: number
    selected_table: number
    selected_columns: number
    filters: number
    sorts: number
    join_table: number
    join_type: number
    join_condition: number
    generated_sql: number
    tags: number
    _all: number
  }


  export type User_queriesAvgAggregateInputType = {
    execution_count?: true
  }

  export type User_queriesSumAggregateInputType = {
    execution_count?: true
  }

  export type User_queriesMinAggregateInputType = {
    id?: true
    user_id?: true
    query_name?: true
    created_at?: true
    last_executed_at?: true
    execution_count?: true
    selected_table?: true
    join_table?: true
    join_type?: true
    generated_sql?: true
  }

  export type User_queriesMaxAggregateInputType = {
    id?: true
    user_id?: true
    query_name?: true
    created_at?: true
    last_executed_at?: true
    execution_count?: true
    selected_table?: true
    join_table?: true
    join_type?: true
    generated_sql?: true
  }

  export type User_queriesCountAggregateInputType = {
    id?: true
    user_id?: true
    query_name?: true
    created_at?: true
    last_executed_at?: true
    execution_count?: true
    selected_table?: true
    selected_columns?: true
    filters?: true
    sorts?: true
    join_table?: true
    join_type?: true
    join_condition?: true
    generated_sql?: true
    tags?: true
    _all?: true
  }

  export type User_queriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_queries to aggregate.
     */
    where?: user_queriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_queries to fetch.
     */
    orderBy?: user_queriesOrderByWithRelationInput | user_queriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_queriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_queries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_queries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_queries
    **/
    _count?: true | User_queriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_queriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_queriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_queriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_queriesMaxAggregateInputType
  }

  export type GetUser_queriesAggregateType<T extends User_queriesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_queries]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_queries[P]>
      : GetScalarType<T[P], AggregateUser_queries[P]>
  }




  export type user_queriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_queriesWhereInput
    orderBy?: user_queriesOrderByWithAggregationInput | user_queriesOrderByWithAggregationInput[]
    by: User_queriesScalarFieldEnum[] | User_queriesScalarFieldEnum
    having?: user_queriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_queriesCountAggregateInputType | true
    _avg?: User_queriesAvgAggregateInputType
    _sum?: User_queriesSumAggregateInputType
    _min?: User_queriesMinAggregateInputType
    _max?: User_queriesMaxAggregateInputType
  }

  export type User_queriesGroupByOutputType = {
    id: string
    user_id: string
    query_name: string
    created_at: Date | null
    last_executed_at: Date | null
    execution_count: number | null
    selected_table: string | null
    selected_columns: JsonValue | null
    filters: JsonValue | null
    sorts: JsonValue | null
    join_table: string | null
    join_type: string | null
    join_condition: JsonValue | null
    generated_sql: string | null
    tags: string[]
    _count: User_queriesCountAggregateOutputType | null
    _avg: User_queriesAvgAggregateOutputType | null
    _sum: User_queriesSumAggregateOutputType | null
    _min: User_queriesMinAggregateOutputType | null
    _max: User_queriesMaxAggregateOutputType | null
  }

  type GetUser_queriesGroupByPayload<T extends user_queriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_queriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_queriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_queriesGroupByOutputType[P]>
            : GetScalarType<T[P], User_queriesGroupByOutputType[P]>
        }
      >
    >


  export type user_queriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    query_name?: boolean
    created_at?: boolean
    last_executed_at?: boolean
    execution_count?: boolean
    selected_table?: boolean
    selected_columns?: boolean
    filters?: boolean
    sorts?: boolean
    join_table?: boolean
    join_type?: boolean
    join_condition?: boolean
    generated_sql?: boolean
    tags?: boolean
  }, ExtArgs["result"]["user_queries"]>

  export type user_queriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    query_name?: boolean
    created_at?: boolean
    last_executed_at?: boolean
    execution_count?: boolean
    selected_table?: boolean
    selected_columns?: boolean
    filters?: boolean
    sorts?: boolean
    join_table?: boolean
    join_type?: boolean
    join_condition?: boolean
    generated_sql?: boolean
    tags?: boolean
  }, ExtArgs["result"]["user_queries"]>

  export type user_queriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    query_name?: boolean
    created_at?: boolean
    last_executed_at?: boolean
    execution_count?: boolean
    selected_table?: boolean
    selected_columns?: boolean
    filters?: boolean
    sorts?: boolean
    join_table?: boolean
    join_type?: boolean
    join_condition?: boolean
    generated_sql?: boolean
    tags?: boolean
  }, ExtArgs["result"]["user_queries"]>

  export type user_queriesSelectScalar = {
    id?: boolean
    user_id?: boolean
    query_name?: boolean
    created_at?: boolean
    last_executed_at?: boolean
    execution_count?: boolean
    selected_table?: boolean
    selected_columns?: boolean
    filters?: boolean
    sorts?: boolean
    join_table?: boolean
    join_type?: boolean
    join_condition?: boolean
    generated_sql?: boolean
    tags?: boolean
  }

  export type user_queriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "query_name" | "created_at" | "last_executed_at" | "execution_count" | "selected_table" | "selected_columns" | "filters" | "sorts" | "join_table" | "join_type" | "join_condition" | "generated_sql" | "tags", ExtArgs["result"]["user_queries"]>

  export type $user_queriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_queries"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      query_name: string
      created_at: Date | null
      last_executed_at: Date | null
      execution_count: number | null
      selected_table: string | null
      selected_columns: Prisma.JsonValue | null
      filters: Prisma.JsonValue | null
      sorts: Prisma.JsonValue | null
      join_table: string | null
      join_type: string | null
      join_condition: Prisma.JsonValue | null
      generated_sql: string | null
      tags: string[]
    }, ExtArgs["result"]["user_queries"]>
    composites: {}
  }

  type user_queriesGetPayload<S extends boolean | null | undefined | user_queriesDefaultArgs> = $Result.GetResult<Prisma.$user_queriesPayload, S>

  type user_queriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_queriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_queriesCountAggregateInputType | true
    }

  export interface user_queriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_queries'], meta: { name: 'user_queries' } }
    /**
     * Find zero or one User_queries that matches the filter.
     * @param {user_queriesFindUniqueArgs} args - Arguments to find a User_queries
     * @example
     * // Get one User_queries
     * const user_queries = await prisma.user_queries.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_queriesFindUniqueArgs>(args: SelectSubset<T, user_queriesFindUniqueArgs<ExtArgs>>): Prisma__user_queriesClient<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_queries that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_queriesFindUniqueOrThrowArgs} args - Arguments to find a User_queries
     * @example
     * // Get one User_queries
     * const user_queries = await prisma.user_queries.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_queriesFindUniqueOrThrowArgs>(args: SelectSubset<T, user_queriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_queriesClient<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_queries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_queriesFindFirstArgs} args - Arguments to find a User_queries
     * @example
     * // Get one User_queries
     * const user_queries = await prisma.user_queries.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_queriesFindFirstArgs>(args?: SelectSubset<T, user_queriesFindFirstArgs<ExtArgs>>): Prisma__user_queriesClient<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_queries that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_queriesFindFirstOrThrowArgs} args - Arguments to find a User_queries
     * @example
     * // Get one User_queries
     * const user_queries = await prisma.user_queries.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_queriesFindFirstOrThrowArgs>(args?: SelectSubset<T, user_queriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_queriesClient<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_queries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_queriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_queries
     * const user_queries = await prisma.user_queries.findMany()
     * 
     * // Get first 10 User_queries
     * const user_queries = await prisma.user_queries.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_queriesWithIdOnly = await prisma.user_queries.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_queriesFindManyArgs>(args?: SelectSubset<T, user_queriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_queries.
     * @param {user_queriesCreateArgs} args - Arguments to create a User_queries.
     * @example
     * // Create one User_queries
     * const User_queries = await prisma.user_queries.create({
     *   data: {
     *     // ... data to create a User_queries
     *   }
     * })
     * 
     */
    create<T extends user_queriesCreateArgs>(args: SelectSubset<T, user_queriesCreateArgs<ExtArgs>>): Prisma__user_queriesClient<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_queries.
     * @param {user_queriesCreateManyArgs} args - Arguments to create many User_queries.
     * @example
     * // Create many User_queries
     * const user_queries = await prisma.user_queries.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_queriesCreateManyArgs>(args?: SelectSubset<T, user_queriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_queries and returns the data saved in the database.
     * @param {user_queriesCreateManyAndReturnArgs} args - Arguments to create many User_queries.
     * @example
     * // Create many User_queries
     * const user_queries = await prisma.user_queries.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_queries and only return the `id`
     * const user_queriesWithIdOnly = await prisma.user_queries.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_queriesCreateManyAndReturnArgs>(args?: SelectSubset<T, user_queriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_queries.
     * @param {user_queriesDeleteArgs} args - Arguments to delete one User_queries.
     * @example
     * // Delete one User_queries
     * const User_queries = await prisma.user_queries.delete({
     *   where: {
     *     // ... filter to delete one User_queries
     *   }
     * })
     * 
     */
    delete<T extends user_queriesDeleteArgs>(args: SelectSubset<T, user_queriesDeleteArgs<ExtArgs>>): Prisma__user_queriesClient<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_queries.
     * @param {user_queriesUpdateArgs} args - Arguments to update one User_queries.
     * @example
     * // Update one User_queries
     * const user_queries = await prisma.user_queries.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_queriesUpdateArgs>(args: SelectSubset<T, user_queriesUpdateArgs<ExtArgs>>): Prisma__user_queriesClient<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_queries.
     * @param {user_queriesDeleteManyArgs} args - Arguments to filter User_queries to delete.
     * @example
     * // Delete a few User_queries
     * const { count } = await prisma.user_queries.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_queriesDeleteManyArgs>(args?: SelectSubset<T, user_queriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_queries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_queriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_queries
     * const user_queries = await prisma.user_queries.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_queriesUpdateManyArgs>(args: SelectSubset<T, user_queriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_queries and returns the data updated in the database.
     * @param {user_queriesUpdateManyAndReturnArgs} args - Arguments to update many User_queries.
     * @example
     * // Update many User_queries
     * const user_queries = await prisma.user_queries.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_queries and only return the `id`
     * const user_queriesWithIdOnly = await prisma.user_queries.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_queriesUpdateManyAndReturnArgs>(args: SelectSubset<T, user_queriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_queries.
     * @param {user_queriesUpsertArgs} args - Arguments to update or create a User_queries.
     * @example
     * // Update or create a User_queries
     * const user_queries = await prisma.user_queries.upsert({
     *   create: {
     *     // ... data to create a User_queries
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_queries we want to update
     *   }
     * })
     */
    upsert<T extends user_queriesUpsertArgs>(args: SelectSubset<T, user_queriesUpsertArgs<ExtArgs>>): Prisma__user_queriesClient<$Result.GetResult<Prisma.$user_queriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_queries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_queriesCountArgs} args - Arguments to filter User_queries to count.
     * @example
     * // Count the number of User_queries
     * const count = await prisma.user_queries.count({
     *   where: {
     *     // ... the filter for the User_queries we want to count
     *   }
     * })
    **/
    count<T extends user_queriesCountArgs>(
      args?: Subset<T, user_queriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_queriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_queries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_queriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_queriesAggregateArgs>(args: Subset<T, User_queriesAggregateArgs>): Prisma.PrismaPromise<GetUser_queriesAggregateType<T>>

    /**
     * Group by User_queries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_queriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_queriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_queriesGroupByArgs['orderBy'] }
        : { orderBy?: user_queriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_queriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_queriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_queries model
   */
  readonly fields: user_queriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_queries.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_queriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_queries model
   */
  interface user_queriesFieldRefs {
    readonly id: FieldRef<"user_queries", 'String'>
    readonly user_id: FieldRef<"user_queries", 'String'>
    readonly query_name: FieldRef<"user_queries", 'String'>
    readonly created_at: FieldRef<"user_queries", 'DateTime'>
    readonly last_executed_at: FieldRef<"user_queries", 'DateTime'>
    readonly execution_count: FieldRef<"user_queries", 'Int'>
    readonly selected_table: FieldRef<"user_queries", 'String'>
    readonly selected_columns: FieldRef<"user_queries", 'Json'>
    readonly filters: FieldRef<"user_queries", 'Json'>
    readonly sorts: FieldRef<"user_queries", 'Json'>
    readonly join_table: FieldRef<"user_queries", 'String'>
    readonly join_type: FieldRef<"user_queries", 'String'>
    readonly join_condition: FieldRef<"user_queries", 'Json'>
    readonly generated_sql: FieldRef<"user_queries", 'String'>
    readonly tags: FieldRef<"user_queries", 'String[]'>
  }
    

  // Custom InputTypes
  /**
   * user_queries findUnique
   */
  export type user_queriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * Filter, which user_queries to fetch.
     */
    where: user_queriesWhereUniqueInput
  }

  /**
   * user_queries findUniqueOrThrow
   */
  export type user_queriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * Filter, which user_queries to fetch.
     */
    where: user_queriesWhereUniqueInput
  }

  /**
   * user_queries findFirst
   */
  export type user_queriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * Filter, which user_queries to fetch.
     */
    where?: user_queriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_queries to fetch.
     */
    orderBy?: user_queriesOrderByWithRelationInput | user_queriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_queries.
     */
    cursor?: user_queriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_queries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_queries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_queries.
     */
    distinct?: User_queriesScalarFieldEnum | User_queriesScalarFieldEnum[]
  }

  /**
   * user_queries findFirstOrThrow
   */
  export type user_queriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * Filter, which user_queries to fetch.
     */
    where?: user_queriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_queries to fetch.
     */
    orderBy?: user_queriesOrderByWithRelationInput | user_queriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_queries.
     */
    cursor?: user_queriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_queries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_queries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_queries.
     */
    distinct?: User_queriesScalarFieldEnum | User_queriesScalarFieldEnum[]
  }

  /**
   * user_queries findMany
   */
  export type user_queriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * Filter, which user_queries to fetch.
     */
    where?: user_queriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_queries to fetch.
     */
    orderBy?: user_queriesOrderByWithRelationInput | user_queriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_queries.
     */
    cursor?: user_queriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_queries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_queries.
     */
    skip?: number
    distinct?: User_queriesScalarFieldEnum | User_queriesScalarFieldEnum[]
  }

  /**
   * user_queries create
   */
  export type user_queriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * The data needed to create a user_queries.
     */
    data: XOR<user_queriesCreateInput, user_queriesUncheckedCreateInput>
  }

  /**
   * user_queries createMany
   */
  export type user_queriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_queries.
     */
    data: user_queriesCreateManyInput | user_queriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_queries createManyAndReturn
   */
  export type user_queriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * The data used to create many user_queries.
     */
    data: user_queriesCreateManyInput | user_queriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_queries update
   */
  export type user_queriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * The data needed to update a user_queries.
     */
    data: XOR<user_queriesUpdateInput, user_queriesUncheckedUpdateInput>
    /**
     * Choose, which user_queries to update.
     */
    where: user_queriesWhereUniqueInput
  }

  /**
   * user_queries updateMany
   */
  export type user_queriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_queries.
     */
    data: XOR<user_queriesUpdateManyMutationInput, user_queriesUncheckedUpdateManyInput>
    /**
     * Filter which user_queries to update
     */
    where?: user_queriesWhereInput
    /**
     * Limit how many user_queries to update.
     */
    limit?: number
  }

  /**
   * user_queries updateManyAndReturn
   */
  export type user_queriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * The data used to update user_queries.
     */
    data: XOR<user_queriesUpdateManyMutationInput, user_queriesUncheckedUpdateManyInput>
    /**
     * Filter which user_queries to update
     */
    where?: user_queriesWhereInput
    /**
     * Limit how many user_queries to update.
     */
    limit?: number
  }

  /**
   * user_queries upsert
   */
  export type user_queriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * The filter to search for the user_queries to update in case it exists.
     */
    where: user_queriesWhereUniqueInput
    /**
     * In case the user_queries found by the `where` argument doesn't exist, create a new user_queries with this data.
     */
    create: XOR<user_queriesCreateInput, user_queriesUncheckedCreateInput>
    /**
     * In case the user_queries was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_queriesUpdateInput, user_queriesUncheckedUpdateInput>
  }

  /**
   * user_queries delete
   */
  export type user_queriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
    /**
     * Filter which user_queries to delete.
     */
    where: user_queriesWhereUniqueInput
  }

  /**
   * user_queries deleteMany
   */
  export type user_queriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_queries to delete
     */
    where?: user_queriesWhereInput
    /**
     * Limit how many user_queries to delete.
     */
    limit?: number
  }

  /**
   * user_queries without action
   */
  export type user_queriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_queries
     */
    select?: user_queriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_queries
     */
    omit?: user_queriesOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Active_contextScalarFieldEnum: {
    context_id: 'context_id',
    worker_id: 'worker_id',
    still_id: 'still_id',
    created_at: 'created_at'
  };

  export type Active_contextScalarFieldEnum = (typeof Active_contextScalarFieldEnum)[keyof typeof Active_contextScalarFieldEnum]


  export const Auth_activity_logScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    action: 'action',
    ip_address: 'ip_address',
    metadata: 'metadata',
    created_at: 'created_at'
  };

  export type Auth_activity_logScalarFieldEnum = (typeof Auth_activity_logScalarFieldEnum)[keyof typeof Auth_activity_logScalarFieldEnum]


  export const Bottle_sizesScalarFieldEnum: {
    id: 'id',
    volume: 'volume'
  };

  export type Bottle_sizesScalarFieldEnum = (typeof Bottle_sizesScalarFieldEnum)[keyof typeof Bottle_sizesScalarFieldEnum]


  export const Chemical_group_kindScalarFieldEnum: {
    value: 'value'
  };

  export type Chemical_group_kindScalarFieldEnum = (typeof Chemical_group_kindScalarFieldEnum)[keyof typeof Chemical_group_kindScalarFieldEnum]


  export const Distillation_pending_assignmentScalarFieldEnum: {
    pending_id: 'pending_id',
    drum_id: 'drum_id',
    transport_id: 'transport_id',
    assigned_distillation_id: 'assigned_distillation_id',
    status: 'status'
  };

  export type Distillation_pending_assignmentScalarFieldEnum = (typeof Distillation_pending_assignmentScalarFieldEnum)[keyof typeof Distillation_pending_assignmentScalarFieldEnum]


  export const Distillation_recordScalarFieldEnum: {
    record_id: 'record_id',
    distillation_id: 'distillation_id',
    actual_start: 'actual_start',
    actual_end: 'actual_end',
    status: 'status',
    notes: 'notes'
  };

  export type Distillation_recordScalarFieldEnum = (typeof Distillation_recordScalarFieldEnum)[keyof typeof Distillation_recordScalarFieldEnum]


  export const Distillation_scheduleScalarFieldEnum: {
    distillation_id: 'distillation_id',
    scheduled_date: 'scheduled_date',
    still_id: 'still_id',
    expected_drum_qty: 'expected_drum_qty',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Distillation_scheduleScalarFieldEnum = (typeof Distillation_scheduleScalarFieldEnum)[keyof typeof Distillation_scheduleScalarFieldEnum]


  export const Distillation_schedule_itemsScalarFieldEnum: {
    details_id: 'details_id',
    distillation_id: 'distillation_id',
    new_stock_id: 'new_stock_id',
    repro_stock_id: 'repro_stock_id',
    drum_quantity: 'drum_quantity',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Distillation_schedule_itemsScalarFieldEnum = (typeof Distillation_schedule_itemsScalarFieldEnum)[keyof typeof Distillation_schedule_itemsScalarFieldEnum]


  export const DrumsScalarFieldEnum: {
    old_id: 'old_id',
    material: 'material',
    batch_code: 'batch_code',
    id: 'id',
    supplier: 'supplier',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    site: 'site',
    date_ordered: 'date_ordered',
    chemical_group: 'chemical_group',
    material_code: 'material_code'
  };

  export type DrumsScalarFieldEnum = (typeof DrumsScalarFieldEnum)[keyof typeof DrumsScalarFieldEnum]


  export const Log_drum_decommissionScalarFieldEnum: {
    decommission_id: 'decommission_id',
    drum_id: 'drum_id',
    decommissioned_at: 'decommissioned_at',
    worker_id: 'worker_id'
  };

  export type Log_drum_decommissionScalarFieldEnum = (typeof Log_drum_decommissionScalarFieldEnum)[keyof typeof Log_drum_decommissionScalarFieldEnum]


  export const Log_drum_scanScalarFieldEnum: {
    scan_id: 'scan_id',
    scanned_at: 'scanned_at',
    drum_id: 'drum_id',
    user_id: 'user_id',
    scan_type: 'scan_type',
    scan_status: 'scan_status',
    error_message: 'error_message'
  };

  export type Log_drum_scanScalarFieldEnum = (typeof Log_drum_scanScalarFieldEnum)[keyof typeof Log_drum_scanScalarFieldEnum]


  export const Log_load_stillScalarFieldEnum: {
    loading_id: 'loading_id',
    scan_id: 'scan_id',
    drum_id: 'drum_id',
    still_id: 'still_id',
    distillation_id: 'distillation_id',
    status: 'status'
  };

  export type Log_load_stillScalarFieldEnum = (typeof Log_load_stillScalarFieldEnum)[keyof typeof Log_load_stillScalarFieldEnum]


  export const Log_start_distillationScalarFieldEnum: {
    start_id: 'start_id',
    distillation_id: 'distillation_id',
    still_id: 'still_id',
    worker_id: 'worker_id',
    status: 'status'
  };

  export type Log_start_distillationScalarFieldEnum = (typeof Log_start_distillationScalarFieldEnum)[keyof typeof Log_start_distillationScalarFieldEnum]


  export const Log_transport_drumScalarFieldEnum: {
    transport_id: 'transport_id',
    scan_id: 'scan_id',
    drum_id: 'drum_id',
    transported_at: 'transported_at',
    distillation_id: 'distillation_id',
    status: 'status'
  };

  export type Log_transport_drumScalarFieldEnum = (typeof Log_transport_drumScalarFieldEnum)[keyof typeof Log_transport_drumScalarFieldEnum]


  export const Log_volume_transferScalarFieldEnum: {
    transfer_id: 'transfer_id',
    drum_id: 'drum_id',
    distillation_id: 'distillation_id',
    volume_transferred: 'volume_transferred',
    remaining_volume: 'remaining_volume',
    usage_type: 'usage_type',
    transfer_timestamp: 'transfer_timestamp',
    worker_id: 'worker_id'
  };

  export type Log_volume_transferScalarFieldEnum = (typeof Log_volume_transferScalarFieldEnum)[keyof typeof Log_volume_transferScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    notification_id: 'notification_id',
    message: 'message',
    message_type: 'message_type',
    private: 'private',
    audience_type: 'audience_type',
    is_read: 'is_read',
    created_at: 'created_at',
    expires_at: 'expires_at',
    created_by: 'created_by'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const Order_detailScalarFieldEnum: {
    detail_id: 'detail_id',
    order_id: 'order_id',
    batch_code: 'batch_code',
    material_id: 'material_id',
    material_name: 'material_name',
    drum_quantity: 'drum_quantity',
    drum_weight: 'drum_weight',
    drum_volume: 'drum_volume',
    status: 'status',
    notes: 'notes',
    material_code: 'material_code'
  };

  export type Order_detailScalarFieldEnum = (typeof Order_detailScalarFieldEnum)[keyof typeof Order_detailScalarFieldEnum]


  export const Product_pricesScalarFieldEnum: {
    product_id: 'product_id',
    bottle_size_id: 'bottle_size_id',
    price: 'price'
  };

  export type Product_pricesScalarFieldEnum = (typeof Product_pricesScalarFieldEnum)[keyof typeof Product_pricesScalarFieldEnum]


  export const Raw_materialsScalarFieldEnum: {
    material_id: 'material_id',
    material_name: 'material_name',
    cas_number: 'cas_number',
    chemical_group: 'chemical_group',
    description: 'description',
    un_code: 'un_code',
    flash_point: 'flash_point',
    material_code: 'material_code',
    drum_weight: 'drum_weight',
    drum_volume: 'drum_volume',
    chemical_props: 'chemical_props'
  };

  export type Raw_materialsScalarFieldEnum = (typeof Raw_materialsScalarFieldEnum)[keyof typeof Raw_materialsScalarFieldEnum]


  export const Ref_materialsScalarFieldEnum: {
    value: 'value',
    code: 'code',
    chemical_group: 'chemical_group',
    cas_number: 'cas_number'
  };

  export type Ref_materialsScalarFieldEnum = (typeof Ref_materialsScalarFieldEnum)[keyof typeof Ref_materialsScalarFieldEnum]


  export const Ref_stillsScalarFieldEnum: {
    still_id: 'still_id',
    still_code: 'still_code',
    max_capacity: 'max_capacity',
    power_rating_kw: 'power_rating_kw',
    lab_id: 'lab_id',
    is_vacuum: 'is_vacuum',
    is_operational: 'is_operational',
    description: 'description'
  };

  export type Ref_stillsScalarFieldEnum = (typeof Ref_stillsScalarFieldEnum)[keyof typeof Ref_stillsScalarFieldEnum]


  export const Ref_suppliersScalarFieldEnum: {
    supplier_id: 'supplier_id',
    supplier_name: 'supplier_name',
    addr_1: 'addr_1',
    addr_2: 'addr_2',
    city: 'city',
    post_code: 'post_code',
    country_code: 'country_code'
  };

  export type Ref_suppliersScalarFieldEnum = (typeof Ref_suppliersScalarFieldEnum)[keyof typeof Ref_suppliersScalarFieldEnum]


  export const Session_settingsScalarFieldEnum: {
    id: 'id',
    device_type: 'device_type',
    session_duration_seconds: 'session_duration_seconds',
    inactivity_timeout_seconds: 'inactivity_timeout_seconds',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Session_settingsScalarFieldEnum = (typeof Session_settingsScalarFieldEnum)[keyof typeof Session_settingsScalarFieldEnum]


  export const Stock_drumScalarFieldEnum: {
    drum_id: 'drum_id',
    drum_type: 'drum_type',
    order_detail_id: 'order_detail_id',
    fill_level: 'fill_level',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    material_code: 'material_code',
    distillation_id: 'distillation_id'
  };

  export type Stock_drumScalarFieldEnum = (typeof Stock_drumScalarFieldEnum)[keyof typeof Stock_drumScalarFieldEnum]


  export const Stock_drum_newScalarFieldEnum: {
    drum_id: 'drum_id',
    material_code: 'material_code',
    drum_type: 'drum_type',
    order_detail_id: 'order_detail_id',
    status: 'status',
    fill_level: 'fill_level',
    created_at: 'created_at',
    updated_at: 'updated_at',
    distillation_id: 'distillation_id'
  };

  export type Stock_drum_newScalarFieldEnum = (typeof Stock_drum_newScalarFieldEnum)[keyof typeof Stock_drum_newScalarFieldEnum]


  export const Stock_newScalarFieldEnum: {
    stock_id: 'stock_id',
    supplier_id: 'supplier_id',
    quantity: 'quantity',
    batch_code: 'batch_code',
    location: 'location',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at',
    material_code: 'material_code'
  };

  export type Stock_newScalarFieldEnum = (typeof Stock_newScalarFieldEnum)[keyof typeof Stock_newScalarFieldEnum]


  export const Stock_orderScalarFieldEnum: {
    order_id: 'order_id',
    po_number: 'po_number',
    date_ordered: 'date_ordered',
    supplier_id: 'supplier_id',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Stock_orderScalarFieldEnum = (typeof Stock_orderScalarFieldEnum)[keyof typeof Stock_orderScalarFieldEnum]


  export const Stock_reproScalarFieldEnum: {
    stock_id: 'stock_id',
    location: 'location',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at',
    quantity: 'quantity',
    material_description: 'material_description',
    material_code: 'material_code'
  };

  export type Stock_reproScalarFieldEnum = (typeof Stock_reproScalarFieldEnum)[keyof typeof Stock_reproScalarFieldEnum]


  export const User_profilesScalarFieldEnum: {
    id: 'id',
    full_name: 'full_name',
    email: 'email',
    avatar_url: 'avatar_url'
  };

  export type User_profilesScalarFieldEnum = (typeof User_profilesScalarFieldEnum)[keyof typeof User_profilesScalarFieldEnum]


  export const User_rolesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    role: 'role',
    created_at: 'created_at'
  };

  export type User_rolesScalarFieldEnum = (typeof User_rolesScalarFieldEnum)[keyof typeof User_rolesScalarFieldEnum]


  export const Worker_passcodesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    worker_name: 'worker_name',
    role: 'role',
    passcode: 'passcode',
    is_active: 'is_active',
    last_login_at: 'last_login_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    created_by: 'created_by',
    updated_by: 'updated_by'
  };

  export type Worker_passcodesScalarFieldEnum = (typeof Worker_passcodesScalarFieldEnum)[keyof typeof Worker_passcodesScalarFieldEnum]


  export const Order_detail_stock_activityScalarFieldEnum: {
    id: 'id',
    order_detail_id: 'order_detail_id',
    stock_activity_id: 'stock_activity_id',
    created_at: 'created_at'
  };

  export type Order_detail_stock_activityScalarFieldEnum = (typeof Order_detail_stock_activityScalarFieldEnum)[keyof typeof Order_detail_stock_activityScalarFieldEnum]


  export const Raw_stock_historyScalarFieldEnum: {
    id: 'id',
    date: 'date',
    event_str: 'event_str',
    drum_type: 'drum_type',
    no_events: 'no_events',
    notes_ids: 'notes_ids',
    notes_batch: 'notes_batch',
    source: 'source',
    created_at: 'created_at',
    updated_at: 'updated_at',
    material_code: 'material_code'
  };

  export type Raw_stock_historyScalarFieldEnum = (typeof Raw_stock_historyScalarFieldEnum)[keyof typeof Raw_stock_historyScalarFieldEnum]


  export const Stock_activityScalarFieldEnum: {
    id: 'id',
    activity_date: 'activity_date',
    material_code: 'material_code',
    supplier_id: 'supplier_id',
    quantity: 'quantity',
    drum_type: 'drum_type',
    drum_ids: 'drum_ids',
    batch_code: 'batch_code',
    order_detail_id: 'order_detail_id',
    distillation_detail_id: 'distillation_detail_id',
    activity_type: 'activity_type',
    status: 'status',
    notes: 'notes',
    source_record_id: 'source_record_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Stock_activityScalarFieldEnum = (typeof Stock_activityScalarFieldEnum)[keyof typeof Stock_activityScalarFieldEnum]


  export const Stock_historyScalarFieldEnum: {
    id: 'id',
    date: 'date',
    material_name: 'material_name',
    supplier_id: 'supplier_id',
    supplier_name: 'supplier_name',
    change: 'change',
    drum_type: 'drum_type',
    drum_ids: 'drum_ids',
    batch_code: 'batch_code',
    source_record_id: 'source_record_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    material_code: 'material_code'
  };

  export type Stock_historyScalarFieldEnum = (typeof Stock_historyScalarFieldEnum)[keyof typeof Stock_historyScalarFieldEnum]


  export const Ref_productScalarFieldEnum: {
    product_id: 'product_id',
    name: 'name',
    sku: 'sku',
    raw_material_id: 'raw_material_id',
    grade: 'grade',
    material_code: 'material_code'
  };

  export type Ref_productScalarFieldEnum = (typeof Ref_productScalarFieldEnum)[keyof typeof Ref_productScalarFieldEnum]


  export const Ref_supplier_materialScalarFieldEnum: {
    supplier_id: 'supplier_id',
    material_name: 'material_name',
    quantity: 'quantity',
    location: 'location',
    updated_at: 'updated_at',
    material_code: 'material_code'
  };

  export type Ref_supplier_materialScalarFieldEnum = (typeof Ref_supplier_materialScalarFieldEnum)[keyof typeof Ref_supplier_materialScalarFieldEnum]


  export const User_queriesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    query_name: 'query_name',
    created_at: 'created_at',
    last_executed_at: 'last_executed_at',
    execution_count: 'execution_count',
    selected_table: 'selected_table',
    selected_columns: 'selected_columns',
    filters: 'filters',
    sorts: 'sorts',
    join_table: 'join_table',
    join_type: 'join_type',
    join_condition: 'join_condition',
    generated_sql: 'generated_sql',
    tags: 'tags'
  };

  export type User_queriesScalarFieldEnum = (typeof User_queriesScalarFieldEnum)[keyof typeof User_queriesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type active_contextWhereInput = {
    AND?: active_contextWhereInput | active_contextWhereInput[]
    OR?: active_contextWhereInput[]
    NOT?: active_contextWhereInput | active_contextWhereInput[]
    context_id?: IntFilter<"active_context"> | number
    worker_id?: IntNullableFilter<"active_context"> | number | null
    still_id?: IntNullableFilter<"active_context"> | number | null
    created_at?: DateTimeNullableFilter<"active_context"> | Date | string | null
    ref_stills?: XOR<Ref_stillsNullableScalarRelationFilter, ref_stillsWhereInput> | null
  }

  export type active_contextOrderByWithRelationInput = {
    context_id?: SortOrder
    worker_id?: SortOrderInput | SortOrder
    still_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    ref_stills?: ref_stillsOrderByWithRelationInput
  }

  export type active_contextWhereUniqueInput = Prisma.AtLeast<{
    context_id?: number
    AND?: active_contextWhereInput | active_contextWhereInput[]
    OR?: active_contextWhereInput[]
    NOT?: active_contextWhereInput | active_contextWhereInput[]
    worker_id?: IntNullableFilter<"active_context"> | number | null
    still_id?: IntNullableFilter<"active_context"> | number | null
    created_at?: DateTimeNullableFilter<"active_context"> | Date | string | null
    ref_stills?: XOR<Ref_stillsNullableScalarRelationFilter, ref_stillsWhereInput> | null
  }, "context_id">

  export type active_contextOrderByWithAggregationInput = {
    context_id?: SortOrder
    worker_id?: SortOrderInput | SortOrder
    still_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: active_contextCountOrderByAggregateInput
    _avg?: active_contextAvgOrderByAggregateInput
    _max?: active_contextMaxOrderByAggregateInput
    _min?: active_contextMinOrderByAggregateInput
    _sum?: active_contextSumOrderByAggregateInput
  }

  export type active_contextScalarWhereWithAggregatesInput = {
    AND?: active_contextScalarWhereWithAggregatesInput | active_contextScalarWhereWithAggregatesInput[]
    OR?: active_contextScalarWhereWithAggregatesInput[]
    NOT?: active_contextScalarWhereWithAggregatesInput | active_contextScalarWhereWithAggregatesInput[]
    context_id?: IntWithAggregatesFilter<"active_context"> | number
    worker_id?: IntNullableWithAggregatesFilter<"active_context"> | number | null
    still_id?: IntNullableWithAggregatesFilter<"active_context"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"active_context"> | Date | string | null
  }

  export type auth_activity_logWhereInput = {
    AND?: auth_activity_logWhereInput | auth_activity_logWhereInput[]
    OR?: auth_activity_logWhereInput[]
    NOT?: auth_activity_logWhereInput | auth_activity_logWhereInput[]
    id?: UuidFilter<"auth_activity_log"> | string
    user_id?: UuidFilter<"auth_activity_log"> | string
    action?: StringFilter<"auth_activity_log"> | string
    ip_address?: StringNullableFilter<"auth_activity_log"> | string | null
    metadata?: JsonNullableFilter<"auth_activity_log">
    created_at?: DateTimeNullableFilter<"auth_activity_log"> | Date | string | null
  }

  export type auth_activity_logOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
  }

  export type auth_activity_logWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: auth_activity_logWhereInput | auth_activity_logWhereInput[]
    OR?: auth_activity_logWhereInput[]
    NOT?: auth_activity_logWhereInput | auth_activity_logWhereInput[]
    user_id?: UuidFilter<"auth_activity_log"> | string
    action?: StringFilter<"auth_activity_log"> | string
    ip_address?: StringNullableFilter<"auth_activity_log"> | string | null
    metadata?: JsonNullableFilter<"auth_activity_log">
    created_at?: DateTimeNullableFilter<"auth_activity_log"> | Date | string | null
  }, "id">

  export type auth_activity_logOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: auth_activity_logCountOrderByAggregateInput
    _max?: auth_activity_logMaxOrderByAggregateInput
    _min?: auth_activity_logMinOrderByAggregateInput
  }

  export type auth_activity_logScalarWhereWithAggregatesInput = {
    AND?: auth_activity_logScalarWhereWithAggregatesInput | auth_activity_logScalarWhereWithAggregatesInput[]
    OR?: auth_activity_logScalarWhereWithAggregatesInput[]
    NOT?: auth_activity_logScalarWhereWithAggregatesInput | auth_activity_logScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"auth_activity_log"> | string
    user_id?: UuidWithAggregatesFilter<"auth_activity_log"> | string
    action?: StringWithAggregatesFilter<"auth_activity_log"> | string
    ip_address?: StringNullableWithAggregatesFilter<"auth_activity_log"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"auth_activity_log">
    created_at?: DateTimeNullableWithAggregatesFilter<"auth_activity_log"> | Date | string | null
  }

  export type bottle_sizesWhereInput = {
    AND?: bottle_sizesWhereInput | bottle_sizesWhereInput[]
    OR?: bottle_sizesWhereInput[]
    NOT?: bottle_sizesWhereInput | bottle_sizesWhereInput[]
    id?: IntFilter<"bottle_sizes"> | number
    volume?: StringFilter<"bottle_sizes"> | string
    product_prices?: Product_pricesListRelationFilter
  }

  export type bottle_sizesOrderByWithRelationInput = {
    id?: SortOrder
    volume?: SortOrder
    product_prices?: product_pricesOrderByRelationAggregateInput
  }

  export type bottle_sizesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: bottle_sizesWhereInput | bottle_sizesWhereInput[]
    OR?: bottle_sizesWhereInput[]
    NOT?: bottle_sizesWhereInput | bottle_sizesWhereInput[]
    volume?: StringFilter<"bottle_sizes"> | string
    product_prices?: Product_pricesListRelationFilter
  }, "id">

  export type bottle_sizesOrderByWithAggregationInput = {
    id?: SortOrder
    volume?: SortOrder
    _count?: bottle_sizesCountOrderByAggregateInput
    _avg?: bottle_sizesAvgOrderByAggregateInput
    _max?: bottle_sizesMaxOrderByAggregateInput
    _min?: bottle_sizesMinOrderByAggregateInput
    _sum?: bottle_sizesSumOrderByAggregateInput
  }

  export type bottle_sizesScalarWhereWithAggregatesInput = {
    AND?: bottle_sizesScalarWhereWithAggregatesInput | bottle_sizesScalarWhereWithAggregatesInput[]
    OR?: bottle_sizesScalarWhereWithAggregatesInput[]
    NOT?: bottle_sizesScalarWhereWithAggregatesInput | bottle_sizesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"bottle_sizes"> | number
    volume?: StringWithAggregatesFilter<"bottle_sizes"> | string
  }

  export type chemical_group_kindWhereInput = {
    AND?: chemical_group_kindWhereInput | chemical_group_kindWhereInput[]
    OR?: chemical_group_kindWhereInput[]
    NOT?: chemical_group_kindWhereInput | chemical_group_kindWhereInput[]
    value?: StringFilter<"chemical_group_kind"> | string
    ref_materials?: Ref_materialsListRelationFilter
  }

  export type chemical_group_kindOrderByWithRelationInput = {
    value?: SortOrder
    ref_materials?: ref_materialsOrderByRelationAggregateInput
  }

  export type chemical_group_kindWhereUniqueInput = Prisma.AtLeast<{
    value?: string
    AND?: chemical_group_kindWhereInput | chemical_group_kindWhereInput[]
    OR?: chemical_group_kindWhereInput[]
    NOT?: chemical_group_kindWhereInput | chemical_group_kindWhereInput[]
    ref_materials?: Ref_materialsListRelationFilter
  }, "value">

  export type chemical_group_kindOrderByWithAggregationInput = {
    value?: SortOrder
    _count?: chemical_group_kindCountOrderByAggregateInput
    _max?: chemical_group_kindMaxOrderByAggregateInput
    _min?: chemical_group_kindMinOrderByAggregateInput
  }

  export type chemical_group_kindScalarWhereWithAggregatesInput = {
    AND?: chemical_group_kindScalarWhereWithAggregatesInput | chemical_group_kindScalarWhereWithAggregatesInput[]
    OR?: chemical_group_kindScalarWhereWithAggregatesInput[]
    NOT?: chemical_group_kindScalarWhereWithAggregatesInput | chemical_group_kindScalarWhereWithAggregatesInput[]
    value?: StringWithAggregatesFilter<"chemical_group_kind"> | string
  }

  export type distillation_pending_assignmentWhereInput = {
    AND?: distillation_pending_assignmentWhereInput | distillation_pending_assignmentWhereInput[]
    OR?: distillation_pending_assignmentWhereInput[]
    NOT?: distillation_pending_assignmentWhereInput | distillation_pending_assignmentWhereInput[]
    pending_id?: IntFilter<"distillation_pending_assignment"> | number
    drum_id?: IntNullableFilter<"distillation_pending_assignment"> | number | null
    transport_id?: IntFilter<"distillation_pending_assignment"> | number
    assigned_distillation_id?: IntNullableFilter<"distillation_pending_assignment"> | number | null
    status?: StringNullableFilter<"distillation_pending_assignment"> | string | null
    distillation_schedule?: XOR<Distillation_scheduleNullableScalarRelationFilter, distillation_scheduleWhereInput> | null
    stock_drum?: XOR<Stock_drumNullableScalarRelationFilter, stock_drumWhereInput> | null
    log_transport_drum?: XOR<Log_transport_drumScalarRelationFilter, log_transport_drumWhereInput>
  }

  export type distillation_pending_assignmentOrderByWithRelationInput = {
    pending_id?: SortOrder
    drum_id?: SortOrderInput | SortOrder
    transport_id?: SortOrder
    assigned_distillation_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    distillation_schedule?: distillation_scheduleOrderByWithRelationInput
    stock_drum?: stock_drumOrderByWithRelationInput
    log_transport_drum?: log_transport_drumOrderByWithRelationInput
  }

  export type distillation_pending_assignmentWhereUniqueInput = Prisma.AtLeast<{
    pending_id?: number
    AND?: distillation_pending_assignmentWhereInput | distillation_pending_assignmentWhereInput[]
    OR?: distillation_pending_assignmentWhereInput[]
    NOT?: distillation_pending_assignmentWhereInput | distillation_pending_assignmentWhereInput[]
    drum_id?: IntNullableFilter<"distillation_pending_assignment"> | number | null
    transport_id?: IntFilter<"distillation_pending_assignment"> | number
    assigned_distillation_id?: IntNullableFilter<"distillation_pending_assignment"> | number | null
    status?: StringNullableFilter<"distillation_pending_assignment"> | string | null
    distillation_schedule?: XOR<Distillation_scheduleNullableScalarRelationFilter, distillation_scheduleWhereInput> | null
    stock_drum?: XOR<Stock_drumNullableScalarRelationFilter, stock_drumWhereInput> | null
    log_transport_drum?: XOR<Log_transport_drumScalarRelationFilter, log_transport_drumWhereInput>
  }, "pending_id">

  export type distillation_pending_assignmentOrderByWithAggregationInput = {
    pending_id?: SortOrder
    drum_id?: SortOrderInput | SortOrder
    transport_id?: SortOrder
    assigned_distillation_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    _count?: distillation_pending_assignmentCountOrderByAggregateInput
    _avg?: distillation_pending_assignmentAvgOrderByAggregateInput
    _max?: distillation_pending_assignmentMaxOrderByAggregateInput
    _min?: distillation_pending_assignmentMinOrderByAggregateInput
    _sum?: distillation_pending_assignmentSumOrderByAggregateInput
  }

  export type distillation_pending_assignmentScalarWhereWithAggregatesInput = {
    AND?: distillation_pending_assignmentScalarWhereWithAggregatesInput | distillation_pending_assignmentScalarWhereWithAggregatesInput[]
    OR?: distillation_pending_assignmentScalarWhereWithAggregatesInput[]
    NOT?: distillation_pending_assignmentScalarWhereWithAggregatesInput | distillation_pending_assignmentScalarWhereWithAggregatesInput[]
    pending_id?: IntWithAggregatesFilter<"distillation_pending_assignment"> | number
    drum_id?: IntNullableWithAggregatesFilter<"distillation_pending_assignment"> | number | null
    transport_id?: IntWithAggregatesFilter<"distillation_pending_assignment"> | number
    assigned_distillation_id?: IntNullableWithAggregatesFilter<"distillation_pending_assignment"> | number | null
    status?: StringNullableWithAggregatesFilter<"distillation_pending_assignment"> | string | null
  }

  export type distillation_recordWhereInput = {
    AND?: distillation_recordWhereInput | distillation_recordWhereInput[]
    OR?: distillation_recordWhereInput[]
    NOT?: distillation_recordWhereInput | distillation_recordWhereInput[]
    record_id?: IntFilter<"distillation_record"> | number
    distillation_id?: IntNullableFilter<"distillation_record"> | number | null
    actual_start?: DateTimeNullableFilter<"distillation_record"> | Date | string | null
    actual_end?: DateTimeNullableFilter<"distillation_record"> | Date | string | null
    status?: StringNullableFilter<"distillation_record"> | string | null
    notes?: StringNullableFilter<"distillation_record"> | string | null
    distillation_schedule?: XOR<Distillation_scheduleNullableScalarRelationFilter, distillation_scheduleWhereInput> | null
    stock_drum?: Stock_drumListRelationFilter
    stock_drum_new?: Stock_drum_newListRelationFilter
  }

  export type distillation_recordOrderByWithRelationInput = {
    record_id?: SortOrder
    distillation_id?: SortOrderInput | SortOrder
    actual_start?: SortOrderInput | SortOrder
    actual_end?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    distillation_schedule?: distillation_scheduleOrderByWithRelationInput
    stock_drum?: stock_drumOrderByRelationAggregateInput
    stock_drum_new?: stock_drum_newOrderByRelationAggregateInput
  }

  export type distillation_recordWhereUniqueInput = Prisma.AtLeast<{
    record_id?: number
    distillation_id?: number
    AND?: distillation_recordWhereInput | distillation_recordWhereInput[]
    OR?: distillation_recordWhereInput[]
    NOT?: distillation_recordWhereInput | distillation_recordWhereInput[]
    actual_start?: DateTimeNullableFilter<"distillation_record"> | Date | string | null
    actual_end?: DateTimeNullableFilter<"distillation_record"> | Date | string | null
    status?: StringNullableFilter<"distillation_record"> | string | null
    notes?: StringNullableFilter<"distillation_record"> | string | null
    distillation_schedule?: XOR<Distillation_scheduleNullableScalarRelationFilter, distillation_scheduleWhereInput> | null
    stock_drum?: Stock_drumListRelationFilter
    stock_drum_new?: Stock_drum_newListRelationFilter
  }, "record_id" | "distillation_id">

  export type distillation_recordOrderByWithAggregationInput = {
    record_id?: SortOrder
    distillation_id?: SortOrderInput | SortOrder
    actual_start?: SortOrderInput | SortOrder
    actual_end?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    _count?: distillation_recordCountOrderByAggregateInput
    _avg?: distillation_recordAvgOrderByAggregateInput
    _max?: distillation_recordMaxOrderByAggregateInput
    _min?: distillation_recordMinOrderByAggregateInput
    _sum?: distillation_recordSumOrderByAggregateInput
  }

  export type distillation_recordScalarWhereWithAggregatesInput = {
    AND?: distillation_recordScalarWhereWithAggregatesInput | distillation_recordScalarWhereWithAggregatesInput[]
    OR?: distillation_recordScalarWhereWithAggregatesInput[]
    NOT?: distillation_recordScalarWhereWithAggregatesInput | distillation_recordScalarWhereWithAggregatesInput[]
    record_id?: IntWithAggregatesFilter<"distillation_record"> | number
    distillation_id?: IntNullableWithAggregatesFilter<"distillation_record"> | number | null
    actual_start?: DateTimeNullableWithAggregatesFilter<"distillation_record"> | Date | string | null
    actual_end?: DateTimeNullableWithAggregatesFilter<"distillation_record"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"distillation_record"> | string | null
    notes?: StringNullableWithAggregatesFilter<"distillation_record"> | string | null
  }

  export type distillation_scheduleWhereInput = {
    AND?: distillation_scheduleWhereInput | distillation_scheduleWhereInput[]
    OR?: distillation_scheduleWhereInput[]
    NOT?: distillation_scheduleWhereInput | distillation_scheduleWhereInput[]
    distillation_id?: IntFilter<"distillation_schedule"> | number
    scheduled_date?: DateTimeFilter<"distillation_schedule"> | Date | string
    still_id?: IntFilter<"distillation_schedule"> | number
    expected_drum_qty?: DecimalFilter<"distillation_schedule"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"distillation_schedule"> | string | null
    created_at?: DateTimeNullableFilter<"distillation_schedule"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"distillation_schedule"> | Date | string | null
    distillation_pending_assignment?: Distillation_pending_assignmentListRelationFilter
    distillation_record?: XOR<Distillation_recordNullableScalarRelationFilter, distillation_recordWhereInput> | null
    ref_stills?: XOR<Ref_stillsScalarRelationFilter, ref_stillsWhereInput>
    distillation_schedule_items?: Distillation_schedule_itemsListRelationFilter
    log_load_still?: Log_load_stillListRelationFilter
    log_start_distillation?: XOR<Log_start_distillationNullableScalarRelationFilter, log_start_distillationWhereInput> | null
    log_transport_drum?: Log_transport_drumListRelationFilter
    log_volume_transfer?: Log_volume_transferListRelationFilter
  }

  export type distillation_scheduleOrderByWithRelationInput = {
    distillation_id?: SortOrder
    scheduled_date?: SortOrder
    still_id?: SortOrder
    expected_drum_qty?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    distillation_pending_assignment?: distillation_pending_assignmentOrderByRelationAggregateInput
    distillation_record?: distillation_recordOrderByWithRelationInput
    ref_stills?: ref_stillsOrderByWithRelationInput
    distillation_schedule_items?: distillation_schedule_itemsOrderByRelationAggregateInput
    log_load_still?: log_load_stillOrderByRelationAggregateInput
    log_start_distillation?: log_start_distillationOrderByWithRelationInput
    log_transport_drum?: log_transport_drumOrderByRelationAggregateInput
    log_volume_transfer?: log_volume_transferOrderByRelationAggregateInput
  }

  export type distillation_scheduleWhereUniqueInput = Prisma.AtLeast<{
    distillation_id?: number
    AND?: distillation_scheduleWhereInput | distillation_scheduleWhereInput[]
    OR?: distillation_scheduleWhereInput[]
    NOT?: distillation_scheduleWhereInput | distillation_scheduleWhereInput[]
    scheduled_date?: DateTimeFilter<"distillation_schedule"> | Date | string
    still_id?: IntFilter<"distillation_schedule"> | number
    expected_drum_qty?: DecimalFilter<"distillation_schedule"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"distillation_schedule"> | string | null
    created_at?: DateTimeNullableFilter<"distillation_schedule"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"distillation_schedule"> | Date | string | null
    distillation_pending_assignment?: Distillation_pending_assignmentListRelationFilter
    distillation_record?: XOR<Distillation_recordNullableScalarRelationFilter, distillation_recordWhereInput> | null
    ref_stills?: XOR<Ref_stillsScalarRelationFilter, ref_stillsWhereInput>
    distillation_schedule_items?: Distillation_schedule_itemsListRelationFilter
    log_load_still?: Log_load_stillListRelationFilter
    log_start_distillation?: XOR<Log_start_distillationNullableScalarRelationFilter, log_start_distillationWhereInput> | null
    log_transport_drum?: Log_transport_drumListRelationFilter
    log_volume_transfer?: Log_volume_transferListRelationFilter
  }, "distillation_id">

  export type distillation_scheduleOrderByWithAggregationInput = {
    distillation_id?: SortOrder
    scheduled_date?: SortOrder
    still_id?: SortOrder
    expected_drum_qty?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: distillation_scheduleCountOrderByAggregateInput
    _avg?: distillation_scheduleAvgOrderByAggregateInput
    _max?: distillation_scheduleMaxOrderByAggregateInput
    _min?: distillation_scheduleMinOrderByAggregateInput
    _sum?: distillation_scheduleSumOrderByAggregateInput
  }

  export type distillation_scheduleScalarWhereWithAggregatesInput = {
    AND?: distillation_scheduleScalarWhereWithAggregatesInput | distillation_scheduleScalarWhereWithAggregatesInput[]
    OR?: distillation_scheduleScalarWhereWithAggregatesInput[]
    NOT?: distillation_scheduleScalarWhereWithAggregatesInput | distillation_scheduleScalarWhereWithAggregatesInput[]
    distillation_id?: IntWithAggregatesFilter<"distillation_schedule"> | number
    scheduled_date?: DateTimeWithAggregatesFilter<"distillation_schedule"> | Date | string
    still_id?: IntWithAggregatesFilter<"distillation_schedule"> | number
    expected_drum_qty?: DecimalWithAggregatesFilter<"distillation_schedule"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableWithAggregatesFilter<"distillation_schedule"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"distillation_schedule"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"distillation_schedule"> | Date | string | null
  }

  export type distillation_schedule_itemsWhereInput = {
    AND?: distillation_schedule_itemsWhereInput | distillation_schedule_itemsWhereInput[]
    OR?: distillation_schedule_itemsWhereInput[]
    NOT?: distillation_schedule_itemsWhereInput | distillation_schedule_itemsWhereInput[]
    details_id?: IntFilter<"distillation_schedule_items"> | number
    distillation_id?: IntFilter<"distillation_schedule_items"> | number
    new_stock_id?: IntNullableFilter<"distillation_schedule_items"> | number | null
    repro_stock_id?: IntNullableFilter<"distillation_schedule_items"> | number | null
    drum_quantity?: DecimalFilter<"distillation_schedule_items"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"distillation_schedule_items"> | string | null
    created_at?: DateTimeNullableFilter<"distillation_schedule_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"distillation_schedule_items"> | Date | string | null
    distillation_schedule?: XOR<Distillation_scheduleScalarRelationFilter, distillation_scheduleWhereInput>
    stock_new?: XOR<Stock_newNullableScalarRelationFilter, stock_newWhereInput> | null
    stock_repro?: XOR<Stock_reproNullableScalarRelationFilter, stock_reproWhereInput> | null
    stock_activity?: Stock_activityListRelationFilter
  }

  export type distillation_schedule_itemsOrderByWithRelationInput = {
    details_id?: SortOrder
    distillation_id?: SortOrder
    new_stock_id?: SortOrderInput | SortOrder
    repro_stock_id?: SortOrderInput | SortOrder
    drum_quantity?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    distillation_schedule?: distillation_scheduleOrderByWithRelationInput
    stock_new?: stock_newOrderByWithRelationInput
    stock_repro?: stock_reproOrderByWithRelationInput
    stock_activity?: stock_activityOrderByRelationAggregateInput
  }

  export type distillation_schedule_itemsWhereUniqueInput = Prisma.AtLeast<{
    details_id?: number
    AND?: distillation_schedule_itemsWhereInput | distillation_schedule_itemsWhereInput[]
    OR?: distillation_schedule_itemsWhereInput[]
    NOT?: distillation_schedule_itemsWhereInput | distillation_schedule_itemsWhereInput[]
    distillation_id?: IntFilter<"distillation_schedule_items"> | number
    new_stock_id?: IntNullableFilter<"distillation_schedule_items"> | number | null
    repro_stock_id?: IntNullableFilter<"distillation_schedule_items"> | number | null
    drum_quantity?: DecimalFilter<"distillation_schedule_items"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"distillation_schedule_items"> | string | null
    created_at?: DateTimeNullableFilter<"distillation_schedule_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"distillation_schedule_items"> | Date | string | null
    distillation_schedule?: XOR<Distillation_scheduleScalarRelationFilter, distillation_scheduleWhereInput>
    stock_new?: XOR<Stock_newNullableScalarRelationFilter, stock_newWhereInput> | null
    stock_repro?: XOR<Stock_reproNullableScalarRelationFilter, stock_reproWhereInput> | null
    stock_activity?: Stock_activityListRelationFilter
  }, "details_id">

  export type distillation_schedule_itemsOrderByWithAggregationInput = {
    details_id?: SortOrder
    distillation_id?: SortOrder
    new_stock_id?: SortOrderInput | SortOrder
    repro_stock_id?: SortOrderInput | SortOrder
    drum_quantity?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: distillation_schedule_itemsCountOrderByAggregateInput
    _avg?: distillation_schedule_itemsAvgOrderByAggregateInput
    _max?: distillation_schedule_itemsMaxOrderByAggregateInput
    _min?: distillation_schedule_itemsMinOrderByAggregateInput
    _sum?: distillation_schedule_itemsSumOrderByAggregateInput
  }

  export type distillation_schedule_itemsScalarWhereWithAggregatesInput = {
    AND?: distillation_schedule_itemsScalarWhereWithAggregatesInput | distillation_schedule_itemsScalarWhereWithAggregatesInput[]
    OR?: distillation_schedule_itemsScalarWhereWithAggregatesInput[]
    NOT?: distillation_schedule_itemsScalarWhereWithAggregatesInput | distillation_schedule_itemsScalarWhereWithAggregatesInput[]
    details_id?: IntWithAggregatesFilter<"distillation_schedule_items"> | number
    distillation_id?: IntWithAggregatesFilter<"distillation_schedule_items"> | number
    new_stock_id?: IntNullableWithAggregatesFilter<"distillation_schedule_items"> | number | null
    repro_stock_id?: IntNullableWithAggregatesFilter<"distillation_schedule_items"> | number | null
    drum_quantity?: DecimalWithAggregatesFilter<"distillation_schedule_items"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableWithAggregatesFilter<"distillation_schedule_items"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"distillation_schedule_items"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"distillation_schedule_items"> | Date | string | null
  }

  export type drumsWhereInput = {
    AND?: drumsWhereInput | drumsWhereInput[]
    OR?: drumsWhereInput[]
    NOT?: drumsWhereInput | drumsWhereInput[]
    old_id?: IntFilter<"drums"> | number
    material?: StringFilter<"drums"> | string
    batch_code?: StringNullableFilter<"drums"> | string | null
    id?: IntFilter<"drums"> | number
    supplier?: StringNullableFilter<"drums"> | string | null
    status?: StringFilter<"drums"> | string
    created_at?: DateTimeFilter<"drums"> | Date | string
    updated_at?: DateTimeNullableFilter<"drums"> | Date | string | null
    site?: StringFilter<"drums"> | string
    date_ordered?: StringNullableFilter<"drums"> | string | null
    chemical_group?: StringNullableFilter<"drums"> | string | null
    material_code?: StringFilter<"drums"> | string
  }

  export type drumsOrderByWithRelationInput = {
    old_id?: SortOrder
    material?: SortOrder
    batch_code?: SortOrderInput | SortOrder
    id?: SortOrder
    supplier?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    site?: SortOrder
    date_ordered?: SortOrderInput | SortOrder
    chemical_group?: SortOrderInput | SortOrder
    material_code?: SortOrder
  }

  export type drumsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: drumsWhereInput | drumsWhereInput[]
    OR?: drumsWhereInput[]
    NOT?: drumsWhereInput | drumsWhereInput[]
    old_id?: IntFilter<"drums"> | number
    material?: StringFilter<"drums"> | string
    batch_code?: StringNullableFilter<"drums"> | string | null
    supplier?: StringNullableFilter<"drums"> | string | null
    status?: StringFilter<"drums"> | string
    created_at?: DateTimeFilter<"drums"> | Date | string
    updated_at?: DateTimeNullableFilter<"drums"> | Date | string | null
    site?: StringFilter<"drums"> | string
    date_ordered?: StringNullableFilter<"drums"> | string | null
    chemical_group?: StringNullableFilter<"drums"> | string | null
    material_code?: StringFilter<"drums"> | string
  }, "id">

  export type drumsOrderByWithAggregationInput = {
    old_id?: SortOrder
    material?: SortOrder
    batch_code?: SortOrderInput | SortOrder
    id?: SortOrder
    supplier?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    site?: SortOrder
    date_ordered?: SortOrderInput | SortOrder
    chemical_group?: SortOrderInput | SortOrder
    material_code?: SortOrder
    _count?: drumsCountOrderByAggregateInput
    _avg?: drumsAvgOrderByAggregateInput
    _max?: drumsMaxOrderByAggregateInput
    _min?: drumsMinOrderByAggregateInput
    _sum?: drumsSumOrderByAggregateInput
  }

  export type drumsScalarWhereWithAggregatesInput = {
    AND?: drumsScalarWhereWithAggregatesInput | drumsScalarWhereWithAggregatesInput[]
    OR?: drumsScalarWhereWithAggregatesInput[]
    NOT?: drumsScalarWhereWithAggregatesInput | drumsScalarWhereWithAggregatesInput[]
    old_id?: IntWithAggregatesFilter<"drums"> | number
    material?: StringWithAggregatesFilter<"drums"> | string
    batch_code?: StringNullableWithAggregatesFilter<"drums"> | string | null
    id?: IntWithAggregatesFilter<"drums"> | number
    supplier?: StringNullableWithAggregatesFilter<"drums"> | string | null
    status?: StringWithAggregatesFilter<"drums"> | string
    created_at?: DateTimeWithAggregatesFilter<"drums"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"drums"> | Date | string | null
    site?: StringWithAggregatesFilter<"drums"> | string
    date_ordered?: StringNullableWithAggregatesFilter<"drums"> | string | null
    chemical_group?: StringNullableWithAggregatesFilter<"drums"> | string | null
    material_code?: StringWithAggregatesFilter<"drums"> | string
  }

  export type log_drum_decommissionWhereInput = {
    AND?: log_drum_decommissionWhereInput | log_drum_decommissionWhereInput[]
    OR?: log_drum_decommissionWhereInput[]
    NOT?: log_drum_decommissionWhereInput | log_drum_decommissionWhereInput[]
    decommission_id?: IntFilter<"log_drum_decommission"> | number
    drum_id?: IntFilter<"log_drum_decommission"> | number
    decommissioned_at?: DateTimeNullableFilter<"log_drum_decommission"> | Date | string | null
    worker_id?: IntNullableFilter<"log_drum_decommission"> | number | null
  }

  export type log_drum_decommissionOrderByWithRelationInput = {
    decommission_id?: SortOrder
    drum_id?: SortOrder
    decommissioned_at?: SortOrderInput | SortOrder
    worker_id?: SortOrderInput | SortOrder
  }

  export type log_drum_decommissionWhereUniqueInput = Prisma.AtLeast<{
    decommission_id?: number
    AND?: log_drum_decommissionWhereInput | log_drum_decommissionWhereInput[]
    OR?: log_drum_decommissionWhereInput[]
    NOT?: log_drum_decommissionWhereInput | log_drum_decommissionWhereInput[]
    drum_id?: IntFilter<"log_drum_decommission"> | number
    decommissioned_at?: DateTimeNullableFilter<"log_drum_decommission"> | Date | string | null
    worker_id?: IntNullableFilter<"log_drum_decommission"> | number | null
  }, "decommission_id">

  export type log_drum_decommissionOrderByWithAggregationInput = {
    decommission_id?: SortOrder
    drum_id?: SortOrder
    decommissioned_at?: SortOrderInput | SortOrder
    worker_id?: SortOrderInput | SortOrder
    _count?: log_drum_decommissionCountOrderByAggregateInput
    _avg?: log_drum_decommissionAvgOrderByAggregateInput
    _max?: log_drum_decommissionMaxOrderByAggregateInput
    _min?: log_drum_decommissionMinOrderByAggregateInput
    _sum?: log_drum_decommissionSumOrderByAggregateInput
  }

  export type log_drum_decommissionScalarWhereWithAggregatesInput = {
    AND?: log_drum_decommissionScalarWhereWithAggregatesInput | log_drum_decommissionScalarWhereWithAggregatesInput[]
    OR?: log_drum_decommissionScalarWhereWithAggregatesInput[]
    NOT?: log_drum_decommissionScalarWhereWithAggregatesInput | log_drum_decommissionScalarWhereWithAggregatesInput[]
    decommission_id?: IntWithAggregatesFilter<"log_drum_decommission"> | number
    drum_id?: IntWithAggregatesFilter<"log_drum_decommission"> | number
    decommissioned_at?: DateTimeNullableWithAggregatesFilter<"log_drum_decommission"> | Date | string | null
    worker_id?: IntNullableWithAggregatesFilter<"log_drum_decommission"> | number | null
  }

  export type log_drum_scanWhereInput = {
    AND?: log_drum_scanWhereInput | log_drum_scanWhereInput[]
    OR?: log_drum_scanWhereInput[]
    NOT?: log_drum_scanWhereInput | log_drum_scanWhereInput[]
    scan_id?: IntFilter<"log_drum_scan"> | number
    scanned_at?: DateTimeNullableFilter<"log_drum_scan"> | Date | string | null
    drum_id?: IntNullableFilter<"log_drum_scan"> | number | null
    user_id?: IntFilter<"log_drum_scan"> | number
    scan_type?: StringFilter<"log_drum_scan"> | string
    scan_status?: StringFilter<"log_drum_scan"> | string
    error_message?: StringNullableFilter<"log_drum_scan"> | string | null
    stock_drum?: XOR<Stock_drumNullableScalarRelationFilter, stock_drumWhereInput> | null
    log_load_still?: XOR<Log_load_stillNullableScalarRelationFilter, log_load_stillWhereInput> | null
    log_transport_drum?: XOR<Log_transport_drumNullableScalarRelationFilter, log_transport_drumWhereInput> | null
  }

  export type log_drum_scanOrderByWithRelationInput = {
    scan_id?: SortOrder
    scanned_at?: SortOrderInput | SortOrder
    drum_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    scan_type?: SortOrder
    scan_status?: SortOrder
    error_message?: SortOrderInput | SortOrder
    stock_drum?: stock_drumOrderByWithRelationInput
    log_load_still?: log_load_stillOrderByWithRelationInput
    log_transport_drum?: log_transport_drumOrderByWithRelationInput
  }

  export type log_drum_scanWhereUniqueInput = Prisma.AtLeast<{
    scan_id?: number
    AND?: log_drum_scanWhereInput | log_drum_scanWhereInput[]
    OR?: log_drum_scanWhereInput[]
    NOT?: log_drum_scanWhereInput | log_drum_scanWhereInput[]
    scanned_at?: DateTimeNullableFilter<"log_drum_scan"> | Date | string | null
    drum_id?: IntNullableFilter<"log_drum_scan"> | number | null
    user_id?: IntFilter<"log_drum_scan"> | number
    scan_type?: StringFilter<"log_drum_scan"> | string
    scan_status?: StringFilter<"log_drum_scan"> | string
    error_message?: StringNullableFilter<"log_drum_scan"> | string | null
    stock_drum?: XOR<Stock_drumNullableScalarRelationFilter, stock_drumWhereInput> | null
    log_load_still?: XOR<Log_load_stillNullableScalarRelationFilter, log_load_stillWhereInput> | null
    log_transport_drum?: XOR<Log_transport_drumNullableScalarRelationFilter, log_transport_drumWhereInput> | null
  }, "scan_id">

  export type log_drum_scanOrderByWithAggregationInput = {
    scan_id?: SortOrder
    scanned_at?: SortOrderInput | SortOrder
    drum_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    scan_type?: SortOrder
    scan_status?: SortOrder
    error_message?: SortOrderInput | SortOrder
    _count?: log_drum_scanCountOrderByAggregateInput
    _avg?: log_drum_scanAvgOrderByAggregateInput
    _max?: log_drum_scanMaxOrderByAggregateInput
    _min?: log_drum_scanMinOrderByAggregateInput
    _sum?: log_drum_scanSumOrderByAggregateInput
  }

  export type log_drum_scanScalarWhereWithAggregatesInput = {
    AND?: log_drum_scanScalarWhereWithAggregatesInput | log_drum_scanScalarWhereWithAggregatesInput[]
    OR?: log_drum_scanScalarWhereWithAggregatesInput[]
    NOT?: log_drum_scanScalarWhereWithAggregatesInput | log_drum_scanScalarWhereWithAggregatesInput[]
    scan_id?: IntWithAggregatesFilter<"log_drum_scan"> | number
    scanned_at?: DateTimeNullableWithAggregatesFilter<"log_drum_scan"> | Date | string | null
    drum_id?: IntNullableWithAggregatesFilter<"log_drum_scan"> | number | null
    user_id?: IntWithAggregatesFilter<"log_drum_scan"> | number
    scan_type?: StringWithAggregatesFilter<"log_drum_scan"> | string
    scan_status?: StringWithAggregatesFilter<"log_drum_scan"> | string
    error_message?: StringNullableWithAggregatesFilter<"log_drum_scan"> | string | null
  }

  export type log_load_stillWhereInput = {
    AND?: log_load_stillWhereInput | log_load_stillWhereInput[]
    OR?: log_load_stillWhereInput[]
    NOT?: log_load_stillWhereInput | log_load_stillWhereInput[]
    loading_id?: IntFilter<"log_load_still"> | number
    scan_id?: IntNullableFilter<"log_load_still"> | number | null
    drum_id?: IntNullableFilter<"log_load_still"> | number | null
    still_id?: IntNullableFilter<"log_load_still"> | number | null
    distillation_id?: IntFilter<"log_load_still"> | number
    status?: StringNullableFilter<"log_load_still"> | string | null
    distillation_schedule?: XOR<Distillation_scheduleScalarRelationFilter, distillation_scheduleWhereInput>
    stock_drum?: XOR<Stock_drumNullableScalarRelationFilter, stock_drumWhereInput> | null
    log_drum_scan?: XOR<Log_drum_scanNullableScalarRelationFilter, log_drum_scanWhereInput> | null
    ref_stills?: XOR<Ref_stillsNullableScalarRelationFilter, ref_stillsWhereInput> | null
  }

  export type log_load_stillOrderByWithRelationInput = {
    loading_id?: SortOrder
    scan_id?: SortOrderInput | SortOrder
    drum_id?: SortOrderInput | SortOrder
    still_id?: SortOrderInput | SortOrder
    distillation_id?: SortOrder
    status?: SortOrderInput | SortOrder
    distillation_schedule?: distillation_scheduleOrderByWithRelationInput
    stock_drum?: stock_drumOrderByWithRelationInput
    log_drum_scan?: log_drum_scanOrderByWithRelationInput
    ref_stills?: ref_stillsOrderByWithRelationInput
  }

  export type log_load_stillWhereUniqueInput = Prisma.AtLeast<{
    loading_id?: number
    scan_id?: number
    AND?: log_load_stillWhereInput | log_load_stillWhereInput[]
    OR?: log_load_stillWhereInput[]
    NOT?: log_load_stillWhereInput | log_load_stillWhereInput[]
    drum_id?: IntNullableFilter<"log_load_still"> | number | null
    still_id?: IntNullableFilter<"log_load_still"> | number | null
    distillation_id?: IntFilter<"log_load_still"> | number
    status?: StringNullableFilter<"log_load_still"> | string | null
    distillation_schedule?: XOR<Distillation_scheduleScalarRelationFilter, distillation_scheduleWhereInput>
    stock_drum?: XOR<Stock_drumNullableScalarRelationFilter, stock_drumWhereInput> | null
    log_drum_scan?: XOR<Log_drum_scanNullableScalarRelationFilter, log_drum_scanWhereInput> | null
    ref_stills?: XOR<Ref_stillsNullableScalarRelationFilter, ref_stillsWhereInput> | null
  }, "loading_id" | "scan_id">

  export type log_load_stillOrderByWithAggregationInput = {
    loading_id?: SortOrder
    scan_id?: SortOrderInput | SortOrder
    drum_id?: SortOrderInput | SortOrder
    still_id?: SortOrderInput | SortOrder
    distillation_id?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: log_load_stillCountOrderByAggregateInput
    _avg?: log_load_stillAvgOrderByAggregateInput
    _max?: log_load_stillMaxOrderByAggregateInput
    _min?: log_load_stillMinOrderByAggregateInput
    _sum?: log_load_stillSumOrderByAggregateInput
  }

  export type log_load_stillScalarWhereWithAggregatesInput = {
    AND?: log_load_stillScalarWhereWithAggregatesInput | log_load_stillScalarWhereWithAggregatesInput[]
    OR?: log_load_stillScalarWhereWithAggregatesInput[]
    NOT?: log_load_stillScalarWhereWithAggregatesInput | log_load_stillScalarWhereWithAggregatesInput[]
    loading_id?: IntWithAggregatesFilter<"log_load_still"> | number
    scan_id?: IntNullableWithAggregatesFilter<"log_load_still"> | number | null
    drum_id?: IntNullableWithAggregatesFilter<"log_load_still"> | number | null
    still_id?: IntNullableWithAggregatesFilter<"log_load_still"> | number | null
    distillation_id?: IntWithAggregatesFilter<"log_load_still"> | number
    status?: StringNullableWithAggregatesFilter<"log_load_still"> | string | null
  }

  export type log_start_distillationWhereInput = {
    AND?: log_start_distillationWhereInput | log_start_distillationWhereInput[]
    OR?: log_start_distillationWhereInput[]
    NOT?: log_start_distillationWhereInput | log_start_distillationWhereInput[]
    start_id?: IntFilter<"log_start_distillation"> | number
    distillation_id?: IntNullableFilter<"log_start_distillation"> | number | null
    still_id?: IntFilter<"log_start_distillation"> | number
    worker_id?: IntNullableFilter<"log_start_distillation"> | number | null
    status?: StringNullableFilter<"log_start_distillation"> | string | null
    distillation_schedule?: XOR<Distillation_scheduleNullableScalarRelationFilter, distillation_scheduleWhereInput> | null
    ref_stills?: XOR<Ref_stillsScalarRelationFilter, ref_stillsWhereInput>
  }

  export type log_start_distillationOrderByWithRelationInput = {
    start_id?: SortOrder
    distillation_id?: SortOrderInput | SortOrder
    still_id?: SortOrder
    worker_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    distillation_schedule?: distillation_scheduleOrderByWithRelationInput
    ref_stills?: ref_stillsOrderByWithRelationInput
  }

  export type log_start_distillationWhereUniqueInput = Prisma.AtLeast<{
    start_id?: number
    distillation_id?: number
    AND?: log_start_distillationWhereInput | log_start_distillationWhereInput[]
    OR?: log_start_distillationWhereInput[]
    NOT?: log_start_distillationWhereInput | log_start_distillationWhereInput[]
    still_id?: IntFilter<"log_start_distillation"> | number
    worker_id?: IntNullableFilter<"log_start_distillation"> | number | null
    status?: StringNullableFilter<"log_start_distillation"> | string | null
    distillation_schedule?: XOR<Distillation_scheduleNullableScalarRelationFilter, distillation_scheduleWhereInput> | null
    ref_stills?: XOR<Ref_stillsScalarRelationFilter, ref_stillsWhereInput>
  }, "start_id" | "distillation_id">

  export type log_start_distillationOrderByWithAggregationInput = {
    start_id?: SortOrder
    distillation_id?: SortOrderInput | SortOrder
    still_id?: SortOrder
    worker_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    _count?: log_start_distillationCountOrderByAggregateInput
    _avg?: log_start_distillationAvgOrderByAggregateInput
    _max?: log_start_distillationMaxOrderByAggregateInput
    _min?: log_start_distillationMinOrderByAggregateInput
    _sum?: log_start_distillationSumOrderByAggregateInput
  }

  export type log_start_distillationScalarWhereWithAggregatesInput = {
    AND?: log_start_distillationScalarWhereWithAggregatesInput | log_start_distillationScalarWhereWithAggregatesInput[]
    OR?: log_start_distillationScalarWhereWithAggregatesInput[]
    NOT?: log_start_distillationScalarWhereWithAggregatesInput | log_start_distillationScalarWhereWithAggregatesInput[]
    start_id?: IntWithAggregatesFilter<"log_start_distillation"> | number
    distillation_id?: IntNullableWithAggregatesFilter<"log_start_distillation"> | number | null
    still_id?: IntWithAggregatesFilter<"log_start_distillation"> | number
    worker_id?: IntNullableWithAggregatesFilter<"log_start_distillation"> | number | null
    status?: StringNullableWithAggregatesFilter<"log_start_distillation"> | string | null
  }

  export type log_transport_drumWhereInput = {
    AND?: log_transport_drumWhereInput | log_transport_drumWhereInput[]
    OR?: log_transport_drumWhereInput[]
    NOT?: log_transport_drumWhereInput | log_transport_drumWhereInput[]
    transport_id?: IntFilter<"log_transport_drum"> | number
    scan_id?: IntNullableFilter<"log_transport_drum"> | number | null
    drum_id?: IntNullableFilter<"log_transport_drum"> | number | null
    transported_at?: DateTimeNullableFilter<"log_transport_drum"> | Date | string | null
    distillation_id?: IntNullableFilter<"log_transport_drum"> | number | null
    status?: StringNullableFilter<"log_transport_drum"> | string | null
    distillation_pending_assignment?: Distillation_pending_assignmentListRelationFilter
    distillation_schedule?: XOR<Distillation_scheduleNullableScalarRelationFilter, distillation_scheduleWhereInput> | null
    stock_drum?: XOR<Stock_drumNullableScalarRelationFilter, stock_drumWhereInput> | null
    log_drum_scan?: XOR<Log_drum_scanNullableScalarRelationFilter, log_drum_scanWhereInput> | null
  }

  export type log_transport_drumOrderByWithRelationInput = {
    transport_id?: SortOrder
    scan_id?: SortOrderInput | SortOrder
    drum_id?: SortOrderInput | SortOrder
    transported_at?: SortOrderInput | SortOrder
    distillation_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    distillation_pending_assignment?: distillation_pending_assignmentOrderByRelationAggregateInput
    distillation_schedule?: distillation_scheduleOrderByWithRelationInput
    stock_drum?: stock_drumOrderByWithRelationInput
    log_drum_scan?: log_drum_scanOrderByWithRelationInput
  }

  export type log_transport_drumWhereUniqueInput = Prisma.AtLeast<{
    transport_id?: number
    scan_id?: number
    AND?: log_transport_drumWhereInput | log_transport_drumWhereInput[]
    OR?: log_transport_drumWhereInput[]
    NOT?: log_transport_drumWhereInput | log_transport_drumWhereInput[]
    drum_id?: IntNullableFilter<"log_transport_drum"> | number | null
    transported_at?: DateTimeNullableFilter<"log_transport_drum"> | Date | string | null
    distillation_id?: IntNullableFilter<"log_transport_drum"> | number | null
    status?: StringNullableFilter<"log_transport_drum"> | string | null
    distillation_pending_assignment?: Distillation_pending_assignmentListRelationFilter
    distillation_schedule?: XOR<Distillation_scheduleNullableScalarRelationFilter, distillation_scheduleWhereInput> | null
    stock_drum?: XOR<Stock_drumNullableScalarRelationFilter, stock_drumWhereInput> | null
    log_drum_scan?: XOR<Log_drum_scanNullableScalarRelationFilter, log_drum_scanWhereInput> | null
  }, "transport_id" | "scan_id">

  export type log_transport_drumOrderByWithAggregationInput = {
    transport_id?: SortOrder
    scan_id?: SortOrderInput | SortOrder
    drum_id?: SortOrderInput | SortOrder
    transported_at?: SortOrderInput | SortOrder
    distillation_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    _count?: log_transport_drumCountOrderByAggregateInput
    _avg?: log_transport_drumAvgOrderByAggregateInput
    _max?: log_transport_drumMaxOrderByAggregateInput
    _min?: log_transport_drumMinOrderByAggregateInput
    _sum?: log_transport_drumSumOrderByAggregateInput
  }

  export type log_transport_drumScalarWhereWithAggregatesInput = {
    AND?: log_transport_drumScalarWhereWithAggregatesInput | log_transport_drumScalarWhereWithAggregatesInput[]
    OR?: log_transport_drumScalarWhereWithAggregatesInput[]
    NOT?: log_transport_drumScalarWhereWithAggregatesInput | log_transport_drumScalarWhereWithAggregatesInput[]
    transport_id?: IntWithAggregatesFilter<"log_transport_drum"> | number
    scan_id?: IntNullableWithAggregatesFilter<"log_transport_drum"> | number | null
    drum_id?: IntNullableWithAggregatesFilter<"log_transport_drum"> | number | null
    transported_at?: DateTimeNullableWithAggregatesFilter<"log_transport_drum"> | Date | string | null
    distillation_id?: IntNullableWithAggregatesFilter<"log_transport_drum"> | number | null
    status?: StringNullableWithAggregatesFilter<"log_transport_drum"> | string | null
  }

  export type log_volume_transferWhereInput = {
    AND?: log_volume_transferWhereInput | log_volume_transferWhereInput[]
    OR?: log_volume_transferWhereInput[]
    NOT?: log_volume_transferWhereInput | log_volume_transferWhereInput[]
    transfer_id?: IntFilter<"log_volume_transfer"> | number
    drum_id?: IntFilter<"log_volume_transfer"> | number
    distillation_id?: IntFilter<"log_volume_transfer"> | number
    volume_transferred?: DecimalFilter<"log_volume_transfer"> | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFilter<"log_volume_transfer"> | Decimal | DecimalJsLike | number | string
    usage_type?: StringFilter<"log_volume_transfer"> | string
    transfer_timestamp?: DateTimeNullableFilter<"log_volume_transfer"> | Date | string | null
    worker_id?: IntNullableFilter<"log_volume_transfer"> | number | null
    distillation_schedule?: XOR<Distillation_scheduleScalarRelationFilter, distillation_scheduleWhereInput>
    stock_drum?: XOR<Stock_drumScalarRelationFilter, stock_drumWhereInput>
  }

  export type log_volume_transferOrderByWithRelationInput = {
    transfer_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
    volume_transferred?: SortOrder
    remaining_volume?: SortOrder
    usage_type?: SortOrder
    transfer_timestamp?: SortOrderInput | SortOrder
    worker_id?: SortOrderInput | SortOrder
    distillation_schedule?: distillation_scheduleOrderByWithRelationInput
    stock_drum?: stock_drumOrderByWithRelationInput
  }

  export type log_volume_transferWhereUniqueInput = Prisma.AtLeast<{
    transfer_id?: number
    AND?: log_volume_transferWhereInput | log_volume_transferWhereInput[]
    OR?: log_volume_transferWhereInput[]
    NOT?: log_volume_transferWhereInput | log_volume_transferWhereInput[]
    drum_id?: IntFilter<"log_volume_transfer"> | number
    distillation_id?: IntFilter<"log_volume_transfer"> | number
    volume_transferred?: DecimalFilter<"log_volume_transfer"> | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFilter<"log_volume_transfer"> | Decimal | DecimalJsLike | number | string
    usage_type?: StringFilter<"log_volume_transfer"> | string
    transfer_timestamp?: DateTimeNullableFilter<"log_volume_transfer"> | Date | string | null
    worker_id?: IntNullableFilter<"log_volume_transfer"> | number | null
    distillation_schedule?: XOR<Distillation_scheduleScalarRelationFilter, distillation_scheduleWhereInput>
    stock_drum?: XOR<Stock_drumScalarRelationFilter, stock_drumWhereInput>
  }, "transfer_id">

  export type log_volume_transferOrderByWithAggregationInput = {
    transfer_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
    volume_transferred?: SortOrder
    remaining_volume?: SortOrder
    usage_type?: SortOrder
    transfer_timestamp?: SortOrderInput | SortOrder
    worker_id?: SortOrderInput | SortOrder
    _count?: log_volume_transferCountOrderByAggregateInput
    _avg?: log_volume_transferAvgOrderByAggregateInput
    _max?: log_volume_transferMaxOrderByAggregateInput
    _min?: log_volume_transferMinOrderByAggregateInput
    _sum?: log_volume_transferSumOrderByAggregateInput
  }

  export type log_volume_transferScalarWhereWithAggregatesInput = {
    AND?: log_volume_transferScalarWhereWithAggregatesInput | log_volume_transferScalarWhereWithAggregatesInput[]
    OR?: log_volume_transferScalarWhereWithAggregatesInput[]
    NOT?: log_volume_transferScalarWhereWithAggregatesInput | log_volume_transferScalarWhereWithAggregatesInput[]
    transfer_id?: IntWithAggregatesFilter<"log_volume_transfer"> | number
    drum_id?: IntWithAggregatesFilter<"log_volume_transfer"> | number
    distillation_id?: IntWithAggregatesFilter<"log_volume_transfer"> | number
    volume_transferred?: DecimalWithAggregatesFilter<"log_volume_transfer"> | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalWithAggregatesFilter<"log_volume_transfer"> | Decimal | DecimalJsLike | number | string
    usage_type?: StringWithAggregatesFilter<"log_volume_transfer"> | string
    transfer_timestamp?: DateTimeNullableWithAggregatesFilter<"log_volume_transfer"> | Date | string | null
    worker_id?: IntNullableWithAggregatesFilter<"log_volume_transfer"> | number | null
  }

  export type notificationWhereInput = {
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    notification_id?: IntFilter<"notification"> | number
    message?: StringFilter<"notification"> | string
    message_type?: StringFilter<"notification"> | string
    private?: BoolFilter<"notification"> | boolean
    audience_type?: StringFilter<"notification"> | string
    is_read?: BoolFilter<"notification"> | boolean
    created_at?: DateTimeFilter<"notification"> | Date | string
    expires_at?: DateTimeNullableFilter<"notification"> | Date | string | null
    created_by?: UuidFilter<"notification"> | string
  }

  export type notificationOrderByWithRelationInput = {
    notification_id?: SortOrder
    message?: SortOrder
    message_type?: SortOrder
    private?: SortOrder
    audience_type?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrderInput | SortOrder
    created_by?: SortOrder
  }

  export type notificationWhereUniqueInput = Prisma.AtLeast<{
    notification_id?: number
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    message?: StringFilter<"notification"> | string
    message_type?: StringFilter<"notification"> | string
    private?: BoolFilter<"notification"> | boolean
    audience_type?: StringFilter<"notification"> | string
    is_read?: BoolFilter<"notification"> | boolean
    created_at?: DateTimeFilter<"notification"> | Date | string
    expires_at?: DateTimeNullableFilter<"notification"> | Date | string | null
    created_by?: UuidFilter<"notification"> | string
  }, "notification_id">

  export type notificationOrderByWithAggregationInput = {
    notification_id?: SortOrder
    message?: SortOrder
    message_type?: SortOrder
    private?: SortOrder
    audience_type?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrderInput | SortOrder
    created_by?: SortOrder
    _count?: notificationCountOrderByAggregateInput
    _avg?: notificationAvgOrderByAggregateInput
    _max?: notificationMaxOrderByAggregateInput
    _min?: notificationMinOrderByAggregateInput
    _sum?: notificationSumOrderByAggregateInput
  }

  export type notificationScalarWhereWithAggregatesInput = {
    AND?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    OR?: notificationScalarWhereWithAggregatesInput[]
    NOT?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    notification_id?: IntWithAggregatesFilter<"notification"> | number
    message?: StringWithAggregatesFilter<"notification"> | string
    message_type?: StringWithAggregatesFilter<"notification"> | string
    private?: BoolWithAggregatesFilter<"notification"> | boolean
    audience_type?: StringWithAggregatesFilter<"notification"> | string
    is_read?: BoolWithAggregatesFilter<"notification"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"notification"> | Date | string
    expires_at?: DateTimeNullableWithAggregatesFilter<"notification"> | Date | string | null
    created_by?: UuidWithAggregatesFilter<"notification"> | string
  }

  export type order_detailWhereInput = {
    AND?: order_detailWhereInput | order_detailWhereInput[]
    OR?: order_detailWhereInput[]
    NOT?: order_detailWhereInput | order_detailWhereInput[]
    detail_id?: IntFilter<"order_detail"> | number
    order_id?: IntFilter<"order_detail"> | number
    batch_code?: StringNullableFilter<"order_detail"> | string | null
    material_id?: IntFilter<"order_detail"> | number
    material_name?: StringFilter<"order_detail"> | string
    drum_quantity?: IntFilter<"order_detail"> | number
    drum_weight?: DecimalNullableFilter<"order_detail"> | Decimal | DecimalJsLike | number | string | null
    drum_volume?: DecimalNullableFilter<"order_detail"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"order_detail"> | string
    notes?: StringNullableFilter<"order_detail"> | string | null
    material_code?: StringFilter<"order_detail"> | string
    ref_materials?: XOR<Ref_materialsScalarRelationFilter, ref_materialsWhereInput>
    stock_order?: XOR<Stock_orderScalarRelationFilter, stock_orderWhereInput>
    order_detail_stock_activity?: Order_detail_stock_activityListRelationFilter
    stock_activity?: Stock_activityListRelationFilter
    stock_drum?: Stock_drumListRelationFilter
    stock_drum_new?: Stock_drum_newListRelationFilter
  }

  export type order_detailOrderByWithRelationInput = {
    detail_id?: SortOrder
    order_id?: SortOrder
    batch_code?: SortOrderInput | SortOrder
    material_id?: SortOrder
    material_name?: SortOrder
    drum_quantity?: SortOrder
    drum_weight?: SortOrderInput | SortOrder
    drum_volume?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    material_code?: SortOrder
    ref_materials?: ref_materialsOrderByWithRelationInput
    stock_order?: stock_orderOrderByWithRelationInput
    order_detail_stock_activity?: order_detail_stock_activityOrderByRelationAggregateInput
    stock_activity?: stock_activityOrderByRelationAggregateInput
    stock_drum?: stock_drumOrderByRelationAggregateInput
    stock_drum_new?: stock_drum_newOrderByRelationAggregateInput
  }

  export type order_detailWhereUniqueInput = Prisma.AtLeast<{
    detail_id?: number
    AND?: order_detailWhereInput | order_detailWhereInput[]
    OR?: order_detailWhereInput[]
    NOT?: order_detailWhereInput | order_detailWhereInput[]
    order_id?: IntFilter<"order_detail"> | number
    batch_code?: StringNullableFilter<"order_detail"> | string | null
    material_id?: IntFilter<"order_detail"> | number
    material_name?: StringFilter<"order_detail"> | string
    drum_quantity?: IntFilter<"order_detail"> | number
    drum_weight?: DecimalNullableFilter<"order_detail"> | Decimal | DecimalJsLike | number | string | null
    drum_volume?: DecimalNullableFilter<"order_detail"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"order_detail"> | string
    notes?: StringNullableFilter<"order_detail"> | string | null
    material_code?: StringFilter<"order_detail"> | string
    ref_materials?: XOR<Ref_materialsScalarRelationFilter, ref_materialsWhereInput>
    stock_order?: XOR<Stock_orderScalarRelationFilter, stock_orderWhereInput>
    order_detail_stock_activity?: Order_detail_stock_activityListRelationFilter
    stock_activity?: Stock_activityListRelationFilter
    stock_drum?: Stock_drumListRelationFilter
    stock_drum_new?: Stock_drum_newListRelationFilter
  }, "detail_id">

  export type order_detailOrderByWithAggregationInput = {
    detail_id?: SortOrder
    order_id?: SortOrder
    batch_code?: SortOrderInput | SortOrder
    material_id?: SortOrder
    material_name?: SortOrder
    drum_quantity?: SortOrder
    drum_weight?: SortOrderInput | SortOrder
    drum_volume?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    material_code?: SortOrder
    _count?: order_detailCountOrderByAggregateInput
    _avg?: order_detailAvgOrderByAggregateInput
    _max?: order_detailMaxOrderByAggregateInput
    _min?: order_detailMinOrderByAggregateInput
    _sum?: order_detailSumOrderByAggregateInput
  }

  export type order_detailScalarWhereWithAggregatesInput = {
    AND?: order_detailScalarWhereWithAggregatesInput | order_detailScalarWhereWithAggregatesInput[]
    OR?: order_detailScalarWhereWithAggregatesInput[]
    NOT?: order_detailScalarWhereWithAggregatesInput | order_detailScalarWhereWithAggregatesInput[]
    detail_id?: IntWithAggregatesFilter<"order_detail"> | number
    order_id?: IntWithAggregatesFilter<"order_detail"> | number
    batch_code?: StringNullableWithAggregatesFilter<"order_detail"> | string | null
    material_id?: IntWithAggregatesFilter<"order_detail"> | number
    material_name?: StringWithAggregatesFilter<"order_detail"> | string
    drum_quantity?: IntWithAggregatesFilter<"order_detail"> | number
    drum_weight?: DecimalNullableWithAggregatesFilter<"order_detail"> | Decimal | DecimalJsLike | number | string | null
    drum_volume?: DecimalNullableWithAggregatesFilter<"order_detail"> | Decimal | DecimalJsLike | number | string | null
    status?: StringWithAggregatesFilter<"order_detail"> | string
    notes?: StringNullableWithAggregatesFilter<"order_detail"> | string | null
    material_code?: StringWithAggregatesFilter<"order_detail"> | string
  }

  export type product_pricesWhereInput = {
    AND?: product_pricesWhereInput | product_pricesWhereInput[]
    OR?: product_pricesWhereInput[]
    NOT?: product_pricesWhereInput | product_pricesWhereInput[]
    product_id?: IntFilter<"product_prices"> | number
    bottle_size_id?: IntFilter<"product_prices"> | number
    price?: DecimalFilter<"product_prices"> | Decimal | DecimalJsLike | number | string
    bottle_sizes?: XOR<Bottle_sizesScalarRelationFilter, bottle_sizesWhereInput>
    products?: XOR<Ref_productScalarRelationFilter, ref_productWhereInput>
  }

  export type product_pricesOrderByWithRelationInput = {
    product_id?: SortOrder
    bottle_size_id?: SortOrder
    price?: SortOrder
    bottle_sizes?: bottle_sizesOrderByWithRelationInput
    products?: ref_productOrderByWithRelationInput
  }

  export type product_pricesWhereUniqueInput = Prisma.AtLeast<{
    product_id_bottle_size_id?: product_pricesProduct_idBottle_size_idCompoundUniqueInput
    AND?: product_pricesWhereInput | product_pricesWhereInput[]
    OR?: product_pricesWhereInput[]
    NOT?: product_pricesWhereInput | product_pricesWhereInput[]
    product_id?: IntFilter<"product_prices"> | number
    bottle_size_id?: IntFilter<"product_prices"> | number
    price?: DecimalFilter<"product_prices"> | Decimal | DecimalJsLike | number | string
    bottle_sizes?: XOR<Bottle_sizesScalarRelationFilter, bottle_sizesWhereInput>
    products?: XOR<Ref_productScalarRelationFilter, ref_productWhereInput>
  }, "product_id_bottle_size_id">

  export type product_pricesOrderByWithAggregationInput = {
    product_id?: SortOrder
    bottle_size_id?: SortOrder
    price?: SortOrder
    _count?: product_pricesCountOrderByAggregateInput
    _avg?: product_pricesAvgOrderByAggregateInput
    _max?: product_pricesMaxOrderByAggregateInput
    _min?: product_pricesMinOrderByAggregateInput
    _sum?: product_pricesSumOrderByAggregateInput
  }

  export type product_pricesScalarWhereWithAggregatesInput = {
    AND?: product_pricesScalarWhereWithAggregatesInput | product_pricesScalarWhereWithAggregatesInput[]
    OR?: product_pricesScalarWhereWithAggregatesInput[]
    NOT?: product_pricesScalarWhereWithAggregatesInput | product_pricesScalarWhereWithAggregatesInput[]
    product_id?: IntWithAggregatesFilter<"product_prices"> | number
    bottle_size_id?: IntWithAggregatesFilter<"product_prices"> | number
    price?: DecimalWithAggregatesFilter<"product_prices"> | Decimal | DecimalJsLike | number | string
  }

  export type raw_materialsWhereInput = {
    AND?: raw_materialsWhereInput | raw_materialsWhereInput[]
    OR?: raw_materialsWhereInput[]
    NOT?: raw_materialsWhereInput | raw_materialsWhereInput[]
    material_id?: IntFilter<"raw_materials"> | number
    material_name?: StringFilter<"raw_materials"> | string
    cas_number?: StringFilter<"raw_materials"> | string
    chemical_group?: StringNullableFilter<"raw_materials"> | string | null
    description?: StringNullableFilter<"raw_materials"> | string | null
    un_code?: StringNullableFilter<"raw_materials"> | string | null
    flash_point?: IntNullableFilter<"raw_materials"> | number | null
    material_code?: StringFilter<"raw_materials"> | string
    drum_weight?: DecimalNullableFilter<"raw_materials"> | Decimal | DecimalJsLike | number | string | null
    drum_volume?: IntFilter<"raw_materials"> | number
    chemical_props?: JsonNullableFilter<"raw_materials">
  }

  export type raw_materialsOrderByWithRelationInput = {
    material_id?: SortOrder
    material_name?: SortOrder
    cas_number?: SortOrder
    chemical_group?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    un_code?: SortOrderInput | SortOrder
    flash_point?: SortOrderInput | SortOrder
    material_code?: SortOrder
    drum_weight?: SortOrderInput | SortOrder
    drum_volume?: SortOrder
    chemical_props?: SortOrderInput | SortOrder
  }

  export type raw_materialsWhereUniqueInput = Prisma.AtLeast<{
    material_id?: number
    AND?: raw_materialsWhereInput | raw_materialsWhereInput[]
    OR?: raw_materialsWhereInput[]
    NOT?: raw_materialsWhereInput | raw_materialsWhereInput[]
    material_name?: StringFilter<"raw_materials"> | string
    cas_number?: StringFilter<"raw_materials"> | string
    chemical_group?: StringNullableFilter<"raw_materials"> | string | null
    description?: StringNullableFilter<"raw_materials"> | string | null
    un_code?: StringNullableFilter<"raw_materials"> | string | null
    flash_point?: IntNullableFilter<"raw_materials"> | number | null
    material_code?: StringFilter<"raw_materials"> | string
    drum_weight?: DecimalNullableFilter<"raw_materials"> | Decimal | DecimalJsLike | number | string | null
    drum_volume?: IntFilter<"raw_materials"> | number
    chemical_props?: JsonNullableFilter<"raw_materials">
  }, "material_id">

  export type raw_materialsOrderByWithAggregationInput = {
    material_id?: SortOrder
    material_name?: SortOrder
    cas_number?: SortOrder
    chemical_group?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    un_code?: SortOrderInput | SortOrder
    flash_point?: SortOrderInput | SortOrder
    material_code?: SortOrder
    drum_weight?: SortOrderInput | SortOrder
    drum_volume?: SortOrder
    chemical_props?: SortOrderInput | SortOrder
    _count?: raw_materialsCountOrderByAggregateInput
    _avg?: raw_materialsAvgOrderByAggregateInput
    _max?: raw_materialsMaxOrderByAggregateInput
    _min?: raw_materialsMinOrderByAggregateInput
    _sum?: raw_materialsSumOrderByAggregateInput
  }

  export type raw_materialsScalarWhereWithAggregatesInput = {
    AND?: raw_materialsScalarWhereWithAggregatesInput | raw_materialsScalarWhereWithAggregatesInput[]
    OR?: raw_materialsScalarWhereWithAggregatesInput[]
    NOT?: raw_materialsScalarWhereWithAggregatesInput | raw_materialsScalarWhereWithAggregatesInput[]
    material_id?: IntWithAggregatesFilter<"raw_materials"> | number
    material_name?: StringWithAggregatesFilter<"raw_materials"> | string
    cas_number?: StringWithAggregatesFilter<"raw_materials"> | string
    chemical_group?: StringNullableWithAggregatesFilter<"raw_materials"> | string | null
    description?: StringNullableWithAggregatesFilter<"raw_materials"> | string | null
    un_code?: StringNullableWithAggregatesFilter<"raw_materials"> | string | null
    flash_point?: IntNullableWithAggregatesFilter<"raw_materials"> | number | null
    material_code?: StringWithAggregatesFilter<"raw_materials"> | string
    drum_weight?: DecimalNullableWithAggregatesFilter<"raw_materials"> | Decimal | DecimalJsLike | number | string | null
    drum_volume?: IntWithAggregatesFilter<"raw_materials"> | number
    chemical_props?: JsonNullableWithAggregatesFilter<"raw_materials">
  }

  export type ref_materialsWhereInput = {
    AND?: ref_materialsWhereInput | ref_materialsWhereInput[]
    OR?: ref_materialsWhereInput[]
    NOT?: ref_materialsWhereInput | ref_materialsWhereInput[]
    value?: StringFilter<"ref_materials"> | string
    code?: StringFilter<"ref_materials"> | string
    chemical_group?: StringFilter<"ref_materials"> | string
    cas_number?: StringNullableFilter<"ref_materials"> | string | null
    order_detail?: Order_detailListRelationFilter
    raw_stock_history?: Raw_stock_historyListRelationFilter
    chemical_group_kind?: XOR<Chemical_group_kindScalarRelationFilter, chemical_group_kindWhereInput>
    ref_product?: Ref_productListRelationFilter
    ref_supplier_material?: Ref_supplier_materialListRelationFilter
    stock_activity?: Stock_activityListRelationFilter
    stock_drum_new?: Stock_drum_newListRelationFilter
    stock_history?: Stock_historyListRelationFilter
    stock_new?: Stock_newListRelationFilter
    stock_repro?: Stock_reproListRelationFilter
  }

  export type ref_materialsOrderByWithRelationInput = {
    value?: SortOrder
    code?: SortOrder
    chemical_group?: SortOrder
    cas_number?: SortOrderInput | SortOrder
    order_detail?: order_detailOrderByRelationAggregateInput
    raw_stock_history?: raw_stock_historyOrderByRelationAggregateInput
    chemical_group_kind?: chemical_group_kindOrderByWithRelationInput
    ref_product?: ref_productOrderByRelationAggregateInput
    ref_supplier_material?: ref_supplier_materialOrderByRelationAggregateInput
    stock_activity?: stock_activityOrderByRelationAggregateInput
    stock_drum_new?: stock_drum_newOrderByRelationAggregateInput
    stock_history?: stock_historyOrderByRelationAggregateInput
    stock_new?: stock_newOrderByRelationAggregateInput
    stock_repro?: stock_reproOrderByRelationAggregateInput
  }

  export type ref_materialsWhereUniqueInput = Prisma.AtLeast<{
    value?: string
    code?: string
    AND?: ref_materialsWhereInput | ref_materialsWhereInput[]
    OR?: ref_materialsWhereInput[]
    NOT?: ref_materialsWhereInput | ref_materialsWhereInput[]
    chemical_group?: StringFilter<"ref_materials"> | string
    cas_number?: StringNullableFilter<"ref_materials"> | string | null
    order_detail?: Order_detailListRelationFilter
    raw_stock_history?: Raw_stock_historyListRelationFilter
    chemical_group_kind?: XOR<Chemical_group_kindScalarRelationFilter, chemical_group_kindWhereInput>
    ref_product?: Ref_productListRelationFilter
    ref_supplier_material?: Ref_supplier_materialListRelationFilter
    stock_activity?: Stock_activityListRelationFilter
    stock_drum_new?: Stock_drum_newListRelationFilter
    stock_history?: Stock_historyListRelationFilter
    stock_new?: Stock_newListRelationFilter
    stock_repro?: Stock_reproListRelationFilter
  }, "value" | "code">

  export type ref_materialsOrderByWithAggregationInput = {
    value?: SortOrder
    code?: SortOrder
    chemical_group?: SortOrder
    cas_number?: SortOrderInput | SortOrder
    _count?: ref_materialsCountOrderByAggregateInput
    _max?: ref_materialsMaxOrderByAggregateInput
    _min?: ref_materialsMinOrderByAggregateInput
  }

  export type ref_materialsScalarWhereWithAggregatesInput = {
    AND?: ref_materialsScalarWhereWithAggregatesInput | ref_materialsScalarWhereWithAggregatesInput[]
    OR?: ref_materialsScalarWhereWithAggregatesInput[]
    NOT?: ref_materialsScalarWhereWithAggregatesInput | ref_materialsScalarWhereWithAggregatesInput[]
    value?: StringWithAggregatesFilter<"ref_materials"> | string
    code?: StringWithAggregatesFilter<"ref_materials"> | string
    chemical_group?: StringWithAggregatesFilter<"ref_materials"> | string
    cas_number?: StringNullableWithAggregatesFilter<"ref_materials"> | string | null
  }

  export type ref_stillsWhereInput = {
    AND?: ref_stillsWhereInput | ref_stillsWhereInput[]
    OR?: ref_stillsWhereInput[]
    NOT?: ref_stillsWhereInput | ref_stillsWhereInput[]
    still_id?: IntFilter<"ref_stills"> | number
    still_code?: StringFilter<"ref_stills"> | string
    max_capacity?: DecimalFilter<"ref_stills"> | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFilter<"ref_stills"> | number
    lab_id?: IntFilter<"ref_stills"> | number
    is_vacuum?: BoolFilter<"ref_stills"> | boolean
    is_operational?: BoolFilter<"ref_stills"> | boolean
    description?: StringNullableFilter<"ref_stills"> | string | null
    active_context?: Active_contextListRelationFilter
    distillation_schedule?: Distillation_scheduleListRelationFilter
    log_load_still?: Log_load_stillListRelationFilter
    log_start_distillation?: Log_start_distillationListRelationFilter
  }

  export type ref_stillsOrderByWithRelationInput = {
    still_id?: SortOrder
    still_code?: SortOrder
    max_capacity?: SortOrder
    power_rating_kw?: SortOrder
    lab_id?: SortOrder
    is_vacuum?: SortOrder
    is_operational?: SortOrder
    description?: SortOrderInput | SortOrder
    active_context?: active_contextOrderByRelationAggregateInput
    distillation_schedule?: distillation_scheduleOrderByRelationAggregateInput
    log_load_still?: log_load_stillOrderByRelationAggregateInput
    log_start_distillation?: log_start_distillationOrderByRelationAggregateInput
  }

  export type ref_stillsWhereUniqueInput = Prisma.AtLeast<{
    still_id?: number
    still_code?: string
    AND?: ref_stillsWhereInput | ref_stillsWhereInput[]
    OR?: ref_stillsWhereInput[]
    NOT?: ref_stillsWhereInput | ref_stillsWhereInput[]
    max_capacity?: DecimalFilter<"ref_stills"> | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFilter<"ref_stills"> | number
    lab_id?: IntFilter<"ref_stills"> | number
    is_vacuum?: BoolFilter<"ref_stills"> | boolean
    is_operational?: BoolFilter<"ref_stills"> | boolean
    description?: StringNullableFilter<"ref_stills"> | string | null
    active_context?: Active_contextListRelationFilter
    distillation_schedule?: Distillation_scheduleListRelationFilter
    log_load_still?: Log_load_stillListRelationFilter
    log_start_distillation?: Log_start_distillationListRelationFilter
  }, "still_id" | "still_code">

  export type ref_stillsOrderByWithAggregationInput = {
    still_id?: SortOrder
    still_code?: SortOrder
    max_capacity?: SortOrder
    power_rating_kw?: SortOrder
    lab_id?: SortOrder
    is_vacuum?: SortOrder
    is_operational?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: ref_stillsCountOrderByAggregateInput
    _avg?: ref_stillsAvgOrderByAggregateInput
    _max?: ref_stillsMaxOrderByAggregateInput
    _min?: ref_stillsMinOrderByAggregateInput
    _sum?: ref_stillsSumOrderByAggregateInput
  }

  export type ref_stillsScalarWhereWithAggregatesInput = {
    AND?: ref_stillsScalarWhereWithAggregatesInput | ref_stillsScalarWhereWithAggregatesInput[]
    OR?: ref_stillsScalarWhereWithAggregatesInput[]
    NOT?: ref_stillsScalarWhereWithAggregatesInput | ref_stillsScalarWhereWithAggregatesInput[]
    still_id?: IntWithAggregatesFilter<"ref_stills"> | number
    still_code?: StringWithAggregatesFilter<"ref_stills"> | string
    max_capacity?: DecimalWithAggregatesFilter<"ref_stills"> | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntWithAggregatesFilter<"ref_stills"> | number
    lab_id?: IntWithAggregatesFilter<"ref_stills"> | number
    is_vacuum?: BoolWithAggregatesFilter<"ref_stills"> | boolean
    is_operational?: BoolWithAggregatesFilter<"ref_stills"> | boolean
    description?: StringNullableWithAggregatesFilter<"ref_stills"> | string | null
  }

  export type ref_suppliersWhereInput = {
    AND?: ref_suppliersWhereInput | ref_suppliersWhereInput[]
    OR?: ref_suppliersWhereInput[]
    NOT?: ref_suppliersWhereInput | ref_suppliersWhereInput[]
    supplier_id?: IntFilter<"ref_suppliers"> | number
    supplier_name?: StringFilter<"ref_suppliers"> | string
    addr_1?: StringNullableFilter<"ref_suppliers"> | string | null
    addr_2?: StringNullableFilter<"ref_suppliers"> | string | null
    city?: StringNullableFilter<"ref_suppliers"> | string | null
    post_code?: StringNullableFilter<"ref_suppliers"> | string | null
    country_code?: StringNullableFilter<"ref_suppliers"> | string | null
    ref_supplier_material?: Ref_supplier_materialListRelationFilter
    stock_activity?: Stock_activityListRelationFilter
    stock_history?: Stock_historyListRelationFilter
    stock_new?: Stock_newListRelationFilter
    stock_order?: Stock_orderListRelationFilter
  }

  export type ref_suppliersOrderByWithRelationInput = {
    supplier_id?: SortOrder
    supplier_name?: SortOrder
    addr_1?: SortOrderInput | SortOrder
    addr_2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    post_code?: SortOrderInput | SortOrder
    country_code?: SortOrderInput | SortOrder
    ref_supplier_material?: ref_supplier_materialOrderByRelationAggregateInput
    stock_activity?: stock_activityOrderByRelationAggregateInput
    stock_history?: stock_historyOrderByRelationAggregateInput
    stock_new?: stock_newOrderByRelationAggregateInput
    stock_order?: stock_orderOrderByRelationAggregateInput
  }

  export type ref_suppliersWhereUniqueInput = Prisma.AtLeast<{
    supplier_id?: number
    AND?: ref_suppliersWhereInput | ref_suppliersWhereInput[]
    OR?: ref_suppliersWhereInput[]
    NOT?: ref_suppliersWhereInput | ref_suppliersWhereInput[]
    supplier_name?: StringFilter<"ref_suppliers"> | string
    addr_1?: StringNullableFilter<"ref_suppliers"> | string | null
    addr_2?: StringNullableFilter<"ref_suppliers"> | string | null
    city?: StringNullableFilter<"ref_suppliers"> | string | null
    post_code?: StringNullableFilter<"ref_suppliers"> | string | null
    country_code?: StringNullableFilter<"ref_suppliers"> | string | null
    ref_supplier_material?: Ref_supplier_materialListRelationFilter
    stock_activity?: Stock_activityListRelationFilter
    stock_history?: Stock_historyListRelationFilter
    stock_new?: Stock_newListRelationFilter
    stock_order?: Stock_orderListRelationFilter
  }, "supplier_id">

  export type ref_suppliersOrderByWithAggregationInput = {
    supplier_id?: SortOrder
    supplier_name?: SortOrder
    addr_1?: SortOrderInput | SortOrder
    addr_2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    post_code?: SortOrderInput | SortOrder
    country_code?: SortOrderInput | SortOrder
    _count?: ref_suppliersCountOrderByAggregateInput
    _avg?: ref_suppliersAvgOrderByAggregateInput
    _max?: ref_suppliersMaxOrderByAggregateInput
    _min?: ref_suppliersMinOrderByAggregateInput
    _sum?: ref_suppliersSumOrderByAggregateInput
  }

  export type ref_suppliersScalarWhereWithAggregatesInput = {
    AND?: ref_suppliersScalarWhereWithAggregatesInput | ref_suppliersScalarWhereWithAggregatesInput[]
    OR?: ref_suppliersScalarWhereWithAggregatesInput[]
    NOT?: ref_suppliersScalarWhereWithAggregatesInput | ref_suppliersScalarWhereWithAggregatesInput[]
    supplier_id?: IntWithAggregatesFilter<"ref_suppliers"> | number
    supplier_name?: StringWithAggregatesFilter<"ref_suppliers"> | string
    addr_1?: StringNullableWithAggregatesFilter<"ref_suppliers"> | string | null
    addr_2?: StringNullableWithAggregatesFilter<"ref_suppliers"> | string | null
    city?: StringNullableWithAggregatesFilter<"ref_suppliers"> | string | null
    post_code?: StringNullableWithAggregatesFilter<"ref_suppliers"> | string | null
    country_code?: StringNullableWithAggregatesFilter<"ref_suppliers"> | string | null
  }

  export type session_settingsWhereInput = {
    AND?: session_settingsWhereInput | session_settingsWhereInput[]
    OR?: session_settingsWhereInput[]
    NOT?: session_settingsWhereInput | session_settingsWhereInput[]
    id?: UuidFilter<"session_settings"> | string
    device_type?: StringFilter<"session_settings"> | string
    session_duration_seconds?: IntFilter<"session_settings"> | number
    inactivity_timeout_seconds?: IntNullableFilter<"session_settings"> | number | null
    created_at?: DateTimeNullableFilter<"session_settings"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"session_settings"> | Date | string | null
  }

  export type session_settingsOrderByWithRelationInput = {
    id?: SortOrder
    device_type?: SortOrder
    session_duration_seconds?: SortOrder
    inactivity_timeout_seconds?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type session_settingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: session_settingsWhereInput | session_settingsWhereInput[]
    OR?: session_settingsWhereInput[]
    NOT?: session_settingsWhereInput | session_settingsWhereInput[]
    device_type?: StringFilter<"session_settings"> | string
    session_duration_seconds?: IntFilter<"session_settings"> | number
    inactivity_timeout_seconds?: IntNullableFilter<"session_settings"> | number | null
    created_at?: DateTimeNullableFilter<"session_settings"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"session_settings"> | Date | string | null
  }, "id">

  export type session_settingsOrderByWithAggregationInput = {
    id?: SortOrder
    device_type?: SortOrder
    session_duration_seconds?: SortOrder
    inactivity_timeout_seconds?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: session_settingsCountOrderByAggregateInput
    _avg?: session_settingsAvgOrderByAggregateInput
    _max?: session_settingsMaxOrderByAggregateInput
    _min?: session_settingsMinOrderByAggregateInput
    _sum?: session_settingsSumOrderByAggregateInput
  }

  export type session_settingsScalarWhereWithAggregatesInput = {
    AND?: session_settingsScalarWhereWithAggregatesInput | session_settingsScalarWhereWithAggregatesInput[]
    OR?: session_settingsScalarWhereWithAggregatesInput[]
    NOT?: session_settingsScalarWhereWithAggregatesInput | session_settingsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"session_settings"> | string
    device_type?: StringWithAggregatesFilter<"session_settings"> | string
    session_duration_seconds?: IntWithAggregatesFilter<"session_settings"> | number
    inactivity_timeout_seconds?: IntNullableWithAggregatesFilter<"session_settings"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"session_settings"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"session_settings"> | Date | string | null
  }

  export type stock_drumWhereInput = {
    AND?: stock_drumWhereInput | stock_drumWhereInput[]
    OR?: stock_drumWhereInput[]
    NOT?: stock_drumWhereInput | stock_drumWhereInput[]
    drum_id?: IntFilter<"stock_drum"> | number
    drum_type?: StringFilter<"stock_drum"> | string
    order_detail_id?: IntFilter<"stock_drum"> | number
    fill_level?: DecimalNullableFilter<"stock_drum"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"stock_drum"> | string
    created_at?: DateTimeNullableFilter<"stock_drum"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_drum"> | Date | string | null
    material_code?: StringNullableFilter<"stock_drum"> | string | null
    distillation_id?: IntNullableFilter<"stock_drum"> | number | null
    distillation_pending_assignment?: Distillation_pending_assignmentListRelationFilter
    log_drum_scan?: Log_drum_scanListRelationFilter
    log_load_still?: Log_load_stillListRelationFilter
    log_transport_drum?: Log_transport_drumListRelationFilter
    log_volume_transfer?: Log_volume_transferListRelationFilter
    distillation_record?: XOR<Distillation_recordNullableScalarRelationFilter, distillation_recordWhereInput> | null
    order_detail?: XOR<Order_detailScalarRelationFilter, order_detailWhereInput>
  }

  export type stock_drumOrderByWithRelationInput = {
    drum_id?: SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    distillation_id?: SortOrderInput | SortOrder
    distillation_pending_assignment?: distillation_pending_assignmentOrderByRelationAggregateInput
    log_drum_scan?: log_drum_scanOrderByRelationAggregateInput
    log_load_still?: log_load_stillOrderByRelationAggregateInput
    log_transport_drum?: log_transport_drumOrderByRelationAggregateInput
    log_volume_transfer?: log_volume_transferOrderByRelationAggregateInput
    distillation_record?: distillation_recordOrderByWithRelationInput
    order_detail?: order_detailOrderByWithRelationInput
  }

  export type stock_drumWhereUniqueInput = Prisma.AtLeast<{
    drum_id?: number
    AND?: stock_drumWhereInput | stock_drumWhereInput[]
    OR?: stock_drumWhereInput[]
    NOT?: stock_drumWhereInput | stock_drumWhereInput[]
    drum_type?: StringFilter<"stock_drum"> | string
    order_detail_id?: IntFilter<"stock_drum"> | number
    fill_level?: DecimalNullableFilter<"stock_drum"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"stock_drum"> | string
    created_at?: DateTimeNullableFilter<"stock_drum"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_drum"> | Date | string | null
    material_code?: StringNullableFilter<"stock_drum"> | string | null
    distillation_id?: IntNullableFilter<"stock_drum"> | number | null
    distillation_pending_assignment?: Distillation_pending_assignmentListRelationFilter
    log_drum_scan?: Log_drum_scanListRelationFilter
    log_load_still?: Log_load_stillListRelationFilter
    log_transport_drum?: Log_transport_drumListRelationFilter
    log_volume_transfer?: Log_volume_transferListRelationFilter
    distillation_record?: XOR<Distillation_recordNullableScalarRelationFilter, distillation_recordWhereInput> | null
    order_detail?: XOR<Order_detailScalarRelationFilter, order_detailWhereInput>
  }, "drum_id">

  export type stock_drumOrderByWithAggregationInput = {
    drum_id?: SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    distillation_id?: SortOrderInput | SortOrder
    _count?: stock_drumCountOrderByAggregateInput
    _avg?: stock_drumAvgOrderByAggregateInput
    _max?: stock_drumMaxOrderByAggregateInput
    _min?: stock_drumMinOrderByAggregateInput
    _sum?: stock_drumSumOrderByAggregateInput
  }

  export type stock_drumScalarWhereWithAggregatesInput = {
    AND?: stock_drumScalarWhereWithAggregatesInput | stock_drumScalarWhereWithAggregatesInput[]
    OR?: stock_drumScalarWhereWithAggregatesInput[]
    NOT?: stock_drumScalarWhereWithAggregatesInput | stock_drumScalarWhereWithAggregatesInput[]
    drum_id?: IntWithAggregatesFilter<"stock_drum"> | number
    drum_type?: StringWithAggregatesFilter<"stock_drum"> | string
    order_detail_id?: IntWithAggregatesFilter<"stock_drum"> | number
    fill_level?: DecimalNullableWithAggregatesFilter<"stock_drum"> | Decimal | DecimalJsLike | number | string | null
    status?: StringWithAggregatesFilter<"stock_drum"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"stock_drum"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"stock_drum"> | Date | string | null
    material_code?: StringNullableWithAggregatesFilter<"stock_drum"> | string | null
    distillation_id?: IntNullableWithAggregatesFilter<"stock_drum"> | number | null
  }

  export type stock_drum_newWhereInput = {
    AND?: stock_drum_newWhereInput | stock_drum_newWhereInput[]
    OR?: stock_drum_newWhereInput[]
    NOT?: stock_drum_newWhereInput | stock_drum_newWhereInput[]
    drum_id?: IntFilter<"stock_drum_new"> | number
    material_code?: StringNullableFilter<"stock_drum_new"> | string | null
    drum_type?: StringFilter<"stock_drum_new"> | string
    order_detail_id?: IntFilter<"stock_drum_new"> | number
    status?: StringFilter<"stock_drum_new"> | string
    fill_level?: DecimalNullableFilter<"stock_drum_new"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"stock_drum_new"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_drum_new"> | Date | string | null
    distillation_id?: IntNullableFilter<"stock_drum_new"> | number | null
    distillation_record?: XOR<Distillation_recordNullableScalarRelationFilter, distillation_recordWhereInput> | null
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    order_detail?: XOR<Order_detailScalarRelationFilter, order_detailWhereInput>
  }

  export type stock_drum_newOrderByWithRelationInput = {
    drum_id?: SortOrder
    material_code?: SortOrderInput | SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    status?: SortOrder
    fill_level?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    distillation_id?: SortOrderInput | SortOrder
    distillation_record?: distillation_recordOrderByWithRelationInput
    ref_materials?: ref_materialsOrderByWithRelationInput
    order_detail?: order_detailOrderByWithRelationInput
  }

  export type stock_drum_newWhereUniqueInput = Prisma.AtLeast<{
    drum_id?: number
    AND?: stock_drum_newWhereInput | stock_drum_newWhereInput[]
    OR?: stock_drum_newWhereInput[]
    NOT?: stock_drum_newWhereInput | stock_drum_newWhereInput[]
    material_code?: StringNullableFilter<"stock_drum_new"> | string | null
    drum_type?: StringFilter<"stock_drum_new"> | string
    order_detail_id?: IntFilter<"stock_drum_new"> | number
    status?: StringFilter<"stock_drum_new"> | string
    fill_level?: DecimalNullableFilter<"stock_drum_new"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"stock_drum_new"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_drum_new"> | Date | string | null
    distillation_id?: IntNullableFilter<"stock_drum_new"> | number | null
    distillation_record?: XOR<Distillation_recordNullableScalarRelationFilter, distillation_recordWhereInput> | null
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    order_detail?: XOR<Order_detailScalarRelationFilter, order_detailWhereInput>
  }, "drum_id">

  export type stock_drum_newOrderByWithAggregationInput = {
    drum_id?: SortOrder
    material_code?: SortOrderInput | SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    status?: SortOrder
    fill_level?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    distillation_id?: SortOrderInput | SortOrder
    _count?: stock_drum_newCountOrderByAggregateInput
    _avg?: stock_drum_newAvgOrderByAggregateInput
    _max?: stock_drum_newMaxOrderByAggregateInput
    _min?: stock_drum_newMinOrderByAggregateInput
    _sum?: stock_drum_newSumOrderByAggregateInput
  }

  export type stock_drum_newScalarWhereWithAggregatesInput = {
    AND?: stock_drum_newScalarWhereWithAggregatesInput | stock_drum_newScalarWhereWithAggregatesInput[]
    OR?: stock_drum_newScalarWhereWithAggregatesInput[]
    NOT?: stock_drum_newScalarWhereWithAggregatesInput | stock_drum_newScalarWhereWithAggregatesInput[]
    drum_id?: IntWithAggregatesFilter<"stock_drum_new"> | number
    material_code?: StringNullableWithAggregatesFilter<"stock_drum_new"> | string | null
    drum_type?: StringWithAggregatesFilter<"stock_drum_new"> | string
    order_detail_id?: IntWithAggregatesFilter<"stock_drum_new"> | number
    status?: StringWithAggregatesFilter<"stock_drum_new"> | string
    fill_level?: DecimalNullableWithAggregatesFilter<"stock_drum_new"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"stock_drum_new"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"stock_drum_new"> | Date | string | null
    distillation_id?: IntNullableWithAggregatesFilter<"stock_drum_new"> | number | null
  }

  export type stock_newWhereInput = {
    AND?: stock_newWhereInput | stock_newWhereInput[]
    OR?: stock_newWhereInput[]
    NOT?: stock_newWhereInput | stock_newWhereInput[]
    stock_id?: IntFilter<"stock_new"> | number
    supplier_id?: IntNullableFilter<"stock_new"> | number | null
    quantity?: IntFilter<"stock_new"> | number
    batch_code?: StringFilter<"stock_new"> | string
    location?: StringNullableFilter<"stock_new"> | string | null
    notes?: StringNullableFilter<"stock_new"> | string | null
    created_at?: DateTimeNullableFilter<"stock_new"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_new"> | Date | string | null
    material_code?: StringNullableFilter<"stock_new"> | string | null
    distillation_schedule_items?: Distillation_schedule_itemsListRelationFilter
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    ref_suppliers?: XOR<Ref_suppliersNullableScalarRelationFilter, ref_suppliersWhereInput> | null
  }

  export type stock_newOrderByWithRelationInput = {
    stock_id?: SortOrder
    supplier_id?: SortOrderInput | SortOrder
    quantity?: SortOrder
    batch_code?: SortOrder
    location?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    distillation_schedule_items?: distillation_schedule_itemsOrderByRelationAggregateInput
    ref_materials?: ref_materialsOrderByWithRelationInput
    ref_suppliers?: ref_suppliersOrderByWithRelationInput
  }

  export type stock_newWhereUniqueInput = Prisma.AtLeast<{
    stock_id?: number
    batch_code?: string
    AND?: stock_newWhereInput | stock_newWhereInput[]
    OR?: stock_newWhereInput[]
    NOT?: stock_newWhereInput | stock_newWhereInput[]
    supplier_id?: IntNullableFilter<"stock_new"> | number | null
    quantity?: IntFilter<"stock_new"> | number
    location?: StringNullableFilter<"stock_new"> | string | null
    notes?: StringNullableFilter<"stock_new"> | string | null
    created_at?: DateTimeNullableFilter<"stock_new"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_new"> | Date | string | null
    material_code?: StringNullableFilter<"stock_new"> | string | null
    distillation_schedule_items?: Distillation_schedule_itemsListRelationFilter
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    ref_suppliers?: XOR<Ref_suppliersNullableScalarRelationFilter, ref_suppliersWhereInput> | null
  }, "stock_id" | "batch_code">

  export type stock_newOrderByWithAggregationInput = {
    stock_id?: SortOrder
    supplier_id?: SortOrderInput | SortOrder
    quantity?: SortOrder
    batch_code?: SortOrder
    location?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    _count?: stock_newCountOrderByAggregateInput
    _avg?: stock_newAvgOrderByAggregateInput
    _max?: stock_newMaxOrderByAggregateInput
    _min?: stock_newMinOrderByAggregateInput
    _sum?: stock_newSumOrderByAggregateInput
  }

  export type stock_newScalarWhereWithAggregatesInput = {
    AND?: stock_newScalarWhereWithAggregatesInput | stock_newScalarWhereWithAggregatesInput[]
    OR?: stock_newScalarWhereWithAggregatesInput[]
    NOT?: stock_newScalarWhereWithAggregatesInput | stock_newScalarWhereWithAggregatesInput[]
    stock_id?: IntWithAggregatesFilter<"stock_new"> | number
    supplier_id?: IntNullableWithAggregatesFilter<"stock_new"> | number | null
    quantity?: IntWithAggregatesFilter<"stock_new"> | number
    batch_code?: StringWithAggregatesFilter<"stock_new"> | string
    location?: StringNullableWithAggregatesFilter<"stock_new"> | string | null
    notes?: StringNullableWithAggregatesFilter<"stock_new"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"stock_new"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"stock_new"> | Date | string | null
    material_code?: StringNullableWithAggregatesFilter<"stock_new"> | string | null
  }

  export type stock_orderWhereInput = {
    AND?: stock_orderWhereInput | stock_orderWhereInput[]
    OR?: stock_orderWhereInput[]
    NOT?: stock_orderWhereInput | stock_orderWhereInput[]
    order_id?: IntFilter<"stock_order"> | number
    po_number?: StringNullableFilter<"stock_order"> | string | null
    date_ordered?: DateTimeFilter<"stock_order"> | Date | string
    supplier_id?: IntFilter<"stock_order"> | number
    notes?: StringNullableFilter<"stock_order"> | string | null
    created_at?: DateTimeNullableFilter<"stock_order"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_order"> | Date | string | null
    order_detail?: Order_detailListRelationFilter
    ref_suppliers?: XOR<Ref_suppliersScalarRelationFilter, ref_suppliersWhereInput>
  }

  export type stock_orderOrderByWithRelationInput = {
    order_id?: SortOrder
    po_number?: SortOrderInput | SortOrder
    date_ordered?: SortOrder
    supplier_id?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    order_detail?: order_detailOrderByRelationAggregateInput
    ref_suppliers?: ref_suppliersOrderByWithRelationInput
  }

  export type stock_orderWhereUniqueInput = Prisma.AtLeast<{
    order_id?: number
    AND?: stock_orderWhereInput | stock_orderWhereInput[]
    OR?: stock_orderWhereInput[]
    NOT?: stock_orderWhereInput | stock_orderWhereInput[]
    po_number?: StringNullableFilter<"stock_order"> | string | null
    date_ordered?: DateTimeFilter<"stock_order"> | Date | string
    supplier_id?: IntFilter<"stock_order"> | number
    notes?: StringNullableFilter<"stock_order"> | string | null
    created_at?: DateTimeNullableFilter<"stock_order"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_order"> | Date | string | null
    order_detail?: Order_detailListRelationFilter
    ref_suppliers?: XOR<Ref_suppliersScalarRelationFilter, ref_suppliersWhereInput>
  }, "order_id">

  export type stock_orderOrderByWithAggregationInput = {
    order_id?: SortOrder
    po_number?: SortOrderInput | SortOrder
    date_ordered?: SortOrder
    supplier_id?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: stock_orderCountOrderByAggregateInput
    _avg?: stock_orderAvgOrderByAggregateInput
    _max?: stock_orderMaxOrderByAggregateInput
    _min?: stock_orderMinOrderByAggregateInput
    _sum?: stock_orderSumOrderByAggregateInput
  }

  export type stock_orderScalarWhereWithAggregatesInput = {
    AND?: stock_orderScalarWhereWithAggregatesInput | stock_orderScalarWhereWithAggregatesInput[]
    OR?: stock_orderScalarWhereWithAggregatesInput[]
    NOT?: stock_orderScalarWhereWithAggregatesInput | stock_orderScalarWhereWithAggregatesInput[]
    order_id?: IntWithAggregatesFilter<"stock_order"> | number
    po_number?: StringNullableWithAggregatesFilter<"stock_order"> | string | null
    date_ordered?: DateTimeWithAggregatesFilter<"stock_order"> | Date | string
    supplier_id?: IntWithAggregatesFilter<"stock_order"> | number
    notes?: StringNullableWithAggregatesFilter<"stock_order"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"stock_order"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"stock_order"> | Date | string | null
  }

  export type stock_reproWhereInput = {
    AND?: stock_reproWhereInput | stock_reproWhereInput[]
    OR?: stock_reproWhereInput[]
    NOT?: stock_reproWhereInput | stock_reproWhereInput[]
    stock_id?: IntFilter<"stock_repro"> | number
    location?: StringFilter<"stock_repro"> | string
    notes?: StringNullableFilter<"stock_repro"> | string | null
    created_at?: DateTimeNullableFilter<"stock_repro"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_repro"> | Date | string | null
    quantity?: IntFilter<"stock_repro"> | number
    material_description?: StringNullableFilter<"stock_repro"> | string | null
    material_code?: StringNullableFilter<"stock_repro"> | string | null
    distillation_schedule_items?: Distillation_schedule_itemsListRelationFilter
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
  }

  export type stock_reproOrderByWithRelationInput = {
    stock_id?: SortOrder
    location?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    quantity?: SortOrder
    material_description?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    distillation_schedule_items?: distillation_schedule_itemsOrderByRelationAggregateInput
    ref_materials?: ref_materialsOrderByWithRelationInput
  }

  export type stock_reproWhereUniqueInput = Prisma.AtLeast<{
    stock_id?: number
    AND?: stock_reproWhereInput | stock_reproWhereInput[]
    OR?: stock_reproWhereInput[]
    NOT?: stock_reproWhereInput | stock_reproWhereInput[]
    location?: StringFilter<"stock_repro"> | string
    notes?: StringNullableFilter<"stock_repro"> | string | null
    created_at?: DateTimeNullableFilter<"stock_repro"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_repro"> | Date | string | null
    quantity?: IntFilter<"stock_repro"> | number
    material_description?: StringNullableFilter<"stock_repro"> | string | null
    material_code?: StringNullableFilter<"stock_repro"> | string | null
    distillation_schedule_items?: Distillation_schedule_itemsListRelationFilter
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
  }, "stock_id">

  export type stock_reproOrderByWithAggregationInput = {
    stock_id?: SortOrder
    location?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    quantity?: SortOrder
    material_description?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    _count?: stock_reproCountOrderByAggregateInput
    _avg?: stock_reproAvgOrderByAggregateInput
    _max?: stock_reproMaxOrderByAggregateInput
    _min?: stock_reproMinOrderByAggregateInput
    _sum?: stock_reproSumOrderByAggregateInput
  }

  export type stock_reproScalarWhereWithAggregatesInput = {
    AND?: stock_reproScalarWhereWithAggregatesInput | stock_reproScalarWhereWithAggregatesInput[]
    OR?: stock_reproScalarWhereWithAggregatesInput[]
    NOT?: stock_reproScalarWhereWithAggregatesInput | stock_reproScalarWhereWithAggregatesInput[]
    stock_id?: IntWithAggregatesFilter<"stock_repro"> | number
    location?: StringWithAggregatesFilter<"stock_repro"> | string
    notes?: StringNullableWithAggregatesFilter<"stock_repro"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"stock_repro"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"stock_repro"> | Date | string | null
    quantity?: IntWithAggregatesFilter<"stock_repro"> | number
    material_description?: StringNullableWithAggregatesFilter<"stock_repro"> | string | null
    material_code?: StringNullableWithAggregatesFilter<"stock_repro"> | string | null
  }

  export type user_profilesWhereInput = {
    AND?: user_profilesWhereInput | user_profilesWhereInput[]
    OR?: user_profilesWhereInput[]
    NOT?: user_profilesWhereInput | user_profilesWhereInput[]
    id?: UuidFilter<"user_profiles"> | string
    full_name?: StringNullableFilter<"user_profiles"> | string | null
    email?: StringNullableFilter<"user_profiles"> | string | null
    avatar_url?: StringNullableFilter<"user_profiles"> | string | null
  }

  export type user_profilesOrderByWithRelationInput = {
    id?: SortOrder
    full_name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    avatar_url?: SortOrderInput | SortOrder
  }

  export type user_profilesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: user_profilesWhereInput | user_profilesWhereInput[]
    OR?: user_profilesWhereInput[]
    NOT?: user_profilesWhereInput | user_profilesWhereInput[]
    full_name?: StringNullableFilter<"user_profiles"> | string | null
    avatar_url?: StringNullableFilter<"user_profiles"> | string | null
  }, "id" | "email">

  export type user_profilesOrderByWithAggregationInput = {
    id?: SortOrder
    full_name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    avatar_url?: SortOrderInput | SortOrder
    _count?: user_profilesCountOrderByAggregateInput
    _max?: user_profilesMaxOrderByAggregateInput
    _min?: user_profilesMinOrderByAggregateInput
  }

  export type user_profilesScalarWhereWithAggregatesInput = {
    AND?: user_profilesScalarWhereWithAggregatesInput | user_profilesScalarWhereWithAggregatesInput[]
    OR?: user_profilesScalarWhereWithAggregatesInput[]
    NOT?: user_profilesScalarWhereWithAggregatesInput | user_profilesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_profiles"> | string
    full_name?: StringNullableWithAggregatesFilter<"user_profiles"> | string | null
    email?: StringNullableWithAggregatesFilter<"user_profiles"> | string | null
    avatar_url?: StringNullableWithAggregatesFilter<"user_profiles"> | string | null
  }

  export type user_rolesWhereInput = {
    AND?: user_rolesWhereInput | user_rolesWhereInput[]
    OR?: user_rolesWhereInput[]
    NOT?: user_rolesWhereInput | user_rolesWhereInput[]
    id?: UuidFilter<"user_roles"> | string
    user_id?: UuidFilter<"user_roles"> | string
    role?: StringFilter<"user_roles"> | string
    created_at?: DateTimeFilter<"user_roles"> | Date | string
  }

  export type user_rolesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
  }

  export type user_rolesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    user_id_role?: user_rolesUser_idRoleCompoundUniqueInput
    AND?: user_rolesWhereInput | user_rolesWhereInput[]
    OR?: user_rolesWhereInput[]
    NOT?: user_rolesWhereInput | user_rolesWhereInput[]
    user_id?: UuidFilter<"user_roles"> | string
    role?: StringFilter<"user_roles"> | string
    created_at?: DateTimeFilter<"user_roles"> | Date | string
  }, "id" | "user_id_role">

  export type user_rolesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    _count?: user_rolesCountOrderByAggregateInput
    _max?: user_rolesMaxOrderByAggregateInput
    _min?: user_rolesMinOrderByAggregateInput
  }

  export type user_rolesScalarWhereWithAggregatesInput = {
    AND?: user_rolesScalarWhereWithAggregatesInput | user_rolesScalarWhereWithAggregatesInput[]
    OR?: user_rolesScalarWhereWithAggregatesInput[]
    NOT?: user_rolesScalarWhereWithAggregatesInput | user_rolesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_roles"> | string
    user_id?: UuidWithAggregatesFilter<"user_roles"> | string
    role?: StringWithAggregatesFilter<"user_roles"> | string
    created_at?: DateTimeWithAggregatesFilter<"user_roles"> | Date | string
  }

  export type worker_passcodesWhereInput = {
    AND?: worker_passcodesWhereInput | worker_passcodesWhereInput[]
    OR?: worker_passcodesWhereInput[]
    NOT?: worker_passcodesWhereInput | worker_passcodesWhereInput[]
    id?: UuidFilter<"worker_passcodes"> | string
    user_id?: UuidFilter<"worker_passcodes"> | string
    worker_name?: StringFilter<"worker_passcodes"> | string
    role?: StringFilter<"worker_passcodes"> | string
    passcode?: StringFilter<"worker_passcodes"> | string
    is_active?: BoolNullableFilter<"worker_passcodes"> | boolean | null
    last_login_at?: DateTimeNullableFilter<"worker_passcodes"> | Date | string | null
    created_at?: DateTimeNullableFilter<"worker_passcodes"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"worker_passcodes"> | Date | string | null
    created_by?: UuidNullableFilter<"worker_passcodes"> | string | null
    updated_by?: UuidNullableFilter<"worker_passcodes"> | string | null
  }

  export type worker_passcodesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    worker_name?: SortOrder
    role?: SortOrder
    passcode?: SortOrder
    is_active?: SortOrderInput | SortOrder
    last_login_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
  }

  export type worker_passcodesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: worker_passcodesWhereInput | worker_passcodesWhereInput[]
    OR?: worker_passcodesWhereInput[]
    NOT?: worker_passcodesWhereInput | worker_passcodesWhereInput[]
    user_id?: UuidFilter<"worker_passcodes"> | string
    worker_name?: StringFilter<"worker_passcodes"> | string
    role?: StringFilter<"worker_passcodes"> | string
    passcode?: StringFilter<"worker_passcodes"> | string
    is_active?: BoolNullableFilter<"worker_passcodes"> | boolean | null
    last_login_at?: DateTimeNullableFilter<"worker_passcodes"> | Date | string | null
    created_at?: DateTimeNullableFilter<"worker_passcodes"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"worker_passcodes"> | Date | string | null
    created_by?: UuidNullableFilter<"worker_passcodes"> | string | null
    updated_by?: UuidNullableFilter<"worker_passcodes"> | string | null
  }, "id">

  export type worker_passcodesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    worker_name?: SortOrder
    role?: SortOrder
    passcode?: SortOrder
    is_active?: SortOrderInput | SortOrder
    last_login_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    updated_by?: SortOrderInput | SortOrder
    _count?: worker_passcodesCountOrderByAggregateInput
    _max?: worker_passcodesMaxOrderByAggregateInput
    _min?: worker_passcodesMinOrderByAggregateInput
  }

  export type worker_passcodesScalarWhereWithAggregatesInput = {
    AND?: worker_passcodesScalarWhereWithAggregatesInput | worker_passcodesScalarWhereWithAggregatesInput[]
    OR?: worker_passcodesScalarWhereWithAggregatesInput[]
    NOT?: worker_passcodesScalarWhereWithAggregatesInput | worker_passcodesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"worker_passcodes"> | string
    user_id?: UuidWithAggregatesFilter<"worker_passcodes"> | string
    worker_name?: StringWithAggregatesFilter<"worker_passcodes"> | string
    role?: StringWithAggregatesFilter<"worker_passcodes"> | string
    passcode?: StringWithAggregatesFilter<"worker_passcodes"> | string
    is_active?: BoolNullableWithAggregatesFilter<"worker_passcodes"> | boolean | null
    last_login_at?: DateTimeNullableWithAggregatesFilter<"worker_passcodes"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"worker_passcodes"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"worker_passcodes"> | Date | string | null
    created_by?: UuidNullableWithAggregatesFilter<"worker_passcodes"> | string | null
    updated_by?: UuidNullableWithAggregatesFilter<"worker_passcodes"> | string | null
  }

  export type order_detail_stock_activityWhereInput = {
    AND?: order_detail_stock_activityWhereInput | order_detail_stock_activityWhereInput[]
    OR?: order_detail_stock_activityWhereInput[]
    NOT?: order_detail_stock_activityWhereInput | order_detail_stock_activityWhereInput[]
    id?: IntFilter<"order_detail_stock_activity"> | number
    order_detail_id?: IntFilter<"order_detail_stock_activity"> | number
    stock_activity_id?: IntFilter<"order_detail_stock_activity"> | number
    created_at?: DateTimeNullableFilter<"order_detail_stock_activity"> | Date | string | null
    order_detail?: XOR<Order_detailScalarRelationFilter, order_detailWhereInput>
    stock_activity?: XOR<Stock_activityScalarRelationFilter, stock_activityWhereInput>
  }

  export type order_detail_stock_activityOrderByWithRelationInput = {
    id?: SortOrder
    order_detail_id?: SortOrder
    stock_activity_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    order_detail?: order_detailOrderByWithRelationInput
    stock_activity?: stock_activityOrderByWithRelationInput
  }

  export type order_detail_stock_activityWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    order_detail_id_stock_activity_id?: order_detail_stock_activityOrder_detail_idStock_activity_idCompoundUniqueInput
    AND?: order_detail_stock_activityWhereInput | order_detail_stock_activityWhereInput[]
    OR?: order_detail_stock_activityWhereInput[]
    NOT?: order_detail_stock_activityWhereInput | order_detail_stock_activityWhereInput[]
    order_detail_id?: IntFilter<"order_detail_stock_activity"> | number
    stock_activity_id?: IntFilter<"order_detail_stock_activity"> | number
    created_at?: DateTimeNullableFilter<"order_detail_stock_activity"> | Date | string | null
    order_detail?: XOR<Order_detailScalarRelationFilter, order_detailWhereInput>
    stock_activity?: XOR<Stock_activityScalarRelationFilter, stock_activityWhereInput>
  }, "id" | "order_detail_id_stock_activity_id">

  export type order_detail_stock_activityOrderByWithAggregationInput = {
    id?: SortOrder
    order_detail_id?: SortOrder
    stock_activity_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: order_detail_stock_activityCountOrderByAggregateInput
    _avg?: order_detail_stock_activityAvgOrderByAggregateInput
    _max?: order_detail_stock_activityMaxOrderByAggregateInput
    _min?: order_detail_stock_activityMinOrderByAggregateInput
    _sum?: order_detail_stock_activitySumOrderByAggregateInput
  }

  export type order_detail_stock_activityScalarWhereWithAggregatesInput = {
    AND?: order_detail_stock_activityScalarWhereWithAggregatesInput | order_detail_stock_activityScalarWhereWithAggregatesInput[]
    OR?: order_detail_stock_activityScalarWhereWithAggregatesInput[]
    NOT?: order_detail_stock_activityScalarWhereWithAggregatesInput | order_detail_stock_activityScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"order_detail_stock_activity"> | number
    order_detail_id?: IntWithAggregatesFilter<"order_detail_stock_activity"> | number
    stock_activity_id?: IntWithAggregatesFilter<"order_detail_stock_activity"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"order_detail_stock_activity"> | Date | string | null
  }

  export type raw_stock_historyWhereInput = {
    AND?: raw_stock_historyWhereInput | raw_stock_historyWhereInput[]
    OR?: raw_stock_historyWhereInput[]
    NOT?: raw_stock_historyWhereInput | raw_stock_historyWhereInput[]
    id?: IntFilter<"raw_stock_history"> | number
    date?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    event_str?: StringNullableFilter<"raw_stock_history"> | string | null
    drum_type?: StringNullableFilter<"raw_stock_history"> | string | null
    no_events?: IntNullableFilter<"raw_stock_history"> | number | null
    notes_ids?: StringNullableFilter<"raw_stock_history"> | string | null
    notes_batch?: StringNullableFilter<"raw_stock_history"> | string | null
    source?: StringNullableFilter<"raw_stock_history"> | string | null
    created_at?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    material_code?: StringNullableFilter<"raw_stock_history"> | string | null
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    stock_history?: Stock_historyListRelationFilter
  }

  export type raw_stock_historyOrderByWithRelationInput = {
    id?: SortOrder
    date?: SortOrderInput | SortOrder
    event_str?: SortOrderInput | SortOrder
    drum_type?: SortOrderInput | SortOrder
    no_events?: SortOrderInput | SortOrder
    notes_ids?: SortOrderInput | SortOrder
    notes_batch?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    ref_materials?: ref_materialsOrderByWithRelationInput
    stock_history?: stock_historyOrderByRelationAggregateInput
  }

  export type raw_stock_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: raw_stock_historyWhereInput | raw_stock_historyWhereInput[]
    OR?: raw_stock_historyWhereInput[]
    NOT?: raw_stock_historyWhereInput | raw_stock_historyWhereInput[]
    date?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    event_str?: StringNullableFilter<"raw_stock_history"> | string | null
    drum_type?: StringNullableFilter<"raw_stock_history"> | string | null
    no_events?: IntNullableFilter<"raw_stock_history"> | number | null
    notes_ids?: StringNullableFilter<"raw_stock_history"> | string | null
    notes_batch?: StringNullableFilter<"raw_stock_history"> | string | null
    source?: StringNullableFilter<"raw_stock_history"> | string | null
    created_at?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    material_code?: StringNullableFilter<"raw_stock_history"> | string | null
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    stock_history?: Stock_historyListRelationFilter
  }, "id">

  export type raw_stock_historyOrderByWithAggregationInput = {
    id?: SortOrder
    date?: SortOrderInput | SortOrder
    event_str?: SortOrderInput | SortOrder
    drum_type?: SortOrderInput | SortOrder
    no_events?: SortOrderInput | SortOrder
    notes_ids?: SortOrderInput | SortOrder
    notes_batch?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    _count?: raw_stock_historyCountOrderByAggregateInput
    _avg?: raw_stock_historyAvgOrderByAggregateInput
    _max?: raw_stock_historyMaxOrderByAggregateInput
    _min?: raw_stock_historyMinOrderByAggregateInput
    _sum?: raw_stock_historySumOrderByAggregateInput
  }

  export type raw_stock_historyScalarWhereWithAggregatesInput = {
    AND?: raw_stock_historyScalarWhereWithAggregatesInput | raw_stock_historyScalarWhereWithAggregatesInput[]
    OR?: raw_stock_historyScalarWhereWithAggregatesInput[]
    NOT?: raw_stock_historyScalarWhereWithAggregatesInput | raw_stock_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"raw_stock_history"> | number
    date?: DateTimeNullableWithAggregatesFilter<"raw_stock_history"> | Date | string | null
    event_str?: StringNullableWithAggregatesFilter<"raw_stock_history"> | string | null
    drum_type?: StringNullableWithAggregatesFilter<"raw_stock_history"> | string | null
    no_events?: IntNullableWithAggregatesFilter<"raw_stock_history"> | number | null
    notes_ids?: StringNullableWithAggregatesFilter<"raw_stock_history"> | string | null
    notes_batch?: StringNullableWithAggregatesFilter<"raw_stock_history"> | string | null
    source?: StringNullableWithAggregatesFilter<"raw_stock_history"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"raw_stock_history"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"raw_stock_history"> | Date | string | null
    material_code?: StringNullableWithAggregatesFilter<"raw_stock_history"> | string | null
  }

  export type stock_activityWhereInput = {
    AND?: stock_activityWhereInput | stock_activityWhereInput[]
    OR?: stock_activityWhereInput[]
    NOT?: stock_activityWhereInput | stock_activityWhereInput[]
    id?: IntFilter<"stock_activity"> | number
    activity_date?: DateTimeFilter<"stock_activity"> | Date | string
    material_code?: StringNullableFilter<"stock_activity"> | string | null
    supplier_id?: IntNullableFilter<"stock_activity"> | number | null
    quantity?: DecimalFilter<"stock_activity"> | Decimal | DecimalJsLike | number | string
    drum_type?: StringFilter<"stock_activity"> | string
    drum_ids?: StringNullableFilter<"stock_activity"> | string | null
    batch_code?: StringNullableFilter<"stock_activity"> | string | null
    order_detail_id?: IntNullableFilter<"stock_activity"> | number | null
    distillation_detail_id?: IntNullableFilter<"stock_activity"> | number | null
    activity_type?: StringFilter<"stock_activity"> | string
    status?: StringNullableFilter<"stock_activity"> | string | null
    notes?: StringNullableFilter<"stock_activity"> | string | null
    source_record_id?: IntNullableFilter<"stock_activity"> | number | null
    created_at?: DateTimeNullableFilter<"stock_activity"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_activity"> | Date | string | null
    order_detail_stock_activity?: Order_detail_stock_activityListRelationFilter
    distillation_schedule_items?: XOR<Distillation_schedule_itemsNullableScalarRelationFilter, distillation_schedule_itemsWhereInput> | null
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    order_detail?: XOR<Order_detailNullableScalarRelationFilter, order_detailWhereInput> | null
    ref_suppliers?: XOR<Ref_suppliersNullableScalarRelationFilter, ref_suppliersWhereInput> | null
  }

  export type stock_activityOrderByWithRelationInput = {
    id?: SortOrder
    activity_date?: SortOrder
    material_code?: SortOrderInput | SortOrder
    supplier_id?: SortOrderInput | SortOrder
    quantity?: SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrderInput | SortOrder
    batch_code?: SortOrderInput | SortOrder
    order_detail_id?: SortOrderInput | SortOrder
    distillation_detail_id?: SortOrderInput | SortOrder
    activity_type?: SortOrder
    status?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    source_record_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    order_detail_stock_activity?: order_detail_stock_activityOrderByRelationAggregateInput
    distillation_schedule_items?: distillation_schedule_itemsOrderByWithRelationInput
    ref_materials?: ref_materialsOrderByWithRelationInput
    order_detail?: order_detailOrderByWithRelationInput
    ref_suppliers?: ref_suppliersOrderByWithRelationInput
  }

  export type stock_activityWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: stock_activityWhereInput | stock_activityWhereInput[]
    OR?: stock_activityWhereInput[]
    NOT?: stock_activityWhereInput | stock_activityWhereInput[]
    activity_date?: DateTimeFilter<"stock_activity"> | Date | string
    material_code?: StringNullableFilter<"stock_activity"> | string | null
    supplier_id?: IntNullableFilter<"stock_activity"> | number | null
    quantity?: DecimalFilter<"stock_activity"> | Decimal | DecimalJsLike | number | string
    drum_type?: StringFilter<"stock_activity"> | string
    drum_ids?: StringNullableFilter<"stock_activity"> | string | null
    batch_code?: StringNullableFilter<"stock_activity"> | string | null
    order_detail_id?: IntNullableFilter<"stock_activity"> | number | null
    distillation_detail_id?: IntNullableFilter<"stock_activity"> | number | null
    activity_type?: StringFilter<"stock_activity"> | string
    status?: StringNullableFilter<"stock_activity"> | string | null
    notes?: StringNullableFilter<"stock_activity"> | string | null
    source_record_id?: IntNullableFilter<"stock_activity"> | number | null
    created_at?: DateTimeNullableFilter<"stock_activity"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_activity"> | Date | string | null
    order_detail_stock_activity?: Order_detail_stock_activityListRelationFilter
    distillation_schedule_items?: XOR<Distillation_schedule_itemsNullableScalarRelationFilter, distillation_schedule_itemsWhereInput> | null
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    order_detail?: XOR<Order_detailNullableScalarRelationFilter, order_detailWhereInput> | null
    ref_suppliers?: XOR<Ref_suppliersNullableScalarRelationFilter, ref_suppliersWhereInput> | null
  }, "id">

  export type stock_activityOrderByWithAggregationInput = {
    id?: SortOrder
    activity_date?: SortOrder
    material_code?: SortOrderInput | SortOrder
    supplier_id?: SortOrderInput | SortOrder
    quantity?: SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrderInput | SortOrder
    batch_code?: SortOrderInput | SortOrder
    order_detail_id?: SortOrderInput | SortOrder
    distillation_detail_id?: SortOrderInput | SortOrder
    activity_type?: SortOrder
    status?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    source_record_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: stock_activityCountOrderByAggregateInput
    _avg?: stock_activityAvgOrderByAggregateInput
    _max?: stock_activityMaxOrderByAggregateInput
    _min?: stock_activityMinOrderByAggregateInput
    _sum?: stock_activitySumOrderByAggregateInput
  }

  export type stock_activityScalarWhereWithAggregatesInput = {
    AND?: stock_activityScalarWhereWithAggregatesInput | stock_activityScalarWhereWithAggregatesInput[]
    OR?: stock_activityScalarWhereWithAggregatesInput[]
    NOT?: stock_activityScalarWhereWithAggregatesInput | stock_activityScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"stock_activity"> | number
    activity_date?: DateTimeWithAggregatesFilter<"stock_activity"> | Date | string
    material_code?: StringNullableWithAggregatesFilter<"stock_activity"> | string | null
    supplier_id?: IntNullableWithAggregatesFilter<"stock_activity"> | number | null
    quantity?: DecimalWithAggregatesFilter<"stock_activity"> | Decimal | DecimalJsLike | number | string
    drum_type?: StringWithAggregatesFilter<"stock_activity"> | string
    drum_ids?: StringNullableWithAggregatesFilter<"stock_activity"> | string | null
    batch_code?: StringNullableWithAggregatesFilter<"stock_activity"> | string | null
    order_detail_id?: IntNullableWithAggregatesFilter<"stock_activity"> | number | null
    distillation_detail_id?: IntNullableWithAggregatesFilter<"stock_activity"> | number | null
    activity_type?: StringWithAggregatesFilter<"stock_activity"> | string
    status?: StringNullableWithAggregatesFilter<"stock_activity"> | string | null
    notes?: StringNullableWithAggregatesFilter<"stock_activity"> | string | null
    source_record_id?: IntNullableWithAggregatesFilter<"stock_activity"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"stock_activity"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"stock_activity"> | Date | string | null
  }

  export type stock_historyWhereInput = {
    AND?: stock_historyWhereInput | stock_historyWhereInput[]
    OR?: stock_historyWhereInput[]
    NOT?: stock_historyWhereInput | stock_historyWhereInput[]
    id?: IntFilter<"stock_history"> | number
    date?: DateTimeFilter<"stock_history"> | Date | string
    material_name?: StringFilter<"stock_history"> | string
    supplier_id?: IntNullableFilter<"stock_history"> | number | null
    supplier_name?: StringNullableFilter<"stock_history"> | string | null
    change?: IntNullableFilter<"stock_history"> | number | null
    drum_type?: StringFilter<"stock_history"> | string
    drum_ids?: StringNullableFilter<"stock_history"> | string | null
    batch_code?: StringNullableFilter<"stock_history"> | string | null
    source_record_id?: IntNullableFilter<"stock_history"> | number | null
    created_at?: DateTimeNullableFilter<"stock_history"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_history"> | Date | string | null
    material_code?: StringNullableFilter<"stock_history"> | string | null
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    raw_stock_history?: XOR<Raw_stock_historyNullableScalarRelationFilter, raw_stock_historyWhereInput> | null
    ref_suppliers?: XOR<Ref_suppliersNullableScalarRelationFilter, ref_suppliersWhereInput> | null
  }

  export type stock_historyOrderByWithRelationInput = {
    id?: SortOrder
    date?: SortOrder
    material_name?: SortOrder
    supplier_id?: SortOrderInput | SortOrder
    supplier_name?: SortOrderInput | SortOrder
    change?: SortOrderInput | SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrderInput | SortOrder
    batch_code?: SortOrderInput | SortOrder
    source_record_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    ref_materials?: ref_materialsOrderByWithRelationInput
    raw_stock_history?: raw_stock_historyOrderByWithRelationInput
    ref_suppliers?: ref_suppliersOrderByWithRelationInput
  }

  export type stock_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: stock_historyWhereInput | stock_historyWhereInput[]
    OR?: stock_historyWhereInput[]
    NOT?: stock_historyWhereInput | stock_historyWhereInput[]
    date?: DateTimeFilter<"stock_history"> | Date | string
    material_name?: StringFilter<"stock_history"> | string
    supplier_id?: IntNullableFilter<"stock_history"> | number | null
    supplier_name?: StringNullableFilter<"stock_history"> | string | null
    change?: IntNullableFilter<"stock_history"> | number | null
    drum_type?: StringFilter<"stock_history"> | string
    drum_ids?: StringNullableFilter<"stock_history"> | string | null
    batch_code?: StringNullableFilter<"stock_history"> | string | null
    source_record_id?: IntNullableFilter<"stock_history"> | number | null
    created_at?: DateTimeNullableFilter<"stock_history"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_history"> | Date | string | null
    material_code?: StringNullableFilter<"stock_history"> | string | null
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
    raw_stock_history?: XOR<Raw_stock_historyNullableScalarRelationFilter, raw_stock_historyWhereInput> | null
    ref_suppliers?: XOR<Ref_suppliersNullableScalarRelationFilter, ref_suppliersWhereInput> | null
  }, "id">

  export type stock_historyOrderByWithAggregationInput = {
    id?: SortOrder
    date?: SortOrder
    material_name?: SortOrder
    supplier_id?: SortOrderInput | SortOrder
    supplier_name?: SortOrderInput | SortOrder
    change?: SortOrderInput | SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrderInput | SortOrder
    batch_code?: SortOrderInput | SortOrder
    source_record_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrderInput | SortOrder
    _count?: stock_historyCountOrderByAggregateInput
    _avg?: stock_historyAvgOrderByAggregateInput
    _max?: stock_historyMaxOrderByAggregateInput
    _min?: stock_historyMinOrderByAggregateInput
    _sum?: stock_historySumOrderByAggregateInput
  }

  export type stock_historyScalarWhereWithAggregatesInput = {
    AND?: stock_historyScalarWhereWithAggregatesInput | stock_historyScalarWhereWithAggregatesInput[]
    OR?: stock_historyScalarWhereWithAggregatesInput[]
    NOT?: stock_historyScalarWhereWithAggregatesInput | stock_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"stock_history"> | number
    date?: DateTimeWithAggregatesFilter<"stock_history"> | Date | string
    material_name?: StringWithAggregatesFilter<"stock_history"> | string
    supplier_id?: IntNullableWithAggregatesFilter<"stock_history"> | number | null
    supplier_name?: StringNullableWithAggregatesFilter<"stock_history"> | string | null
    change?: IntNullableWithAggregatesFilter<"stock_history"> | number | null
    drum_type?: StringWithAggregatesFilter<"stock_history"> | string
    drum_ids?: StringNullableWithAggregatesFilter<"stock_history"> | string | null
    batch_code?: StringNullableWithAggregatesFilter<"stock_history"> | string | null
    source_record_id?: IntNullableWithAggregatesFilter<"stock_history"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"stock_history"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"stock_history"> | Date | string | null
    material_code?: StringNullableWithAggregatesFilter<"stock_history"> | string | null
  }

  export type ref_productWhereInput = {
    AND?: ref_productWhereInput | ref_productWhereInput[]
    OR?: ref_productWhereInput[]
    NOT?: ref_productWhereInput | ref_productWhereInput[]
    product_id?: IntFilter<"ref_product"> | number
    name?: StringFilter<"ref_product"> | string
    sku?: StringFilter<"ref_product"> | string
    raw_material_id?: IntNullableFilter<"ref_product"> | number | null
    grade?: StringFilter<"ref_product"> | string
    material_code?: StringNullableFilter<"ref_product"> | string | null
    product_prices?: Product_pricesListRelationFilter
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
  }

  export type ref_productOrderByWithRelationInput = {
    product_id?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    raw_material_id?: SortOrderInput | SortOrder
    grade?: SortOrder
    material_code?: SortOrderInput | SortOrder
    product_prices?: product_pricesOrderByRelationAggregateInput
    ref_materials?: ref_materialsOrderByWithRelationInput
  }

  export type ref_productWhereUniqueInput = Prisma.AtLeast<{
    product_id?: number
    sku?: string
    AND?: ref_productWhereInput | ref_productWhereInput[]
    OR?: ref_productWhereInput[]
    NOT?: ref_productWhereInput | ref_productWhereInput[]
    name?: StringFilter<"ref_product"> | string
    raw_material_id?: IntNullableFilter<"ref_product"> | number | null
    grade?: StringFilter<"ref_product"> | string
    material_code?: StringNullableFilter<"ref_product"> | string | null
    product_prices?: Product_pricesListRelationFilter
    ref_materials?: XOR<Ref_materialsNullableScalarRelationFilter, ref_materialsWhereInput> | null
  }, "product_id" | "sku">

  export type ref_productOrderByWithAggregationInput = {
    product_id?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    raw_material_id?: SortOrderInput | SortOrder
    grade?: SortOrder
    material_code?: SortOrderInput | SortOrder
    _count?: ref_productCountOrderByAggregateInput
    _avg?: ref_productAvgOrderByAggregateInput
    _max?: ref_productMaxOrderByAggregateInput
    _min?: ref_productMinOrderByAggregateInput
    _sum?: ref_productSumOrderByAggregateInput
  }

  export type ref_productScalarWhereWithAggregatesInput = {
    AND?: ref_productScalarWhereWithAggregatesInput | ref_productScalarWhereWithAggregatesInput[]
    OR?: ref_productScalarWhereWithAggregatesInput[]
    NOT?: ref_productScalarWhereWithAggregatesInput | ref_productScalarWhereWithAggregatesInput[]
    product_id?: IntWithAggregatesFilter<"ref_product"> | number
    name?: StringWithAggregatesFilter<"ref_product"> | string
    sku?: StringWithAggregatesFilter<"ref_product"> | string
    raw_material_id?: IntNullableWithAggregatesFilter<"ref_product"> | number | null
    grade?: StringWithAggregatesFilter<"ref_product"> | string
    material_code?: StringNullableWithAggregatesFilter<"ref_product"> | string | null
  }

  export type ref_supplier_materialWhereInput = {
    AND?: ref_supplier_materialWhereInput | ref_supplier_materialWhereInput[]
    OR?: ref_supplier_materialWhereInput[]
    NOT?: ref_supplier_materialWhereInput | ref_supplier_materialWhereInput[]
    supplier_id?: IntFilter<"ref_supplier_material"> | number
    material_name?: StringFilter<"ref_supplier_material"> | string
    quantity?: IntFilter<"ref_supplier_material"> | number
    location?: StringFilter<"ref_supplier_material"> | string
    updated_at?: DateTimeNullableFilter<"ref_supplier_material"> | Date | string | null
    material_code?: StringFilter<"ref_supplier_material"> | string
    ref_materials?: XOR<Ref_materialsScalarRelationFilter, ref_materialsWhereInput>
    ref_suppliers?: XOR<Ref_suppliersScalarRelationFilter, ref_suppliersWhereInput>
  }

  export type ref_supplier_materialOrderByWithRelationInput = {
    supplier_id?: SortOrder
    material_name?: SortOrder
    quantity?: SortOrder
    location?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrder
    ref_materials?: ref_materialsOrderByWithRelationInput
    ref_suppliers?: ref_suppliersOrderByWithRelationInput
  }

  export type ref_supplier_materialWhereUniqueInput = Prisma.AtLeast<{
    supplier_id_material_code?: ref_supplier_materialSupplier_idMaterial_codeCompoundUniqueInput
    AND?: ref_supplier_materialWhereInput | ref_supplier_materialWhereInput[]
    OR?: ref_supplier_materialWhereInput[]
    NOT?: ref_supplier_materialWhereInput | ref_supplier_materialWhereInput[]
    supplier_id?: IntFilter<"ref_supplier_material"> | number
    material_name?: StringFilter<"ref_supplier_material"> | string
    quantity?: IntFilter<"ref_supplier_material"> | number
    location?: StringFilter<"ref_supplier_material"> | string
    updated_at?: DateTimeNullableFilter<"ref_supplier_material"> | Date | string | null
    material_code?: StringFilter<"ref_supplier_material"> | string
    ref_materials?: XOR<Ref_materialsScalarRelationFilter, ref_materialsWhereInput>
    ref_suppliers?: XOR<Ref_suppliersScalarRelationFilter, ref_suppliersWhereInput>
  }, "supplier_id_material_code">

  export type ref_supplier_materialOrderByWithAggregationInput = {
    supplier_id?: SortOrder
    material_name?: SortOrder
    quantity?: SortOrder
    location?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    material_code?: SortOrder
    _count?: ref_supplier_materialCountOrderByAggregateInput
    _avg?: ref_supplier_materialAvgOrderByAggregateInput
    _max?: ref_supplier_materialMaxOrderByAggregateInput
    _min?: ref_supplier_materialMinOrderByAggregateInput
    _sum?: ref_supplier_materialSumOrderByAggregateInput
  }

  export type ref_supplier_materialScalarWhereWithAggregatesInput = {
    AND?: ref_supplier_materialScalarWhereWithAggregatesInput | ref_supplier_materialScalarWhereWithAggregatesInput[]
    OR?: ref_supplier_materialScalarWhereWithAggregatesInput[]
    NOT?: ref_supplier_materialScalarWhereWithAggregatesInput | ref_supplier_materialScalarWhereWithAggregatesInput[]
    supplier_id?: IntWithAggregatesFilter<"ref_supplier_material"> | number
    material_name?: StringWithAggregatesFilter<"ref_supplier_material"> | string
    quantity?: IntWithAggregatesFilter<"ref_supplier_material"> | number
    location?: StringWithAggregatesFilter<"ref_supplier_material"> | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"ref_supplier_material"> | Date | string | null
    material_code?: StringWithAggregatesFilter<"ref_supplier_material"> | string
  }

  export type user_queriesWhereInput = {
    AND?: user_queriesWhereInput | user_queriesWhereInput[]
    OR?: user_queriesWhereInput[]
    NOT?: user_queriesWhereInput | user_queriesWhereInput[]
    id?: UuidFilter<"user_queries"> | string
    user_id?: UuidFilter<"user_queries"> | string
    query_name?: StringFilter<"user_queries"> | string
    created_at?: DateTimeNullableFilter<"user_queries"> | Date | string | null
    last_executed_at?: DateTimeNullableFilter<"user_queries"> | Date | string | null
    execution_count?: IntNullableFilter<"user_queries"> | number | null
    selected_table?: StringNullableFilter<"user_queries"> | string | null
    selected_columns?: JsonNullableFilter<"user_queries">
    filters?: JsonNullableFilter<"user_queries">
    sorts?: JsonNullableFilter<"user_queries">
    join_table?: StringNullableFilter<"user_queries"> | string | null
    join_type?: StringNullableFilter<"user_queries"> | string | null
    join_condition?: JsonNullableFilter<"user_queries">
    generated_sql?: StringNullableFilter<"user_queries"> | string | null
    tags?: StringNullableListFilter<"user_queries">
  }

  export type user_queriesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    query_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    last_executed_at?: SortOrderInput | SortOrder
    execution_count?: SortOrderInput | SortOrder
    selected_table?: SortOrderInput | SortOrder
    selected_columns?: SortOrderInput | SortOrder
    filters?: SortOrderInput | SortOrder
    sorts?: SortOrderInput | SortOrder
    join_table?: SortOrderInput | SortOrder
    join_type?: SortOrderInput | SortOrder
    join_condition?: SortOrderInput | SortOrder
    generated_sql?: SortOrderInput | SortOrder
    tags?: SortOrder
  }

  export type user_queriesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: user_queriesWhereInput | user_queriesWhereInput[]
    OR?: user_queriesWhereInput[]
    NOT?: user_queriesWhereInput | user_queriesWhereInput[]
    user_id?: UuidFilter<"user_queries"> | string
    query_name?: StringFilter<"user_queries"> | string
    created_at?: DateTimeNullableFilter<"user_queries"> | Date | string | null
    last_executed_at?: DateTimeNullableFilter<"user_queries"> | Date | string | null
    execution_count?: IntNullableFilter<"user_queries"> | number | null
    selected_table?: StringNullableFilter<"user_queries"> | string | null
    selected_columns?: JsonNullableFilter<"user_queries">
    filters?: JsonNullableFilter<"user_queries">
    sorts?: JsonNullableFilter<"user_queries">
    join_table?: StringNullableFilter<"user_queries"> | string | null
    join_type?: StringNullableFilter<"user_queries"> | string | null
    join_condition?: JsonNullableFilter<"user_queries">
    generated_sql?: StringNullableFilter<"user_queries"> | string | null
    tags?: StringNullableListFilter<"user_queries">
  }, "id">

  export type user_queriesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    query_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    last_executed_at?: SortOrderInput | SortOrder
    execution_count?: SortOrderInput | SortOrder
    selected_table?: SortOrderInput | SortOrder
    selected_columns?: SortOrderInput | SortOrder
    filters?: SortOrderInput | SortOrder
    sorts?: SortOrderInput | SortOrder
    join_table?: SortOrderInput | SortOrder
    join_type?: SortOrderInput | SortOrder
    join_condition?: SortOrderInput | SortOrder
    generated_sql?: SortOrderInput | SortOrder
    tags?: SortOrder
    _count?: user_queriesCountOrderByAggregateInput
    _avg?: user_queriesAvgOrderByAggregateInput
    _max?: user_queriesMaxOrderByAggregateInput
    _min?: user_queriesMinOrderByAggregateInput
    _sum?: user_queriesSumOrderByAggregateInput
  }

  export type user_queriesScalarWhereWithAggregatesInput = {
    AND?: user_queriesScalarWhereWithAggregatesInput | user_queriesScalarWhereWithAggregatesInput[]
    OR?: user_queriesScalarWhereWithAggregatesInput[]
    NOT?: user_queriesScalarWhereWithAggregatesInput | user_queriesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"user_queries"> | string
    user_id?: UuidWithAggregatesFilter<"user_queries"> | string
    query_name?: StringWithAggregatesFilter<"user_queries"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"user_queries"> | Date | string | null
    last_executed_at?: DateTimeNullableWithAggregatesFilter<"user_queries"> | Date | string | null
    execution_count?: IntNullableWithAggregatesFilter<"user_queries"> | number | null
    selected_table?: StringNullableWithAggregatesFilter<"user_queries"> | string | null
    selected_columns?: JsonNullableWithAggregatesFilter<"user_queries">
    filters?: JsonNullableWithAggregatesFilter<"user_queries">
    sorts?: JsonNullableWithAggregatesFilter<"user_queries">
    join_table?: StringNullableWithAggregatesFilter<"user_queries"> | string | null
    join_type?: StringNullableWithAggregatesFilter<"user_queries"> | string | null
    join_condition?: JsonNullableWithAggregatesFilter<"user_queries">
    generated_sql?: StringNullableWithAggregatesFilter<"user_queries"> | string | null
    tags?: StringNullableListFilter<"user_queries">
  }

  export type active_contextCreateInput = {
    worker_id?: number | null
    created_at?: Date | string | null
    ref_stills?: ref_stillsCreateNestedOneWithoutActive_contextInput
  }

  export type active_contextUncheckedCreateInput = {
    context_id?: number
    worker_id?: number | null
    still_id?: number | null
    created_at?: Date | string | null
  }

  export type active_contextUpdateInput = {
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_stills?: ref_stillsUpdateOneWithoutActive_contextNestedInput
  }

  export type active_contextUncheckedUpdateInput = {
    context_id?: IntFieldUpdateOperationsInput | number
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type active_contextCreateManyInput = {
    context_id?: number
    worker_id?: number | null
    still_id?: number | null
    created_at?: Date | string | null
  }

  export type active_contextUpdateManyMutationInput = {
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type active_contextUncheckedUpdateManyInput = {
    context_id?: IntFieldUpdateOperationsInput | number
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type auth_activity_logCreateInput = {
    id?: string
    user_id: string
    action: string
    ip_address?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type auth_activity_logUncheckedCreateInput = {
    id?: string
    user_id: string
    action: string
    ip_address?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type auth_activity_logUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type auth_activity_logUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type auth_activity_logCreateManyInput = {
    id?: string
    user_id: string
    action: string
    ip_address?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type auth_activity_logUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type auth_activity_logUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bottle_sizesCreateInput = {
    volume: string
    product_prices?: product_pricesCreateNestedManyWithoutBottle_sizesInput
  }

  export type bottle_sizesUncheckedCreateInput = {
    id?: number
    volume: string
    product_prices?: product_pricesUncheckedCreateNestedManyWithoutBottle_sizesInput
  }

  export type bottle_sizesUpdateInput = {
    volume?: StringFieldUpdateOperationsInput | string
    product_prices?: product_pricesUpdateManyWithoutBottle_sizesNestedInput
  }

  export type bottle_sizesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    volume?: StringFieldUpdateOperationsInput | string
    product_prices?: product_pricesUncheckedUpdateManyWithoutBottle_sizesNestedInput
  }

  export type bottle_sizesCreateManyInput = {
    id?: number
    volume: string
  }

  export type bottle_sizesUpdateManyMutationInput = {
    volume?: StringFieldUpdateOperationsInput | string
  }

  export type bottle_sizesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    volume?: StringFieldUpdateOperationsInput | string
  }

  export type chemical_group_kindCreateInput = {
    value: string
    ref_materials?: ref_materialsCreateNestedManyWithoutChemical_group_kindInput
  }

  export type chemical_group_kindUncheckedCreateInput = {
    value: string
    ref_materials?: ref_materialsUncheckedCreateNestedManyWithoutChemical_group_kindInput
  }

  export type chemical_group_kindUpdateInput = {
    value?: StringFieldUpdateOperationsInput | string
    ref_materials?: ref_materialsUpdateManyWithoutChemical_group_kindNestedInput
  }

  export type chemical_group_kindUncheckedUpdateInput = {
    value?: StringFieldUpdateOperationsInput | string
    ref_materials?: ref_materialsUncheckedUpdateManyWithoutChemical_group_kindNestedInput
  }

  export type chemical_group_kindCreateManyInput = {
    value: string
  }

  export type chemical_group_kindUpdateManyMutationInput = {
    value?: StringFieldUpdateOperationsInput | string
  }

  export type chemical_group_kindUncheckedUpdateManyInput = {
    value?: StringFieldUpdateOperationsInput | string
  }

  export type distillation_pending_assignmentCreateInput = {
    status?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutDistillation_pending_assignmentInput
    stock_drum?: stock_drumCreateNestedOneWithoutDistillation_pending_assignmentInput
    log_transport_drum: log_transport_drumCreateNestedOneWithoutDistillation_pending_assignmentInput
  }

  export type distillation_pending_assignmentUncheckedCreateInput = {
    pending_id?: number
    drum_id?: number | null
    transport_id: number
    assigned_distillation_id?: number | null
    status?: string | null
  }

  export type distillation_pending_assignmentUpdateInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutDistillation_pending_assignmentNestedInput
    stock_drum?: stock_drumUpdateOneWithoutDistillation_pending_assignmentNestedInput
    log_transport_drum?: log_transport_drumUpdateOneRequiredWithoutDistillation_pending_assignmentNestedInput
  }

  export type distillation_pending_assignmentUncheckedUpdateInput = {
    pending_id?: IntFieldUpdateOperationsInput | number
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transport_id?: IntFieldUpdateOperationsInput | number
    assigned_distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_pending_assignmentCreateManyInput = {
    pending_id?: number
    drum_id?: number | null
    transport_id: number
    assigned_distillation_id?: number | null
    status?: string | null
  }

  export type distillation_pending_assignmentUpdateManyMutationInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_pending_assignmentUncheckedUpdateManyInput = {
    pending_id?: IntFieldUpdateOperationsInput | number
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transport_id?: IntFieldUpdateOperationsInput | number
    assigned_distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_recordCreateInput = {
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutDistillation_recordInput
    stock_drum?: stock_drumCreateNestedManyWithoutDistillation_recordInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutDistillation_recordInput
  }

  export type distillation_recordUncheckedCreateInput = {
    record_id?: number
    distillation_id?: number | null
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutDistillation_recordInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutDistillation_recordInput
  }

  export type distillation_recordUpdateInput = {
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutDistillation_recordNestedInput
    stock_drum?: stock_drumUpdateManyWithoutDistillation_recordNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutDistillation_recordNestedInput
  }

  export type distillation_recordUncheckedUpdateInput = {
    record_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUncheckedUpdateManyWithoutDistillation_recordNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutDistillation_recordNestedInput
  }

  export type distillation_recordCreateManyInput = {
    record_id?: number
    distillation_id?: number | null
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
  }

  export type distillation_recordUpdateManyMutationInput = {
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_recordUncheckedUpdateManyInput = {
    record_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_scheduleCreateInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordCreateNestedOneWithoutDistillation_scheduleInput
    ref_stills: ref_stillsCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUpdateInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleCreateManyInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type distillation_scheduleUpdateManyMutationInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type distillation_scheduleUncheckedUpdateManyInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type distillation_schedule_itemsCreateInput = {
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_new?: stock_newCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_repro?: stock_reproCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_activity?: stock_activityCreateNestedManyWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsUncheckedCreateInput = {
    details_id?: number
    distillation_id: number
    new_stock_id?: number | null
    repro_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsUpdateInput = {
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutDistillation_schedule_itemsNestedInput
    stock_new?: stock_newUpdateOneWithoutDistillation_schedule_itemsNestedInput
    stock_repro?: stock_reproUpdateOneWithoutDistillation_schedule_itemsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsUncheckedUpdateInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    new_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    repro_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stock_activity?: stock_activityUncheckedUpdateManyWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsCreateManyInput = {
    details_id?: number
    distillation_id: number
    new_stock_id?: number | null
    repro_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type distillation_schedule_itemsUpdateManyMutationInput = {
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type distillation_schedule_itemsUncheckedUpdateManyInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    new_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    repro_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type drumsCreateInput = {
    old_id: number
    material?: string
    batch_code?: string | null
    supplier?: string | null
    status?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    site?: string
    date_ordered?: string | null
    chemical_group?: string | null
    material_code: string
  }

  export type drumsUncheckedCreateInput = {
    old_id: number
    material?: string
    batch_code?: string | null
    id?: number
    supplier?: string | null
    status?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    site?: string
    date_ordered?: string | null
    chemical_group?: string | null
    material_code: string
  }

  export type drumsUpdateInput = {
    old_id?: IntFieldUpdateOperationsInput | number
    material?: StringFieldUpdateOperationsInput | string
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    site?: StringFieldUpdateOperationsInput | string
    date_ordered?: NullableStringFieldUpdateOperationsInput | string | null
    chemical_group?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type drumsUncheckedUpdateInput = {
    old_id?: IntFieldUpdateOperationsInput | number
    material?: StringFieldUpdateOperationsInput | string
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    site?: StringFieldUpdateOperationsInput | string
    date_ordered?: NullableStringFieldUpdateOperationsInput | string | null
    chemical_group?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type drumsCreateManyInput = {
    old_id: number
    material?: string
    batch_code?: string | null
    id?: number
    supplier?: string | null
    status?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    site?: string
    date_ordered?: string | null
    chemical_group?: string | null
    material_code: string
  }

  export type drumsUpdateManyMutationInput = {
    old_id?: IntFieldUpdateOperationsInput | number
    material?: StringFieldUpdateOperationsInput | string
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    site?: StringFieldUpdateOperationsInput | string
    date_ordered?: NullableStringFieldUpdateOperationsInput | string | null
    chemical_group?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type drumsUncheckedUpdateManyInput = {
    old_id?: IntFieldUpdateOperationsInput | number
    material?: StringFieldUpdateOperationsInput | string
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    site?: StringFieldUpdateOperationsInput | string
    date_ordered?: NullableStringFieldUpdateOperationsInput | string | null
    chemical_group?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type log_drum_decommissionCreateInput = {
    drum_id: number
    decommissioned_at?: Date | string | null
    worker_id?: number | null
  }

  export type log_drum_decommissionUncheckedCreateInput = {
    decommission_id?: number
    drum_id: number
    decommissioned_at?: Date | string | null
    worker_id?: number | null
  }

  export type log_drum_decommissionUpdateInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    decommissioned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type log_drum_decommissionUncheckedUpdateInput = {
    decommission_id?: IntFieldUpdateOperationsInput | number
    drum_id?: IntFieldUpdateOperationsInput | number
    decommissioned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type log_drum_decommissionCreateManyInput = {
    decommission_id?: number
    drum_id: number
    decommissioned_at?: Date | string | null
    worker_id?: number | null
  }

  export type log_drum_decommissionUpdateManyMutationInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    decommissioned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type log_drum_decommissionUncheckedUpdateManyInput = {
    decommission_id?: IntFieldUpdateOperationsInput | number
    drum_id?: IntFieldUpdateOperationsInput | number
    decommissioned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type log_drum_scanCreateInput = {
    scanned_at?: Date | string | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
    stock_drum?: stock_drumCreateNestedOneWithoutLog_drum_scanInput
    log_load_still?: log_load_stillCreateNestedOneWithoutLog_drum_scanInput
    log_transport_drum?: log_transport_drumCreateNestedOneWithoutLog_drum_scanInput
  }

  export type log_drum_scanUncheckedCreateInput = {
    scan_id?: number
    scanned_at?: Date | string | null
    drum_id?: number | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
    log_load_still?: log_load_stillUncheckedCreateNestedOneWithoutLog_drum_scanInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedOneWithoutLog_drum_scanInput
  }

  export type log_drum_scanUpdateInput = {
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUpdateOneWithoutLog_drum_scanNestedInput
    log_load_still?: log_load_stillUpdateOneWithoutLog_drum_scanNestedInput
    log_transport_drum?: log_transport_drumUpdateOneWithoutLog_drum_scanNestedInput
  }

  export type log_drum_scanUncheckedUpdateInput = {
    scan_id?: IntFieldUpdateOperationsInput | number
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    log_load_still?: log_load_stillUncheckedUpdateOneWithoutLog_drum_scanNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateOneWithoutLog_drum_scanNestedInput
  }

  export type log_drum_scanCreateManyInput = {
    scan_id?: number
    scanned_at?: Date | string | null
    drum_id?: number | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
  }

  export type log_drum_scanUpdateManyMutationInput = {
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_drum_scanUncheckedUpdateManyInput = {
    scan_id?: IntFieldUpdateOperationsInput | number
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_load_stillCreateInput = {
    status?: string | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutLog_load_stillInput
    stock_drum?: stock_drumCreateNestedOneWithoutLog_load_stillInput
    log_drum_scan?: log_drum_scanCreateNestedOneWithoutLog_load_stillInput
    ref_stills?: ref_stillsCreateNestedOneWithoutLog_load_stillInput
  }

  export type log_load_stillUncheckedCreateInput = {
    loading_id?: number
    scan_id?: number | null
    drum_id?: number | null
    still_id?: number | null
    distillation_id: number
    status?: string | null
  }

  export type log_load_stillUpdateInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutLog_load_stillNestedInput
    stock_drum?: stock_drumUpdateOneWithoutLog_load_stillNestedInput
    log_drum_scan?: log_drum_scanUpdateOneWithoutLog_load_stillNestedInput
    ref_stills?: ref_stillsUpdateOneWithoutLog_load_stillNestedInput
  }

  export type log_load_stillUncheckedUpdateInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_load_stillCreateManyInput = {
    loading_id?: number
    scan_id?: number | null
    drum_id?: number | null
    still_id?: number | null
    distillation_id: number
    status?: string | null
  }

  export type log_load_stillUpdateManyMutationInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_load_stillUncheckedUpdateManyInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_start_distillationCreateInput = {
    worker_id?: number | null
    status?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutLog_start_distillationInput
    ref_stills: ref_stillsCreateNestedOneWithoutLog_start_distillationInput
  }

  export type log_start_distillationUncheckedCreateInput = {
    start_id?: number
    distillation_id?: number | null
    still_id: number
    worker_id?: number | null
    status?: string | null
  }

  export type log_start_distillationUpdateInput = {
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutLog_start_distillationNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutLog_start_distillationNestedInput
  }

  export type log_start_distillationUncheckedUpdateInput = {
    start_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: IntFieldUpdateOperationsInput | number
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_start_distillationCreateManyInput = {
    start_id?: number
    distillation_id?: number | null
    still_id: number
    worker_id?: number | null
    status?: string | null
  }

  export type log_start_distillationUpdateManyMutationInput = {
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_start_distillationUncheckedUpdateManyInput = {
    start_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: IntFieldUpdateOperationsInput | number
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_transport_drumCreateInput = {
    transported_at?: Date | string | null
    status?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutLog_transport_drumInput
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutLog_transport_drumInput
    stock_drum?: stock_drumCreateNestedOneWithoutLog_transport_drumInput
    log_drum_scan?: log_drum_scanCreateNestedOneWithoutLog_transport_drumInput
  }

  export type log_transport_drumUncheckedCreateInput = {
    transport_id?: number
    scan_id?: number | null
    drum_id?: number | null
    transported_at?: Date | string | null
    distillation_id?: number | null
    status?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutLog_transport_drumInput
  }

  export type log_transport_drumUpdateInput = {
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutLog_transport_drumNestedInput
    distillation_schedule?: distillation_scheduleUpdateOneWithoutLog_transport_drumNestedInput
    stock_drum?: stock_drumUpdateOneWithoutLog_transport_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateOneWithoutLog_transport_drumNestedInput
  }

  export type log_transport_drumUncheckedUpdateInput = {
    transport_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutLog_transport_drumNestedInput
  }

  export type log_transport_drumCreateManyInput = {
    transport_id?: number
    scan_id?: number | null
    drum_id?: number | null
    transported_at?: Date | string | null
    distillation_id?: number | null
    status?: string | null
  }

  export type log_transport_drumUpdateManyMutationInput = {
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_transport_drumUncheckedUpdateManyInput = {
    transport_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_volume_transferCreateInput = {
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutLog_volume_transferInput
    stock_drum: stock_drumCreateNestedOneWithoutLog_volume_transferInput
  }

  export type log_volume_transferUncheckedCreateInput = {
    transfer_id?: number
    drum_id: number
    distillation_id: number
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
  }

  export type log_volume_transferUpdateInput = {
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutLog_volume_transferNestedInput
    stock_drum?: stock_drumUpdateOneRequiredWithoutLog_volume_transferNestedInput
  }

  export type log_volume_transferUncheckedUpdateInput = {
    transfer_id?: IntFieldUpdateOperationsInput | number
    drum_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type log_volume_transferCreateManyInput = {
    transfer_id?: number
    drum_id: number
    distillation_id: number
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
  }

  export type log_volume_transferUpdateManyMutationInput = {
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type log_volume_transferUncheckedUpdateManyInput = {
    transfer_id?: IntFieldUpdateOperationsInput | number
    drum_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type notificationCreateInput = {
    message: string
    message_type?: string
    private?: boolean
    audience_type?: string
    is_read?: boolean
    created_at?: Date | string
    expires_at?: Date | string | null
    created_by: string
  }

  export type notificationUncheckedCreateInput = {
    notification_id?: number
    message: string
    message_type?: string
    private?: boolean
    audience_type?: string
    is_read?: boolean
    created_at?: Date | string
    expires_at?: Date | string | null
    created_by: string
  }

  export type notificationUpdateInput = {
    message?: StringFieldUpdateOperationsInput | string
    message_type?: StringFieldUpdateOperationsInput | string
    private?: BoolFieldUpdateOperationsInput | boolean
    audience_type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: StringFieldUpdateOperationsInput | string
  }

  export type notificationUncheckedUpdateInput = {
    notification_id?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    message_type?: StringFieldUpdateOperationsInput | string
    private?: BoolFieldUpdateOperationsInput | boolean
    audience_type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: StringFieldUpdateOperationsInput | string
  }

  export type notificationCreateManyInput = {
    notification_id?: number
    message: string
    message_type?: string
    private?: boolean
    audience_type?: string
    is_read?: boolean
    created_at?: Date | string
    expires_at?: Date | string | null
    created_by: string
  }

  export type notificationUpdateManyMutationInput = {
    message?: StringFieldUpdateOperationsInput | string
    message_type?: StringFieldUpdateOperationsInput | string
    private?: BoolFieldUpdateOperationsInput | boolean
    audience_type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: StringFieldUpdateOperationsInput | string
  }

  export type notificationUncheckedUpdateManyInput = {
    notification_id?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    message_type?: StringFieldUpdateOperationsInput | string
    private?: BoolFieldUpdateOperationsInput | boolean
    audience_type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: StringFieldUpdateOperationsInput | string
  }

  export type order_detailCreateInput = {
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    ref_materials: ref_materialsCreateNestedOneWithoutOrder_detailInput
    stock_order: stock_orderCreateNestedOneWithoutOrder_detailInput
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailUncheckedCreateInput = {
    detail_id?: number
    order_id: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    material_code: string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailUpdateInput = {
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ref_materials?: ref_materialsUpdateOneRequiredWithoutOrder_detailNestedInput
    stock_order?: stock_orderUpdateOneRequiredWithoutOrder_detailNestedInput
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailCreateManyInput = {
    detail_id?: number
    order_id: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    material_code: string
  }

  export type order_detailUpdateManyMutationInput = {
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_detailUncheckedUpdateManyInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type product_pricesCreateInput = {
    price: Decimal | DecimalJsLike | number | string
    bottle_sizes: bottle_sizesCreateNestedOneWithoutProduct_pricesInput
    products: ref_productCreateNestedOneWithoutProduct_pricesInput
  }

  export type product_pricesUncheckedCreateInput = {
    product_id: number
    bottle_size_id: number
    price: Decimal | DecimalJsLike | number | string
  }

  export type product_pricesUpdateInput = {
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bottle_sizes?: bottle_sizesUpdateOneRequiredWithoutProduct_pricesNestedInput
    products?: ref_productUpdateOneRequiredWithoutProduct_pricesNestedInput
  }

  export type product_pricesUncheckedUpdateInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    bottle_size_id?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type product_pricesCreateManyInput = {
    product_id: number
    bottle_size_id: number
    price: Decimal | DecimalJsLike | number | string
  }

  export type product_pricesUpdateManyMutationInput = {
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type product_pricesUncheckedUpdateManyInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    bottle_size_id?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type raw_materialsCreateInput = {
    material_name: string
    cas_number: string
    chemical_group?: string | null
    description?: string | null
    un_code?: string | null
    flash_point?: number | null
    material_code?: string
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: number
    chemical_props?: NullableJsonNullValueInput | InputJsonValue
  }

  export type raw_materialsUncheckedCreateInput = {
    material_id?: number
    material_name: string
    cas_number: string
    chemical_group?: string | null
    description?: string | null
    un_code?: string | null
    flash_point?: number | null
    material_code?: string
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: number
    chemical_props?: NullableJsonNullValueInput | InputJsonValue
  }

  export type raw_materialsUpdateInput = {
    material_name?: StringFieldUpdateOperationsInput | string
    cas_number?: StringFieldUpdateOperationsInput | string
    chemical_group?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    un_code?: NullableStringFieldUpdateOperationsInput | string | null
    flash_point?: NullableIntFieldUpdateOperationsInput | number | null
    material_code?: StringFieldUpdateOperationsInput | string
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: IntFieldUpdateOperationsInput | number
    chemical_props?: NullableJsonNullValueInput | InputJsonValue
  }

  export type raw_materialsUncheckedUpdateInput = {
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    cas_number?: StringFieldUpdateOperationsInput | string
    chemical_group?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    un_code?: NullableStringFieldUpdateOperationsInput | string | null
    flash_point?: NullableIntFieldUpdateOperationsInput | number | null
    material_code?: StringFieldUpdateOperationsInput | string
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: IntFieldUpdateOperationsInput | number
    chemical_props?: NullableJsonNullValueInput | InputJsonValue
  }

  export type raw_materialsCreateManyInput = {
    material_id?: number
    material_name: string
    cas_number: string
    chemical_group?: string | null
    description?: string | null
    un_code?: string | null
    flash_point?: number | null
    material_code?: string
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: number
    chemical_props?: NullableJsonNullValueInput | InputJsonValue
  }

  export type raw_materialsUpdateManyMutationInput = {
    material_name?: StringFieldUpdateOperationsInput | string
    cas_number?: StringFieldUpdateOperationsInput | string
    chemical_group?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    un_code?: NullableStringFieldUpdateOperationsInput | string | null
    flash_point?: NullableIntFieldUpdateOperationsInput | number | null
    material_code?: StringFieldUpdateOperationsInput | string
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: IntFieldUpdateOperationsInput | number
    chemical_props?: NullableJsonNullValueInput | InputJsonValue
  }

  export type raw_materialsUncheckedUpdateManyInput = {
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    cas_number?: StringFieldUpdateOperationsInput | string
    chemical_group?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    un_code?: NullableStringFieldUpdateOperationsInput | string | null
    flash_point?: NullableIntFieldUpdateOperationsInput | number | null
    material_code?: StringFieldUpdateOperationsInput | string
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: IntFieldUpdateOperationsInput | number
    chemical_props?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ref_materialsCreateInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUpdateInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsCreateManyInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
  }

  export type ref_materialsUpdateManyMutationInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_materialsUncheckedUpdateManyInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_stillsCreateInput = {
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    active_context?: active_contextCreateNestedManyWithoutRef_stillsInput
    distillation_schedule?: distillation_scheduleCreateNestedManyWithoutRef_stillsInput
    log_load_still?: log_load_stillCreateNestedManyWithoutRef_stillsInput
    log_start_distillation?: log_start_distillationCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsUncheckedCreateInput = {
    still_id?: number
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    active_context?: active_contextUncheckedCreateNestedManyWithoutRef_stillsInput
    distillation_schedule?: distillation_scheduleUncheckedCreateNestedManyWithoutRef_stillsInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutRef_stillsInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsUpdateInput = {
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active_context?: active_contextUpdateManyWithoutRef_stillsNestedInput
    distillation_schedule?: distillation_scheduleUpdateManyWithoutRef_stillsNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutRef_stillsNestedInput
    log_start_distillation?: log_start_distillationUpdateManyWithoutRef_stillsNestedInput
  }

  export type ref_stillsUncheckedUpdateInput = {
    still_id?: IntFieldUpdateOperationsInput | number
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active_context?: active_contextUncheckedUpdateManyWithoutRef_stillsNestedInput
    distillation_schedule?: distillation_scheduleUncheckedUpdateManyWithoutRef_stillsNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutRef_stillsNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateManyWithoutRef_stillsNestedInput
  }

  export type ref_stillsCreateManyInput = {
    still_id?: number
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
  }

  export type ref_stillsUpdateManyMutationInput = {
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_stillsUncheckedUpdateManyInput = {
    still_id?: IntFieldUpdateOperationsInput | number
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_suppliersCreateInput = {
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_suppliersInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersUncheckedCreateInput = {
    supplier_id?: number
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderUncheckedCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersUpdateInput = {
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_suppliersNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUpdateManyWithoutRef_suppliersNestedInput
  }

  export type ref_suppliersUncheckedUpdateInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUncheckedUpdateManyWithoutRef_suppliersNestedInput
  }

  export type ref_suppliersCreateManyInput = {
    supplier_id?: number
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
  }

  export type ref_suppliersUpdateManyMutationInput = {
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_suppliersUncheckedUpdateManyInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type session_settingsCreateInput = {
    id?: string
    device_type: string
    session_duration_seconds: number
    inactivity_timeout_seconds?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type session_settingsUncheckedCreateInput = {
    id?: string
    device_type: string
    session_duration_seconds: number
    inactivity_timeout_seconds?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type session_settingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_type?: StringFieldUpdateOperationsInput | string
    session_duration_seconds?: IntFieldUpdateOperationsInput | number
    inactivity_timeout_seconds?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type session_settingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_type?: StringFieldUpdateOperationsInput | string
    session_duration_seconds?: IntFieldUpdateOperationsInput | number
    inactivity_timeout_seconds?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type session_settingsCreateManyInput = {
    id?: string
    device_type: string
    session_duration_seconds: number
    inactivity_timeout_seconds?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type session_settingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_type?: StringFieldUpdateOperationsInput | string
    session_duration_seconds?: IntFieldUpdateOperationsInput | number
    inactivity_timeout_seconds?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type session_settingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    device_type?: StringFieldUpdateOperationsInput | string
    session_duration_seconds?: IntFieldUpdateOperationsInput | number
    inactivity_timeout_seconds?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_drumCreateInput = {
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutStock_drumInput
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drumInput
    order_detail: order_detailCreateNestedOneWithoutStock_drumInput
  }

  export type stock_drumUncheckedCreateInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanUncheckedCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutStock_drumInput
  }

  export type stock_drumUpdateInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutStock_drumNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutStock_drumNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUncheckedUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutStock_drumNestedInput
  }

  export type stock_drumCreateManyInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
  }

  export type stock_drumUpdateManyMutationInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_drumUncheckedUpdateManyInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type stock_drum_newCreateInput = {
    drum_type?: string
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drum_newInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_drum_newInput
    order_detail: order_detailCreateNestedOneWithoutStock_drum_newInput
  }

  export type stock_drum_newUncheckedCreateInput = {
    drum_id?: number
    material_code?: string | null
    drum_type?: string
    order_detail_id: number
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_id?: number | null
  }

  export type stock_drum_newUpdateInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_record?: distillation_recordUpdateOneWithoutStock_drum_newNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_drum_newNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drum_newNestedInput
  }

  export type stock_drum_newUncheckedUpdateInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type stock_drum_newCreateManyInput = {
    drum_id?: number
    material_code?: string | null
    drum_type?: string
    order_detail_id: number
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_id?: number | null
  }

  export type stock_drum_newUpdateManyMutationInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_drum_newUncheckedUpdateManyInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type stock_newCreateInput = {
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutStock_newInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_newInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_newInput
  }

  export type stock_newUncheckedCreateInput = {
    stock_id?: number
    supplier_id?: number | null
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutStock_newInput
  }

  export type stock_newUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutStock_newNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_newNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_newNestedInput
  }

  export type stock_newUncheckedUpdateInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutStock_newNestedInput
  }

  export type stock_newCreateManyInput = {
    stock_id?: number
    supplier_id?: number | null
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_newUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_newUncheckedUpdateManyInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_orderCreateInput = {
    po_number?: string | null
    date_ordered?: Date | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail?: order_detailCreateNestedManyWithoutStock_orderInput
    ref_suppliers: ref_suppliersCreateNestedOneWithoutStock_orderInput
  }

  export type stock_orderUncheckedCreateInput = {
    order_id?: number
    po_number?: string | null
    date_ordered?: Date | string
    supplier_id: number
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutStock_orderInput
  }

  export type stock_orderUpdateInput = {
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail?: order_detailUpdateManyWithoutStock_orderNestedInput
    ref_suppliers?: ref_suppliersUpdateOneRequiredWithoutStock_orderNestedInput
  }

  export type stock_orderUncheckedUpdateInput = {
    order_id?: IntFieldUpdateOperationsInput | number
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier_id?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutStock_orderNestedInput
  }

  export type stock_orderCreateManyInput = {
    order_id?: number
    po_number?: string | null
    date_ordered?: Date | string
    supplier_id: number
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_orderUpdateManyMutationInput = {
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_orderUncheckedUpdateManyInput = {
    order_id?: IntFieldUpdateOperationsInput | number
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier_id?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_reproCreateInput = {
    location: string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    quantity: number
    material_description?: string | null
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutStock_reproInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_reproInput
  }

  export type stock_reproUncheckedCreateInput = {
    stock_id?: number
    location: string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    quantity: number
    material_description?: string | null
    material_code?: string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutStock_reproInput
  }

  export type stock_reproUpdateInput = {
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutStock_reproNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_reproNestedInput
  }

  export type stock_reproUncheckedUpdateInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutStock_reproNestedInput
  }

  export type stock_reproCreateManyInput = {
    stock_id?: number
    location: string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    quantity: number
    material_description?: string | null
    material_code?: string | null
  }

  export type stock_reproUpdateManyMutationInput = {
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_reproUncheckedUpdateManyInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_profilesCreateInput = {
    id: string
    full_name?: string | null
    email?: string | null
    avatar_url?: string | null
  }

  export type user_profilesUncheckedCreateInput = {
    id: string
    full_name?: string | null
    email?: string | null
    avatar_url?: string | null
  }

  export type user_profilesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_profilesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_profilesCreateManyInput = {
    id: string
    full_name?: string | null
    email?: string | null
    avatar_url?: string | null
  }

  export type user_profilesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_profilesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    avatar_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_rolesCreateInput = {
    id?: string
    user_id?: string
    role?: string
    created_at?: Date | string
  }

  export type user_rolesUncheckedCreateInput = {
    id?: string
    user_id?: string
    role?: string
    created_at?: Date | string
  }

  export type user_rolesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesCreateManyInput = {
    id?: string
    user_id?: string
    role?: string
    created_at?: Date | string
  }

  export type user_rolesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type worker_passcodesCreateInput = {
    id?: string
    user_id: string
    worker_name: string
    role: string
    passcode: string
    is_active?: boolean | null
    last_login_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type worker_passcodesUncheckedCreateInput = {
    id?: string
    user_id: string
    worker_name: string
    role: string
    passcode: string
    is_active?: boolean | null
    last_login_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type worker_passcodesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    worker_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    passcode?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type worker_passcodesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    worker_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    passcode?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type worker_passcodesCreateManyInput = {
    id?: string
    user_id: string
    worker_name: string
    role: string
    passcode: string
    is_active?: boolean | null
    last_login_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    created_by?: string | null
    updated_by?: string | null
  }

  export type worker_passcodesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    worker_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    passcode?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type worker_passcodesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    worker_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    passcode?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    last_login_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_detail_stock_activityCreateInput = {
    created_at?: Date | string | null
    order_detail: order_detailCreateNestedOneWithoutOrder_detail_stock_activityInput
    stock_activity: stock_activityCreateNestedOneWithoutOrder_detail_stock_activityInput
  }

  export type order_detail_stock_activityUncheckedCreateInput = {
    id?: number
    order_detail_id: number
    stock_activity_id: number
    created_at?: Date | string | null
  }

  export type order_detail_stock_activityUpdateInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail?: order_detailUpdateOneRequiredWithoutOrder_detail_stock_activityNestedInput
    stock_activity?: stock_activityUpdateOneRequiredWithoutOrder_detail_stock_activityNestedInput
  }

  export type order_detail_stock_activityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_detail_id?: IntFieldUpdateOperationsInput | number
    stock_activity_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type order_detail_stock_activityCreateManyInput = {
    id?: number
    order_detail_id: number
    stock_activity_id: number
    created_at?: Date | string | null
  }

  export type order_detail_stock_activityUpdateManyMutationInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type order_detail_stock_activityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_detail_id?: IntFieldUpdateOperationsInput | number
    stock_activity_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type raw_stock_historyCreateInput = {
    date?: Date | string | null
    event_str?: string | null
    drum_type?: string | null
    no_events?: number | null
    notes_ids?: string | null
    notes_batch?: string | null
    source?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ref_materials?: ref_materialsCreateNestedOneWithoutRaw_stock_historyInput
    stock_history?: stock_historyCreateNestedManyWithoutRaw_stock_historyInput
  }

  export type raw_stock_historyUncheckedCreateInput = {
    id?: number
    date?: Date | string | null
    event_str?: string | null
    drum_type?: string | null
    no_events?: number | null
    notes_ids?: string | null
    notes_batch?: string | null
    source?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRaw_stock_historyInput
  }

  export type raw_stock_historyUpdateInput = {
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneWithoutRaw_stock_historyNestedInput
    stock_history?: stock_historyUpdateManyWithoutRaw_stock_historyNestedInput
  }

  export type raw_stock_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    stock_history?: stock_historyUncheckedUpdateManyWithoutRaw_stock_historyNestedInput
  }

  export type raw_stock_historyCreateManyInput = {
    id?: number
    date?: Date | string | null
    event_str?: string | null
    drum_type?: string | null
    no_events?: number | null
    notes_ids?: string | null
    notes_batch?: string | null
    source?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type raw_stock_historyUpdateManyMutationInput = {
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type raw_stock_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_activityCreateInput = {
    activity_date: Date | string
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutStock_activityInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedOneWithoutStock_activityInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_activityInput
    order_detail?: order_detailCreateNestedOneWithoutStock_activityInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_activityInput
  }

  export type stock_activityUncheckedCreateInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutStock_activityInput
  }

  export type stock_activityUpdateInput = {
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutStock_activityNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateOneWithoutStock_activityNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_activityNestedInput
    order_detail?: order_detailUpdateOneWithoutStock_activityNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutStock_activityNestedInput
  }

  export type stock_activityCreateManyInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_activityUpdateManyMutationInput = {
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_activityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_historyCreateInput = {
    date: Date | string
    material_name: string
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_historyInput
    raw_stock_history?: raw_stock_historyCreateNestedOneWithoutStock_historyInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_historyInput
  }

  export type stock_historyUncheckedCreateInput = {
    id?: number
    date: Date | string
    material_name: string
    supplier_id?: number | null
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_historyUpdateInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneWithoutStock_historyNestedInput
    raw_stock_history?: raw_stock_historyUpdateOneWithoutStock_historyNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_historyNestedInput
  }

  export type stock_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_historyCreateManyInput = {
    id?: number
    date: Date | string
    material_name: string
    supplier_id?: number | null
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_historyUpdateManyMutationInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_productCreateInput = {
    name: string
    sku: string
    raw_material_id?: number | null
    grade: string
    product_prices?: product_pricesCreateNestedManyWithoutProductsInput
    ref_materials?: ref_materialsCreateNestedOneWithoutRef_productInput
  }

  export type ref_productUncheckedCreateInput = {
    product_id?: number
    name: string
    sku: string
    raw_material_id?: number | null
    grade: string
    material_code?: string | null
    product_prices?: product_pricesUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ref_productUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
    product_prices?: product_pricesUpdateManyWithoutProductsNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutRef_productNestedInput
  }

  export type ref_productUncheckedUpdateInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    product_prices?: product_pricesUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ref_productCreateManyInput = {
    product_id?: number
    name: string
    sku: string
    raw_material_id?: number | null
    grade: string
    material_code?: string | null
  }

  export type ref_productUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
  }

  export type ref_productUncheckedUpdateManyInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_supplier_materialCreateInput = {
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
    ref_materials: ref_materialsCreateNestedOneWithoutRef_supplier_materialInput
    ref_suppliers: ref_suppliersCreateNestedOneWithoutRef_supplier_materialInput
  }

  export type ref_supplier_materialUncheckedCreateInput = {
    supplier_id: number
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
    material_code: string
  }

  export type ref_supplier_materialUpdateInput = {
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneRequiredWithoutRef_supplier_materialNestedInput
    ref_suppliers?: ref_suppliersUpdateOneRequiredWithoutRef_supplier_materialNestedInput
  }

  export type ref_supplier_materialUncheckedUpdateInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type ref_supplier_materialCreateManyInput = {
    supplier_id: number
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
    material_code: string
  }

  export type ref_supplier_materialUpdateManyMutationInput = {
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ref_supplier_materialUncheckedUpdateManyInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type user_queriesCreateInput = {
    id?: string
    user_id: string
    query_name: string
    created_at?: Date | string | null
    last_executed_at?: Date | string | null
    execution_count?: number | null
    selected_table?: string | null
    selected_columns?: NullableJsonNullValueInput | InputJsonValue
    filters?: NullableJsonNullValueInput | InputJsonValue
    sorts?: NullableJsonNullValueInput | InputJsonValue
    join_table?: string | null
    join_type?: string | null
    join_condition?: NullableJsonNullValueInput | InputJsonValue
    generated_sql?: string | null
    tags?: user_queriesCreatetagsInput | string[]
  }

  export type user_queriesUncheckedCreateInput = {
    id?: string
    user_id: string
    query_name: string
    created_at?: Date | string | null
    last_executed_at?: Date | string | null
    execution_count?: number | null
    selected_table?: string | null
    selected_columns?: NullableJsonNullValueInput | InputJsonValue
    filters?: NullableJsonNullValueInput | InputJsonValue
    sorts?: NullableJsonNullValueInput | InputJsonValue
    join_table?: string | null
    join_type?: string | null
    join_condition?: NullableJsonNullValueInput | InputJsonValue
    generated_sql?: string | null
    tags?: user_queriesCreatetagsInput | string[]
  }

  export type user_queriesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    query_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_executed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    execution_count?: NullableIntFieldUpdateOperationsInput | number | null
    selected_table?: NullableStringFieldUpdateOperationsInput | string | null
    selected_columns?: NullableJsonNullValueInput | InputJsonValue
    filters?: NullableJsonNullValueInput | InputJsonValue
    sorts?: NullableJsonNullValueInput | InputJsonValue
    join_table?: NullableStringFieldUpdateOperationsInput | string | null
    join_type?: NullableStringFieldUpdateOperationsInput | string | null
    join_condition?: NullableJsonNullValueInput | InputJsonValue
    generated_sql?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: user_queriesUpdatetagsInput | string[]
  }

  export type user_queriesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    query_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_executed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    execution_count?: NullableIntFieldUpdateOperationsInput | number | null
    selected_table?: NullableStringFieldUpdateOperationsInput | string | null
    selected_columns?: NullableJsonNullValueInput | InputJsonValue
    filters?: NullableJsonNullValueInput | InputJsonValue
    sorts?: NullableJsonNullValueInput | InputJsonValue
    join_table?: NullableStringFieldUpdateOperationsInput | string | null
    join_type?: NullableStringFieldUpdateOperationsInput | string | null
    join_condition?: NullableJsonNullValueInput | InputJsonValue
    generated_sql?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: user_queriesUpdatetagsInput | string[]
  }

  export type user_queriesCreateManyInput = {
    id?: string
    user_id: string
    query_name: string
    created_at?: Date | string | null
    last_executed_at?: Date | string | null
    execution_count?: number | null
    selected_table?: string | null
    selected_columns?: NullableJsonNullValueInput | InputJsonValue
    filters?: NullableJsonNullValueInput | InputJsonValue
    sorts?: NullableJsonNullValueInput | InputJsonValue
    join_table?: string | null
    join_type?: string | null
    join_condition?: NullableJsonNullValueInput | InputJsonValue
    generated_sql?: string | null
    tags?: user_queriesCreatetagsInput | string[]
  }

  export type user_queriesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    query_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_executed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    execution_count?: NullableIntFieldUpdateOperationsInput | number | null
    selected_table?: NullableStringFieldUpdateOperationsInput | string | null
    selected_columns?: NullableJsonNullValueInput | InputJsonValue
    filters?: NullableJsonNullValueInput | InputJsonValue
    sorts?: NullableJsonNullValueInput | InputJsonValue
    join_table?: NullableStringFieldUpdateOperationsInput | string | null
    join_type?: NullableStringFieldUpdateOperationsInput | string | null
    join_condition?: NullableJsonNullValueInput | InputJsonValue
    generated_sql?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: user_queriesUpdatetagsInput | string[]
  }

  export type user_queriesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    query_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_executed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    execution_count?: NullableIntFieldUpdateOperationsInput | number | null
    selected_table?: NullableStringFieldUpdateOperationsInput | string | null
    selected_columns?: NullableJsonNullValueInput | InputJsonValue
    filters?: NullableJsonNullValueInput | InputJsonValue
    sorts?: NullableJsonNullValueInput | InputJsonValue
    join_table?: NullableStringFieldUpdateOperationsInput | string | null
    join_type?: NullableStringFieldUpdateOperationsInput | string | null
    join_condition?: NullableJsonNullValueInput | InputJsonValue
    generated_sql?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: user_queriesUpdatetagsInput | string[]
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Ref_stillsNullableScalarRelationFilter = {
    is?: ref_stillsWhereInput | null
    isNot?: ref_stillsWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type active_contextCountOrderByAggregateInput = {
    context_id?: SortOrder
    worker_id?: SortOrder
    still_id?: SortOrder
    created_at?: SortOrder
  }

  export type active_contextAvgOrderByAggregateInput = {
    context_id?: SortOrder
    worker_id?: SortOrder
    still_id?: SortOrder
  }

  export type active_contextMaxOrderByAggregateInput = {
    context_id?: SortOrder
    worker_id?: SortOrder
    still_id?: SortOrder
    created_at?: SortOrder
  }

  export type active_contextMinOrderByAggregateInput = {
    context_id?: SortOrder
    worker_id?: SortOrder
    still_id?: SortOrder
    created_at?: SortOrder
  }

  export type active_contextSumOrderByAggregateInput = {
    context_id?: SortOrder
    worker_id?: SortOrder
    still_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type auth_activity_logCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    ip_address?: SortOrder
    metadata?: SortOrder
    created_at?: SortOrder
  }

  export type auth_activity_logMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    ip_address?: SortOrder
    created_at?: SortOrder
  }

  export type auth_activity_logMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    action?: SortOrder
    ip_address?: SortOrder
    created_at?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type Product_pricesListRelationFilter = {
    every?: product_pricesWhereInput
    some?: product_pricesWhereInput
    none?: product_pricesWhereInput
  }

  export type product_pricesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type bottle_sizesCountOrderByAggregateInput = {
    id?: SortOrder
    volume?: SortOrder
  }

  export type bottle_sizesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type bottle_sizesMaxOrderByAggregateInput = {
    id?: SortOrder
    volume?: SortOrder
  }

  export type bottle_sizesMinOrderByAggregateInput = {
    id?: SortOrder
    volume?: SortOrder
  }

  export type bottle_sizesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Ref_materialsListRelationFilter = {
    every?: ref_materialsWhereInput
    some?: ref_materialsWhereInput
    none?: ref_materialsWhereInput
  }

  export type ref_materialsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chemical_group_kindCountOrderByAggregateInput = {
    value?: SortOrder
  }

  export type chemical_group_kindMaxOrderByAggregateInput = {
    value?: SortOrder
  }

  export type chemical_group_kindMinOrderByAggregateInput = {
    value?: SortOrder
  }

  export type Distillation_scheduleNullableScalarRelationFilter = {
    is?: distillation_scheduleWhereInput | null
    isNot?: distillation_scheduleWhereInput | null
  }

  export type Stock_drumNullableScalarRelationFilter = {
    is?: stock_drumWhereInput | null
    isNot?: stock_drumWhereInput | null
  }

  export type Log_transport_drumScalarRelationFilter = {
    is?: log_transport_drumWhereInput
    isNot?: log_transport_drumWhereInput
  }

  export type distillation_pending_assignmentCountOrderByAggregateInput = {
    pending_id?: SortOrder
    drum_id?: SortOrder
    transport_id?: SortOrder
    assigned_distillation_id?: SortOrder
    status?: SortOrder
  }

  export type distillation_pending_assignmentAvgOrderByAggregateInput = {
    pending_id?: SortOrder
    drum_id?: SortOrder
    transport_id?: SortOrder
    assigned_distillation_id?: SortOrder
  }

  export type distillation_pending_assignmentMaxOrderByAggregateInput = {
    pending_id?: SortOrder
    drum_id?: SortOrder
    transport_id?: SortOrder
    assigned_distillation_id?: SortOrder
    status?: SortOrder
  }

  export type distillation_pending_assignmentMinOrderByAggregateInput = {
    pending_id?: SortOrder
    drum_id?: SortOrder
    transport_id?: SortOrder
    assigned_distillation_id?: SortOrder
    status?: SortOrder
  }

  export type distillation_pending_assignmentSumOrderByAggregateInput = {
    pending_id?: SortOrder
    drum_id?: SortOrder
    transport_id?: SortOrder
    assigned_distillation_id?: SortOrder
  }

  export type Stock_drumListRelationFilter = {
    every?: stock_drumWhereInput
    some?: stock_drumWhereInput
    none?: stock_drumWhereInput
  }

  export type Stock_drum_newListRelationFilter = {
    every?: stock_drum_newWhereInput
    some?: stock_drum_newWhereInput
    none?: stock_drum_newWhereInput
  }

  export type stock_drumOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type stock_drum_newOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type distillation_recordCountOrderByAggregateInput = {
    record_id?: SortOrder
    distillation_id?: SortOrder
    actual_start?: SortOrder
    actual_end?: SortOrder
    status?: SortOrder
    notes?: SortOrder
  }

  export type distillation_recordAvgOrderByAggregateInput = {
    record_id?: SortOrder
    distillation_id?: SortOrder
  }

  export type distillation_recordMaxOrderByAggregateInput = {
    record_id?: SortOrder
    distillation_id?: SortOrder
    actual_start?: SortOrder
    actual_end?: SortOrder
    status?: SortOrder
    notes?: SortOrder
  }

  export type distillation_recordMinOrderByAggregateInput = {
    record_id?: SortOrder
    distillation_id?: SortOrder
    actual_start?: SortOrder
    actual_end?: SortOrder
    status?: SortOrder
    notes?: SortOrder
  }

  export type distillation_recordSumOrderByAggregateInput = {
    record_id?: SortOrder
    distillation_id?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Distillation_pending_assignmentListRelationFilter = {
    every?: distillation_pending_assignmentWhereInput
    some?: distillation_pending_assignmentWhereInput
    none?: distillation_pending_assignmentWhereInput
  }

  export type Distillation_recordNullableScalarRelationFilter = {
    is?: distillation_recordWhereInput | null
    isNot?: distillation_recordWhereInput | null
  }

  export type Ref_stillsScalarRelationFilter = {
    is?: ref_stillsWhereInput
    isNot?: ref_stillsWhereInput
  }

  export type Distillation_schedule_itemsListRelationFilter = {
    every?: distillation_schedule_itemsWhereInput
    some?: distillation_schedule_itemsWhereInput
    none?: distillation_schedule_itemsWhereInput
  }

  export type Log_load_stillListRelationFilter = {
    every?: log_load_stillWhereInput
    some?: log_load_stillWhereInput
    none?: log_load_stillWhereInput
  }

  export type Log_start_distillationNullableScalarRelationFilter = {
    is?: log_start_distillationWhereInput | null
    isNot?: log_start_distillationWhereInput | null
  }

  export type Log_transport_drumListRelationFilter = {
    every?: log_transport_drumWhereInput
    some?: log_transport_drumWhereInput
    none?: log_transport_drumWhereInput
  }

  export type Log_volume_transferListRelationFilter = {
    every?: log_volume_transferWhereInput
    some?: log_volume_transferWhereInput
    none?: log_volume_transferWhereInput
  }

  export type distillation_pending_assignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type distillation_schedule_itemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type log_load_stillOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type log_transport_drumOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type log_volume_transferOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type distillation_scheduleCountOrderByAggregateInput = {
    distillation_id?: SortOrder
    scheduled_date?: SortOrder
    still_id?: SortOrder
    expected_drum_qty?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type distillation_scheduleAvgOrderByAggregateInput = {
    distillation_id?: SortOrder
    still_id?: SortOrder
    expected_drum_qty?: SortOrder
  }

  export type distillation_scheduleMaxOrderByAggregateInput = {
    distillation_id?: SortOrder
    scheduled_date?: SortOrder
    still_id?: SortOrder
    expected_drum_qty?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type distillation_scheduleMinOrderByAggregateInput = {
    distillation_id?: SortOrder
    scheduled_date?: SortOrder
    still_id?: SortOrder
    expected_drum_qty?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type distillation_scheduleSumOrderByAggregateInput = {
    distillation_id?: SortOrder
    still_id?: SortOrder
    expected_drum_qty?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type Distillation_scheduleScalarRelationFilter = {
    is?: distillation_scheduleWhereInput
    isNot?: distillation_scheduleWhereInput
  }

  export type Stock_newNullableScalarRelationFilter = {
    is?: stock_newWhereInput | null
    isNot?: stock_newWhereInput | null
  }

  export type Stock_reproNullableScalarRelationFilter = {
    is?: stock_reproWhereInput | null
    isNot?: stock_reproWhereInput | null
  }

  export type Stock_activityListRelationFilter = {
    every?: stock_activityWhereInput
    some?: stock_activityWhereInput
    none?: stock_activityWhereInput
  }

  export type stock_activityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type distillation_schedule_itemsCountOrderByAggregateInput = {
    details_id?: SortOrder
    distillation_id?: SortOrder
    new_stock_id?: SortOrder
    repro_stock_id?: SortOrder
    drum_quantity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type distillation_schedule_itemsAvgOrderByAggregateInput = {
    details_id?: SortOrder
    distillation_id?: SortOrder
    new_stock_id?: SortOrder
    repro_stock_id?: SortOrder
    drum_quantity?: SortOrder
  }

  export type distillation_schedule_itemsMaxOrderByAggregateInput = {
    details_id?: SortOrder
    distillation_id?: SortOrder
    new_stock_id?: SortOrder
    repro_stock_id?: SortOrder
    drum_quantity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type distillation_schedule_itemsMinOrderByAggregateInput = {
    details_id?: SortOrder
    distillation_id?: SortOrder
    new_stock_id?: SortOrder
    repro_stock_id?: SortOrder
    drum_quantity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type distillation_schedule_itemsSumOrderByAggregateInput = {
    details_id?: SortOrder
    distillation_id?: SortOrder
    new_stock_id?: SortOrder
    repro_stock_id?: SortOrder
    drum_quantity?: SortOrder
  }

  export type drumsCountOrderByAggregateInput = {
    old_id?: SortOrder
    material?: SortOrder
    batch_code?: SortOrder
    id?: SortOrder
    supplier?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    site?: SortOrder
    date_ordered?: SortOrder
    chemical_group?: SortOrder
    material_code?: SortOrder
  }

  export type drumsAvgOrderByAggregateInput = {
    old_id?: SortOrder
    id?: SortOrder
  }

  export type drumsMaxOrderByAggregateInput = {
    old_id?: SortOrder
    material?: SortOrder
    batch_code?: SortOrder
    id?: SortOrder
    supplier?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    site?: SortOrder
    date_ordered?: SortOrder
    chemical_group?: SortOrder
    material_code?: SortOrder
  }

  export type drumsMinOrderByAggregateInput = {
    old_id?: SortOrder
    material?: SortOrder
    batch_code?: SortOrder
    id?: SortOrder
    supplier?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    site?: SortOrder
    date_ordered?: SortOrder
    chemical_group?: SortOrder
    material_code?: SortOrder
  }

  export type drumsSumOrderByAggregateInput = {
    old_id?: SortOrder
    id?: SortOrder
  }

  export type log_drum_decommissionCountOrderByAggregateInput = {
    decommission_id?: SortOrder
    drum_id?: SortOrder
    decommissioned_at?: SortOrder
    worker_id?: SortOrder
  }

  export type log_drum_decommissionAvgOrderByAggregateInput = {
    decommission_id?: SortOrder
    drum_id?: SortOrder
    worker_id?: SortOrder
  }

  export type log_drum_decommissionMaxOrderByAggregateInput = {
    decommission_id?: SortOrder
    drum_id?: SortOrder
    decommissioned_at?: SortOrder
    worker_id?: SortOrder
  }

  export type log_drum_decommissionMinOrderByAggregateInput = {
    decommission_id?: SortOrder
    drum_id?: SortOrder
    decommissioned_at?: SortOrder
    worker_id?: SortOrder
  }

  export type log_drum_decommissionSumOrderByAggregateInput = {
    decommission_id?: SortOrder
    drum_id?: SortOrder
    worker_id?: SortOrder
  }

  export type Log_load_stillNullableScalarRelationFilter = {
    is?: log_load_stillWhereInput | null
    isNot?: log_load_stillWhereInput | null
  }

  export type Log_transport_drumNullableScalarRelationFilter = {
    is?: log_transport_drumWhereInput | null
    isNot?: log_transport_drumWhereInput | null
  }

  export type log_drum_scanCountOrderByAggregateInput = {
    scan_id?: SortOrder
    scanned_at?: SortOrder
    drum_id?: SortOrder
    user_id?: SortOrder
    scan_type?: SortOrder
    scan_status?: SortOrder
    error_message?: SortOrder
  }

  export type log_drum_scanAvgOrderByAggregateInput = {
    scan_id?: SortOrder
    drum_id?: SortOrder
    user_id?: SortOrder
  }

  export type log_drum_scanMaxOrderByAggregateInput = {
    scan_id?: SortOrder
    scanned_at?: SortOrder
    drum_id?: SortOrder
    user_id?: SortOrder
    scan_type?: SortOrder
    scan_status?: SortOrder
    error_message?: SortOrder
  }

  export type log_drum_scanMinOrderByAggregateInput = {
    scan_id?: SortOrder
    scanned_at?: SortOrder
    drum_id?: SortOrder
    user_id?: SortOrder
    scan_type?: SortOrder
    scan_status?: SortOrder
    error_message?: SortOrder
  }

  export type log_drum_scanSumOrderByAggregateInput = {
    scan_id?: SortOrder
    drum_id?: SortOrder
    user_id?: SortOrder
  }

  export type Log_drum_scanNullableScalarRelationFilter = {
    is?: log_drum_scanWhereInput | null
    isNot?: log_drum_scanWhereInput | null
  }

  export type log_load_stillCountOrderByAggregateInput = {
    loading_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    still_id?: SortOrder
    distillation_id?: SortOrder
    status?: SortOrder
  }

  export type log_load_stillAvgOrderByAggregateInput = {
    loading_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    still_id?: SortOrder
    distillation_id?: SortOrder
  }

  export type log_load_stillMaxOrderByAggregateInput = {
    loading_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    still_id?: SortOrder
    distillation_id?: SortOrder
    status?: SortOrder
  }

  export type log_load_stillMinOrderByAggregateInput = {
    loading_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    still_id?: SortOrder
    distillation_id?: SortOrder
    status?: SortOrder
  }

  export type log_load_stillSumOrderByAggregateInput = {
    loading_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    still_id?: SortOrder
    distillation_id?: SortOrder
  }

  export type log_start_distillationCountOrderByAggregateInput = {
    start_id?: SortOrder
    distillation_id?: SortOrder
    still_id?: SortOrder
    worker_id?: SortOrder
    status?: SortOrder
  }

  export type log_start_distillationAvgOrderByAggregateInput = {
    start_id?: SortOrder
    distillation_id?: SortOrder
    still_id?: SortOrder
    worker_id?: SortOrder
  }

  export type log_start_distillationMaxOrderByAggregateInput = {
    start_id?: SortOrder
    distillation_id?: SortOrder
    still_id?: SortOrder
    worker_id?: SortOrder
    status?: SortOrder
  }

  export type log_start_distillationMinOrderByAggregateInput = {
    start_id?: SortOrder
    distillation_id?: SortOrder
    still_id?: SortOrder
    worker_id?: SortOrder
    status?: SortOrder
  }

  export type log_start_distillationSumOrderByAggregateInput = {
    start_id?: SortOrder
    distillation_id?: SortOrder
    still_id?: SortOrder
    worker_id?: SortOrder
  }

  export type log_transport_drumCountOrderByAggregateInput = {
    transport_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    transported_at?: SortOrder
    distillation_id?: SortOrder
    status?: SortOrder
  }

  export type log_transport_drumAvgOrderByAggregateInput = {
    transport_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
  }

  export type log_transport_drumMaxOrderByAggregateInput = {
    transport_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    transported_at?: SortOrder
    distillation_id?: SortOrder
    status?: SortOrder
  }

  export type log_transport_drumMinOrderByAggregateInput = {
    transport_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    transported_at?: SortOrder
    distillation_id?: SortOrder
    status?: SortOrder
  }

  export type log_transport_drumSumOrderByAggregateInput = {
    transport_id?: SortOrder
    scan_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
  }

  export type Stock_drumScalarRelationFilter = {
    is?: stock_drumWhereInput
    isNot?: stock_drumWhereInput
  }

  export type log_volume_transferCountOrderByAggregateInput = {
    transfer_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
    volume_transferred?: SortOrder
    remaining_volume?: SortOrder
    usage_type?: SortOrder
    transfer_timestamp?: SortOrder
    worker_id?: SortOrder
  }

  export type log_volume_transferAvgOrderByAggregateInput = {
    transfer_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
    volume_transferred?: SortOrder
    remaining_volume?: SortOrder
    worker_id?: SortOrder
  }

  export type log_volume_transferMaxOrderByAggregateInput = {
    transfer_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
    volume_transferred?: SortOrder
    remaining_volume?: SortOrder
    usage_type?: SortOrder
    transfer_timestamp?: SortOrder
    worker_id?: SortOrder
  }

  export type log_volume_transferMinOrderByAggregateInput = {
    transfer_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
    volume_transferred?: SortOrder
    remaining_volume?: SortOrder
    usage_type?: SortOrder
    transfer_timestamp?: SortOrder
    worker_id?: SortOrder
  }

  export type log_volume_transferSumOrderByAggregateInput = {
    transfer_id?: SortOrder
    drum_id?: SortOrder
    distillation_id?: SortOrder
    volume_transferred?: SortOrder
    remaining_volume?: SortOrder
    worker_id?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type notificationCountOrderByAggregateInput = {
    notification_id?: SortOrder
    message?: SortOrder
    message_type?: SortOrder
    private?: SortOrder
    audience_type?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    created_by?: SortOrder
  }

  export type notificationAvgOrderByAggregateInput = {
    notification_id?: SortOrder
  }

  export type notificationMaxOrderByAggregateInput = {
    notification_id?: SortOrder
    message?: SortOrder
    message_type?: SortOrder
    private?: SortOrder
    audience_type?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    created_by?: SortOrder
  }

  export type notificationMinOrderByAggregateInput = {
    notification_id?: SortOrder
    message?: SortOrder
    message_type?: SortOrder
    private?: SortOrder
    audience_type?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    created_by?: SortOrder
  }

  export type notificationSumOrderByAggregateInput = {
    notification_id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type Ref_materialsScalarRelationFilter = {
    is?: ref_materialsWhereInput
    isNot?: ref_materialsWhereInput
  }

  export type Stock_orderScalarRelationFilter = {
    is?: stock_orderWhereInput
    isNot?: stock_orderWhereInput
  }

  export type Order_detail_stock_activityListRelationFilter = {
    every?: order_detail_stock_activityWhereInput
    some?: order_detail_stock_activityWhereInput
    none?: order_detail_stock_activityWhereInput
  }

  export type order_detail_stock_activityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type order_detailCountOrderByAggregateInput = {
    detail_id?: SortOrder
    order_id?: SortOrder
    batch_code?: SortOrder
    material_id?: SortOrder
    material_name?: SortOrder
    drum_quantity?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    material_code?: SortOrder
  }

  export type order_detailAvgOrderByAggregateInput = {
    detail_id?: SortOrder
    order_id?: SortOrder
    material_id?: SortOrder
    drum_quantity?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
  }

  export type order_detailMaxOrderByAggregateInput = {
    detail_id?: SortOrder
    order_id?: SortOrder
    batch_code?: SortOrder
    material_id?: SortOrder
    material_name?: SortOrder
    drum_quantity?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    material_code?: SortOrder
  }

  export type order_detailMinOrderByAggregateInput = {
    detail_id?: SortOrder
    order_id?: SortOrder
    batch_code?: SortOrder
    material_id?: SortOrder
    material_name?: SortOrder
    drum_quantity?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    material_code?: SortOrder
  }

  export type order_detailSumOrderByAggregateInput = {
    detail_id?: SortOrder
    order_id?: SortOrder
    material_id?: SortOrder
    drum_quantity?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type Bottle_sizesScalarRelationFilter = {
    is?: bottle_sizesWhereInput
    isNot?: bottle_sizesWhereInput
  }

  export type Ref_productScalarRelationFilter = {
    is?: ref_productWhereInput
    isNot?: ref_productWhereInput
  }

  export type product_pricesProduct_idBottle_size_idCompoundUniqueInput = {
    product_id: number
    bottle_size_id: number
  }

  export type product_pricesCountOrderByAggregateInput = {
    product_id?: SortOrder
    bottle_size_id?: SortOrder
    price?: SortOrder
  }

  export type product_pricesAvgOrderByAggregateInput = {
    product_id?: SortOrder
    bottle_size_id?: SortOrder
    price?: SortOrder
  }

  export type product_pricesMaxOrderByAggregateInput = {
    product_id?: SortOrder
    bottle_size_id?: SortOrder
    price?: SortOrder
  }

  export type product_pricesMinOrderByAggregateInput = {
    product_id?: SortOrder
    bottle_size_id?: SortOrder
    price?: SortOrder
  }

  export type product_pricesSumOrderByAggregateInput = {
    product_id?: SortOrder
    bottle_size_id?: SortOrder
    price?: SortOrder
  }

  export type raw_materialsCountOrderByAggregateInput = {
    material_id?: SortOrder
    material_name?: SortOrder
    cas_number?: SortOrder
    chemical_group?: SortOrder
    description?: SortOrder
    un_code?: SortOrder
    flash_point?: SortOrder
    material_code?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
    chemical_props?: SortOrder
  }

  export type raw_materialsAvgOrderByAggregateInput = {
    material_id?: SortOrder
    flash_point?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
  }

  export type raw_materialsMaxOrderByAggregateInput = {
    material_id?: SortOrder
    material_name?: SortOrder
    cas_number?: SortOrder
    chemical_group?: SortOrder
    description?: SortOrder
    un_code?: SortOrder
    flash_point?: SortOrder
    material_code?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
  }

  export type raw_materialsMinOrderByAggregateInput = {
    material_id?: SortOrder
    material_name?: SortOrder
    cas_number?: SortOrder
    chemical_group?: SortOrder
    description?: SortOrder
    un_code?: SortOrder
    flash_point?: SortOrder
    material_code?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
  }

  export type raw_materialsSumOrderByAggregateInput = {
    material_id?: SortOrder
    flash_point?: SortOrder
    drum_weight?: SortOrder
    drum_volume?: SortOrder
  }

  export type Order_detailListRelationFilter = {
    every?: order_detailWhereInput
    some?: order_detailWhereInput
    none?: order_detailWhereInput
  }

  export type Raw_stock_historyListRelationFilter = {
    every?: raw_stock_historyWhereInput
    some?: raw_stock_historyWhereInput
    none?: raw_stock_historyWhereInput
  }

  export type Chemical_group_kindScalarRelationFilter = {
    is?: chemical_group_kindWhereInput
    isNot?: chemical_group_kindWhereInput
  }

  export type Ref_productListRelationFilter = {
    every?: ref_productWhereInput
    some?: ref_productWhereInput
    none?: ref_productWhereInput
  }

  export type Ref_supplier_materialListRelationFilter = {
    every?: ref_supplier_materialWhereInput
    some?: ref_supplier_materialWhereInput
    none?: ref_supplier_materialWhereInput
  }

  export type Stock_historyListRelationFilter = {
    every?: stock_historyWhereInput
    some?: stock_historyWhereInput
    none?: stock_historyWhereInput
  }

  export type Stock_newListRelationFilter = {
    every?: stock_newWhereInput
    some?: stock_newWhereInput
    none?: stock_newWhereInput
  }

  export type Stock_reproListRelationFilter = {
    every?: stock_reproWhereInput
    some?: stock_reproWhereInput
    none?: stock_reproWhereInput
  }

  export type order_detailOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type raw_stock_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ref_productOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ref_supplier_materialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type stock_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type stock_newOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type stock_reproOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ref_materialsCountOrderByAggregateInput = {
    value?: SortOrder
    code?: SortOrder
    chemical_group?: SortOrder
    cas_number?: SortOrder
  }

  export type ref_materialsMaxOrderByAggregateInput = {
    value?: SortOrder
    code?: SortOrder
    chemical_group?: SortOrder
    cas_number?: SortOrder
  }

  export type ref_materialsMinOrderByAggregateInput = {
    value?: SortOrder
    code?: SortOrder
    chemical_group?: SortOrder
    cas_number?: SortOrder
  }

  export type Active_contextListRelationFilter = {
    every?: active_contextWhereInput
    some?: active_contextWhereInput
    none?: active_contextWhereInput
  }

  export type Distillation_scheduleListRelationFilter = {
    every?: distillation_scheduleWhereInput
    some?: distillation_scheduleWhereInput
    none?: distillation_scheduleWhereInput
  }

  export type Log_start_distillationListRelationFilter = {
    every?: log_start_distillationWhereInput
    some?: log_start_distillationWhereInput
    none?: log_start_distillationWhereInput
  }

  export type active_contextOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type distillation_scheduleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type log_start_distillationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ref_stillsCountOrderByAggregateInput = {
    still_id?: SortOrder
    still_code?: SortOrder
    max_capacity?: SortOrder
    power_rating_kw?: SortOrder
    lab_id?: SortOrder
    is_vacuum?: SortOrder
    is_operational?: SortOrder
    description?: SortOrder
  }

  export type ref_stillsAvgOrderByAggregateInput = {
    still_id?: SortOrder
    max_capacity?: SortOrder
    power_rating_kw?: SortOrder
    lab_id?: SortOrder
  }

  export type ref_stillsMaxOrderByAggregateInput = {
    still_id?: SortOrder
    still_code?: SortOrder
    max_capacity?: SortOrder
    power_rating_kw?: SortOrder
    lab_id?: SortOrder
    is_vacuum?: SortOrder
    is_operational?: SortOrder
    description?: SortOrder
  }

  export type ref_stillsMinOrderByAggregateInput = {
    still_id?: SortOrder
    still_code?: SortOrder
    max_capacity?: SortOrder
    power_rating_kw?: SortOrder
    lab_id?: SortOrder
    is_vacuum?: SortOrder
    is_operational?: SortOrder
    description?: SortOrder
  }

  export type ref_stillsSumOrderByAggregateInput = {
    still_id?: SortOrder
    max_capacity?: SortOrder
    power_rating_kw?: SortOrder
    lab_id?: SortOrder
  }

  export type Stock_orderListRelationFilter = {
    every?: stock_orderWhereInput
    some?: stock_orderWhereInput
    none?: stock_orderWhereInput
  }

  export type stock_orderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ref_suppliersCountOrderByAggregateInput = {
    supplier_id?: SortOrder
    supplier_name?: SortOrder
    addr_1?: SortOrder
    addr_2?: SortOrder
    city?: SortOrder
    post_code?: SortOrder
    country_code?: SortOrder
  }

  export type ref_suppliersAvgOrderByAggregateInput = {
    supplier_id?: SortOrder
  }

  export type ref_suppliersMaxOrderByAggregateInput = {
    supplier_id?: SortOrder
    supplier_name?: SortOrder
    addr_1?: SortOrder
    addr_2?: SortOrder
    city?: SortOrder
    post_code?: SortOrder
    country_code?: SortOrder
  }

  export type ref_suppliersMinOrderByAggregateInput = {
    supplier_id?: SortOrder
    supplier_name?: SortOrder
    addr_1?: SortOrder
    addr_2?: SortOrder
    city?: SortOrder
    post_code?: SortOrder
    country_code?: SortOrder
  }

  export type ref_suppliersSumOrderByAggregateInput = {
    supplier_id?: SortOrder
  }

  export type session_settingsCountOrderByAggregateInput = {
    id?: SortOrder
    device_type?: SortOrder
    session_duration_seconds?: SortOrder
    inactivity_timeout_seconds?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type session_settingsAvgOrderByAggregateInput = {
    session_duration_seconds?: SortOrder
    inactivity_timeout_seconds?: SortOrder
  }

  export type session_settingsMaxOrderByAggregateInput = {
    id?: SortOrder
    device_type?: SortOrder
    session_duration_seconds?: SortOrder
    inactivity_timeout_seconds?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type session_settingsMinOrderByAggregateInput = {
    id?: SortOrder
    device_type?: SortOrder
    session_duration_seconds?: SortOrder
    inactivity_timeout_seconds?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type session_settingsSumOrderByAggregateInput = {
    session_duration_seconds?: SortOrder
    inactivity_timeout_seconds?: SortOrder
  }

  export type Log_drum_scanListRelationFilter = {
    every?: log_drum_scanWhereInput
    some?: log_drum_scanWhereInput
    none?: log_drum_scanWhereInput
  }

  export type Order_detailScalarRelationFilter = {
    is?: order_detailWhereInput
    isNot?: order_detailWhereInput
  }

  export type log_drum_scanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type stock_drumCountOrderByAggregateInput = {
    drum_id?: SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
    distillation_id?: SortOrder
  }

  export type stock_drumAvgOrderByAggregateInput = {
    drum_id?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrder
    distillation_id?: SortOrder
  }

  export type stock_drumMaxOrderByAggregateInput = {
    drum_id?: SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
    distillation_id?: SortOrder
  }

  export type stock_drumMinOrderByAggregateInput = {
    drum_id?: SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
    distillation_id?: SortOrder
  }

  export type stock_drumSumOrderByAggregateInput = {
    drum_id?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrder
    distillation_id?: SortOrder
  }

  export type Ref_materialsNullableScalarRelationFilter = {
    is?: ref_materialsWhereInput | null
    isNot?: ref_materialsWhereInput | null
  }

  export type stock_drum_newCountOrderByAggregateInput = {
    drum_id?: SortOrder
    material_code?: SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    status?: SortOrder
    fill_level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    distillation_id?: SortOrder
  }

  export type stock_drum_newAvgOrderByAggregateInput = {
    drum_id?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrder
    distillation_id?: SortOrder
  }

  export type stock_drum_newMaxOrderByAggregateInput = {
    drum_id?: SortOrder
    material_code?: SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    status?: SortOrder
    fill_level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    distillation_id?: SortOrder
  }

  export type stock_drum_newMinOrderByAggregateInput = {
    drum_id?: SortOrder
    material_code?: SortOrder
    drum_type?: SortOrder
    order_detail_id?: SortOrder
    status?: SortOrder
    fill_level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    distillation_id?: SortOrder
  }

  export type stock_drum_newSumOrderByAggregateInput = {
    drum_id?: SortOrder
    order_detail_id?: SortOrder
    fill_level?: SortOrder
    distillation_id?: SortOrder
  }

  export type Ref_suppliersNullableScalarRelationFilter = {
    is?: ref_suppliersWhereInput | null
    isNot?: ref_suppliersWhereInput | null
  }

  export type stock_newCountOrderByAggregateInput = {
    stock_id?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
    batch_code?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type stock_newAvgOrderByAggregateInput = {
    stock_id?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
  }

  export type stock_newMaxOrderByAggregateInput = {
    stock_id?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
    batch_code?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type stock_newMinOrderByAggregateInput = {
    stock_id?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
    batch_code?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type stock_newSumOrderByAggregateInput = {
    stock_id?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
  }

  export type Ref_suppliersScalarRelationFilter = {
    is?: ref_suppliersWhereInput
    isNot?: ref_suppliersWhereInput
  }

  export type stock_orderCountOrderByAggregateInput = {
    order_id?: SortOrder
    po_number?: SortOrder
    date_ordered?: SortOrder
    supplier_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type stock_orderAvgOrderByAggregateInput = {
    order_id?: SortOrder
    supplier_id?: SortOrder
  }

  export type stock_orderMaxOrderByAggregateInput = {
    order_id?: SortOrder
    po_number?: SortOrder
    date_ordered?: SortOrder
    supplier_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type stock_orderMinOrderByAggregateInput = {
    order_id?: SortOrder
    po_number?: SortOrder
    date_ordered?: SortOrder
    supplier_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type stock_orderSumOrderByAggregateInput = {
    order_id?: SortOrder
    supplier_id?: SortOrder
  }

  export type stock_reproCountOrderByAggregateInput = {
    stock_id?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    quantity?: SortOrder
    material_description?: SortOrder
    material_code?: SortOrder
  }

  export type stock_reproAvgOrderByAggregateInput = {
    stock_id?: SortOrder
    quantity?: SortOrder
  }

  export type stock_reproMaxOrderByAggregateInput = {
    stock_id?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    quantity?: SortOrder
    material_description?: SortOrder
    material_code?: SortOrder
  }

  export type stock_reproMinOrderByAggregateInput = {
    stock_id?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    quantity?: SortOrder
    material_description?: SortOrder
    material_code?: SortOrder
  }

  export type stock_reproSumOrderByAggregateInput = {
    stock_id?: SortOrder
    quantity?: SortOrder
  }

  export type user_profilesCountOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    avatar_url?: SortOrder
  }

  export type user_profilesMaxOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    avatar_url?: SortOrder
  }

  export type user_profilesMinOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email?: SortOrder
    avatar_url?: SortOrder
  }

  export type user_rolesUser_idRoleCompoundUniqueInput = {
    user_id: string
    role: string
  }

  export type user_rolesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
  }

  export type user_rolesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
  }

  export type user_rolesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type worker_passcodesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    worker_name?: SortOrder
    role?: SortOrder
    passcode?: SortOrder
    is_active?: SortOrder
    last_login_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type worker_passcodesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    worker_name?: SortOrder
    role?: SortOrder
    passcode?: SortOrder
    is_active?: SortOrder
    last_login_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type worker_passcodesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    worker_name?: SortOrder
    role?: SortOrder
    passcode?: SortOrder
    is_active?: SortOrder
    last_login_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_by?: SortOrder
    updated_by?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Stock_activityScalarRelationFilter = {
    is?: stock_activityWhereInput
    isNot?: stock_activityWhereInput
  }

  export type order_detail_stock_activityOrder_detail_idStock_activity_idCompoundUniqueInput = {
    order_detail_id: number
    stock_activity_id: number
  }

  export type order_detail_stock_activityCountOrderByAggregateInput = {
    id?: SortOrder
    order_detail_id?: SortOrder
    stock_activity_id?: SortOrder
    created_at?: SortOrder
  }

  export type order_detail_stock_activityAvgOrderByAggregateInput = {
    id?: SortOrder
    order_detail_id?: SortOrder
    stock_activity_id?: SortOrder
  }

  export type order_detail_stock_activityMaxOrderByAggregateInput = {
    id?: SortOrder
    order_detail_id?: SortOrder
    stock_activity_id?: SortOrder
    created_at?: SortOrder
  }

  export type order_detail_stock_activityMinOrderByAggregateInput = {
    id?: SortOrder
    order_detail_id?: SortOrder
    stock_activity_id?: SortOrder
    created_at?: SortOrder
  }

  export type order_detail_stock_activitySumOrderByAggregateInput = {
    id?: SortOrder
    order_detail_id?: SortOrder
    stock_activity_id?: SortOrder
  }

  export type raw_stock_historyCountOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    event_str?: SortOrder
    drum_type?: SortOrder
    no_events?: SortOrder
    notes_ids?: SortOrder
    notes_batch?: SortOrder
    source?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type raw_stock_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    no_events?: SortOrder
  }

  export type raw_stock_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    event_str?: SortOrder
    drum_type?: SortOrder
    no_events?: SortOrder
    notes_ids?: SortOrder
    notes_batch?: SortOrder
    source?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type raw_stock_historyMinOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    event_str?: SortOrder
    drum_type?: SortOrder
    no_events?: SortOrder
    notes_ids?: SortOrder
    notes_batch?: SortOrder
    source?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type raw_stock_historySumOrderByAggregateInput = {
    id?: SortOrder
    no_events?: SortOrder
  }

  export type Distillation_schedule_itemsNullableScalarRelationFilter = {
    is?: distillation_schedule_itemsWhereInput | null
    isNot?: distillation_schedule_itemsWhereInput | null
  }

  export type Order_detailNullableScalarRelationFilter = {
    is?: order_detailWhereInput | null
    isNot?: order_detailWhereInput | null
  }

  export type stock_activityCountOrderByAggregateInput = {
    id?: SortOrder
    activity_date?: SortOrder
    material_code?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrder
    batch_code?: SortOrder
    order_detail_id?: SortOrder
    distillation_detail_id?: SortOrder
    activity_type?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    source_record_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type stock_activityAvgOrderByAggregateInput = {
    id?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
    order_detail_id?: SortOrder
    distillation_detail_id?: SortOrder
    source_record_id?: SortOrder
  }

  export type stock_activityMaxOrderByAggregateInput = {
    id?: SortOrder
    activity_date?: SortOrder
    material_code?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrder
    batch_code?: SortOrder
    order_detail_id?: SortOrder
    distillation_detail_id?: SortOrder
    activity_type?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    source_record_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type stock_activityMinOrderByAggregateInput = {
    id?: SortOrder
    activity_date?: SortOrder
    material_code?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrder
    batch_code?: SortOrder
    order_detail_id?: SortOrder
    distillation_detail_id?: SortOrder
    activity_type?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    source_record_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type stock_activitySumOrderByAggregateInput = {
    id?: SortOrder
    supplier_id?: SortOrder
    quantity?: SortOrder
    order_detail_id?: SortOrder
    distillation_detail_id?: SortOrder
    source_record_id?: SortOrder
  }

  export type Raw_stock_historyNullableScalarRelationFilter = {
    is?: raw_stock_historyWhereInput | null
    isNot?: raw_stock_historyWhereInput | null
  }

  export type stock_historyCountOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    material_name?: SortOrder
    supplier_id?: SortOrder
    supplier_name?: SortOrder
    change?: SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrder
    batch_code?: SortOrder
    source_record_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type stock_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    supplier_id?: SortOrder
    change?: SortOrder
    source_record_id?: SortOrder
  }

  export type stock_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    material_name?: SortOrder
    supplier_id?: SortOrder
    supplier_name?: SortOrder
    change?: SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrder
    batch_code?: SortOrder
    source_record_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type stock_historyMinOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    material_name?: SortOrder
    supplier_id?: SortOrder
    supplier_name?: SortOrder
    change?: SortOrder
    drum_type?: SortOrder
    drum_ids?: SortOrder
    batch_code?: SortOrder
    source_record_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type stock_historySumOrderByAggregateInput = {
    id?: SortOrder
    supplier_id?: SortOrder
    change?: SortOrder
    source_record_id?: SortOrder
  }

  export type ref_productCountOrderByAggregateInput = {
    product_id?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    raw_material_id?: SortOrder
    grade?: SortOrder
    material_code?: SortOrder
  }

  export type ref_productAvgOrderByAggregateInput = {
    product_id?: SortOrder
    raw_material_id?: SortOrder
  }

  export type ref_productMaxOrderByAggregateInput = {
    product_id?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    raw_material_id?: SortOrder
    grade?: SortOrder
    material_code?: SortOrder
  }

  export type ref_productMinOrderByAggregateInput = {
    product_id?: SortOrder
    name?: SortOrder
    sku?: SortOrder
    raw_material_id?: SortOrder
    grade?: SortOrder
    material_code?: SortOrder
  }

  export type ref_productSumOrderByAggregateInput = {
    product_id?: SortOrder
    raw_material_id?: SortOrder
  }

  export type ref_supplier_materialSupplier_idMaterial_codeCompoundUniqueInput = {
    supplier_id: number
    material_code: string
  }

  export type ref_supplier_materialCountOrderByAggregateInput = {
    supplier_id?: SortOrder
    material_name?: SortOrder
    quantity?: SortOrder
    location?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type ref_supplier_materialAvgOrderByAggregateInput = {
    supplier_id?: SortOrder
    quantity?: SortOrder
  }

  export type ref_supplier_materialMaxOrderByAggregateInput = {
    supplier_id?: SortOrder
    material_name?: SortOrder
    quantity?: SortOrder
    location?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type ref_supplier_materialMinOrderByAggregateInput = {
    supplier_id?: SortOrder
    material_name?: SortOrder
    quantity?: SortOrder
    location?: SortOrder
    updated_at?: SortOrder
    material_code?: SortOrder
  }

  export type ref_supplier_materialSumOrderByAggregateInput = {
    supplier_id?: SortOrder
    quantity?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type user_queriesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    query_name?: SortOrder
    created_at?: SortOrder
    last_executed_at?: SortOrder
    execution_count?: SortOrder
    selected_table?: SortOrder
    selected_columns?: SortOrder
    filters?: SortOrder
    sorts?: SortOrder
    join_table?: SortOrder
    join_type?: SortOrder
    join_condition?: SortOrder
    generated_sql?: SortOrder
    tags?: SortOrder
  }

  export type user_queriesAvgOrderByAggregateInput = {
    execution_count?: SortOrder
  }

  export type user_queriesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    query_name?: SortOrder
    created_at?: SortOrder
    last_executed_at?: SortOrder
    execution_count?: SortOrder
    selected_table?: SortOrder
    join_table?: SortOrder
    join_type?: SortOrder
    generated_sql?: SortOrder
  }

  export type user_queriesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    query_name?: SortOrder
    created_at?: SortOrder
    last_executed_at?: SortOrder
    execution_count?: SortOrder
    selected_table?: SortOrder
    join_table?: SortOrder
    join_type?: SortOrder
    generated_sql?: SortOrder
  }

  export type user_queriesSumOrderByAggregateInput = {
    execution_count?: SortOrder
  }

  export type ref_stillsCreateNestedOneWithoutActive_contextInput = {
    create?: XOR<ref_stillsCreateWithoutActive_contextInput, ref_stillsUncheckedCreateWithoutActive_contextInput>
    connectOrCreate?: ref_stillsCreateOrConnectWithoutActive_contextInput
    connect?: ref_stillsWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ref_stillsUpdateOneWithoutActive_contextNestedInput = {
    create?: XOR<ref_stillsCreateWithoutActive_contextInput, ref_stillsUncheckedCreateWithoutActive_contextInput>
    connectOrCreate?: ref_stillsCreateOrConnectWithoutActive_contextInput
    upsert?: ref_stillsUpsertWithoutActive_contextInput
    disconnect?: ref_stillsWhereInput | boolean
    delete?: ref_stillsWhereInput | boolean
    connect?: ref_stillsWhereUniqueInput
    update?: XOR<XOR<ref_stillsUpdateToOneWithWhereWithoutActive_contextInput, ref_stillsUpdateWithoutActive_contextInput>, ref_stillsUncheckedUpdateWithoutActive_contextInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type product_pricesCreateNestedManyWithoutBottle_sizesInput = {
    create?: XOR<product_pricesCreateWithoutBottle_sizesInput, product_pricesUncheckedCreateWithoutBottle_sizesInput> | product_pricesCreateWithoutBottle_sizesInput[] | product_pricesUncheckedCreateWithoutBottle_sizesInput[]
    connectOrCreate?: product_pricesCreateOrConnectWithoutBottle_sizesInput | product_pricesCreateOrConnectWithoutBottle_sizesInput[]
    createMany?: product_pricesCreateManyBottle_sizesInputEnvelope
    connect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
  }

  export type product_pricesUncheckedCreateNestedManyWithoutBottle_sizesInput = {
    create?: XOR<product_pricesCreateWithoutBottle_sizesInput, product_pricesUncheckedCreateWithoutBottle_sizesInput> | product_pricesCreateWithoutBottle_sizesInput[] | product_pricesUncheckedCreateWithoutBottle_sizesInput[]
    connectOrCreate?: product_pricesCreateOrConnectWithoutBottle_sizesInput | product_pricesCreateOrConnectWithoutBottle_sizesInput[]
    createMany?: product_pricesCreateManyBottle_sizesInputEnvelope
    connect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
  }

  export type product_pricesUpdateManyWithoutBottle_sizesNestedInput = {
    create?: XOR<product_pricesCreateWithoutBottle_sizesInput, product_pricesUncheckedCreateWithoutBottle_sizesInput> | product_pricesCreateWithoutBottle_sizesInput[] | product_pricesUncheckedCreateWithoutBottle_sizesInput[]
    connectOrCreate?: product_pricesCreateOrConnectWithoutBottle_sizesInput | product_pricesCreateOrConnectWithoutBottle_sizesInput[]
    upsert?: product_pricesUpsertWithWhereUniqueWithoutBottle_sizesInput | product_pricesUpsertWithWhereUniqueWithoutBottle_sizesInput[]
    createMany?: product_pricesCreateManyBottle_sizesInputEnvelope
    set?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    disconnect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    delete?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    connect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    update?: product_pricesUpdateWithWhereUniqueWithoutBottle_sizesInput | product_pricesUpdateWithWhereUniqueWithoutBottle_sizesInput[]
    updateMany?: product_pricesUpdateManyWithWhereWithoutBottle_sizesInput | product_pricesUpdateManyWithWhereWithoutBottle_sizesInput[]
    deleteMany?: product_pricesScalarWhereInput | product_pricesScalarWhereInput[]
  }

  export type product_pricesUncheckedUpdateManyWithoutBottle_sizesNestedInput = {
    create?: XOR<product_pricesCreateWithoutBottle_sizesInput, product_pricesUncheckedCreateWithoutBottle_sizesInput> | product_pricesCreateWithoutBottle_sizesInput[] | product_pricesUncheckedCreateWithoutBottle_sizesInput[]
    connectOrCreate?: product_pricesCreateOrConnectWithoutBottle_sizesInput | product_pricesCreateOrConnectWithoutBottle_sizesInput[]
    upsert?: product_pricesUpsertWithWhereUniqueWithoutBottle_sizesInput | product_pricesUpsertWithWhereUniqueWithoutBottle_sizesInput[]
    createMany?: product_pricesCreateManyBottle_sizesInputEnvelope
    set?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    disconnect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    delete?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    connect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    update?: product_pricesUpdateWithWhereUniqueWithoutBottle_sizesInput | product_pricesUpdateWithWhereUniqueWithoutBottle_sizesInput[]
    updateMany?: product_pricesUpdateManyWithWhereWithoutBottle_sizesInput | product_pricesUpdateManyWithWhereWithoutBottle_sizesInput[]
    deleteMany?: product_pricesScalarWhereInput | product_pricesScalarWhereInput[]
  }

  export type ref_materialsCreateNestedManyWithoutChemical_group_kindInput = {
    create?: XOR<ref_materialsCreateWithoutChemical_group_kindInput, ref_materialsUncheckedCreateWithoutChemical_group_kindInput> | ref_materialsCreateWithoutChemical_group_kindInput[] | ref_materialsUncheckedCreateWithoutChemical_group_kindInput[]
    connectOrCreate?: ref_materialsCreateOrConnectWithoutChemical_group_kindInput | ref_materialsCreateOrConnectWithoutChemical_group_kindInput[]
    createMany?: ref_materialsCreateManyChemical_group_kindInputEnvelope
    connect?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
  }

  export type ref_materialsUncheckedCreateNestedManyWithoutChemical_group_kindInput = {
    create?: XOR<ref_materialsCreateWithoutChemical_group_kindInput, ref_materialsUncheckedCreateWithoutChemical_group_kindInput> | ref_materialsCreateWithoutChemical_group_kindInput[] | ref_materialsUncheckedCreateWithoutChemical_group_kindInput[]
    connectOrCreate?: ref_materialsCreateOrConnectWithoutChemical_group_kindInput | ref_materialsCreateOrConnectWithoutChemical_group_kindInput[]
    createMany?: ref_materialsCreateManyChemical_group_kindInputEnvelope
    connect?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
  }

  export type ref_materialsUpdateManyWithoutChemical_group_kindNestedInput = {
    create?: XOR<ref_materialsCreateWithoutChemical_group_kindInput, ref_materialsUncheckedCreateWithoutChemical_group_kindInput> | ref_materialsCreateWithoutChemical_group_kindInput[] | ref_materialsUncheckedCreateWithoutChemical_group_kindInput[]
    connectOrCreate?: ref_materialsCreateOrConnectWithoutChemical_group_kindInput | ref_materialsCreateOrConnectWithoutChemical_group_kindInput[]
    upsert?: ref_materialsUpsertWithWhereUniqueWithoutChemical_group_kindInput | ref_materialsUpsertWithWhereUniqueWithoutChemical_group_kindInput[]
    createMany?: ref_materialsCreateManyChemical_group_kindInputEnvelope
    set?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
    disconnect?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
    delete?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
    connect?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
    update?: ref_materialsUpdateWithWhereUniqueWithoutChemical_group_kindInput | ref_materialsUpdateWithWhereUniqueWithoutChemical_group_kindInput[]
    updateMany?: ref_materialsUpdateManyWithWhereWithoutChemical_group_kindInput | ref_materialsUpdateManyWithWhereWithoutChemical_group_kindInput[]
    deleteMany?: ref_materialsScalarWhereInput | ref_materialsScalarWhereInput[]
  }

  export type ref_materialsUncheckedUpdateManyWithoutChemical_group_kindNestedInput = {
    create?: XOR<ref_materialsCreateWithoutChemical_group_kindInput, ref_materialsUncheckedCreateWithoutChemical_group_kindInput> | ref_materialsCreateWithoutChemical_group_kindInput[] | ref_materialsUncheckedCreateWithoutChemical_group_kindInput[]
    connectOrCreate?: ref_materialsCreateOrConnectWithoutChemical_group_kindInput | ref_materialsCreateOrConnectWithoutChemical_group_kindInput[]
    upsert?: ref_materialsUpsertWithWhereUniqueWithoutChemical_group_kindInput | ref_materialsUpsertWithWhereUniqueWithoutChemical_group_kindInput[]
    createMany?: ref_materialsCreateManyChemical_group_kindInputEnvelope
    set?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
    disconnect?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
    delete?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
    connect?: ref_materialsWhereUniqueInput | ref_materialsWhereUniqueInput[]
    update?: ref_materialsUpdateWithWhereUniqueWithoutChemical_group_kindInput | ref_materialsUpdateWithWhereUniqueWithoutChemical_group_kindInput[]
    updateMany?: ref_materialsUpdateManyWithWhereWithoutChemical_group_kindInput | ref_materialsUpdateManyWithWhereWithoutChemical_group_kindInput[]
    deleteMany?: ref_materialsScalarWhereInput | ref_materialsScalarWhereInput[]
  }

  export type distillation_scheduleCreateNestedOneWithoutDistillation_pending_assignmentInput = {
    create?: XOR<distillation_scheduleCreateWithoutDistillation_pending_assignmentInput, distillation_scheduleUncheckedCreateWithoutDistillation_pending_assignmentInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutDistillation_pending_assignmentInput
    connect?: distillation_scheduleWhereUniqueInput
  }

  export type stock_drumCreateNestedOneWithoutDistillation_pending_assignmentInput = {
    create?: XOR<stock_drumCreateWithoutDistillation_pending_assignmentInput, stock_drumUncheckedCreateWithoutDistillation_pending_assignmentInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutDistillation_pending_assignmentInput
    connect?: stock_drumWhereUniqueInput
  }

  export type log_transport_drumCreateNestedOneWithoutDistillation_pending_assignmentInput = {
    create?: XOR<log_transport_drumCreateWithoutDistillation_pending_assignmentInput, log_transport_drumUncheckedCreateWithoutDistillation_pending_assignmentInput>
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutDistillation_pending_assignmentInput
    connect?: log_transport_drumWhereUniqueInput
  }

  export type distillation_scheduleUpdateOneWithoutDistillation_pending_assignmentNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutDistillation_pending_assignmentInput, distillation_scheduleUncheckedCreateWithoutDistillation_pending_assignmentInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutDistillation_pending_assignmentInput
    upsert?: distillation_scheduleUpsertWithoutDistillation_pending_assignmentInput
    disconnect?: distillation_scheduleWhereInput | boolean
    delete?: distillation_scheduleWhereInput | boolean
    connect?: distillation_scheduleWhereUniqueInput
    update?: XOR<XOR<distillation_scheduleUpdateToOneWithWhereWithoutDistillation_pending_assignmentInput, distillation_scheduleUpdateWithoutDistillation_pending_assignmentInput>, distillation_scheduleUncheckedUpdateWithoutDistillation_pending_assignmentInput>
  }

  export type stock_drumUpdateOneWithoutDistillation_pending_assignmentNestedInput = {
    create?: XOR<stock_drumCreateWithoutDistillation_pending_assignmentInput, stock_drumUncheckedCreateWithoutDistillation_pending_assignmentInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutDistillation_pending_assignmentInput
    upsert?: stock_drumUpsertWithoutDistillation_pending_assignmentInput
    disconnect?: stock_drumWhereInput | boolean
    delete?: stock_drumWhereInput | boolean
    connect?: stock_drumWhereUniqueInput
    update?: XOR<XOR<stock_drumUpdateToOneWithWhereWithoutDistillation_pending_assignmentInput, stock_drumUpdateWithoutDistillation_pending_assignmentInput>, stock_drumUncheckedUpdateWithoutDistillation_pending_assignmentInput>
  }

  export type log_transport_drumUpdateOneRequiredWithoutDistillation_pending_assignmentNestedInput = {
    create?: XOR<log_transport_drumCreateWithoutDistillation_pending_assignmentInput, log_transport_drumUncheckedCreateWithoutDistillation_pending_assignmentInput>
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutDistillation_pending_assignmentInput
    upsert?: log_transport_drumUpsertWithoutDistillation_pending_assignmentInput
    connect?: log_transport_drumWhereUniqueInput
    update?: XOR<XOR<log_transport_drumUpdateToOneWithWhereWithoutDistillation_pending_assignmentInput, log_transport_drumUpdateWithoutDistillation_pending_assignmentInput>, log_transport_drumUncheckedUpdateWithoutDistillation_pending_assignmentInput>
  }

  export type distillation_scheduleCreateNestedOneWithoutDistillation_recordInput = {
    create?: XOR<distillation_scheduleCreateWithoutDistillation_recordInput, distillation_scheduleUncheckedCreateWithoutDistillation_recordInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutDistillation_recordInput
    connect?: distillation_scheduleWhereUniqueInput
  }

  export type stock_drumCreateNestedManyWithoutDistillation_recordInput = {
    create?: XOR<stock_drumCreateWithoutDistillation_recordInput, stock_drumUncheckedCreateWithoutDistillation_recordInput> | stock_drumCreateWithoutDistillation_recordInput[] | stock_drumUncheckedCreateWithoutDistillation_recordInput[]
    connectOrCreate?: stock_drumCreateOrConnectWithoutDistillation_recordInput | stock_drumCreateOrConnectWithoutDistillation_recordInput[]
    createMany?: stock_drumCreateManyDistillation_recordInputEnvelope
    connect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
  }

  export type stock_drum_newCreateNestedManyWithoutDistillation_recordInput = {
    create?: XOR<stock_drum_newCreateWithoutDistillation_recordInput, stock_drum_newUncheckedCreateWithoutDistillation_recordInput> | stock_drum_newCreateWithoutDistillation_recordInput[] | stock_drum_newUncheckedCreateWithoutDistillation_recordInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutDistillation_recordInput | stock_drum_newCreateOrConnectWithoutDistillation_recordInput[]
    createMany?: stock_drum_newCreateManyDistillation_recordInputEnvelope
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
  }

  export type stock_drumUncheckedCreateNestedManyWithoutDistillation_recordInput = {
    create?: XOR<stock_drumCreateWithoutDistillation_recordInput, stock_drumUncheckedCreateWithoutDistillation_recordInput> | stock_drumCreateWithoutDistillation_recordInput[] | stock_drumUncheckedCreateWithoutDistillation_recordInput[]
    connectOrCreate?: stock_drumCreateOrConnectWithoutDistillation_recordInput | stock_drumCreateOrConnectWithoutDistillation_recordInput[]
    createMany?: stock_drumCreateManyDistillation_recordInputEnvelope
    connect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
  }

  export type stock_drum_newUncheckedCreateNestedManyWithoutDistillation_recordInput = {
    create?: XOR<stock_drum_newCreateWithoutDistillation_recordInput, stock_drum_newUncheckedCreateWithoutDistillation_recordInput> | stock_drum_newCreateWithoutDistillation_recordInput[] | stock_drum_newUncheckedCreateWithoutDistillation_recordInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutDistillation_recordInput | stock_drum_newCreateOrConnectWithoutDistillation_recordInput[]
    createMany?: stock_drum_newCreateManyDistillation_recordInputEnvelope
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
  }

  export type distillation_scheduleUpdateOneWithoutDistillation_recordNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutDistillation_recordInput, distillation_scheduleUncheckedCreateWithoutDistillation_recordInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutDistillation_recordInput
    upsert?: distillation_scheduleUpsertWithoutDistillation_recordInput
    disconnect?: distillation_scheduleWhereInput | boolean
    delete?: distillation_scheduleWhereInput | boolean
    connect?: distillation_scheduleWhereUniqueInput
    update?: XOR<XOR<distillation_scheduleUpdateToOneWithWhereWithoutDistillation_recordInput, distillation_scheduleUpdateWithoutDistillation_recordInput>, distillation_scheduleUncheckedUpdateWithoutDistillation_recordInput>
  }

  export type stock_drumUpdateManyWithoutDistillation_recordNestedInput = {
    create?: XOR<stock_drumCreateWithoutDistillation_recordInput, stock_drumUncheckedCreateWithoutDistillation_recordInput> | stock_drumCreateWithoutDistillation_recordInput[] | stock_drumUncheckedCreateWithoutDistillation_recordInput[]
    connectOrCreate?: stock_drumCreateOrConnectWithoutDistillation_recordInput | stock_drumCreateOrConnectWithoutDistillation_recordInput[]
    upsert?: stock_drumUpsertWithWhereUniqueWithoutDistillation_recordInput | stock_drumUpsertWithWhereUniqueWithoutDistillation_recordInput[]
    createMany?: stock_drumCreateManyDistillation_recordInputEnvelope
    set?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    disconnect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    delete?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    connect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    update?: stock_drumUpdateWithWhereUniqueWithoutDistillation_recordInput | stock_drumUpdateWithWhereUniqueWithoutDistillation_recordInput[]
    updateMany?: stock_drumUpdateManyWithWhereWithoutDistillation_recordInput | stock_drumUpdateManyWithWhereWithoutDistillation_recordInput[]
    deleteMany?: stock_drumScalarWhereInput | stock_drumScalarWhereInput[]
  }

  export type stock_drum_newUpdateManyWithoutDistillation_recordNestedInput = {
    create?: XOR<stock_drum_newCreateWithoutDistillation_recordInput, stock_drum_newUncheckedCreateWithoutDistillation_recordInput> | stock_drum_newCreateWithoutDistillation_recordInput[] | stock_drum_newUncheckedCreateWithoutDistillation_recordInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutDistillation_recordInput | stock_drum_newCreateOrConnectWithoutDistillation_recordInput[]
    upsert?: stock_drum_newUpsertWithWhereUniqueWithoutDistillation_recordInput | stock_drum_newUpsertWithWhereUniqueWithoutDistillation_recordInput[]
    createMany?: stock_drum_newCreateManyDistillation_recordInputEnvelope
    set?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    disconnect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    delete?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    update?: stock_drum_newUpdateWithWhereUniqueWithoutDistillation_recordInput | stock_drum_newUpdateWithWhereUniqueWithoutDistillation_recordInput[]
    updateMany?: stock_drum_newUpdateManyWithWhereWithoutDistillation_recordInput | stock_drum_newUpdateManyWithWhereWithoutDistillation_recordInput[]
    deleteMany?: stock_drum_newScalarWhereInput | stock_drum_newScalarWhereInput[]
  }

  export type stock_drumUncheckedUpdateManyWithoutDistillation_recordNestedInput = {
    create?: XOR<stock_drumCreateWithoutDistillation_recordInput, stock_drumUncheckedCreateWithoutDistillation_recordInput> | stock_drumCreateWithoutDistillation_recordInput[] | stock_drumUncheckedCreateWithoutDistillation_recordInput[]
    connectOrCreate?: stock_drumCreateOrConnectWithoutDistillation_recordInput | stock_drumCreateOrConnectWithoutDistillation_recordInput[]
    upsert?: stock_drumUpsertWithWhereUniqueWithoutDistillation_recordInput | stock_drumUpsertWithWhereUniqueWithoutDistillation_recordInput[]
    createMany?: stock_drumCreateManyDistillation_recordInputEnvelope
    set?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    disconnect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    delete?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    connect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    update?: stock_drumUpdateWithWhereUniqueWithoutDistillation_recordInput | stock_drumUpdateWithWhereUniqueWithoutDistillation_recordInput[]
    updateMany?: stock_drumUpdateManyWithWhereWithoutDistillation_recordInput | stock_drumUpdateManyWithWhereWithoutDistillation_recordInput[]
    deleteMany?: stock_drumScalarWhereInput | stock_drumScalarWhereInput[]
  }

  export type stock_drum_newUncheckedUpdateManyWithoutDistillation_recordNestedInput = {
    create?: XOR<stock_drum_newCreateWithoutDistillation_recordInput, stock_drum_newUncheckedCreateWithoutDistillation_recordInput> | stock_drum_newCreateWithoutDistillation_recordInput[] | stock_drum_newUncheckedCreateWithoutDistillation_recordInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutDistillation_recordInput | stock_drum_newCreateOrConnectWithoutDistillation_recordInput[]
    upsert?: stock_drum_newUpsertWithWhereUniqueWithoutDistillation_recordInput | stock_drum_newUpsertWithWhereUniqueWithoutDistillation_recordInput[]
    createMany?: stock_drum_newCreateManyDistillation_recordInputEnvelope
    set?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    disconnect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    delete?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    update?: stock_drum_newUpdateWithWhereUniqueWithoutDistillation_recordInput | stock_drum_newUpdateWithWhereUniqueWithoutDistillation_recordInput[]
    updateMany?: stock_drum_newUpdateManyWithWhereWithoutDistillation_recordInput | stock_drum_newUpdateManyWithWhereWithoutDistillation_recordInput[]
    deleteMany?: stock_drum_newScalarWhereInput | stock_drum_newScalarWhereInput[]
  }

  export type distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutDistillation_scheduleInput, distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput> | distillation_pending_assignmentCreateWithoutDistillation_scheduleInput[] | distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput | distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: distillation_pending_assignmentCreateManyDistillation_scheduleInputEnvelope
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
  }

  export type distillation_recordCreateNestedOneWithoutDistillation_scheduleInput = {
    create?: XOR<distillation_recordCreateWithoutDistillation_scheduleInput, distillation_recordUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: distillation_recordCreateOrConnectWithoutDistillation_scheduleInput
    connect?: distillation_recordWhereUniqueInput
  }

  export type ref_stillsCreateNestedOneWithoutDistillation_scheduleInput = {
    create?: XOR<ref_stillsCreateWithoutDistillation_scheduleInput, ref_stillsUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: ref_stillsCreateOrConnectWithoutDistillation_scheduleInput
    connect?: ref_stillsWhereUniqueInput
  }

  export type distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutDistillation_scheduleInput, distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput> | distillation_schedule_itemsCreateWithoutDistillation_scheduleInput[] | distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput | distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: distillation_schedule_itemsCreateManyDistillation_scheduleInputEnvelope
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
  }

  export type log_load_stillCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<log_load_stillCreateWithoutDistillation_scheduleInput, log_load_stillUncheckedCreateWithoutDistillation_scheduleInput> | log_load_stillCreateWithoutDistillation_scheduleInput[] | log_load_stillUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutDistillation_scheduleInput | log_load_stillCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: log_load_stillCreateManyDistillation_scheduleInputEnvelope
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
  }

  export type log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput = {
    create?: XOR<log_start_distillationCreateWithoutDistillation_scheduleInput, log_start_distillationUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: log_start_distillationCreateOrConnectWithoutDistillation_scheduleInput
    connect?: log_start_distillationWhereUniqueInput
  }

  export type log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<log_transport_drumCreateWithoutDistillation_scheduleInput, log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput> | log_transport_drumCreateWithoutDistillation_scheduleInput[] | log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput | log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: log_transport_drumCreateManyDistillation_scheduleInputEnvelope
    connect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
  }

  export type log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<log_volume_transferCreateWithoutDistillation_scheduleInput, log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput> | log_volume_transferCreateWithoutDistillation_scheduleInput[] | log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput | log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: log_volume_transferCreateManyDistillation_scheduleInputEnvelope
    connect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
  }

  export type distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutDistillation_scheduleInput, distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput> | distillation_pending_assignmentCreateWithoutDistillation_scheduleInput[] | distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput | distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: distillation_pending_assignmentCreateManyDistillation_scheduleInputEnvelope
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
  }

  export type distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput = {
    create?: XOR<distillation_recordCreateWithoutDistillation_scheduleInput, distillation_recordUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: distillation_recordCreateOrConnectWithoutDistillation_scheduleInput
    connect?: distillation_recordWhereUniqueInput
  }

  export type distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutDistillation_scheduleInput, distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput> | distillation_schedule_itemsCreateWithoutDistillation_scheduleInput[] | distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput | distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: distillation_schedule_itemsCreateManyDistillation_scheduleInputEnvelope
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
  }

  export type log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<log_load_stillCreateWithoutDistillation_scheduleInput, log_load_stillUncheckedCreateWithoutDistillation_scheduleInput> | log_load_stillCreateWithoutDistillation_scheduleInput[] | log_load_stillUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutDistillation_scheduleInput | log_load_stillCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: log_load_stillCreateManyDistillation_scheduleInputEnvelope
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
  }

  export type log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput = {
    create?: XOR<log_start_distillationCreateWithoutDistillation_scheduleInput, log_start_distillationUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: log_start_distillationCreateOrConnectWithoutDistillation_scheduleInput
    connect?: log_start_distillationWhereUniqueInput
  }

  export type log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<log_transport_drumCreateWithoutDistillation_scheduleInput, log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput> | log_transport_drumCreateWithoutDistillation_scheduleInput[] | log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput | log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: log_transport_drumCreateManyDistillation_scheduleInputEnvelope
    connect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
  }

  export type log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput = {
    create?: XOR<log_volume_transferCreateWithoutDistillation_scheduleInput, log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput> | log_volume_transferCreateWithoutDistillation_scheduleInput[] | log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput | log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput[]
    createMany?: log_volume_transferCreateManyDistillation_scheduleInputEnvelope
    connect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutDistillation_scheduleInput, distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput> | distillation_pending_assignmentCreateWithoutDistillation_scheduleInput[] | distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput | distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: distillation_pending_assignmentUpsertWithWhereUniqueWithoutDistillation_scheduleInput | distillation_pending_assignmentUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: distillation_pending_assignmentCreateManyDistillation_scheduleInputEnvelope
    set?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    disconnect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    delete?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    update?: distillation_pending_assignmentUpdateWithWhereUniqueWithoutDistillation_scheduleInput | distillation_pending_assignmentUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: distillation_pending_assignmentUpdateManyWithWhereWithoutDistillation_scheduleInput | distillation_pending_assignmentUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: distillation_pending_assignmentScalarWhereInput | distillation_pending_assignmentScalarWhereInput[]
  }

  export type distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput = {
    create?: XOR<distillation_recordCreateWithoutDistillation_scheduleInput, distillation_recordUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: distillation_recordCreateOrConnectWithoutDistillation_scheduleInput
    upsert?: distillation_recordUpsertWithoutDistillation_scheduleInput
    disconnect?: distillation_recordWhereInput | boolean
    delete?: distillation_recordWhereInput | boolean
    connect?: distillation_recordWhereUniqueInput
    update?: XOR<XOR<distillation_recordUpdateToOneWithWhereWithoutDistillation_scheduleInput, distillation_recordUpdateWithoutDistillation_scheduleInput>, distillation_recordUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput = {
    create?: XOR<ref_stillsCreateWithoutDistillation_scheduleInput, ref_stillsUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: ref_stillsCreateOrConnectWithoutDistillation_scheduleInput
    upsert?: ref_stillsUpsertWithoutDistillation_scheduleInput
    connect?: ref_stillsWhereUniqueInput
    update?: XOR<XOR<ref_stillsUpdateToOneWithWhereWithoutDistillation_scheduleInput, ref_stillsUpdateWithoutDistillation_scheduleInput>, ref_stillsUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutDistillation_scheduleInput, distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput> | distillation_schedule_itemsCreateWithoutDistillation_scheduleInput[] | distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput | distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: distillation_schedule_itemsUpsertWithWhereUniqueWithoutDistillation_scheduleInput | distillation_schedule_itemsUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: distillation_schedule_itemsCreateManyDistillation_scheduleInputEnvelope
    set?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    disconnect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    delete?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    update?: distillation_schedule_itemsUpdateWithWhereUniqueWithoutDistillation_scheduleInput | distillation_schedule_itemsUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: distillation_schedule_itemsUpdateManyWithWhereWithoutDistillation_scheduleInput | distillation_schedule_itemsUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: distillation_schedule_itemsScalarWhereInput | distillation_schedule_itemsScalarWhereInput[]
  }

  export type log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<log_load_stillCreateWithoutDistillation_scheduleInput, log_load_stillUncheckedCreateWithoutDistillation_scheduleInput> | log_load_stillCreateWithoutDistillation_scheduleInput[] | log_load_stillUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutDistillation_scheduleInput | log_load_stillCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: log_load_stillUpsertWithWhereUniqueWithoutDistillation_scheduleInput | log_load_stillUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: log_load_stillCreateManyDistillation_scheduleInputEnvelope
    set?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    disconnect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    delete?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    update?: log_load_stillUpdateWithWhereUniqueWithoutDistillation_scheduleInput | log_load_stillUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: log_load_stillUpdateManyWithWhereWithoutDistillation_scheduleInput | log_load_stillUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: log_load_stillScalarWhereInput | log_load_stillScalarWhereInput[]
  }

  export type log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput = {
    create?: XOR<log_start_distillationCreateWithoutDistillation_scheduleInput, log_start_distillationUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: log_start_distillationCreateOrConnectWithoutDistillation_scheduleInput
    upsert?: log_start_distillationUpsertWithoutDistillation_scheduleInput
    disconnect?: log_start_distillationWhereInput | boolean
    delete?: log_start_distillationWhereInput | boolean
    connect?: log_start_distillationWhereUniqueInput
    update?: XOR<XOR<log_start_distillationUpdateToOneWithWhereWithoutDistillation_scheduleInput, log_start_distillationUpdateWithoutDistillation_scheduleInput>, log_start_distillationUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<log_transport_drumCreateWithoutDistillation_scheduleInput, log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput> | log_transport_drumCreateWithoutDistillation_scheduleInput[] | log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput | log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: log_transport_drumUpsertWithWhereUniqueWithoutDistillation_scheduleInput | log_transport_drumUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: log_transport_drumCreateManyDistillation_scheduleInputEnvelope
    set?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    disconnect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    delete?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    connect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    update?: log_transport_drumUpdateWithWhereUniqueWithoutDistillation_scheduleInput | log_transport_drumUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: log_transport_drumUpdateManyWithWhereWithoutDistillation_scheduleInput | log_transport_drumUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: log_transport_drumScalarWhereInput | log_transport_drumScalarWhereInput[]
  }

  export type log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<log_volume_transferCreateWithoutDistillation_scheduleInput, log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput> | log_volume_transferCreateWithoutDistillation_scheduleInput[] | log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput | log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: log_volume_transferUpsertWithWhereUniqueWithoutDistillation_scheduleInput | log_volume_transferUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: log_volume_transferCreateManyDistillation_scheduleInputEnvelope
    set?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    disconnect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    delete?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    connect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    update?: log_volume_transferUpdateWithWhereUniqueWithoutDistillation_scheduleInput | log_volume_transferUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: log_volume_transferUpdateManyWithWhereWithoutDistillation_scheduleInput | log_volume_transferUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: log_volume_transferScalarWhereInput | log_volume_transferScalarWhereInput[]
  }

  export type distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutDistillation_scheduleInput, distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput> | distillation_pending_assignmentCreateWithoutDistillation_scheduleInput[] | distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput | distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: distillation_pending_assignmentUpsertWithWhereUniqueWithoutDistillation_scheduleInput | distillation_pending_assignmentUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: distillation_pending_assignmentCreateManyDistillation_scheduleInputEnvelope
    set?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    disconnect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    delete?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    update?: distillation_pending_assignmentUpdateWithWhereUniqueWithoutDistillation_scheduleInput | distillation_pending_assignmentUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: distillation_pending_assignmentUpdateManyWithWhereWithoutDistillation_scheduleInput | distillation_pending_assignmentUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: distillation_pending_assignmentScalarWhereInput | distillation_pending_assignmentScalarWhereInput[]
  }

  export type distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput = {
    create?: XOR<distillation_recordCreateWithoutDistillation_scheduleInput, distillation_recordUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: distillation_recordCreateOrConnectWithoutDistillation_scheduleInput
    upsert?: distillation_recordUpsertWithoutDistillation_scheduleInput
    disconnect?: distillation_recordWhereInput | boolean
    delete?: distillation_recordWhereInput | boolean
    connect?: distillation_recordWhereUniqueInput
    update?: XOR<XOR<distillation_recordUpdateToOneWithWhereWithoutDistillation_scheduleInput, distillation_recordUpdateWithoutDistillation_scheduleInput>, distillation_recordUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutDistillation_scheduleInput, distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput> | distillation_schedule_itemsCreateWithoutDistillation_scheduleInput[] | distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput | distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: distillation_schedule_itemsUpsertWithWhereUniqueWithoutDistillation_scheduleInput | distillation_schedule_itemsUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: distillation_schedule_itemsCreateManyDistillation_scheduleInputEnvelope
    set?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    disconnect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    delete?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    update?: distillation_schedule_itemsUpdateWithWhereUniqueWithoutDistillation_scheduleInput | distillation_schedule_itemsUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: distillation_schedule_itemsUpdateManyWithWhereWithoutDistillation_scheduleInput | distillation_schedule_itemsUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: distillation_schedule_itemsScalarWhereInput | distillation_schedule_itemsScalarWhereInput[]
  }

  export type log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<log_load_stillCreateWithoutDistillation_scheduleInput, log_load_stillUncheckedCreateWithoutDistillation_scheduleInput> | log_load_stillCreateWithoutDistillation_scheduleInput[] | log_load_stillUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutDistillation_scheduleInput | log_load_stillCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: log_load_stillUpsertWithWhereUniqueWithoutDistillation_scheduleInput | log_load_stillUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: log_load_stillCreateManyDistillation_scheduleInputEnvelope
    set?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    disconnect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    delete?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    update?: log_load_stillUpdateWithWhereUniqueWithoutDistillation_scheduleInput | log_load_stillUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: log_load_stillUpdateManyWithWhereWithoutDistillation_scheduleInput | log_load_stillUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: log_load_stillScalarWhereInput | log_load_stillScalarWhereInput[]
  }

  export type log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput = {
    create?: XOR<log_start_distillationCreateWithoutDistillation_scheduleInput, log_start_distillationUncheckedCreateWithoutDistillation_scheduleInput>
    connectOrCreate?: log_start_distillationCreateOrConnectWithoutDistillation_scheduleInput
    upsert?: log_start_distillationUpsertWithoutDistillation_scheduleInput
    disconnect?: log_start_distillationWhereInput | boolean
    delete?: log_start_distillationWhereInput | boolean
    connect?: log_start_distillationWhereUniqueInput
    update?: XOR<XOR<log_start_distillationUpdateToOneWithWhereWithoutDistillation_scheduleInput, log_start_distillationUpdateWithoutDistillation_scheduleInput>, log_start_distillationUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<log_transport_drumCreateWithoutDistillation_scheduleInput, log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput> | log_transport_drumCreateWithoutDistillation_scheduleInput[] | log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput | log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: log_transport_drumUpsertWithWhereUniqueWithoutDistillation_scheduleInput | log_transport_drumUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: log_transport_drumCreateManyDistillation_scheduleInputEnvelope
    set?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    disconnect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    delete?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    connect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    update?: log_transport_drumUpdateWithWhereUniqueWithoutDistillation_scheduleInput | log_transport_drumUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: log_transport_drumUpdateManyWithWhereWithoutDistillation_scheduleInput | log_transport_drumUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: log_transport_drumScalarWhereInput | log_transport_drumScalarWhereInput[]
  }

  export type log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput = {
    create?: XOR<log_volume_transferCreateWithoutDistillation_scheduleInput, log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput> | log_volume_transferCreateWithoutDistillation_scheduleInput[] | log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput[]
    connectOrCreate?: log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput | log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput[]
    upsert?: log_volume_transferUpsertWithWhereUniqueWithoutDistillation_scheduleInput | log_volume_transferUpsertWithWhereUniqueWithoutDistillation_scheduleInput[]
    createMany?: log_volume_transferCreateManyDistillation_scheduleInputEnvelope
    set?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    disconnect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    delete?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    connect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    update?: log_volume_transferUpdateWithWhereUniqueWithoutDistillation_scheduleInput | log_volume_transferUpdateWithWhereUniqueWithoutDistillation_scheduleInput[]
    updateMany?: log_volume_transferUpdateManyWithWhereWithoutDistillation_scheduleInput | log_volume_transferUpdateManyWithWhereWithoutDistillation_scheduleInput[]
    deleteMany?: log_volume_transferScalarWhereInput | log_volume_transferScalarWhereInput[]
  }

  export type distillation_scheduleCreateNestedOneWithoutDistillation_schedule_itemsInput = {
    create?: XOR<distillation_scheduleCreateWithoutDistillation_schedule_itemsInput, distillation_scheduleUncheckedCreateWithoutDistillation_schedule_itemsInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutDistillation_schedule_itemsInput
    connect?: distillation_scheduleWhereUniqueInput
  }

  export type stock_newCreateNestedOneWithoutDistillation_schedule_itemsInput = {
    create?: XOR<stock_newCreateWithoutDistillation_schedule_itemsInput, stock_newUncheckedCreateWithoutDistillation_schedule_itemsInput>
    connectOrCreate?: stock_newCreateOrConnectWithoutDistillation_schedule_itemsInput
    connect?: stock_newWhereUniqueInput
  }

  export type stock_reproCreateNestedOneWithoutDistillation_schedule_itemsInput = {
    create?: XOR<stock_reproCreateWithoutDistillation_schedule_itemsInput, stock_reproUncheckedCreateWithoutDistillation_schedule_itemsInput>
    connectOrCreate?: stock_reproCreateOrConnectWithoutDistillation_schedule_itemsInput
    connect?: stock_reproWhereUniqueInput
  }

  export type stock_activityCreateNestedManyWithoutDistillation_schedule_itemsInput = {
    create?: XOR<stock_activityCreateWithoutDistillation_schedule_itemsInput, stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput> | stock_activityCreateWithoutDistillation_schedule_itemsInput[] | stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput | stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput[]
    createMany?: stock_activityCreateManyDistillation_schedule_itemsInputEnvelope
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
  }

  export type stock_activityUncheckedCreateNestedManyWithoutDistillation_schedule_itemsInput = {
    create?: XOR<stock_activityCreateWithoutDistillation_schedule_itemsInput, stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput> | stock_activityCreateWithoutDistillation_schedule_itemsInput[] | stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput | stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput[]
    createMany?: stock_activityCreateManyDistillation_schedule_itemsInputEnvelope
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
  }

  export type distillation_scheduleUpdateOneRequiredWithoutDistillation_schedule_itemsNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutDistillation_schedule_itemsInput, distillation_scheduleUncheckedCreateWithoutDistillation_schedule_itemsInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutDistillation_schedule_itemsInput
    upsert?: distillation_scheduleUpsertWithoutDistillation_schedule_itemsInput
    connect?: distillation_scheduleWhereUniqueInput
    update?: XOR<XOR<distillation_scheduleUpdateToOneWithWhereWithoutDistillation_schedule_itemsInput, distillation_scheduleUpdateWithoutDistillation_schedule_itemsInput>, distillation_scheduleUncheckedUpdateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_newUpdateOneWithoutDistillation_schedule_itemsNestedInput = {
    create?: XOR<stock_newCreateWithoutDistillation_schedule_itemsInput, stock_newUncheckedCreateWithoutDistillation_schedule_itemsInput>
    connectOrCreate?: stock_newCreateOrConnectWithoutDistillation_schedule_itemsInput
    upsert?: stock_newUpsertWithoutDistillation_schedule_itemsInput
    disconnect?: stock_newWhereInput | boolean
    delete?: stock_newWhereInput | boolean
    connect?: stock_newWhereUniqueInput
    update?: XOR<XOR<stock_newUpdateToOneWithWhereWithoutDistillation_schedule_itemsInput, stock_newUpdateWithoutDistillation_schedule_itemsInput>, stock_newUncheckedUpdateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_reproUpdateOneWithoutDistillation_schedule_itemsNestedInput = {
    create?: XOR<stock_reproCreateWithoutDistillation_schedule_itemsInput, stock_reproUncheckedCreateWithoutDistillation_schedule_itemsInput>
    connectOrCreate?: stock_reproCreateOrConnectWithoutDistillation_schedule_itemsInput
    upsert?: stock_reproUpsertWithoutDistillation_schedule_itemsInput
    disconnect?: stock_reproWhereInput | boolean
    delete?: stock_reproWhereInput | boolean
    connect?: stock_reproWhereUniqueInput
    update?: XOR<XOR<stock_reproUpdateToOneWithWhereWithoutDistillation_schedule_itemsInput, stock_reproUpdateWithoutDistillation_schedule_itemsInput>, stock_reproUncheckedUpdateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_activityUpdateManyWithoutDistillation_schedule_itemsNestedInput = {
    create?: XOR<stock_activityCreateWithoutDistillation_schedule_itemsInput, stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput> | stock_activityCreateWithoutDistillation_schedule_itemsInput[] | stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput | stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput[]
    upsert?: stock_activityUpsertWithWhereUniqueWithoutDistillation_schedule_itemsInput | stock_activityUpsertWithWhereUniqueWithoutDistillation_schedule_itemsInput[]
    createMany?: stock_activityCreateManyDistillation_schedule_itemsInputEnvelope
    set?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    disconnect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    delete?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    update?: stock_activityUpdateWithWhereUniqueWithoutDistillation_schedule_itemsInput | stock_activityUpdateWithWhereUniqueWithoutDistillation_schedule_itemsInput[]
    updateMany?: stock_activityUpdateManyWithWhereWithoutDistillation_schedule_itemsInput | stock_activityUpdateManyWithWhereWithoutDistillation_schedule_itemsInput[]
    deleteMany?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
  }

  export type stock_activityUncheckedUpdateManyWithoutDistillation_schedule_itemsNestedInput = {
    create?: XOR<stock_activityCreateWithoutDistillation_schedule_itemsInput, stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput> | stock_activityCreateWithoutDistillation_schedule_itemsInput[] | stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput | stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput[]
    upsert?: stock_activityUpsertWithWhereUniqueWithoutDistillation_schedule_itemsInput | stock_activityUpsertWithWhereUniqueWithoutDistillation_schedule_itemsInput[]
    createMany?: stock_activityCreateManyDistillation_schedule_itemsInputEnvelope
    set?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    disconnect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    delete?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    update?: stock_activityUpdateWithWhereUniqueWithoutDistillation_schedule_itemsInput | stock_activityUpdateWithWhereUniqueWithoutDistillation_schedule_itemsInput[]
    updateMany?: stock_activityUpdateManyWithWhereWithoutDistillation_schedule_itemsInput | stock_activityUpdateManyWithWhereWithoutDistillation_schedule_itemsInput[]
    deleteMany?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
  }

  export type stock_drumCreateNestedOneWithoutLog_drum_scanInput = {
    create?: XOR<stock_drumCreateWithoutLog_drum_scanInput, stock_drumUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutLog_drum_scanInput
    connect?: stock_drumWhereUniqueInput
  }

  export type log_load_stillCreateNestedOneWithoutLog_drum_scanInput = {
    create?: XOR<log_load_stillCreateWithoutLog_drum_scanInput, log_load_stillUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: log_load_stillCreateOrConnectWithoutLog_drum_scanInput
    connect?: log_load_stillWhereUniqueInput
  }

  export type log_transport_drumCreateNestedOneWithoutLog_drum_scanInput = {
    create?: XOR<log_transport_drumCreateWithoutLog_drum_scanInput, log_transport_drumUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutLog_drum_scanInput
    connect?: log_transport_drumWhereUniqueInput
  }

  export type log_load_stillUncheckedCreateNestedOneWithoutLog_drum_scanInput = {
    create?: XOR<log_load_stillCreateWithoutLog_drum_scanInput, log_load_stillUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: log_load_stillCreateOrConnectWithoutLog_drum_scanInput
    connect?: log_load_stillWhereUniqueInput
  }

  export type log_transport_drumUncheckedCreateNestedOneWithoutLog_drum_scanInput = {
    create?: XOR<log_transport_drumCreateWithoutLog_drum_scanInput, log_transport_drumUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutLog_drum_scanInput
    connect?: log_transport_drumWhereUniqueInput
  }

  export type stock_drumUpdateOneWithoutLog_drum_scanNestedInput = {
    create?: XOR<stock_drumCreateWithoutLog_drum_scanInput, stock_drumUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutLog_drum_scanInput
    upsert?: stock_drumUpsertWithoutLog_drum_scanInput
    disconnect?: stock_drumWhereInput | boolean
    delete?: stock_drumWhereInput | boolean
    connect?: stock_drumWhereUniqueInput
    update?: XOR<XOR<stock_drumUpdateToOneWithWhereWithoutLog_drum_scanInput, stock_drumUpdateWithoutLog_drum_scanInput>, stock_drumUncheckedUpdateWithoutLog_drum_scanInput>
  }

  export type log_load_stillUpdateOneWithoutLog_drum_scanNestedInput = {
    create?: XOR<log_load_stillCreateWithoutLog_drum_scanInput, log_load_stillUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: log_load_stillCreateOrConnectWithoutLog_drum_scanInput
    upsert?: log_load_stillUpsertWithoutLog_drum_scanInput
    disconnect?: log_load_stillWhereInput | boolean
    delete?: log_load_stillWhereInput | boolean
    connect?: log_load_stillWhereUniqueInput
    update?: XOR<XOR<log_load_stillUpdateToOneWithWhereWithoutLog_drum_scanInput, log_load_stillUpdateWithoutLog_drum_scanInput>, log_load_stillUncheckedUpdateWithoutLog_drum_scanInput>
  }

  export type log_transport_drumUpdateOneWithoutLog_drum_scanNestedInput = {
    create?: XOR<log_transport_drumCreateWithoutLog_drum_scanInput, log_transport_drumUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutLog_drum_scanInput
    upsert?: log_transport_drumUpsertWithoutLog_drum_scanInput
    disconnect?: log_transport_drumWhereInput | boolean
    delete?: log_transport_drumWhereInput | boolean
    connect?: log_transport_drumWhereUniqueInput
    update?: XOR<XOR<log_transport_drumUpdateToOneWithWhereWithoutLog_drum_scanInput, log_transport_drumUpdateWithoutLog_drum_scanInput>, log_transport_drumUncheckedUpdateWithoutLog_drum_scanInput>
  }

  export type log_load_stillUncheckedUpdateOneWithoutLog_drum_scanNestedInput = {
    create?: XOR<log_load_stillCreateWithoutLog_drum_scanInput, log_load_stillUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: log_load_stillCreateOrConnectWithoutLog_drum_scanInput
    upsert?: log_load_stillUpsertWithoutLog_drum_scanInput
    disconnect?: log_load_stillWhereInput | boolean
    delete?: log_load_stillWhereInput | boolean
    connect?: log_load_stillWhereUniqueInput
    update?: XOR<XOR<log_load_stillUpdateToOneWithWhereWithoutLog_drum_scanInput, log_load_stillUpdateWithoutLog_drum_scanInput>, log_load_stillUncheckedUpdateWithoutLog_drum_scanInput>
  }

  export type log_transport_drumUncheckedUpdateOneWithoutLog_drum_scanNestedInput = {
    create?: XOR<log_transport_drumCreateWithoutLog_drum_scanInput, log_transport_drumUncheckedCreateWithoutLog_drum_scanInput>
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutLog_drum_scanInput
    upsert?: log_transport_drumUpsertWithoutLog_drum_scanInput
    disconnect?: log_transport_drumWhereInput | boolean
    delete?: log_transport_drumWhereInput | boolean
    connect?: log_transport_drumWhereUniqueInput
    update?: XOR<XOR<log_transport_drumUpdateToOneWithWhereWithoutLog_drum_scanInput, log_transport_drumUpdateWithoutLog_drum_scanInput>, log_transport_drumUncheckedUpdateWithoutLog_drum_scanInput>
  }

  export type distillation_scheduleCreateNestedOneWithoutLog_load_stillInput = {
    create?: XOR<distillation_scheduleCreateWithoutLog_load_stillInput, distillation_scheduleUncheckedCreateWithoutLog_load_stillInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutLog_load_stillInput
    connect?: distillation_scheduleWhereUniqueInput
  }

  export type stock_drumCreateNestedOneWithoutLog_load_stillInput = {
    create?: XOR<stock_drumCreateWithoutLog_load_stillInput, stock_drumUncheckedCreateWithoutLog_load_stillInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutLog_load_stillInput
    connect?: stock_drumWhereUniqueInput
  }

  export type log_drum_scanCreateNestedOneWithoutLog_load_stillInput = {
    create?: XOR<log_drum_scanCreateWithoutLog_load_stillInput, log_drum_scanUncheckedCreateWithoutLog_load_stillInput>
    connectOrCreate?: log_drum_scanCreateOrConnectWithoutLog_load_stillInput
    connect?: log_drum_scanWhereUniqueInput
  }

  export type ref_stillsCreateNestedOneWithoutLog_load_stillInput = {
    create?: XOR<ref_stillsCreateWithoutLog_load_stillInput, ref_stillsUncheckedCreateWithoutLog_load_stillInput>
    connectOrCreate?: ref_stillsCreateOrConnectWithoutLog_load_stillInput
    connect?: ref_stillsWhereUniqueInput
  }

  export type distillation_scheduleUpdateOneRequiredWithoutLog_load_stillNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutLog_load_stillInput, distillation_scheduleUncheckedCreateWithoutLog_load_stillInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutLog_load_stillInput
    upsert?: distillation_scheduleUpsertWithoutLog_load_stillInput
    connect?: distillation_scheduleWhereUniqueInput
    update?: XOR<XOR<distillation_scheduleUpdateToOneWithWhereWithoutLog_load_stillInput, distillation_scheduleUpdateWithoutLog_load_stillInput>, distillation_scheduleUncheckedUpdateWithoutLog_load_stillInput>
  }

  export type stock_drumUpdateOneWithoutLog_load_stillNestedInput = {
    create?: XOR<stock_drumCreateWithoutLog_load_stillInput, stock_drumUncheckedCreateWithoutLog_load_stillInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutLog_load_stillInput
    upsert?: stock_drumUpsertWithoutLog_load_stillInput
    disconnect?: stock_drumWhereInput | boolean
    delete?: stock_drumWhereInput | boolean
    connect?: stock_drumWhereUniqueInput
    update?: XOR<XOR<stock_drumUpdateToOneWithWhereWithoutLog_load_stillInput, stock_drumUpdateWithoutLog_load_stillInput>, stock_drumUncheckedUpdateWithoutLog_load_stillInput>
  }

  export type log_drum_scanUpdateOneWithoutLog_load_stillNestedInput = {
    create?: XOR<log_drum_scanCreateWithoutLog_load_stillInput, log_drum_scanUncheckedCreateWithoutLog_load_stillInput>
    connectOrCreate?: log_drum_scanCreateOrConnectWithoutLog_load_stillInput
    upsert?: log_drum_scanUpsertWithoutLog_load_stillInput
    disconnect?: log_drum_scanWhereInput | boolean
    delete?: log_drum_scanWhereInput | boolean
    connect?: log_drum_scanWhereUniqueInput
    update?: XOR<XOR<log_drum_scanUpdateToOneWithWhereWithoutLog_load_stillInput, log_drum_scanUpdateWithoutLog_load_stillInput>, log_drum_scanUncheckedUpdateWithoutLog_load_stillInput>
  }

  export type ref_stillsUpdateOneWithoutLog_load_stillNestedInput = {
    create?: XOR<ref_stillsCreateWithoutLog_load_stillInput, ref_stillsUncheckedCreateWithoutLog_load_stillInput>
    connectOrCreate?: ref_stillsCreateOrConnectWithoutLog_load_stillInput
    upsert?: ref_stillsUpsertWithoutLog_load_stillInput
    disconnect?: ref_stillsWhereInput | boolean
    delete?: ref_stillsWhereInput | boolean
    connect?: ref_stillsWhereUniqueInput
    update?: XOR<XOR<ref_stillsUpdateToOneWithWhereWithoutLog_load_stillInput, ref_stillsUpdateWithoutLog_load_stillInput>, ref_stillsUncheckedUpdateWithoutLog_load_stillInput>
  }

  export type distillation_scheduleCreateNestedOneWithoutLog_start_distillationInput = {
    create?: XOR<distillation_scheduleCreateWithoutLog_start_distillationInput, distillation_scheduleUncheckedCreateWithoutLog_start_distillationInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutLog_start_distillationInput
    connect?: distillation_scheduleWhereUniqueInput
  }

  export type ref_stillsCreateNestedOneWithoutLog_start_distillationInput = {
    create?: XOR<ref_stillsCreateWithoutLog_start_distillationInput, ref_stillsUncheckedCreateWithoutLog_start_distillationInput>
    connectOrCreate?: ref_stillsCreateOrConnectWithoutLog_start_distillationInput
    connect?: ref_stillsWhereUniqueInput
  }

  export type distillation_scheduleUpdateOneWithoutLog_start_distillationNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutLog_start_distillationInput, distillation_scheduleUncheckedCreateWithoutLog_start_distillationInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutLog_start_distillationInput
    upsert?: distillation_scheduleUpsertWithoutLog_start_distillationInput
    disconnect?: distillation_scheduleWhereInput | boolean
    delete?: distillation_scheduleWhereInput | boolean
    connect?: distillation_scheduleWhereUniqueInput
    update?: XOR<XOR<distillation_scheduleUpdateToOneWithWhereWithoutLog_start_distillationInput, distillation_scheduleUpdateWithoutLog_start_distillationInput>, distillation_scheduleUncheckedUpdateWithoutLog_start_distillationInput>
  }

  export type ref_stillsUpdateOneRequiredWithoutLog_start_distillationNestedInput = {
    create?: XOR<ref_stillsCreateWithoutLog_start_distillationInput, ref_stillsUncheckedCreateWithoutLog_start_distillationInput>
    connectOrCreate?: ref_stillsCreateOrConnectWithoutLog_start_distillationInput
    upsert?: ref_stillsUpsertWithoutLog_start_distillationInput
    connect?: ref_stillsWhereUniqueInput
    update?: XOR<XOR<ref_stillsUpdateToOneWithWhereWithoutLog_start_distillationInput, ref_stillsUpdateWithoutLog_start_distillationInput>, ref_stillsUncheckedUpdateWithoutLog_start_distillationInput>
  }

  export type distillation_pending_assignmentCreateNestedManyWithoutLog_transport_drumInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutLog_transport_drumInput, distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput> | distillation_pending_assignmentCreateWithoutLog_transport_drumInput[] | distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput | distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput[]
    createMany?: distillation_pending_assignmentCreateManyLog_transport_drumInputEnvelope
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
  }

  export type distillation_scheduleCreateNestedOneWithoutLog_transport_drumInput = {
    create?: XOR<distillation_scheduleCreateWithoutLog_transport_drumInput, distillation_scheduleUncheckedCreateWithoutLog_transport_drumInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutLog_transport_drumInput
    connect?: distillation_scheduleWhereUniqueInput
  }

  export type stock_drumCreateNestedOneWithoutLog_transport_drumInput = {
    create?: XOR<stock_drumCreateWithoutLog_transport_drumInput, stock_drumUncheckedCreateWithoutLog_transport_drumInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutLog_transport_drumInput
    connect?: stock_drumWhereUniqueInput
  }

  export type log_drum_scanCreateNestedOneWithoutLog_transport_drumInput = {
    create?: XOR<log_drum_scanCreateWithoutLog_transport_drumInput, log_drum_scanUncheckedCreateWithoutLog_transport_drumInput>
    connectOrCreate?: log_drum_scanCreateOrConnectWithoutLog_transport_drumInput
    connect?: log_drum_scanWhereUniqueInput
  }

  export type distillation_pending_assignmentUncheckedCreateNestedManyWithoutLog_transport_drumInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutLog_transport_drumInput, distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput> | distillation_pending_assignmentCreateWithoutLog_transport_drumInput[] | distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput | distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput[]
    createMany?: distillation_pending_assignmentCreateManyLog_transport_drumInputEnvelope
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
  }

  export type distillation_pending_assignmentUpdateManyWithoutLog_transport_drumNestedInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutLog_transport_drumInput, distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput> | distillation_pending_assignmentCreateWithoutLog_transport_drumInput[] | distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput | distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput[]
    upsert?: distillation_pending_assignmentUpsertWithWhereUniqueWithoutLog_transport_drumInput | distillation_pending_assignmentUpsertWithWhereUniqueWithoutLog_transport_drumInput[]
    createMany?: distillation_pending_assignmentCreateManyLog_transport_drumInputEnvelope
    set?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    disconnect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    delete?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    update?: distillation_pending_assignmentUpdateWithWhereUniqueWithoutLog_transport_drumInput | distillation_pending_assignmentUpdateWithWhereUniqueWithoutLog_transport_drumInput[]
    updateMany?: distillation_pending_assignmentUpdateManyWithWhereWithoutLog_transport_drumInput | distillation_pending_assignmentUpdateManyWithWhereWithoutLog_transport_drumInput[]
    deleteMany?: distillation_pending_assignmentScalarWhereInput | distillation_pending_assignmentScalarWhereInput[]
  }

  export type distillation_scheduleUpdateOneWithoutLog_transport_drumNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutLog_transport_drumInput, distillation_scheduleUncheckedCreateWithoutLog_transport_drumInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutLog_transport_drumInput
    upsert?: distillation_scheduleUpsertWithoutLog_transport_drumInput
    disconnect?: distillation_scheduleWhereInput | boolean
    delete?: distillation_scheduleWhereInput | boolean
    connect?: distillation_scheduleWhereUniqueInput
    update?: XOR<XOR<distillation_scheduleUpdateToOneWithWhereWithoutLog_transport_drumInput, distillation_scheduleUpdateWithoutLog_transport_drumInput>, distillation_scheduleUncheckedUpdateWithoutLog_transport_drumInput>
  }

  export type stock_drumUpdateOneWithoutLog_transport_drumNestedInput = {
    create?: XOR<stock_drumCreateWithoutLog_transport_drumInput, stock_drumUncheckedCreateWithoutLog_transport_drumInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutLog_transport_drumInput
    upsert?: stock_drumUpsertWithoutLog_transport_drumInput
    disconnect?: stock_drumWhereInput | boolean
    delete?: stock_drumWhereInput | boolean
    connect?: stock_drumWhereUniqueInput
    update?: XOR<XOR<stock_drumUpdateToOneWithWhereWithoutLog_transport_drumInput, stock_drumUpdateWithoutLog_transport_drumInput>, stock_drumUncheckedUpdateWithoutLog_transport_drumInput>
  }

  export type log_drum_scanUpdateOneWithoutLog_transport_drumNestedInput = {
    create?: XOR<log_drum_scanCreateWithoutLog_transport_drumInput, log_drum_scanUncheckedCreateWithoutLog_transport_drumInput>
    connectOrCreate?: log_drum_scanCreateOrConnectWithoutLog_transport_drumInput
    upsert?: log_drum_scanUpsertWithoutLog_transport_drumInput
    disconnect?: log_drum_scanWhereInput | boolean
    delete?: log_drum_scanWhereInput | boolean
    connect?: log_drum_scanWhereUniqueInput
    update?: XOR<XOR<log_drum_scanUpdateToOneWithWhereWithoutLog_transport_drumInput, log_drum_scanUpdateWithoutLog_transport_drumInput>, log_drum_scanUncheckedUpdateWithoutLog_transport_drumInput>
  }

  export type distillation_pending_assignmentUncheckedUpdateManyWithoutLog_transport_drumNestedInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutLog_transport_drumInput, distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput> | distillation_pending_assignmentCreateWithoutLog_transport_drumInput[] | distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput | distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput[]
    upsert?: distillation_pending_assignmentUpsertWithWhereUniqueWithoutLog_transport_drumInput | distillation_pending_assignmentUpsertWithWhereUniqueWithoutLog_transport_drumInput[]
    createMany?: distillation_pending_assignmentCreateManyLog_transport_drumInputEnvelope
    set?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    disconnect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    delete?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    update?: distillation_pending_assignmentUpdateWithWhereUniqueWithoutLog_transport_drumInput | distillation_pending_assignmentUpdateWithWhereUniqueWithoutLog_transport_drumInput[]
    updateMany?: distillation_pending_assignmentUpdateManyWithWhereWithoutLog_transport_drumInput | distillation_pending_assignmentUpdateManyWithWhereWithoutLog_transport_drumInput[]
    deleteMany?: distillation_pending_assignmentScalarWhereInput | distillation_pending_assignmentScalarWhereInput[]
  }

  export type distillation_scheduleCreateNestedOneWithoutLog_volume_transferInput = {
    create?: XOR<distillation_scheduleCreateWithoutLog_volume_transferInput, distillation_scheduleUncheckedCreateWithoutLog_volume_transferInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutLog_volume_transferInput
    connect?: distillation_scheduleWhereUniqueInput
  }

  export type stock_drumCreateNestedOneWithoutLog_volume_transferInput = {
    create?: XOR<stock_drumCreateWithoutLog_volume_transferInput, stock_drumUncheckedCreateWithoutLog_volume_transferInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutLog_volume_transferInput
    connect?: stock_drumWhereUniqueInput
  }

  export type distillation_scheduleUpdateOneRequiredWithoutLog_volume_transferNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutLog_volume_transferInput, distillation_scheduleUncheckedCreateWithoutLog_volume_transferInput>
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutLog_volume_transferInput
    upsert?: distillation_scheduleUpsertWithoutLog_volume_transferInput
    connect?: distillation_scheduleWhereUniqueInput
    update?: XOR<XOR<distillation_scheduleUpdateToOneWithWhereWithoutLog_volume_transferInput, distillation_scheduleUpdateWithoutLog_volume_transferInput>, distillation_scheduleUncheckedUpdateWithoutLog_volume_transferInput>
  }

  export type stock_drumUpdateOneRequiredWithoutLog_volume_transferNestedInput = {
    create?: XOR<stock_drumCreateWithoutLog_volume_transferInput, stock_drumUncheckedCreateWithoutLog_volume_transferInput>
    connectOrCreate?: stock_drumCreateOrConnectWithoutLog_volume_transferInput
    upsert?: stock_drumUpsertWithoutLog_volume_transferInput
    connect?: stock_drumWhereUniqueInput
    update?: XOR<XOR<stock_drumUpdateToOneWithWhereWithoutLog_volume_transferInput, stock_drumUpdateWithoutLog_volume_transferInput>, stock_drumUncheckedUpdateWithoutLog_volume_transferInput>
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ref_materialsCreateNestedOneWithoutOrder_detailInput = {
    create?: XOR<ref_materialsCreateWithoutOrder_detailInput, ref_materialsUncheckedCreateWithoutOrder_detailInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutOrder_detailInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type stock_orderCreateNestedOneWithoutOrder_detailInput = {
    create?: XOR<stock_orderCreateWithoutOrder_detailInput, stock_orderUncheckedCreateWithoutOrder_detailInput>
    connectOrCreate?: stock_orderCreateOrConnectWithoutOrder_detailInput
    connect?: stock_orderWhereUniqueInput
  }

  export type order_detail_stock_activityCreateNestedManyWithoutOrder_detailInput = {
    create?: XOR<order_detail_stock_activityCreateWithoutOrder_detailInput, order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput> | order_detail_stock_activityCreateWithoutOrder_detailInput[] | order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput | order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput[]
    createMany?: order_detail_stock_activityCreateManyOrder_detailInputEnvelope
    connect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
  }

  export type stock_activityCreateNestedManyWithoutOrder_detailInput = {
    create?: XOR<stock_activityCreateWithoutOrder_detailInput, stock_activityUncheckedCreateWithoutOrder_detailInput> | stock_activityCreateWithoutOrder_detailInput[] | stock_activityUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutOrder_detailInput | stock_activityCreateOrConnectWithoutOrder_detailInput[]
    createMany?: stock_activityCreateManyOrder_detailInputEnvelope
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
  }

  export type stock_drumCreateNestedManyWithoutOrder_detailInput = {
    create?: XOR<stock_drumCreateWithoutOrder_detailInput, stock_drumUncheckedCreateWithoutOrder_detailInput> | stock_drumCreateWithoutOrder_detailInput[] | stock_drumUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_drumCreateOrConnectWithoutOrder_detailInput | stock_drumCreateOrConnectWithoutOrder_detailInput[]
    createMany?: stock_drumCreateManyOrder_detailInputEnvelope
    connect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
  }

  export type stock_drum_newCreateNestedManyWithoutOrder_detailInput = {
    create?: XOR<stock_drum_newCreateWithoutOrder_detailInput, stock_drum_newUncheckedCreateWithoutOrder_detailInput> | stock_drum_newCreateWithoutOrder_detailInput[] | stock_drum_newUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutOrder_detailInput | stock_drum_newCreateOrConnectWithoutOrder_detailInput[]
    createMany?: stock_drum_newCreateManyOrder_detailInputEnvelope
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
  }

  export type order_detail_stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput = {
    create?: XOR<order_detail_stock_activityCreateWithoutOrder_detailInput, order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput> | order_detail_stock_activityCreateWithoutOrder_detailInput[] | order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput | order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput[]
    createMany?: order_detail_stock_activityCreateManyOrder_detailInputEnvelope
    connect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
  }

  export type stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput = {
    create?: XOR<stock_activityCreateWithoutOrder_detailInput, stock_activityUncheckedCreateWithoutOrder_detailInput> | stock_activityCreateWithoutOrder_detailInput[] | stock_activityUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutOrder_detailInput | stock_activityCreateOrConnectWithoutOrder_detailInput[]
    createMany?: stock_activityCreateManyOrder_detailInputEnvelope
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
  }

  export type stock_drumUncheckedCreateNestedManyWithoutOrder_detailInput = {
    create?: XOR<stock_drumCreateWithoutOrder_detailInput, stock_drumUncheckedCreateWithoutOrder_detailInput> | stock_drumCreateWithoutOrder_detailInput[] | stock_drumUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_drumCreateOrConnectWithoutOrder_detailInput | stock_drumCreateOrConnectWithoutOrder_detailInput[]
    createMany?: stock_drumCreateManyOrder_detailInputEnvelope
    connect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
  }

  export type stock_drum_newUncheckedCreateNestedManyWithoutOrder_detailInput = {
    create?: XOR<stock_drum_newCreateWithoutOrder_detailInput, stock_drum_newUncheckedCreateWithoutOrder_detailInput> | stock_drum_newCreateWithoutOrder_detailInput[] | stock_drum_newUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutOrder_detailInput | stock_drum_newCreateOrConnectWithoutOrder_detailInput[]
    createMany?: stock_drum_newCreateManyOrder_detailInputEnvelope
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type ref_materialsUpdateOneRequiredWithoutOrder_detailNestedInput = {
    create?: XOR<ref_materialsCreateWithoutOrder_detailInput, ref_materialsUncheckedCreateWithoutOrder_detailInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutOrder_detailInput
    upsert?: ref_materialsUpsertWithoutOrder_detailInput
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutOrder_detailInput, ref_materialsUpdateWithoutOrder_detailInput>, ref_materialsUncheckedUpdateWithoutOrder_detailInput>
  }

  export type stock_orderUpdateOneRequiredWithoutOrder_detailNestedInput = {
    create?: XOR<stock_orderCreateWithoutOrder_detailInput, stock_orderUncheckedCreateWithoutOrder_detailInput>
    connectOrCreate?: stock_orderCreateOrConnectWithoutOrder_detailInput
    upsert?: stock_orderUpsertWithoutOrder_detailInput
    connect?: stock_orderWhereUniqueInput
    update?: XOR<XOR<stock_orderUpdateToOneWithWhereWithoutOrder_detailInput, stock_orderUpdateWithoutOrder_detailInput>, stock_orderUncheckedUpdateWithoutOrder_detailInput>
  }

  export type order_detail_stock_activityUpdateManyWithoutOrder_detailNestedInput = {
    create?: XOR<order_detail_stock_activityCreateWithoutOrder_detailInput, order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput> | order_detail_stock_activityCreateWithoutOrder_detailInput[] | order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput | order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput[]
    upsert?: order_detail_stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput | order_detail_stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput[]
    createMany?: order_detail_stock_activityCreateManyOrder_detailInputEnvelope
    set?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    disconnect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    delete?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    connect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    update?: order_detail_stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput | order_detail_stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput[]
    updateMany?: order_detail_stock_activityUpdateManyWithWhereWithoutOrder_detailInput | order_detail_stock_activityUpdateManyWithWhereWithoutOrder_detailInput[]
    deleteMany?: order_detail_stock_activityScalarWhereInput | order_detail_stock_activityScalarWhereInput[]
  }

  export type stock_activityUpdateManyWithoutOrder_detailNestedInput = {
    create?: XOR<stock_activityCreateWithoutOrder_detailInput, stock_activityUncheckedCreateWithoutOrder_detailInput> | stock_activityCreateWithoutOrder_detailInput[] | stock_activityUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutOrder_detailInput | stock_activityCreateOrConnectWithoutOrder_detailInput[]
    upsert?: stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput | stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput[]
    createMany?: stock_activityCreateManyOrder_detailInputEnvelope
    set?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    disconnect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    delete?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    update?: stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput | stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput[]
    updateMany?: stock_activityUpdateManyWithWhereWithoutOrder_detailInput | stock_activityUpdateManyWithWhereWithoutOrder_detailInput[]
    deleteMany?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
  }

  export type stock_drumUpdateManyWithoutOrder_detailNestedInput = {
    create?: XOR<stock_drumCreateWithoutOrder_detailInput, stock_drumUncheckedCreateWithoutOrder_detailInput> | stock_drumCreateWithoutOrder_detailInput[] | stock_drumUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_drumCreateOrConnectWithoutOrder_detailInput | stock_drumCreateOrConnectWithoutOrder_detailInput[]
    upsert?: stock_drumUpsertWithWhereUniqueWithoutOrder_detailInput | stock_drumUpsertWithWhereUniqueWithoutOrder_detailInput[]
    createMany?: stock_drumCreateManyOrder_detailInputEnvelope
    set?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    disconnect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    delete?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    connect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    update?: stock_drumUpdateWithWhereUniqueWithoutOrder_detailInput | stock_drumUpdateWithWhereUniqueWithoutOrder_detailInput[]
    updateMany?: stock_drumUpdateManyWithWhereWithoutOrder_detailInput | stock_drumUpdateManyWithWhereWithoutOrder_detailInput[]
    deleteMany?: stock_drumScalarWhereInput | stock_drumScalarWhereInput[]
  }

  export type stock_drum_newUpdateManyWithoutOrder_detailNestedInput = {
    create?: XOR<stock_drum_newCreateWithoutOrder_detailInput, stock_drum_newUncheckedCreateWithoutOrder_detailInput> | stock_drum_newCreateWithoutOrder_detailInput[] | stock_drum_newUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutOrder_detailInput | stock_drum_newCreateOrConnectWithoutOrder_detailInput[]
    upsert?: stock_drum_newUpsertWithWhereUniqueWithoutOrder_detailInput | stock_drum_newUpsertWithWhereUniqueWithoutOrder_detailInput[]
    createMany?: stock_drum_newCreateManyOrder_detailInputEnvelope
    set?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    disconnect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    delete?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    update?: stock_drum_newUpdateWithWhereUniqueWithoutOrder_detailInput | stock_drum_newUpdateWithWhereUniqueWithoutOrder_detailInput[]
    updateMany?: stock_drum_newUpdateManyWithWhereWithoutOrder_detailInput | stock_drum_newUpdateManyWithWhereWithoutOrder_detailInput[]
    deleteMany?: stock_drum_newScalarWhereInput | stock_drum_newScalarWhereInput[]
  }

  export type order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput = {
    create?: XOR<order_detail_stock_activityCreateWithoutOrder_detailInput, order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput> | order_detail_stock_activityCreateWithoutOrder_detailInput[] | order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput | order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput[]
    upsert?: order_detail_stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput | order_detail_stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput[]
    createMany?: order_detail_stock_activityCreateManyOrder_detailInputEnvelope
    set?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    disconnect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    delete?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    connect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    update?: order_detail_stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput | order_detail_stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput[]
    updateMany?: order_detail_stock_activityUpdateManyWithWhereWithoutOrder_detailInput | order_detail_stock_activityUpdateManyWithWhereWithoutOrder_detailInput[]
    deleteMany?: order_detail_stock_activityScalarWhereInput | order_detail_stock_activityScalarWhereInput[]
  }

  export type stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput = {
    create?: XOR<stock_activityCreateWithoutOrder_detailInput, stock_activityUncheckedCreateWithoutOrder_detailInput> | stock_activityCreateWithoutOrder_detailInput[] | stock_activityUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutOrder_detailInput | stock_activityCreateOrConnectWithoutOrder_detailInput[]
    upsert?: stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput | stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput[]
    createMany?: stock_activityCreateManyOrder_detailInputEnvelope
    set?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    disconnect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    delete?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    update?: stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput | stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput[]
    updateMany?: stock_activityUpdateManyWithWhereWithoutOrder_detailInput | stock_activityUpdateManyWithWhereWithoutOrder_detailInput[]
    deleteMany?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
  }

  export type stock_drumUncheckedUpdateManyWithoutOrder_detailNestedInput = {
    create?: XOR<stock_drumCreateWithoutOrder_detailInput, stock_drumUncheckedCreateWithoutOrder_detailInput> | stock_drumCreateWithoutOrder_detailInput[] | stock_drumUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_drumCreateOrConnectWithoutOrder_detailInput | stock_drumCreateOrConnectWithoutOrder_detailInput[]
    upsert?: stock_drumUpsertWithWhereUniqueWithoutOrder_detailInput | stock_drumUpsertWithWhereUniqueWithoutOrder_detailInput[]
    createMany?: stock_drumCreateManyOrder_detailInputEnvelope
    set?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    disconnect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    delete?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    connect?: stock_drumWhereUniqueInput | stock_drumWhereUniqueInput[]
    update?: stock_drumUpdateWithWhereUniqueWithoutOrder_detailInput | stock_drumUpdateWithWhereUniqueWithoutOrder_detailInput[]
    updateMany?: stock_drumUpdateManyWithWhereWithoutOrder_detailInput | stock_drumUpdateManyWithWhereWithoutOrder_detailInput[]
    deleteMany?: stock_drumScalarWhereInput | stock_drumScalarWhereInput[]
  }

  export type stock_drum_newUncheckedUpdateManyWithoutOrder_detailNestedInput = {
    create?: XOR<stock_drum_newCreateWithoutOrder_detailInput, stock_drum_newUncheckedCreateWithoutOrder_detailInput> | stock_drum_newCreateWithoutOrder_detailInput[] | stock_drum_newUncheckedCreateWithoutOrder_detailInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutOrder_detailInput | stock_drum_newCreateOrConnectWithoutOrder_detailInput[]
    upsert?: stock_drum_newUpsertWithWhereUniqueWithoutOrder_detailInput | stock_drum_newUpsertWithWhereUniqueWithoutOrder_detailInput[]
    createMany?: stock_drum_newCreateManyOrder_detailInputEnvelope
    set?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    disconnect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    delete?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    update?: stock_drum_newUpdateWithWhereUniqueWithoutOrder_detailInput | stock_drum_newUpdateWithWhereUniqueWithoutOrder_detailInput[]
    updateMany?: stock_drum_newUpdateManyWithWhereWithoutOrder_detailInput | stock_drum_newUpdateManyWithWhereWithoutOrder_detailInput[]
    deleteMany?: stock_drum_newScalarWhereInput | stock_drum_newScalarWhereInput[]
  }

  export type bottle_sizesCreateNestedOneWithoutProduct_pricesInput = {
    create?: XOR<bottle_sizesCreateWithoutProduct_pricesInput, bottle_sizesUncheckedCreateWithoutProduct_pricesInput>
    connectOrCreate?: bottle_sizesCreateOrConnectWithoutProduct_pricesInput
    connect?: bottle_sizesWhereUniqueInput
  }

  export type ref_productCreateNestedOneWithoutProduct_pricesInput = {
    create?: XOR<ref_productCreateWithoutProduct_pricesInput, ref_productUncheckedCreateWithoutProduct_pricesInput>
    connectOrCreate?: ref_productCreateOrConnectWithoutProduct_pricesInput
    connect?: ref_productWhereUniqueInput
  }

  export type bottle_sizesUpdateOneRequiredWithoutProduct_pricesNestedInput = {
    create?: XOR<bottle_sizesCreateWithoutProduct_pricesInput, bottle_sizesUncheckedCreateWithoutProduct_pricesInput>
    connectOrCreate?: bottle_sizesCreateOrConnectWithoutProduct_pricesInput
    upsert?: bottle_sizesUpsertWithoutProduct_pricesInput
    connect?: bottle_sizesWhereUniqueInput
    update?: XOR<XOR<bottle_sizesUpdateToOneWithWhereWithoutProduct_pricesInput, bottle_sizesUpdateWithoutProduct_pricesInput>, bottle_sizesUncheckedUpdateWithoutProduct_pricesInput>
  }

  export type ref_productUpdateOneRequiredWithoutProduct_pricesNestedInput = {
    create?: XOR<ref_productCreateWithoutProduct_pricesInput, ref_productUncheckedCreateWithoutProduct_pricesInput>
    connectOrCreate?: ref_productCreateOrConnectWithoutProduct_pricesInput
    upsert?: ref_productUpsertWithoutProduct_pricesInput
    connect?: ref_productWhereUniqueInput
    update?: XOR<XOR<ref_productUpdateToOneWithWhereWithoutProduct_pricesInput, ref_productUpdateWithoutProduct_pricesInput>, ref_productUncheckedUpdateWithoutProduct_pricesInput>
  }

  export type order_detailCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<order_detailCreateWithoutRef_materialsInput, order_detailUncheckedCreateWithoutRef_materialsInput> | order_detailCreateWithoutRef_materialsInput[] | order_detailUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: order_detailCreateOrConnectWithoutRef_materialsInput | order_detailCreateOrConnectWithoutRef_materialsInput[]
    createMany?: order_detailCreateManyRef_materialsInputEnvelope
    connect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
  }

  export type raw_stock_historyCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<raw_stock_historyCreateWithoutRef_materialsInput, raw_stock_historyUncheckedCreateWithoutRef_materialsInput> | raw_stock_historyCreateWithoutRef_materialsInput[] | raw_stock_historyUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: raw_stock_historyCreateOrConnectWithoutRef_materialsInput | raw_stock_historyCreateOrConnectWithoutRef_materialsInput[]
    createMany?: raw_stock_historyCreateManyRef_materialsInputEnvelope
    connect?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
  }

  export type chemical_group_kindCreateNestedOneWithoutRef_materialsInput = {
    create?: XOR<chemical_group_kindCreateWithoutRef_materialsInput, chemical_group_kindUncheckedCreateWithoutRef_materialsInput>
    connectOrCreate?: chemical_group_kindCreateOrConnectWithoutRef_materialsInput
    connect?: chemical_group_kindWhereUniqueInput
  }

  export type ref_productCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<ref_productCreateWithoutRef_materialsInput, ref_productUncheckedCreateWithoutRef_materialsInput> | ref_productCreateWithoutRef_materialsInput[] | ref_productUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: ref_productCreateOrConnectWithoutRef_materialsInput | ref_productCreateOrConnectWithoutRef_materialsInput[]
    createMany?: ref_productCreateManyRef_materialsInputEnvelope
    connect?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
  }

  export type ref_supplier_materialCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<ref_supplier_materialCreateWithoutRef_materialsInput, ref_supplier_materialUncheckedCreateWithoutRef_materialsInput> | ref_supplier_materialCreateWithoutRef_materialsInput[] | ref_supplier_materialUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: ref_supplier_materialCreateOrConnectWithoutRef_materialsInput | ref_supplier_materialCreateOrConnectWithoutRef_materialsInput[]
    createMany?: ref_supplier_materialCreateManyRef_materialsInputEnvelope
    connect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
  }

  export type stock_activityCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_activityCreateWithoutRef_materialsInput, stock_activityUncheckedCreateWithoutRef_materialsInput> | stock_activityCreateWithoutRef_materialsInput[] | stock_activityUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutRef_materialsInput | stock_activityCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_activityCreateManyRef_materialsInputEnvelope
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
  }

  export type stock_drum_newCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_drum_newCreateWithoutRef_materialsInput, stock_drum_newUncheckedCreateWithoutRef_materialsInput> | stock_drum_newCreateWithoutRef_materialsInput[] | stock_drum_newUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutRef_materialsInput | stock_drum_newCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_drum_newCreateManyRef_materialsInputEnvelope
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
  }

  export type stock_historyCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_historyCreateWithoutRef_materialsInput, stock_historyUncheckedCreateWithoutRef_materialsInput> | stock_historyCreateWithoutRef_materialsInput[] | stock_historyUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRef_materialsInput | stock_historyCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_historyCreateManyRef_materialsInputEnvelope
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
  }

  export type stock_newCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_newCreateWithoutRef_materialsInput, stock_newUncheckedCreateWithoutRef_materialsInput> | stock_newCreateWithoutRef_materialsInput[] | stock_newUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_newCreateOrConnectWithoutRef_materialsInput | stock_newCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_newCreateManyRef_materialsInputEnvelope
    connect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
  }

  export type stock_reproCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_reproCreateWithoutRef_materialsInput, stock_reproUncheckedCreateWithoutRef_materialsInput> | stock_reproCreateWithoutRef_materialsInput[] | stock_reproUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_reproCreateOrConnectWithoutRef_materialsInput | stock_reproCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_reproCreateManyRef_materialsInputEnvelope
    connect?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
  }

  export type order_detailUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<order_detailCreateWithoutRef_materialsInput, order_detailUncheckedCreateWithoutRef_materialsInput> | order_detailCreateWithoutRef_materialsInput[] | order_detailUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: order_detailCreateOrConnectWithoutRef_materialsInput | order_detailCreateOrConnectWithoutRef_materialsInput[]
    createMany?: order_detailCreateManyRef_materialsInputEnvelope
    connect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
  }

  export type raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<raw_stock_historyCreateWithoutRef_materialsInput, raw_stock_historyUncheckedCreateWithoutRef_materialsInput> | raw_stock_historyCreateWithoutRef_materialsInput[] | raw_stock_historyUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: raw_stock_historyCreateOrConnectWithoutRef_materialsInput | raw_stock_historyCreateOrConnectWithoutRef_materialsInput[]
    createMany?: raw_stock_historyCreateManyRef_materialsInputEnvelope
    connect?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
  }

  export type ref_productUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<ref_productCreateWithoutRef_materialsInput, ref_productUncheckedCreateWithoutRef_materialsInput> | ref_productCreateWithoutRef_materialsInput[] | ref_productUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: ref_productCreateOrConnectWithoutRef_materialsInput | ref_productCreateOrConnectWithoutRef_materialsInput[]
    createMany?: ref_productCreateManyRef_materialsInputEnvelope
    connect?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
  }

  export type ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<ref_supplier_materialCreateWithoutRef_materialsInput, ref_supplier_materialUncheckedCreateWithoutRef_materialsInput> | ref_supplier_materialCreateWithoutRef_materialsInput[] | ref_supplier_materialUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: ref_supplier_materialCreateOrConnectWithoutRef_materialsInput | ref_supplier_materialCreateOrConnectWithoutRef_materialsInput[]
    createMany?: ref_supplier_materialCreateManyRef_materialsInputEnvelope
    connect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
  }

  export type stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_activityCreateWithoutRef_materialsInput, stock_activityUncheckedCreateWithoutRef_materialsInput> | stock_activityCreateWithoutRef_materialsInput[] | stock_activityUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutRef_materialsInput | stock_activityCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_activityCreateManyRef_materialsInputEnvelope
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
  }

  export type stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_drum_newCreateWithoutRef_materialsInput, stock_drum_newUncheckedCreateWithoutRef_materialsInput> | stock_drum_newCreateWithoutRef_materialsInput[] | stock_drum_newUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutRef_materialsInput | stock_drum_newCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_drum_newCreateManyRef_materialsInputEnvelope
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
  }

  export type stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_historyCreateWithoutRef_materialsInput, stock_historyUncheckedCreateWithoutRef_materialsInput> | stock_historyCreateWithoutRef_materialsInput[] | stock_historyUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRef_materialsInput | stock_historyCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_historyCreateManyRef_materialsInputEnvelope
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
  }

  export type stock_newUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_newCreateWithoutRef_materialsInput, stock_newUncheckedCreateWithoutRef_materialsInput> | stock_newCreateWithoutRef_materialsInput[] | stock_newUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_newCreateOrConnectWithoutRef_materialsInput | stock_newCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_newCreateManyRef_materialsInputEnvelope
    connect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
  }

  export type stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput = {
    create?: XOR<stock_reproCreateWithoutRef_materialsInput, stock_reproUncheckedCreateWithoutRef_materialsInput> | stock_reproCreateWithoutRef_materialsInput[] | stock_reproUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_reproCreateOrConnectWithoutRef_materialsInput | stock_reproCreateOrConnectWithoutRef_materialsInput[]
    createMany?: stock_reproCreateManyRef_materialsInputEnvelope
    connect?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
  }

  export type order_detailUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<order_detailCreateWithoutRef_materialsInput, order_detailUncheckedCreateWithoutRef_materialsInput> | order_detailCreateWithoutRef_materialsInput[] | order_detailUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: order_detailCreateOrConnectWithoutRef_materialsInput | order_detailCreateOrConnectWithoutRef_materialsInput[]
    upsert?: order_detailUpsertWithWhereUniqueWithoutRef_materialsInput | order_detailUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: order_detailCreateManyRef_materialsInputEnvelope
    set?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    disconnect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    delete?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    connect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    update?: order_detailUpdateWithWhereUniqueWithoutRef_materialsInput | order_detailUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: order_detailUpdateManyWithWhereWithoutRef_materialsInput | order_detailUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: order_detailScalarWhereInput | order_detailScalarWhereInput[]
  }

  export type raw_stock_historyUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<raw_stock_historyCreateWithoutRef_materialsInput, raw_stock_historyUncheckedCreateWithoutRef_materialsInput> | raw_stock_historyCreateWithoutRef_materialsInput[] | raw_stock_historyUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: raw_stock_historyCreateOrConnectWithoutRef_materialsInput | raw_stock_historyCreateOrConnectWithoutRef_materialsInput[]
    upsert?: raw_stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput | raw_stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: raw_stock_historyCreateManyRef_materialsInputEnvelope
    set?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
    disconnect?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
    delete?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
    connect?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
    update?: raw_stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput | raw_stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: raw_stock_historyUpdateManyWithWhereWithoutRef_materialsInput | raw_stock_historyUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: raw_stock_historyScalarWhereInput | raw_stock_historyScalarWhereInput[]
  }

  export type chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput = {
    create?: XOR<chemical_group_kindCreateWithoutRef_materialsInput, chemical_group_kindUncheckedCreateWithoutRef_materialsInput>
    connectOrCreate?: chemical_group_kindCreateOrConnectWithoutRef_materialsInput
    upsert?: chemical_group_kindUpsertWithoutRef_materialsInput
    connect?: chemical_group_kindWhereUniqueInput
    update?: XOR<XOR<chemical_group_kindUpdateToOneWithWhereWithoutRef_materialsInput, chemical_group_kindUpdateWithoutRef_materialsInput>, chemical_group_kindUncheckedUpdateWithoutRef_materialsInput>
  }

  export type ref_productUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<ref_productCreateWithoutRef_materialsInput, ref_productUncheckedCreateWithoutRef_materialsInput> | ref_productCreateWithoutRef_materialsInput[] | ref_productUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: ref_productCreateOrConnectWithoutRef_materialsInput | ref_productCreateOrConnectWithoutRef_materialsInput[]
    upsert?: ref_productUpsertWithWhereUniqueWithoutRef_materialsInput | ref_productUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: ref_productCreateManyRef_materialsInputEnvelope
    set?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
    disconnect?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
    delete?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
    connect?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
    update?: ref_productUpdateWithWhereUniqueWithoutRef_materialsInput | ref_productUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: ref_productUpdateManyWithWhereWithoutRef_materialsInput | ref_productUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: ref_productScalarWhereInput | ref_productScalarWhereInput[]
  }

  export type ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<ref_supplier_materialCreateWithoutRef_materialsInput, ref_supplier_materialUncheckedCreateWithoutRef_materialsInput> | ref_supplier_materialCreateWithoutRef_materialsInput[] | ref_supplier_materialUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: ref_supplier_materialCreateOrConnectWithoutRef_materialsInput | ref_supplier_materialCreateOrConnectWithoutRef_materialsInput[]
    upsert?: ref_supplier_materialUpsertWithWhereUniqueWithoutRef_materialsInput | ref_supplier_materialUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: ref_supplier_materialCreateManyRef_materialsInputEnvelope
    set?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    disconnect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    delete?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    connect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    update?: ref_supplier_materialUpdateWithWhereUniqueWithoutRef_materialsInput | ref_supplier_materialUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: ref_supplier_materialUpdateManyWithWhereWithoutRef_materialsInput | ref_supplier_materialUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: ref_supplier_materialScalarWhereInput | ref_supplier_materialScalarWhereInput[]
  }

  export type stock_activityUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_activityCreateWithoutRef_materialsInput, stock_activityUncheckedCreateWithoutRef_materialsInput> | stock_activityCreateWithoutRef_materialsInput[] | stock_activityUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutRef_materialsInput | stock_activityCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_activityUpsertWithWhereUniqueWithoutRef_materialsInput | stock_activityUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_activityCreateManyRef_materialsInputEnvelope
    set?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    disconnect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    delete?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    update?: stock_activityUpdateWithWhereUniqueWithoutRef_materialsInput | stock_activityUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_activityUpdateManyWithWhereWithoutRef_materialsInput | stock_activityUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
  }

  export type stock_drum_newUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_drum_newCreateWithoutRef_materialsInput, stock_drum_newUncheckedCreateWithoutRef_materialsInput> | stock_drum_newCreateWithoutRef_materialsInput[] | stock_drum_newUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutRef_materialsInput | stock_drum_newCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_drum_newUpsertWithWhereUniqueWithoutRef_materialsInput | stock_drum_newUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_drum_newCreateManyRef_materialsInputEnvelope
    set?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    disconnect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    delete?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    update?: stock_drum_newUpdateWithWhereUniqueWithoutRef_materialsInput | stock_drum_newUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_drum_newUpdateManyWithWhereWithoutRef_materialsInput | stock_drum_newUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_drum_newScalarWhereInput | stock_drum_newScalarWhereInput[]
  }

  export type stock_historyUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_historyCreateWithoutRef_materialsInput, stock_historyUncheckedCreateWithoutRef_materialsInput> | stock_historyCreateWithoutRef_materialsInput[] | stock_historyUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRef_materialsInput | stock_historyCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput | stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_historyCreateManyRef_materialsInputEnvelope
    set?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    disconnect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    delete?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    update?: stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput | stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_historyUpdateManyWithWhereWithoutRef_materialsInput | stock_historyUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_historyScalarWhereInput | stock_historyScalarWhereInput[]
  }

  export type stock_newUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_newCreateWithoutRef_materialsInput, stock_newUncheckedCreateWithoutRef_materialsInput> | stock_newCreateWithoutRef_materialsInput[] | stock_newUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_newCreateOrConnectWithoutRef_materialsInput | stock_newCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_newUpsertWithWhereUniqueWithoutRef_materialsInput | stock_newUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_newCreateManyRef_materialsInputEnvelope
    set?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    disconnect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    delete?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    connect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    update?: stock_newUpdateWithWhereUniqueWithoutRef_materialsInput | stock_newUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_newUpdateManyWithWhereWithoutRef_materialsInput | stock_newUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_newScalarWhereInput | stock_newScalarWhereInput[]
  }

  export type stock_reproUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_reproCreateWithoutRef_materialsInput, stock_reproUncheckedCreateWithoutRef_materialsInput> | stock_reproCreateWithoutRef_materialsInput[] | stock_reproUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_reproCreateOrConnectWithoutRef_materialsInput | stock_reproCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_reproUpsertWithWhereUniqueWithoutRef_materialsInput | stock_reproUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_reproCreateManyRef_materialsInputEnvelope
    set?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
    disconnect?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
    delete?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
    connect?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
    update?: stock_reproUpdateWithWhereUniqueWithoutRef_materialsInput | stock_reproUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_reproUpdateManyWithWhereWithoutRef_materialsInput | stock_reproUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_reproScalarWhereInput | stock_reproScalarWhereInput[]
  }

  export type order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<order_detailCreateWithoutRef_materialsInput, order_detailUncheckedCreateWithoutRef_materialsInput> | order_detailCreateWithoutRef_materialsInput[] | order_detailUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: order_detailCreateOrConnectWithoutRef_materialsInput | order_detailCreateOrConnectWithoutRef_materialsInput[]
    upsert?: order_detailUpsertWithWhereUniqueWithoutRef_materialsInput | order_detailUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: order_detailCreateManyRef_materialsInputEnvelope
    set?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    disconnect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    delete?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    connect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    update?: order_detailUpdateWithWhereUniqueWithoutRef_materialsInput | order_detailUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: order_detailUpdateManyWithWhereWithoutRef_materialsInput | order_detailUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: order_detailScalarWhereInput | order_detailScalarWhereInput[]
  }

  export type raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<raw_stock_historyCreateWithoutRef_materialsInput, raw_stock_historyUncheckedCreateWithoutRef_materialsInput> | raw_stock_historyCreateWithoutRef_materialsInput[] | raw_stock_historyUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: raw_stock_historyCreateOrConnectWithoutRef_materialsInput | raw_stock_historyCreateOrConnectWithoutRef_materialsInput[]
    upsert?: raw_stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput | raw_stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: raw_stock_historyCreateManyRef_materialsInputEnvelope
    set?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
    disconnect?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
    delete?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
    connect?: raw_stock_historyWhereUniqueInput | raw_stock_historyWhereUniqueInput[]
    update?: raw_stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput | raw_stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: raw_stock_historyUpdateManyWithWhereWithoutRef_materialsInput | raw_stock_historyUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: raw_stock_historyScalarWhereInput | raw_stock_historyScalarWhereInput[]
  }

  export type ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<ref_productCreateWithoutRef_materialsInput, ref_productUncheckedCreateWithoutRef_materialsInput> | ref_productCreateWithoutRef_materialsInput[] | ref_productUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: ref_productCreateOrConnectWithoutRef_materialsInput | ref_productCreateOrConnectWithoutRef_materialsInput[]
    upsert?: ref_productUpsertWithWhereUniqueWithoutRef_materialsInput | ref_productUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: ref_productCreateManyRef_materialsInputEnvelope
    set?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
    disconnect?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
    delete?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
    connect?: ref_productWhereUniqueInput | ref_productWhereUniqueInput[]
    update?: ref_productUpdateWithWhereUniqueWithoutRef_materialsInput | ref_productUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: ref_productUpdateManyWithWhereWithoutRef_materialsInput | ref_productUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: ref_productScalarWhereInput | ref_productScalarWhereInput[]
  }

  export type ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<ref_supplier_materialCreateWithoutRef_materialsInput, ref_supplier_materialUncheckedCreateWithoutRef_materialsInput> | ref_supplier_materialCreateWithoutRef_materialsInput[] | ref_supplier_materialUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: ref_supplier_materialCreateOrConnectWithoutRef_materialsInput | ref_supplier_materialCreateOrConnectWithoutRef_materialsInput[]
    upsert?: ref_supplier_materialUpsertWithWhereUniqueWithoutRef_materialsInput | ref_supplier_materialUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: ref_supplier_materialCreateManyRef_materialsInputEnvelope
    set?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    disconnect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    delete?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    connect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    update?: ref_supplier_materialUpdateWithWhereUniqueWithoutRef_materialsInput | ref_supplier_materialUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: ref_supplier_materialUpdateManyWithWhereWithoutRef_materialsInput | ref_supplier_materialUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: ref_supplier_materialScalarWhereInput | ref_supplier_materialScalarWhereInput[]
  }

  export type stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_activityCreateWithoutRef_materialsInput, stock_activityUncheckedCreateWithoutRef_materialsInput> | stock_activityCreateWithoutRef_materialsInput[] | stock_activityUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutRef_materialsInput | stock_activityCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_activityUpsertWithWhereUniqueWithoutRef_materialsInput | stock_activityUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_activityCreateManyRef_materialsInputEnvelope
    set?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    disconnect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    delete?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    update?: stock_activityUpdateWithWhereUniqueWithoutRef_materialsInput | stock_activityUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_activityUpdateManyWithWhereWithoutRef_materialsInput | stock_activityUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
  }

  export type stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_drum_newCreateWithoutRef_materialsInput, stock_drum_newUncheckedCreateWithoutRef_materialsInput> | stock_drum_newCreateWithoutRef_materialsInput[] | stock_drum_newUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_drum_newCreateOrConnectWithoutRef_materialsInput | stock_drum_newCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_drum_newUpsertWithWhereUniqueWithoutRef_materialsInput | stock_drum_newUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_drum_newCreateManyRef_materialsInputEnvelope
    set?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    disconnect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    delete?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    connect?: stock_drum_newWhereUniqueInput | stock_drum_newWhereUniqueInput[]
    update?: stock_drum_newUpdateWithWhereUniqueWithoutRef_materialsInput | stock_drum_newUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_drum_newUpdateManyWithWhereWithoutRef_materialsInput | stock_drum_newUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_drum_newScalarWhereInput | stock_drum_newScalarWhereInput[]
  }

  export type stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_historyCreateWithoutRef_materialsInput, stock_historyUncheckedCreateWithoutRef_materialsInput> | stock_historyCreateWithoutRef_materialsInput[] | stock_historyUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRef_materialsInput | stock_historyCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput | stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_historyCreateManyRef_materialsInputEnvelope
    set?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    disconnect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    delete?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    update?: stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput | stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_historyUpdateManyWithWhereWithoutRef_materialsInput | stock_historyUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_historyScalarWhereInput | stock_historyScalarWhereInput[]
  }

  export type stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_newCreateWithoutRef_materialsInput, stock_newUncheckedCreateWithoutRef_materialsInput> | stock_newCreateWithoutRef_materialsInput[] | stock_newUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_newCreateOrConnectWithoutRef_materialsInput | stock_newCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_newUpsertWithWhereUniqueWithoutRef_materialsInput | stock_newUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_newCreateManyRef_materialsInputEnvelope
    set?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    disconnect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    delete?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    connect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    update?: stock_newUpdateWithWhereUniqueWithoutRef_materialsInput | stock_newUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_newUpdateManyWithWhereWithoutRef_materialsInput | stock_newUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_newScalarWhereInput | stock_newScalarWhereInput[]
  }

  export type stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput = {
    create?: XOR<stock_reproCreateWithoutRef_materialsInput, stock_reproUncheckedCreateWithoutRef_materialsInput> | stock_reproCreateWithoutRef_materialsInput[] | stock_reproUncheckedCreateWithoutRef_materialsInput[]
    connectOrCreate?: stock_reproCreateOrConnectWithoutRef_materialsInput | stock_reproCreateOrConnectWithoutRef_materialsInput[]
    upsert?: stock_reproUpsertWithWhereUniqueWithoutRef_materialsInput | stock_reproUpsertWithWhereUniqueWithoutRef_materialsInput[]
    createMany?: stock_reproCreateManyRef_materialsInputEnvelope
    set?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
    disconnect?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
    delete?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
    connect?: stock_reproWhereUniqueInput | stock_reproWhereUniqueInput[]
    update?: stock_reproUpdateWithWhereUniqueWithoutRef_materialsInput | stock_reproUpdateWithWhereUniqueWithoutRef_materialsInput[]
    updateMany?: stock_reproUpdateManyWithWhereWithoutRef_materialsInput | stock_reproUpdateManyWithWhereWithoutRef_materialsInput[]
    deleteMany?: stock_reproScalarWhereInput | stock_reproScalarWhereInput[]
  }

  export type active_contextCreateNestedManyWithoutRef_stillsInput = {
    create?: XOR<active_contextCreateWithoutRef_stillsInput, active_contextUncheckedCreateWithoutRef_stillsInput> | active_contextCreateWithoutRef_stillsInput[] | active_contextUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: active_contextCreateOrConnectWithoutRef_stillsInput | active_contextCreateOrConnectWithoutRef_stillsInput[]
    createMany?: active_contextCreateManyRef_stillsInputEnvelope
    connect?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
  }

  export type distillation_scheduleCreateNestedManyWithoutRef_stillsInput = {
    create?: XOR<distillation_scheduleCreateWithoutRef_stillsInput, distillation_scheduleUncheckedCreateWithoutRef_stillsInput> | distillation_scheduleCreateWithoutRef_stillsInput[] | distillation_scheduleUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutRef_stillsInput | distillation_scheduleCreateOrConnectWithoutRef_stillsInput[]
    createMany?: distillation_scheduleCreateManyRef_stillsInputEnvelope
    connect?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
  }

  export type log_load_stillCreateNestedManyWithoutRef_stillsInput = {
    create?: XOR<log_load_stillCreateWithoutRef_stillsInput, log_load_stillUncheckedCreateWithoutRef_stillsInput> | log_load_stillCreateWithoutRef_stillsInput[] | log_load_stillUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutRef_stillsInput | log_load_stillCreateOrConnectWithoutRef_stillsInput[]
    createMany?: log_load_stillCreateManyRef_stillsInputEnvelope
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
  }

  export type log_start_distillationCreateNestedManyWithoutRef_stillsInput = {
    create?: XOR<log_start_distillationCreateWithoutRef_stillsInput, log_start_distillationUncheckedCreateWithoutRef_stillsInput> | log_start_distillationCreateWithoutRef_stillsInput[] | log_start_distillationUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: log_start_distillationCreateOrConnectWithoutRef_stillsInput | log_start_distillationCreateOrConnectWithoutRef_stillsInput[]
    createMany?: log_start_distillationCreateManyRef_stillsInputEnvelope
    connect?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
  }

  export type active_contextUncheckedCreateNestedManyWithoutRef_stillsInput = {
    create?: XOR<active_contextCreateWithoutRef_stillsInput, active_contextUncheckedCreateWithoutRef_stillsInput> | active_contextCreateWithoutRef_stillsInput[] | active_contextUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: active_contextCreateOrConnectWithoutRef_stillsInput | active_contextCreateOrConnectWithoutRef_stillsInput[]
    createMany?: active_contextCreateManyRef_stillsInputEnvelope
    connect?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
  }

  export type distillation_scheduleUncheckedCreateNestedManyWithoutRef_stillsInput = {
    create?: XOR<distillation_scheduleCreateWithoutRef_stillsInput, distillation_scheduleUncheckedCreateWithoutRef_stillsInput> | distillation_scheduleCreateWithoutRef_stillsInput[] | distillation_scheduleUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutRef_stillsInput | distillation_scheduleCreateOrConnectWithoutRef_stillsInput[]
    createMany?: distillation_scheduleCreateManyRef_stillsInputEnvelope
    connect?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
  }

  export type log_load_stillUncheckedCreateNestedManyWithoutRef_stillsInput = {
    create?: XOR<log_load_stillCreateWithoutRef_stillsInput, log_load_stillUncheckedCreateWithoutRef_stillsInput> | log_load_stillCreateWithoutRef_stillsInput[] | log_load_stillUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutRef_stillsInput | log_load_stillCreateOrConnectWithoutRef_stillsInput[]
    createMany?: log_load_stillCreateManyRef_stillsInputEnvelope
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
  }

  export type log_start_distillationUncheckedCreateNestedManyWithoutRef_stillsInput = {
    create?: XOR<log_start_distillationCreateWithoutRef_stillsInput, log_start_distillationUncheckedCreateWithoutRef_stillsInput> | log_start_distillationCreateWithoutRef_stillsInput[] | log_start_distillationUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: log_start_distillationCreateOrConnectWithoutRef_stillsInput | log_start_distillationCreateOrConnectWithoutRef_stillsInput[]
    createMany?: log_start_distillationCreateManyRef_stillsInputEnvelope
    connect?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
  }

  export type active_contextUpdateManyWithoutRef_stillsNestedInput = {
    create?: XOR<active_contextCreateWithoutRef_stillsInput, active_contextUncheckedCreateWithoutRef_stillsInput> | active_contextCreateWithoutRef_stillsInput[] | active_contextUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: active_contextCreateOrConnectWithoutRef_stillsInput | active_contextCreateOrConnectWithoutRef_stillsInput[]
    upsert?: active_contextUpsertWithWhereUniqueWithoutRef_stillsInput | active_contextUpsertWithWhereUniqueWithoutRef_stillsInput[]
    createMany?: active_contextCreateManyRef_stillsInputEnvelope
    set?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
    disconnect?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
    delete?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
    connect?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
    update?: active_contextUpdateWithWhereUniqueWithoutRef_stillsInput | active_contextUpdateWithWhereUniqueWithoutRef_stillsInput[]
    updateMany?: active_contextUpdateManyWithWhereWithoutRef_stillsInput | active_contextUpdateManyWithWhereWithoutRef_stillsInput[]
    deleteMany?: active_contextScalarWhereInput | active_contextScalarWhereInput[]
  }

  export type distillation_scheduleUpdateManyWithoutRef_stillsNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutRef_stillsInput, distillation_scheduleUncheckedCreateWithoutRef_stillsInput> | distillation_scheduleCreateWithoutRef_stillsInput[] | distillation_scheduleUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutRef_stillsInput | distillation_scheduleCreateOrConnectWithoutRef_stillsInput[]
    upsert?: distillation_scheduleUpsertWithWhereUniqueWithoutRef_stillsInput | distillation_scheduleUpsertWithWhereUniqueWithoutRef_stillsInput[]
    createMany?: distillation_scheduleCreateManyRef_stillsInputEnvelope
    set?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
    disconnect?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
    delete?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
    connect?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
    update?: distillation_scheduleUpdateWithWhereUniqueWithoutRef_stillsInput | distillation_scheduleUpdateWithWhereUniqueWithoutRef_stillsInput[]
    updateMany?: distillation_scheduleUpdateManyWithWhereWithoutRef_stillsInput | distillation_scheduleUpdateManyWithWhereWithoutRef_stillsInput[]
    deleteMany?: distillation_scheduleScalarWhereInput | distillation_scheduleScalarWhereInput[]
  }

  export type log_load_stillUpdateManyWithoutRef_stillsNestedInput = {
    create?: XOR<log_load_stillCreateWithoutRef_stillsInput, log_load_stillUncheckedCreateWithoutRef_stillsInput> | log_load_stillCreateWithoutRef_stillsInput[] | log_load_stillUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutRef_stillsInput | log_load_stillCreateOrConnectWithoutRef_stillsInput[]
    upsert?: log_load_stillUpsertWithWhereUniqueWithoutRef_stillsInput | log_load_stillUpsertWithWhereUniqueWithoutRef_stillsInput[]
    createMany?: log_load_stillCreateManyRef_stillsInputEnvelope
    set?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    disconnect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    delete?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    update?: log_load_stillUpdateWithWhereUniqueWithoutRef_stillsInput | log_load_stillUpdateWithWhereUniqueWithoutRef_stillsInput[]
    updateMany?: log_load_stillUpdateManyWithWhereWithoutRef_stillsInput | log_load_stillUpdateManyWithWhereWithoutRef_stillsInput[]
    deleteMany?: log_load_stillScalarWhereInput | log_load_stillScalarWhereInput[]
  }

  export type log_start_distillationUpdateManyWithoutRef_stillsNestedInput = {
    create?: XOR<log_start_distillationCreateWithoutRef_stillsInput, log_start_distillationUncheckedCreateWithoutRef_stillsInput> | log_start_distillationCreateWithoutRef_stillsInput[] | log_start_distillationUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: log_start_distillationCreateOrConnectWithoutRef_stillsInput | log_start_distillationCreateOrConnectWithoutRef_stillsInput[]
    upsert?: log_start_distillationUpsertWithWhereUniqueWithoutRef_stillsInput | log_start_distillationUpsertWithWhereUniqueWithoutRef_stillsInput[]
    createMany?: log_start_distillationCreateManyRef_stillsInputEnvelope
    set?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
    disconnect?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
    delete?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
    connect?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
    update?: log_start_distillationUpdateWithWhereUniqueWithoutRef_stillsInput | log_start_distillationUpdateWithWhereUniqueWithoutRef_stillsInput[]
    updateMany?: log_start_distillationUpdateManyWithWhereWithoutRef_stillsInput | log_start_distillationUpdateManyWithWhereWithoutRef_stillsInput[]
    deleteMany?: log_start_distillationScalarWhereInput | log_start_distillationScalarWhereInput[]
  }

  export type active_contextUncheckedUpdateManyWithoutRef_stillsNestedInput = {
    create?: XOR<active_contextCreateWithoutRef_stillsInput, active_contextUncheckedCreateWithoutRef_stillsInput> | active_contextCreateWithoutRef_stillsInput[] | active_contextUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: active_contextCreateOrConnectWithoutRef_stillsInput | active_contextCreateOrConnectWithoutRef_stillsInput[]
    upsert?: active_contextUpsertWithWhereUniqueWithoutRef_stillsInput | active_contextUpsertWithWhereUniqueWithoutRef_stillsInput[]
    createMany?: active_contextCreateManyRef_stillsInputEnvelope
    set?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
    disconnect?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
    delete?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
    connect?: active_contextWhereUniqueInput | active_contextWhereUniqueInput[]
    update?: active_contextUpdateWithWhereUniqueWithoutRef_stillsInput | active_contextUpdateWithWhereUniqueWithoutRef_stillsInput[]
    updateMany?: active_contextUpdateManyWithWhereWithoutRef_stillsInput | active_contextUpdateManyWithWhereWithoutRef_stillsInput[]
    deleteMany?: active_contextScalarWhereInput | active_contextScalarWhereInput[]
  }

  export type distillation_scheduleUncheckedUpdateManyWithoutRef_stillsNestedInput = {
    create?: XOR<distillation_scheduleCreateWithoutRef_stillsInput, distillation_scheduleUncheckedCreateWithoutRef_stillsInput> | distillation_scheduleCreateWithoutRef_stillsInput[] | distillation_scheduleUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: distillation_scheduleCreateOrConnectWithoutRef_stillsInput | distillation_scheduleCreateOrConnectWithoutRef_stillsInput[]
    upsert?: distillation_scheduleUpsertWithWhereUniqueWithoutRef_stillsInput | distillation_scheduleUpsertWithWhereUniqueWithoutRef_stillsInput[]
    createMany?: distillation_scheduleCreateManyRef_stillsInputEnvelope
    set?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
    disconnect?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
    delete?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
    connect?: distillation_scheduleWhereUniqueInput | distillation_scheduleWhereUniqueInput[]
    update?: distillation_scheduleUpdateWithWhereUniqueWithoutRef_stillsInput | distillation_scheduleUpdateWithWhereUniqueWithoutRef_stillsInput[]
    updateMany?: distillation_scheduleUpdateManyWithWhereWithoutRef_stillsInput | distillation_scheduleUpdateManyWithWhereWithoutRef_stillsInput[]
    deleteMany?: distillation_scheduleScalarWhereInput | distillation_scheduleScalarWhereInput[]
  }

  export type log_load_stillUncheckedUpdateManyWithoutRef_stillsNestedInput = {
    create?: XOR<log_load_stillCreateWithoutRef_stillsInput, log_load_stillUncheckedCreateWithoutRef_stillsInput> | log_load_stillCreateWithoutRef_stillsInput[] | log_load_stillUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutRef_stillsInput | log_load_stillCreateOrConnectWithoutRef_stillsInput[]
    upsert?: log_load_stillUpsertWithWhereUniqueWithoutRef_stillsInput | log_load_stillUpsertWithWhereUniqueWithoutRef_stillsInput[]
    createMany?: log_load_stillCreateManyRef_stillsInputEnvelope
    set?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    disconnect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    delete?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    update?: log_load_stillUpdateWithWhereUniqueWithoutRef_stillsInput | log_load_stillUpdateWithWhereUniqueWithoutRef_stillsInput[]
    updateMany?: log_load_stillUpdateManyWithWhereWithoutRef_stillsInput | log_load_stillUpdateManyWithWhereWithoutRef_stillsInput[]
    deleteMany?: log_load_stillScalarWhereInput | log_load_stillScalarWhereInput[]
  }

  export type log_start_distillationUncheckedUpdateManyWithoutRef_stillsNestedInput = {
    create?: XOR<log_start_distillationCreateWithoutRef_stillsInput, log_start_distillationUncheckedCreateWithoutRef_stillsInput> | log_start_distillationCreateWithoutRef_stillsInput[] | log_start_distillationUncheckedCreateWithoutRef_stillsInput[]
    connectOrCreate?: log_start_distillationCreateOrConnectWithoutRef_stillsInput | log_start_distillationCreateOrConnectWithoutRef_stillsInput[]
    upsert?: log_start_distillationUpsertWithWhereUniqueWithoutRef_stillsInput | log_start_distillationUpsertWithWhereUniqueWithoutRef_stillsInput[]
    createMany?: log_start_distillationCreateManyRef_stillsInputEnvelope
    set?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
    disconnect?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
    delete?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
    connect?: log_start_distillationWhereUniqueInput | log_start_distillationWhereUniqueInput[]
    update?: log_start_distillationUpdateWithWhereUniqueWithoutRef_stillsInput | log_start_distillationUpdateWithWhereUniqueWithoutRef_stillsInput[]
    updateMany?: log_start_distillationUpdateManyWithWhereWithoutRef_stillsInput | log_start_distillationUpdateManyWithWhereWithoutRef_stillsInput[]
    deleteMany?: log_start_distillationScalarWhereInput | log_start_distillationScalarWhereInput[]
  }

  export type ref_supplier_materialCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<ref_supplier_materialCreateWithoutRef_suppliersInput, ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput> | ref_supplier_materialCreateWithoutRef_suppliersInput[] | ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput | ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: ref_supplier_materialCreateManyRef_suppliersInputEnvelope
    connect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
  }

  export type stock_activityCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<stock_activityCreateWithoutRef_suppliersInput, stock_activityUncheckedCreateWithoutRef_suppliersInput> | stock_activityCreateWithoutRef_suppliersInput[] | stock_activityUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutRef_suppliersInput | stock_activityCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: stock_activityCreateManyRef_suppliersInputEnvelope
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
  }

  export type stock_historyCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<stock_historyCreateWithoutRef_suppliersInput, stock_historyUncheckedCreateWithoutRef_suppliersInput> | stock_historyCreateWithoutRef_suppliersInput[] | stock_historyUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRef_suppliersInput | stock_historyCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: stock_historyCreateManyRef_suppliersInputEnvelope
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
  }

  export type stock_newCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<stock_newCreateWithoutRef_suppliersInput, stock_newUncheckedCreateWithoutRef_suppliersInput> | stock_newCreateWithoutRef_suppliersInput[] | stock_newUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_newCreateOrConnectWithoutRef_suppliersInput | stock_newCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: stock_newCreateManyRef_suppliersInputEnvelope
    connect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
  }

  export type stock_orderCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<stock_orderCreateWithoutRef_suppliersInput, stock_orderUncheckedCreateWithoutRef_suppliersInput> | stock_orderCreateWithoutRef_suppliersInput[] | stock_orderUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_orderCreateOrConnectWithoutRef_suppliersInput | stock_orderCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: stock_orderCreateManyRef_suppliersInputEnvelope
    connect?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
  }

  export type ref_supplier_materialUncheckedCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<ref_supplier_materialCreateWithoutRef_suppliersInput, ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput> | ref_supplier_materialCreateWithoutRef_suppliersInput[] | ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput | ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: ref_supplier_materialCreateManyRef_suppliersInputEnvelope
    connect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
  }

  export type stock_activityUncheckedCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<stock_activityCreateWithoutRef_suppliersInput, stock_activityUncheckedCreateWithoutRef_suppliersInput> | stock_activityCreateWithoutRef_suppliersInput[] | stock_activityUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutRef_suppliersInput | stock_activityCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: stock_activityCreateManyRef_suppliersInputEnvelope
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
  }

  export type stock_historyUncheckedCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<stock_historyCreateWithoutRef_suppliersInput, stock_historyUncheckedCreateWithoutRef_suppliersInput> | stock_historyCreateWithoutRef_suppliersInput[] | stock_historyUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRef_suppliersInput | stock_historyCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: stock_historyCreateManyRef_suppliersInputEnvelope
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
  }

  export type stock_newUncheckedCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<stock_newCreateWithoutRef_suppliersInput, stock_newUncheckedCreateWithoutRef_suppliersInput> | stock_newCreateWithoutRef_suppliersInput[] | stock_newUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_newCreateOrConnectWithoutRef_suppliersInput | stock_newCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: stock_newCreateManyRef_suppliersInputEnvelope
    connect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
  }

  export type stock_orderUncheckedCreateNestedManyWithoutRef_suppliersInput = {
    create?: XOR<stock_orderCreateWithoutRef_suppliersInput, stock_orderUncheckedCreateWithoutRef_suppliersInput> | stock_orderCreateWithoutRef_suppliersInput[] | stock_orderUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_orderCreateOrConnectWithoutRef_suppliersInput | stock_orderCreateOrConnectWithoutRef_suppliersInput[]
    createMany?: stock_orderCreateManyRef_suppliersInputEnvelope
    connect?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
  }

  export type ref_supplier_materialUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<ref_supplier_materialCreateWithoutRef_suppliersInput, ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput> | ref_supplier_materialCreateWithoutRef_suppliersInput[] | ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput | ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: ref_supplier_materialUpsertWithWhereUniqueWithoutRef_suppliersInput | ref_supplier_materialUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: ref_supplier_materialCreateManyRef_suppliersInputEnvelope
    set?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    disconnect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    delete?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    connect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    update?: ref_supplier_materialUpdateWithWhereUniqueWithoutRef_suppliersInput | ref_supplier_materialUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: ref_supplier_materialUpdateManyWithWhereWithoutRef_suppliersInput | ref_supplier_materialUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: ref_supplier_materialScalarWhereInput | ref_supplier_materialScalarWhereInput[]
  }

  export type stock_activityUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<stock_activityCreateWithoutRef_suppliersInput, stock_activityUncheckedCreateWithoutRef_suppliersInput> | stock_activityCreateWithoutRef_suppliersInput[] | stock_activityUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutRef_suppliersInput | stock_activityCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: stock_activityUpsertWithWhereUniqueWithoutRef_suppliersInput | stock_activityUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: stock_activityCreateManyRef_suppliersInputEnvelope
    set?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    disconnect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    delete?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    update?: stock_activityUpdateWithWhereUniqueWithoutRef_suppliersInput | stock_activityUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: stock_activityUpdateManyWithWhereWithoutRef_suppliersInput | stock_activityUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
  }

  export type stock_historyUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<stock_historyCreateWithoutRef_suppliersInput, stock_historyUncheckedCreateWithoutRef_suppliersInput> | stock_historyCreateWithoutRef_suppliersInput[] | stock_historyUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRef_suppliersInput | stock_historyCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: stock_historyUpsertWithWhereUniqueWithoutRef_suppliersInput | stock_historyUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: stock_historyCreateManyRef_suppliersInputEnvelope
    set?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    disconnect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    delete?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    update?: stock_historyUpdateWithWhereUniqueWithoutRef_suppliersInput | stock_historyUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: stock_historyUpdateManyWithWhereWithoutRef_suppliersInput | stock_historyUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: stock_historyScalarWhereInput | stock_historyScalarWhereInput[]
  }

  export type stock_newUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<stock_newCreateWithoutRef_suppliersInput, stock_newUncheckedCreateWithoutRef_suppliersInput> | stock_newCreateWithoutRef_suppliersInput[] | stock_newUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_newCreateOrConnectWithoutRef_suppliersInput | stock_newCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: stock_newUpsertWithWhereUniqueWithoutRef_suppliersInput | stock_newUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: stock_newCreateManyRef_suppliersInputEnvelope
    set?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    disconnect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    delete?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    connect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    update?: stock_newUpdateWithWhereUniqueWithoutRef_suppliersInput | stock_newUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: stock_newUpdateManyWithWhereWithoutRef_suppliersInput | stock_newUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: stock_newScalarWhereInput | stock_newScalarWhereInput[]
  }

  export type stock_orderUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<stock_orderCreateWithoutRef_suppliersInput, stock_orderUncheckedCreateWithoutRef_suppliersInput> | stock_orderCreateWithoutRef_suppliersInput[] | stock_orderUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_orderCreateOrConnectWithoutRef_suppliersInput | stock_orderCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: stock_orderUpsertWithWhereUniqueWithoutRef_suppliersInput | stock_orderUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: stock_orderCreateManyRef_suppliersInputEnvelope
    set?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
    disconnect?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
    delete?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
    connect?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
    update?: stock_orderUpdateWithWhereUniqueWithoutRef_suppliersInput | stock_orderUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: stock_orderUpdateManyWithWhereWithoutRef_suppliersInput | stock_orderUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: stock_orderScalarWhereInput | stock_orderScalarWhereInput[]
  }

  export type ref_supplier_materialUncheckedUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<ref_supplier_materialCreateWithoutRef_suppliersInput, ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput> | ref_supplier_materialCreateWithoutRef_suppliersInput[] | ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput | ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: ref_supplier_materialUpsertWithWhereUniqueWithoutRef_suppliersInput | ref_supplier_materialUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: ref_supplier_materialCreateManyRef_suppliersInputEnvelope
    set?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    disconnect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    delete?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    connect?: ref_supplier_materialWhereUniqueInput | ref_supplier_materialWhereUniqueInput[]
    update?: ref_supplier_materialUpdateWithWhereUniqueWithoutRef_suppliersInput | ref_supplier_materialUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: ref_supplier_materialUpdateManyWithWhereWithoutRef_suppliersInput | ref_supplier_materialUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: ref_supplier_materialScalarWhereInput | ref_supplier_materialScalarWhereInput[]
  }

  export type stock_activityUncheckedUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<stock_activityCreateWithoutRef_suppliersInput, stock_activityUncheckedCreateWithoutRef_suppliersInput> | stock_activityCreateWithoutRef_suppliersInput[] | stock_activityUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_activityCreateOrConnectWithoutRef_suppliersInput | stock_activityCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: stock_activityUpsertWithWhereUniqueWithoutRef_suppliersInput | stock_activityUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: stock_activityCreateManyRef_suppliersInputEnvelope
    set?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    disconnect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    delete?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    connect?: stock_activityWhereUniqueInput | stock_activityWhereUniqueInput[]
    update?: stock_activityUpdateWithWhereUniqueWithoutRef_suppliersInput | stock_activityUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: stock_activityUpdateManyWithWhereWithoutRef_suppliersInput | stock_activityUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
  }

  export type stock_historyUncheckedUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<stock_historyCreateWithoutRef_suppliersInput, stock_historyUncheckedCreateWithoutRef_suppliersInput> | stock_historyCreateWithoutRef_suppliersInput[] | stock_historyUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRef_suppliersInput | stock_historyCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: stock_historyUpsertWithWhereUniqueWithoutRef_suppliersInput | stock_historyUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: stock_historyCreateManyRef_suppliersInputEnvelope
    set?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    disconnect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    delete?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    update?: stock_historyUpdateWithWhereUniqueWithoutRef_suppliersInput | stock_historyUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: stock_historyUpdateManyWithWhereWithoutRef_suppliersInput | stock_historyUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: stock_historyScalarWhereInput | stock_historyScalarWhereInput[]
  }

  export type stock_newUncheckedUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<stock_newCreateWithoutRef_suppliersInput, stock_newUncheckedCreateWithoutRef_suppliersInput> | stock_newCreateWithoutRef_suppliersInput[] | stock_newUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_newCreateOrConnectWithoutRef_suppliersInput | stock_newCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: stock_newUpsertWithWhereUniqueWithoutRef_suppliersInput | stock_newUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: stock_newCreateManyRef_suppliersInputEnvelope
    set?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    disconnect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    delete?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    connect?: stock_newWhereUniqueInput | stock_newWhereUniqueInput[]
    update?: stock_newUpdateWithWhereUniqueWithoutRef_suppliersInput | stock_newUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: stock_newUpdateManyWithWhereWithoutRef_suppliersInput | stock_newUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: stock_newScalarWhereInput | stock_newScalarWhereInput[]
  }

  export type stock_orderUncheckedUpdateManyWithoutRef_suppliersNestedInput = {
    create?: XOR<stock_orderCreateWithoutRef_suppliersInput, stock_orderUncheckedCreateWithoutRef_suppliersInput> | stock_orderCreateWithoutRef_suppliersInput[] | stock_orderUncheckedCreateWithoutRef_suppliersInput[]
    connectOrCreate?: stock_orderCreateOrConnectWithoutRef_suppliersInput | stock_orderCreateOrConnectWithoutRef_suppliersInput[]
    upsert?: stock_orderUpsertWithWhereUniqueWithoutRef_suppliersInput | stock_orderUpsertWithWhereUniqueWithoutRef_suppliersInput[]
    createMany?: stock_orderCreateManyRef_suppliersInputEnvelope
    set?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
    disconnect?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
    delete?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
    connect?: stock_orderWhereUniqueInput | stock_orderWhereUniqueInput[]
    update?: stock_orderUpdateWithWhereUniqueWithoutRef_suppliersInput | stock_orderUpdateWithWhereUniqueWithoutRef_suppliersInput[]
    updateMany?: stock_orderUpdateManyWithWhereWithoutRef_suppliersInput | stock_orderUpdateManyWithWhereWithoutRef_suppliersInput[]
    deleteMany?: stock_orderScalarWhereInput | stock_orderScalarWhereInput[]
  }

  export type distillation_pending_assignmentCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutStock_drumInput, distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput> | distillation_pending_assignmentCreateWithoutStock_drumInput[] | distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput | distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput[]
    createMany?: distillation_pending_assignmentCreateManyStock_drumInputEnvelope
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
  }

  export type log_drum_scanCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<log_drum_scanCreateWithoutStock_drumInput, log_drum_scanUncheckedCreateWithoutStock_drumInput> | log_drum_scanCreateWithoutStock_drumInput[] | log_drum_scanUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_drum_scanCreateOrConnectWithoutStock_drumInput | log_drum_scanCreateOrConnectWithoutStock_drumInput[]
    createMany?: log_drum_scanCreateManyStock_drumInputEnvelope
    connect?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
  }

  export type log_load_stillCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<log_load_stillCreateWithoutStock_drumInput, log_load_stillUncheckedCreateWithoutStock_drumInput> | log_load_stillCreateWithoutStock_drumInput[] | log_load_stillUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutStock_drumInput | log_load_stillCreateOrConnectWithoutStock_drumInput[]
    createMany?: log_load_stillCreateManyStock_drumInputEnvelope
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
  }

  export type log_transport_drumCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<log_transport_drumCreateWithoutStock_drumInput, log_transport_drumUncheckedCreateWithoutStock_drumInput> | log_transport_drumCreateWithoutStock_drumInput[] | log_transport_drumUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutStock_drumInput | log_transport_drumCreateOrConnectWithoutStock_drumInput[]
    createMany?: log_transport_drumCreateManyStock_drumInputEnvelope
    connect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
  }

  export type log_volume_transferCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<log_volume_transferCreateWithoutStock_drumInput, log_volume_transferUncheckedCreateWithoutStock_drumInput> | log_volume_transferCreateWithoutStock_drumInput[] | log_volume_transferUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_volume_transferCreateOrConnectWithoutStock_drumInput | log_volume_transferCreateOrConnectWithoutStock_drumInput[]
    createMany?: log_volume_transferCreateManyStock_drumInputEnvelope
    connect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
  }

  export type distillation_recordCreateNestedOneWithoutStock_drumInput = {
    create?: XOR<distillation_recordCreateWithoutStock_drumInput, distillation_recordUncheckedCreateWithoutStock_drumInput>
    connectOrCreate?: distillation_recordCreateOrConnectWithoutStock_drumInput
    connect?: distillation_recordWhereUniqueInput
  }

  export type order_detailCreateNestedOneWithoutStock_drumInput = {
    create?: XOR<order_detailCreateWithoutStock_drumInput, order_detailUncheckedCreateWithoutStock_drumInput>
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_drumInput
    connect?: order_detailWhereUniqueInput
  }

  export type distillation_pending_assignmentUncheckedCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutStock_drumInput, distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput> | distillation_pending_assignmentCreateWithoutStock_drumInput[] | distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput | distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput[]
    createMany?: distillation_pending_assignmentCreateManyStock_drumInputEnvelope
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
  }

  export type log_drum_scanUncheckedCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<log_drum_scanCreateWithoutStock_drumInput, log_drum_scanUncheckedCreateWithoutStock_drumInput> | log_drum_scanCreateWithoutStock_drumInput[] | log_drum_scanUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_drum_scanCreateOrConnectWithoutStock_drumInput | log_drum_scanCreateOrConnectWithoutStock_drumInput[]
    createMany?: log_drum_scanCreateManyStock_drumInputEnvelope
    connect?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
  }

  export type log_load_stillUncheckedCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<log_load_stillCreateWithoutStock_drumInput, log_load_stillUncheckedCreateWithoutStock_drumInput> | log_load_stillCreateWithoutStock_drumInput[] | log_load_stillUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutStock_drumInput | log_load_stillCreateOrConnectWithoutStock_drumInput[]
    createMany?: log_load_stillCreateManyStock_drumInputEnvelope
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
  }

  export type log_transport_drumUncheckedCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<log_transport_drumCreateWithoutStock_drumInput, log_transport_drumUncheckedCreateWithoutStock_drumInput> | log_transport_drumCreateWithoutStock_drumInput[] | log_transport_drumUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutStock_drumInput | log_transport_drumCreateOrConnectWithoutStock_drumInput[]
    createMany?: log_transport_drumCreateManyStock_drumInputEnvelope
    connect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
  }

  export type log_volume_transferUncheckedCreateNestedManyWithoutStock_drumInput = {
    create?: XOR<log_volume_transferCreateWithoutStock_drumInput, log_volume_transferUncheckedCreateWithoutStock_drumInput> | log_volume_transferCreateWithoutStock_drumInput[] | log_volume_transferUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_volume_transferCreateOrConnectWithoutStock_drumInput | log_volume_transferCreateOrConnectWithoutStock_drumInput[]
    createMany?: log_volume_transferCreateManyStock_drumInputEnvelope
    connect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
  }

  export type distillation_pending_assignmentUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutStock_drumInput, distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput> | distillation_pending_assignmentCreateWithoutStock_drumInput[] | distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput | distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput[]
    upsert?: distillation_pending_assignmentUpsertWithWhereUniqueWithoutStock_drumInput | distillation_pending_assignmentUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: distillation_pending_assignmentCreateManyStock_drumInputEnvelope
    set?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    disconnect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    delete?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    update?: distillation_pending_assignmentUpdateWithWhereUniqueWithoutStock_drumInput | distillation_pending_assignmentUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: distillation_pending_assignmentUpdateManyWithWhereWithoutStock_drumInput | distillation_pending_assignmentUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: distillation_pending_assignmentScalarWhereInput | distillation_pending_assignmentScalarWhereInput[]
  }

  export type log_drum_scanUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<log_drum_scanCreateWithoutStock_drumInput, log_drum_scanUncheckedCreateWithoutStock_drumInput> | log_drum_scanCreateWithoutStock_drumInput[] | log_drum_scanUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_drum_scanCreateOrConnectWithoutStock_drumInput | log_drum_scanCreateOrConnectWithoutStock_drumInput[]
    upsert?: log_drum_scanUpsertWithWhereUniqueWithoutStock_drumInput | log_drum_scanUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: log_drum_scanCreateManyStock_drumInputEnvelope
    set?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
    disconnect?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
    delete?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
    connect?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
    update?: log_drum_scanUpdateWithWhereUniqueWithoutStock_drumInput | log_drum_scanUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: log_drum_scanUpdateManyWithWhereWithoutStock_drumInput | log_drum_scanUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: log_drum_scanScalarWhereInput | log_drum_scanScalarWhereInput[]
  }

  export type log_load_stillUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<log_load_stillCreateWithoutStock_drumInput, log_load_stillUncheckedCreateWithoutStock_drumInput> | log_load_stillCreateWithoutStock_drumInput[] | log_load_stillUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutStock_drumInput | log_load_stillCreateOrConnectWithoutStock_drumInput[]
    upsert?: log_load_stillUpsertWithWhereUniqueWithoutStock_drumInput | log_load_stillUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: log_load_stillCreateManyStock_drumInputEnvelope
    set?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    disconnect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    delete?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    update?: log_load_stillUpdateWithWhereUniqueWithoutStock_drumInput | log_load_stillUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: log_load_stillUpdateManyWithWhereWithoutStock_drumInput | log_load_stillUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: log_load_stillScalarWhereInput | log_load_stillScalarWhereInput[]
  }

  export type log_transport_drumUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<log_transport_drumCreateWithoutStock_drumInput, log_transport_drumUncheckedCreateWithoutStock_drumInput> | log_transport_drumCreateWithoutStock_drumInput[] | log_transport_drumUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutStock_drumInput | log_transport_drumCreateOrConnectWithoutStock_drumInput[]
    upsert?: log_transport_drumUpsertWithWhereUniqueWithoutStock_drumInput | log_transport_drumUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: log_transport_drumCreateManyStock_drumInputEnvelope
    set?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    disconnect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    delete?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    connect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    update?: log_transport_drumUpdateWithWhereUniqueWithoutStock_drumInput | log_transport_drumUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: log_transport_drumUpdateManyWithWhereWithoutStock_drumInput | log_transport_drumUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: log_transport_drumScalarWhereInput | log_transport_drumScalarWhereInput[]
  }

  export type log_volume_transferUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<log_volume_transferCreateWithoutStock_drumInput, log_volume_transferUncheckedCreateWithoutStock_drumInput> | log_volume_transferCreateWithoutStock_drumInput[] | log_volume_transferUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_volume_transferCreateOrConnectWithoutStock_drumInput | log_volume_transferCreateOrConnectWithoutStock_drumInput[]
    upsert?: log_volume_transferUpsertWithWhereUniqueWithoutStock_drumInput | log_volume_transferUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: log_volume_transferCreateManyStock_drumInputEnvelope
    set?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    disconnect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    delete?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    connect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    update?: log_volume_transferUpdateWithWhereUniqueWithoutStock_drumInput | log_volume_transferUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: log_volume_transferUpdateManyWithWhereWithoutStock_drumInput | log_volume_transferUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: log_volume_transferScalarWhereInput | log_volume_transferScalarWhereInput[]
  }

  export type distillation_recordUpdateOneWithoutStock_drumNestedInput = {
    create?: XOR<distillation_recordCreateWithoutStock_drumInput, distillation_recordUncheckedCreateWithoutStock_drumInput>
    connectOrCreate?: distillation_recordCreateOrConnectWithoutStock_drumInput
    upsert?: distillation_recordUpsertWithoutStock_drumInput
    disconnect?: distillation_recordWhereInput | boolean
    delete?: distillation_recordWhereInput | boolean
    connect?: distillation_recordWhereUniqueInput
    update?: XOR<XOR<distillation_recordUpdateToOneWithWhereWithoutStock_drumInput, distillation_recordUpdateWithoutStock_drumInput>, distillation_recordUncheckedUpdateWithoutStock_drumInput>
  }

  export type order_detailUpdateOneRequiredWithoutStock_drumNestedInput = {
    create?: XOR<order_detailCreateWithoutStock_drumInput, order_detailUncheckedCreateWithoutStock_drumInput>
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_drumInput
    upsert?: order_detailUpsertWithoutStock_drumInput
    connect?: order_detailWhereUniqueInput
    update?: XOR<XOR<order_detailUpdateToOneWithWhereWithoutStock_drumInput, order_detailUpdateWithoutStock_drumInput>, order_detailUncheckedUpdateWithoutStock_drumInput>
  }

  export type distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<distillation_pending_assignmentCreateWithoutStock_drumInput, distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput> | distillation_pending_assignmentCreateWithoutStock_drumInput[] | distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput | distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput[]
    upsert?: distillation_pending_assignmentUpsertWithWhereUniqueWithoutStock_drumInput | distillation_pending_assignmentUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: distillation_pending_assignmentCreateManyStock_drumInputEnvelope
    set?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    disconnect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    delete?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    connect?: distillation_pending_assignmentWhereUniqueInput | distillation_pending_assignmentWhereUniqueInput[]
    update?: distillation_pending_assignmentUpdateWithWhereUniqueWithoutStock_drumInput | distillation_pending_assignmentUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: distillation_pending_assignmentUpdateManyWithWhereWithoutStock_drumInput | distillation_pending_assignmentUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: distillation_pending_assignmentScalarWhereInput | distillation_pending_assignmentScalarWhereInput[]
  }

  export type log_drum_scanUncheckedUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<log_drum_scanCreateWithoutStock_drumInput, log_drum_scanUncheckedCreateWithoutStock_drumInput> | log_drum_scanCreateWithoutStock_drumInput[] | log_drum_scanUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_drum_scanCreateOrConnectWithoutStock_drumInput | log_drum_scanCreateOrConnectWithoutStock_drumInput[]
    upsert?: log_drum_scanUpsertWithWhereUniqueWithoutStock_drumInput | log_drum_scanUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: log_drum_scanCreateManyStock_drumInputEnvelope
    set?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
    disconnect?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
    delete?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
    connect?: log_drum_scanWhereUniqueInput | log_drum_scanWhereUniqueInput[]
    update?: log_drum_scanUpdateWithWhereUniqueWithoutStock_drumInput | log_drum_scanUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: log_drum_scanUpdateManyWithWhereWithoutStock_drumInput | log_drum_scanUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: log_drum_scanScalarWhereInput | log_drum_scanScalarWhereInput[]
  }

  export type log_load_stillUncheckedUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<log_load_stillCreateWithoutStock_drumInput, log_load_stillUncheckedCreateWithoutStock_drumInput> | log_load_stillCreateWithoutStock_drumInput[] | log_load_stillUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_load_stillCreateOrConnectWithoutStock_drumInput | log_load_stillCreateOrConnectWithoutStock_drumInput[]
    upsert?: log_load_stillUpsertWithWhereUniqueWithoutStock_drumInput | log_load_stillUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: log_load_stillCreateManyStock_drumInputEnvelope
    set?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    disconnect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    delete?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    connect?: log_load_stillWhereUniqueInput | log_load_stillWhereUniqueInput[]
    update?: log_load_stillUpdateWithWhereUniqueWithoutStock_drumInput | log_load_stillUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: log_load_stillUpdateManyWithWhereWithoutStock_drumInput | log_load_stillUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: log_load_stillScalarWhereInput | log_load_stillScalarWhereInput[]
  }

  export type log_transport_drumUncheckedUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<log_transport_drumCreateWithoutStock_drumInput, log_transport_drumUncheckedCreateWithoutStock_drumInput> | log_transport_drumCreateWithoutStock_drumInput[] | log_transport_drumUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_transport_drumCreateOrConnectWithoutStock_drumInput | log_transport_drumCreateOrConnectWithoutStock_drumInput[]
    upsert?: log_transport_drumUpsertWithWhereUniqueWithoutStock_drumInput | log_transport_drumUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: log_transport_drumCreateManyStock_drumInputEnvelope
    set?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    disconnect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    delete?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    connect?: log_transport_drumWhereUniqueInput | log_transport_drumWhereUniqueInput[]
    update?: log_transport_drumUpdateWithWhereUniqueWithoutStock_drumInput | log_transport_drumUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: log_transport_drumUpdateManyWithWhereWithoutStock_drumInput | log_transport_drumUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: log_transport_drumScalarWhereInput | log_transport_drumScalarWhereInput[]
  }

  export type log_volume_transferUncheckedUpdateManyWithoutStock_drumNestedInput = {
    create?: XOR<log_volume_transferCreateWithoutStock_drumInput, log_volume_transferUncheckedCreateWithoutStock_drumInput> | log_volume_transferCreateWithoutStock_drumInput[] | log_volume_transferUncheckedCreateWithoutStock_drumInput[]
    connectOrCreate?: log_volume_transferCreateOrConnectWithoutStock_drumInput | log_volume_transferCreateOrConnectWithoutStock_drumInput[]
    upsert?: log_volume_transferUpsertWithWhereUniqueWithoutStock_drumInput | log_volume_transferUpsertWithWhereUniqueWithoutStock_drumInput[]
    createMany?: log_volume_transferCreateManyStock_drumInputEnvelope
    set?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    disconnect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    delete?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    connect?: log_volume_transferWhereUniqueInput | log_volume_transferWhereUniqueInput[]
    update?: log_volume_transferUpdateWithWhereUniqueWithoutStock_drumInput | log_volume_transferUpdateWithWhereUniqueWithoutStock_drumInput[]
    updateMany?: log_volume_transferUpdateManyWithWhereWithoutStock_drumInput | log_volume_transferUpdateManyWithWhereWithoutStock_drumInput[]
    deleteMany?: log_volume_transferScalarWhereInput | log_volume_transferScalarWhereInput[]
  }

  export type distillation_recordCreateNestedOneWithoutStock_drum_newInput = {
    create?: XOR<distillation_recordCreateWithoutStock_drum_newInput, distillation_recordUncheckedCreateWithoutStock_drum_newInput>
    connectOrCreate?: distillation_recordCreateOrConnectWithoutStock_drum_newInput
    connect?: distillation_recordWhereUniqueInput
  }

  export type ref_materialsCreateNestedOneWithoutStock_drum_newInput = {
    create?: XOR<ref_materialsCreateWithoutStock_drum_newInput, ref_materialsUncheckedCreateWithoutStock_drum_newInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_drum_newInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type order_detailCreateNestedOneWithoutStock_drum_newInput = {
    create?: XOR<order_detailCreateWithoutStock_drum_newInput, order_detailUncheckedCreateWithoutStock_drum_newInput>
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_drum_newInput
    connect?: order_detailWhereUniqueInput
  }

  export type distillation_recordUpdateOneWithoutStock_drum_newNestedInput = {
    create?: XOR<distillation_recordCreateWithoutStock_drum_newInput, distillation_recordUncheckedCreateWithoutStock_drum_newInput>
    connectOrCreate?: distillation_recordCreateOrConnectWithoutStock_drum_newInput
    upsert?: distillation_recordUpsertWithoutStock_drum_newInput
    disconnect?: distillation_recordWhereInput | boolean
    delete?: distillation_recordWhereInput | boolean
    connect?: distillation_recordWhereUniqueInput
    update?: XOR<XOR<distillation_recordUpdateToOneWithWhereWithoutStock_drum_newInput, distillation_recordUpdateWithoutStock_drum_newInput>, distillation_recordUncheckedUpdateWithoutStock_drum_newInput>
  }

  export type ref_materialsUpdateOneWithoutStock_drum_newNestedInput = {
    create?: XOR<ref_materialsCreateWithoutStock_drum_newInput, ref_materialsUncheckedCreateWithoutStock_drum_newInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_drum_newInput
    upsert?: ref_materialsUpsertWithoutStock_drum_newInput
    disconnect?: ref_materialsWhereInput | boolean
    delete?: ref_materialsWhereInput | boolean
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutStock_drum_newInput, ref_materialsUpdateWithoutStock_drum_newInput>, ref_materialsUncheckedUpdateWithoutStock_drum_newInput>
  }

  export type order_detailUpdateOneRequiredWithoutStock_drum_newNestedInput = {
    create?: XOR<order_detailCreateWithoutStock_drum_newInput, order_detailUncheckedCreateWithoutStock_drum_newInput>
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_drum_newInput
    upsert?: order_detailUpsertWithoutStock_drum_newInput
    connect?: order_detailWhereUniqueInput
    update?: XOR<XOR<order_detailUpdateToOneWithWhereWithoutStock_drum_newInput, order_detailUpdateWithoutStock_drum_newInput>, order_detailUncheckedUpdateWithoutStock_drum_newInput>
  }

  export type distillation_schedule_itemsCreateNestedManyWithoutStock_newInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_newInput, distillation_schedule_itemsUncheckedCreateWithoutStock_newInput> | distillation_schedule_itemsCreateWithoutStock_newInput[] | distillation_schedule_itemsUncheckedCreateWithoutStock_newInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_newInput | distillation_schedule_itemsCreateOrConnectWithoutStock_newInput[]
    createMany?: distillation_schedule_itemsCreateManyStock_newInputEnvelope
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
  }

  export type ref_materialsCreateNestedOneWithoutStock_newInput = {
    create?: XOR<ref_materialsCreateWithoutStock_newInput, ref_materialsUncheckedCreateWithoutStock_newInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_newInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type ref_suppliersCreateNestedOneWithoutStock_newInput = {
    create?: XOR<ref_suppliersCreateWithoutStock_newInput, ref_suppliersUncheckedCreateWithoutStock_newInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutStock_newInput
    connect?: ref_suppliersWhereUniqueInput
  }

  export type distillation_schedule_itemsUncheckedCreateNestedManyWithoutStock_newInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_newInput, distillation_schedule_itemsUncheckedCreateWithoutStock_newInput> | distillation_schedule_itemsCreateWithoutStock_newInput[] | distillation_schedule_itemsUncheckedCreateWithoutStock_newInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_newInput | distillation_schedule_itemsCreateOrConnectWithoutStock_newInput[]
    createMany?: distillation_schedule_itemsCreateManyStock_newInputEnvelope
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
  }

  export type distillation_schedule_itemsUpdateManyWithoutStock_newNestedInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_newInput, distillation_schedule_itemsUncheckedCreateWithoutStock_newInput> | distillation_schedule_itemsCreateWithoutStock_newInput[] | distillation_schedule_itemsUncheckedCreateWithoutStock_newInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_newInput | distillation_schedule_itemsCreateOrConnectWithoutStock_newInput[]
    upsert?: distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_newInput | distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_newInput[]
    createMany?: distillation_schedule_itemsCreateManyStock_newInputEnvelope
    set?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    disconnect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    delete?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    update?: distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_newInput | distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_newInput[]
    updateMany?: distillation_schedule_itemsUpdateManyWithWhereWithoutStock_newInput | distillation_schedule_itemsUpdateManyWithWhereWithoutStock_newInput[]
    deleteMany?: distillation_schedule_itemsScalarWhereInput | distillation_schedule_itemsScalarWhereInput[]
  }

  export type ref_materialsUpdateOneWithoutStock_newNestedInput = {
    create?: XOR<ref_materialsCreateWithoutStock_newInput, ref_materialsUncheckedCreateWithoutStock_newInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_newInput
    upsert?: ref_materialsUpsertWithoutStock_newInput
    disconnect?: ref_materialsWhereInput | boolean
    delete?: ref_materialsWhereInput | boolean
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutStock_newInput, ref_materialsUpdateWithoutStock_newInput>, ref_materialsUncheckedUpdateWithoutStock_newInput>
  }

  export type ref_suppliersUpdateOneWithoutStock_newNestedInput = {
    create?: XOR<ref_suppliersCreateWithoutStock_newInput, ref_suppliersUncheckedCreateWithoutStock_newInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutStock_newInput
    upsert?: ref_suppliersUpsertWithoutStock_newInput
    disconnect?: ref_suppliersWhereInput | boolean
    delete?: ref_suppliersWhereInput | boolean
    connect?: ref_suppliersWhereUniqueInput
    update?: XOR<XOR<ref_suppliersUpdateToOneWithWhereWithoutStock_newInput, ref_suppliersUpdateWithoutStock_newInput>, ref_suppliersUncheckedUpdateWithoutStock_newInput>
  }

  export type distillation_schedule_itemsUncheckedUpdateManyWithoutStock_newNestedInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_newInput, distillation_schedule_itemsUncheckedCreateWithoutStock_newInput> | distillation_schedule_itemsCreateWithoutStock_newInput[] | distillation_schedule_itemsUncheckedCreateWithoutStock_newInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_newInput | distillation_schedule_itemsCreateOrConnectWithoutStock_newInput[]
    upsert?: distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_newInput | distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_newInput[]
    createMany?: distillation_schedule_itemsCreateManyStock_newInputEnvelope
    set?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    disconnect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    delete?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    update?: distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_newInput | distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_newInput[]
    updateMany?: distillation_schedule_itemsUpdateManyWithWhereWithoutStock_newInput | distillation_schedule_itemsUpdateManyWithWhereWithoutStock_newInput[]
    deleteMany?: distillation_schedule_itemsScalarWhereInput | distillation_schedule_itemsScalarWhereInput[]
  }

  export type order_detailCreateNestedManyWithoutStock_orderInput = {
    create?: XOR<order_detailCreateWithoutStock_orderInput, order_detailUncheckedCreateWithoutStock_orderInput> | order_detailCreateWithoutStock_orderInput[] | order_detailUncheckedCreateWithoutStock_orderInput[]
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_orderInput | order_detailCreateOrConnectWithoutStock_orderInput[]
    createMany?: order_detailCreateManyStock_orderInputEnvelope
    connect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
  }

  export type ref_suppliersCreateNestedOneWithoutStock_orderInput = {
    create?: XOR<ref_suppliersCreateWithoutStock_orderInput, ref_suppliersUncheckedCreateWithoutStock_orderInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutStock_orderInput
    connect?: ref_suppliersWhereUniqueInput
  }

  export type order_detailUncheckedCreateNestedManyWithoutStock_orderInput = {
    create?: XOR<order_detailCreateWithoutStock_orderInput, order_detailUncheckedCreateWithoutStock_orderInput> | order_detailCreateWithoutStock_orderInput[] | order_detailUncheckedCreateWithoutStock_orderInput[]
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_orderInput | order_detailCreateOrConnectWithoutStock_orderInput[]
    createMany?: order_detailCreateManyStock_orderInputEnvelope
    connect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
  }

  export type order_detailUpdateManyWithoutStock_orderNestedInput = {
    create?: XOR<order_detailCreateWithoutStock_orderInput, order_detailUncheckedCreateWithoutStock_orderInput> | order_detailCreateWithoutStock_orderInput[] | order_detailUncheckedCreateWithoutStock_orderInput[]
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_orderInput | order_detailCreateOrConnectWithoutStock_orderInput[]
    upsert?: order_detailUpsertWithWhereUniqueWithoutStock_orderInput | order_detailUpsertWithWhereUniqueWithoutStock_orderInput[]
    createMany?: order_detailCreateManyStock_orderInputEnvelope
    set?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    disconnect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    delete?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    connect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    update?: order_detailUpdateWithWhereUniqueWithoutStock_orderInput | order_detailUpdateWithWhereUniqueWithoutStock_orderInput[]
    updateMany?: order_detailUpdateManyWithWhereWithoutStock_orderInput | order_detailUpdateManyWithWhereWithoutStock_orderInput[]
    deleteMany?: order_detailScalarWhereInput | order_detailScalarWhereInput[]
  }

  export type ref_suppliersUpdateOneRequiredWithoutStock_orderNestedInput = {
    create?: XOR<ref_suppliersCreateWithoutStock_orderInput, ref_suppliersUncheckedCreateWithoutStock_orderInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutStock_orderInput
    upsert?: ref_suppliersUpsertWithoutStock_orderInput
    connect?: ref_suppliersWhereUniqueInput
    update?: XOR<XOR<ref_suppliersUpdateToOneWithWhereWithoutStock_orderInput, ref_suppliersUpdateWithoutStock_orderInput>, ref_suppliersUncheckedUpdateWithoutStock_orderInput>
  }

  export type order_detailUncheckedUpdateManyWithoutStock_orderNestedInput = {
    create?: XOR<order_detailCreateWithoutStock_orderInput, order_detailUncheckedCreateWithoutStock_orderInput> | order_detailCreateWithoutStock_orderInput[] | order_detailUncheckedCreateWithoutStock_orderInput[]
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_orderInput | order_detailCreateOrConnectWithoutStock_orderInput[]
    upsert?: order_detailUpsertWithWhereUniqueWithoutStock_orderInput | order_detailUpsertWithWhereUniqueWithoutStock_orderInput[]
    createMany?: order_detailCreateManyStock_orderInputEnvelope
    set?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    disconnect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    delete?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    connect?: order_detailWhereUniqueInput | order_detailWhereUniqueInput[]
    update?: order_detailUpdateWithWhereUniqueWithoutStock_orderInput | order_detailUpdateWithWhereUniqueWithoutStock_orderInput[]
    updateMany?: order_detailUpdateManyWithWhereWithoutStock_orderInput | order_detailUpdateManyWithWhereWithoutStock_orderInput[]
    deleteMany?: order_detailScalarWhereInput | order_detailScalarWhereInput[]
  }

  export type distillation_schedule_itemsCreateNestedManyWithoutStock_reproInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_reproInput, distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput> | distillation_schedule_itemsCreateWithoutStock_reproInput[] | distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput | distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput[]
    createMany?: distillation_schedule_itemsCreateManyStock_reproInputEnvelope
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
  }

  export type ref_materialsCreateNestedOneWithoutStock_reproInput = {
    create?: XOR<ref_materialsCreateWithoutStock_reproInput, ref_materialsUncheckedCreateWithoutStock_reproInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_reproInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type distillation_schedule_itemsUncheckedCreateNestedManyWithoutStock_reproInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_reproInput, distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput> | distillation_schedule_itemsCreateWithoutStock_reproInput[] | distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput | distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput[]
    createMany?: distillation_schedule_itemsCreateManyStock_reproInputEnvelope
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
  }

  export type distillation_schedule_itemsUpdateManyWithoutStock_reproNestedInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_reproInput, distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput> | distillation_schedule_itemsCreateWithoutStock_reproInput[] | distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput | distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput[]
    upsert?: distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_reproInput | distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_reproInput[]
    createMany?: distillation_schedule_itemsCreateManyStock_reproInputEnvelope
    set?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    disconnect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    delete?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    update?: distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_reproInput | distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_reproInput[]
    updateMany?: distillation_schedule_itemsUpdateManyWithWhereWithoutStock_reproInput | distillation_schedule_itemsUpdateManyWithWhereWithoutStock_reproInput[]
    deleteMany?: distillation_schedule_itemsScalarWhereInput | distillation_schedule_itemsScalarWhereInput[]
  }

  export type ref_materialsUpdateOneWithoutStock_reproNestedInput = {
    create?: XOR<ref_materialsCreateWithoutStock_reproInput, ref_materialsUncheckedCreateWithoutStock_reproInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_reproInput
    upsert?: ref_materialsUpsertWithoutStock_reproInput
    disconnect?: ref_materialsWhereInput | boolean
    delete?: ref_materialsWhereInput | boolean
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutStock_reproInput, ref_materialsUpdateWithoutStock_reproInput>, ref_materialsUncheckedUpdateWithoutStock_reproInput>
  }

  export type distillation_schedule_itemsUncheckedUpdateManyWithoutStock_reproNestedInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_reproInput, distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput> | distillation_schedule_itemsCreateWithoutStock_reproInput[] | distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput[]
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput | distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput[]
    upsert?: distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_reproInput | distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_reproInput[]
    createMany?: distillation_schedule_itemsCreateManyStock_reproInputEnvelope
    set?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    disconnect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    delete?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    connect?: distillation_schedule_itemsWhereUniqueInput | distillation_schedule_itemsWhereUniqueInput[]
    update?: distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_reproInput | distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_reproInput[]
    updateMany?: distillation_schedule_itemsUpdateManyWithWhereWithoutStock_reproInput | distillation_schedule_itemsUpdateManyWithWhereWithoutStock_reproInput[]
    deleteMany?: distillation_schedule_itemsScalarWhereInput | distillation_schedule_itemsScalarWhereInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type order_detailCreateNestedOneWithoutOrder_detail_stock_activityInput = {
    create?: XOR<order_detailCreateWithoutOrder_detail_stock_activityInput, order_detailUncheckedCreateWithoutOrder_detail_stock_activityInput>
    connectOrCreate?: order_detailCreateOrConnectWithoutOrder_detail_stock_activityInput
    connect?: order_detailWhereUniqueInput
  }

  export type stock_activityCreateNestedOneWithoutOrder_detail_stock_activityInput = {
    create?: XOR<stock_activityCreateWithoutOrder_detail_stock_activityInput, stock_activityUncheckedCreateWithoutOrder_detail_stock_activityInput>
    connectOrCreate?: stock_activityCreateOrConnectWithoutOrder_detail_stock_activityInput
    connect?: stock_activityWhereUniqueInput
  }

  export type order_detailUpdateOneRequiredWithoutOrder_detail_stock_activityNestedInput = {
    create?: XOR<order_detailCreateWithoutOrder_detail_stock_activityInput, order_detailUncheckedCreateWithoutOrder_detail_stock_activityInput>
    connectOrCreate?: order_detailCreateOrConnectWithoutOrder_detail_stock_activityInput
    upsert?: order_detailUpsertWithoutOrder_detail_stock_activityInput
    connect?: order_detailWhereUniqueInput
    update?: XOR<XOR<order_detailUpdateToOneWithWhereWithoutOrder_detail_stock_activityInput, order_detailUpdateWithoutOrder_detail_stock_activityInput>, order_detailUncheckedUpdateWithoutOrder_detail_stock_activityInput>
  }

  export type stock_activityUpdateOneRequiredWithoutOrder_detail_stock_activityNestedInput = {
    create?: XOR<stock_activityCreateWithoutOrder_detail_stock_activityInput, stock_activityUncheckedCreateWithoutOrder_detail_stock_activityInput>
    connectOrCreate?: stock_activityCreateOrConnectWithoutOrder_detail_stock_activityInput
    upsert?: stock_activityUpsertWithoutOrder_detail_stock_activityInput
    connect?: stock_activityWhereUniqueInput
    update?: XOR<XOR<stock_activityUpdateToOneWithWhereWithoutOrder_detail_stock_activityInput, stock_activityUpdateWithoutOrder_detail_stock_activityInput>, stock_activityUncheckedUpdateWithoutOrder_detail_stock_activityInput>
  }

  export type ref_materialsCreateNestedOneWithoutRaw_stock_historyInput = {
    create?: XOR<ref_materialsCreateWithoutRaw_stock_historyInput, ref_materialsUncheckedCreateWithoutRaw_stock_historyInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutRaw_stock_historyInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type stock_historyCreateNestedManyWithoutRaw_stock_historyInput = {
    create?: XOR<stock_historyCreateWithoutRaw_stock_historyInput, stock_historyUncheckedCreateWithoutRaw_stock_historyInput> | stock_historyCreateWithoutRaw_stock_historyInput[] | stock_historyUncheckedCreateWithoutRaw_stock_historyInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRaw_stock_historyInput | stock_historyCreateOrConnectWithoutRaw_stock_historyInput[]
    createMany?: stock_historyCreateManyRaw_stock_historyInputEnvelope
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
  }

  export type stock_historyUncheckedCreateNestedManyWithoutRaw_stock_historyInput = {
    create?: XOR<stock_historyCreateWithoutRaw_stock_historyInput, stock_historyUncheckedCreateWithoutRaw_stock_historyInput> | stock_historyCreateWithoutRaw_stock_historyInput[] | stock_historyUncheckedCreateWithoutRaw_stock_historyInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRaw_stock_historyInput | stock_historyCreateOrConnectWithoutRaw_stock_historyInput[]
    createMany?: stock_historyCreateManyRaw_stock_historyInputEnvelope
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
  }

  export type ref_materialsUpdateOneWithoutRaw_stock_historyNestedInput = {
    create?: XOR<ref_materialsCreateWithoutRaw_stock_historyInput, ref_materialsUncheckedCreateWithoutRaw_stock_historyInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutRaw_stock_historyInput
    upsert?: ref_materialsUpsertWithoutRaw_stock_historyInput
    disconnect?: ref_materialsWhereInput | boolean
    delete?: ref_materialsWhereInput | boolean
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutRaw_stock_historyInput, ref_materialsUpdateWithoutRaw_stock_historyInput>, ref_materialsUncheckedUpdateWithoutRaw_stock_historyInput>
  }

  export type stock_historyUpdateManyWithoutRaw_stock_historyNestedInput = {
    create?: XOR<stock_historyCreateWithoutRaw_stock_historyInput, stock_historyUncheckedCreateWithoutRaw_stock_historyInput> | stock_historyCreateWithoutRaw_stock_historyInput[] | stock_historyUncheckedCreateWithoutRaw_stock_historyInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRaw_stock_historyInput | stock_historyCreateOrConnectWithoutRaw_stock_historyInput[]
    upsert?: stock_historyUpsertWithWhereUniqueWithoutRaw_stock_historyInput | stock_historyUpsertWithWhereUniqueWithoutRaw_stock_historyInput[]
    createMany?: stock_historyCreateManyRaw_stock_historyInputEnvelope
    set?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    disconnect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    delete?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    update?: stock_historyUpdateWithWhereUniqueWithoutRaw_stock_historyInput | stock_historyUpdateWithWhereUniqueWithoutRaw_stock_historyInput[]
    updateMany?: stock_historyUpdateManyWithWhereWithoutRaw_stock_historyInput | stock_historyUpdateManyWithWhereWithoutRaw_stock_historyInput[]
    deleteMany?: stock_historyScalarWhereInput | stock_historyScalarWhereInput[]
  }

  export type stock_historyUncheckedUpdateManyWithoutRaw_stock_historyNestedInput = {
    create?: XOR<stock_historyCreateWithoutRaw_stock_historyInput, stock_historyUncheckedCreateWithoutRaw_stock_historyInput> | stock_historyCreateWithoutRaw_stock_historyInput[] | stock_historyUncheckedCreateWithoutRaw_stock_historyInput[]
    connectOrCreate?: stock_historyCreateOrConnectWithoutRaw_stock_historyInput | stock_historyCreateOrConnectWithoutRaw_stock_historyInput[]
    upsert?: stock_historyUpsertWithWhereUniqueWithoutRaw_stock_historyInput | stock_historyUpsertWithWhereUniqueWithoutRaw_stock_historyInput[]
    createMany?: stock_historyCreateManyRaw_stock_historyInputEnvelope
    set?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    disconnect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    delete?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    connect?: stock_historyWhereUniqueInput | stock_historyWhereUniqueInput[]
    update?: stock_historyUpdateWithWhereUniqueWithoutRaw_stock_historyInput | stock_historyUpdateWithWhereUniqueWithoutRaw_stock_historyInput[]
    updateMany?: stock_historyUpdateManyWithWhereWithoutRaw_stock_historyInput | stock_historyUpdateManyWithWhereWithoutRaw_stock_historyInput[]
    deleteMany?: stock_historyScalarWhereInput | stock_historyScalarWhereInput[]
  }

  export type order_detail_stock_activityCreateNestedManyWithoutStock_activityInput = {
    create?: XOR<order_detail_stock_activityCreateWithoutStock_activityInput, order_detail_stock_activityUncheckedCreateWithoutStock_activityInput> | order_detail_stock_activityCreateWithoutStock_activityInput[] | order_detail_stock_activityUncheckedCreateWithoutStock_activityInput[]
    connectOrCreate?: order_detail_stock_activityCreateOrConnectWithoutStock_activityInput | order_detail_stock_activityCreateOrConnectWithoutStock_activityInput[]
    createMany?: order_detail_stock_activityCreateManyStock_activityInputEnvelope
    connect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
  }

  export type distillation_schedule_itemsCreateNestedOneWithoutStock_activityInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_activityInput, distillation_schedule_itemsUncheckedCreateWithoutStock_activityInput>
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_activityInput
    connect?: distillation_schedule_itemsWhereUniqueInput
  }

  export type ref_materialsCreateNestedOneWithoutStock_activityInput = {
    create?: XOR<ref_materialsCreateWithoutStock_activityInput, ref_materialsUncheckedCreateWithoutStock_activityInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_activityInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type order_detailCreateNestedOneWithoutStock_activityInput = {
    create?: XOR<order_detailCreateWithoutStock_activityInput, order_detailUncheckedCreateWithoutStock_activityInput>
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_activityInput
    connect?: order_detailWhereUniqueInput
  }

  export type ref_suppliersCreateNestedOneWithoutStock_activityInput = {
    create?: XOR<ref_suppliersCreateWithoutStock_activityInput, ref_suppliersUncheckedCreateWithoutStock_activityInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutStock_activityInput
    connect?: ref_suppliersWhereUniqueInput
  }

  export type order_detail_stock_activityUncheckedCreateNestedManyWithoutStock_activityInput = {
    create?: XOR<order_detail_stock_activityCreateWithoutStock_activityInput, order_detail_stock_activityUncheckedCreateWithoutStock_activityInput> | order_detail_stock_activityCreateWithoutStock_activityInput[] | order_detail_stock_activityUncheckedCreateWithoutStock_activityInput[]
    connectOrCreate?: order_detail_stock_activityCreateOrConnectWithoutStock_activityInput | order_detail_stock_activityCreateOrConnectWithoutStock_activityInput[]
    createMany?: order_detail_stock_activityCreateManyStock_activityInputEnvelope
    connect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
  }

  export type order_detail_stock_activityUpdateManyWithoutStock_activityNestedInput = {
    create?: XOR<order_detail_stock_activityCreateWithoutStock_activityInput, order_detail_stock_activityUncheckedCreateWithoutStock_activityInput> | order_detail_stock_activityCreateWithoutStock_activityInput[] | order_detail_stock_activityUncheckedCreateWithoutStock_activityInput[]
    connectOrCreate?: order_detail_stock_activityCreateOrConnectWithoutStock_activityInput | order_detail_stock_activityCreateOrConnectWithoutStock_activityInput[]
    upsert?: order_detail_stock_activityUpsertWithWhereUniqueWithoutStock_activityInput | order_detail_stock_activityUpsertWithWhereUniqueWithoutStock_activityInput[]
    createMany?: order_detail_stock_activityCreateManyStock_activityInputEnvelope
    set?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    disconnect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    delete?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    connect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    update?: order_detail_stock_activityUpdateWithWhereUniqueWithoutStock_activityInput | order_detail_stock_activityUpdateWithWhereUniqueWithoutStock_activityInput[]
    updateMany?: order_detail_stock_activityUpdateManyWithWhereWithoutStock_activityInput | order_detail_stock_activityUpdateManyWithWhereWithoutStock_activityInput[]
    deleteMany?: order_detail_stock_activityScalarWhereInput | order_detail_stock_activityScalarWhereInput[]
  }

  export type distillation_schedule_itemsUpdateOneWithoutStock_activityNestedInput = {
    create?: XOR<distillation_schedule_itemsCreateWithoutStock_activityInput, distillation_schedule_itemsUncheckedCreateWithoutStock_activityInput>
    connectOrCreate?: distillation_schedule_itemsCreateOrConnectWithoutStock_activityInput
    upsert?: distillation_schedule_itemsUpsertWithoutStock_activityInput
    disconnect?: distillation_schedule_itemsWhereInput | boolean
    delete?: distillation_schedule_itemsWhereInput | boolean
    connect?: distillation_schedule_itemsWhereUniqueInput
    update?: XOR<XOR<distillation_schedule_itemsUpdateToOneWithWhereWithoutStock_activityInput, distillation_schedule_itemsUpdateWithoutStock_activityInput>, distillation_schedule_itemsUncheckedUpdateWithoutStock_activityInput>
  }

  export type ref_materialsUpdateOneWithoutStock_activityNestedInput = {
    create?: XOR<ref_materialsCreateWithoutStock_activityInput, ref_materialsUncheckedCreateWithoutStock_activityInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_activityInput
    upsert?: ref_materialsUpsertWithoutStock_activityInput
    disconnect?: ref_materialsWhereInput | boolean
    delete?: ref_materialsWhereInput | boolean
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutStock_activityInput, ref_materialsUpdateWithoutStock_activityInput>, ref_materialsUncheckedUpdateWithoutStock_activityInput>
  }

  export type order_detailUpdateOneWithoutStock_activityNestedInput = {
    create?: XOR<order_detailCreateWithoutStock_activityInput, order_detailUncheckedCreateWithoutStock_activityInput>
    connectOrCreate?: order_detailCreateOrConnectWithoutStock_activityInput
    upsert?: order_detailUpsertWithoutStock_activityInput
    disconnect?: order_detailWhereInput | boolean
    delete?: order_detailWhereInput | boolean
    connect?: order_detailWhereUniqueInput
    update?: XOR<XOR<order_detailUpdateToOneWithWhereWithoutStock_activityInput, order_detailUpdateWithoutStock_activityInput>, order_detailUncheckedUpdateWithoutStock_activityInput>
  }

  export type ref_suppliersUpdateOneWithoutStock_activityNestedInput = {
    create?: XOR<ref_suppliersCreateWithoutStock_activityInput, ref_suppliersUncheckedCreateWithoutStock_activityInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutStock_activityInput
    upsert?: ref_suppliersUpsertWithoutStock_activityInput
    disconnect?: ref_suppliersWhereInput | boolean
    delete?: ref_suppliersWhereInput | boolean
    connect?: ref_suppliersWhereUniqueInput
    update?: XOR<XOR<ref_suppliersUpdateToOneWithWhereWithoutStock_activityInput, ref_suppliersUpdateWithoutStock_activityInput>, ref_suppliersUncheckedUpdateWithoutStock_activityInput>
  }

  export type order_detail_stock_activityUncheckedUpdateManyWithoutStock_activityNestedInput = {
    create?: XOR<order_detail_stock_activityCreateWithoutStock_activityInput, order_detail_stock_activityUncheckedCreateWithoutStock_activityInput> | order_detail_stock_activityCreateWithoutStock_activityInput[] | order_detail_stock_activityUncheckedCreateWithoutStock_activityInput[]
    connectOrCreate?: order_detail_stock_activityCreateOrConnectWithoutStock_activityInput | order_detail_stock_activityCreateOrConnectWithoutStock_activityInput[]
    upsert?: order_detail_stock_activityUpsertWithWhereUniqueWithoutStock_activityInput | order_detail_stock_activityUpsertWithWhereUniqueWithoutStock_activityInput[]
    createMany?: order_detail_stock_activityCreateManyStock_activityInputEnvelope
    set?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    disconnect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    delete?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    connect?: order_detail_stock_activityWhereUniqueInput | order_detail_stock_activityWhereUniqueInput[]
    update?: order_detail_stock_activityUpdateWithWhereUniqueWithoutStock_activityInput | order_detail_stock_activityUpdateWithWhereUniqueWithoutStock_activityInput[]
    updateMany?: order_detail_stock_activityUpdateManyWithWhereWithoutStock_activityInput | order_detail_stock_activityUpdateManyWithWhereWithoutStock_activityInput[]
    deleteMany?: order_detail_stock_activityScalarWhereInput | order_detail_stock_activityScalarWhereInput[]
  }

  export type ref_materialsCreateNestedOneWithoutStock_historyInput = {
    create?: XOR<ref_materialsCreateWithoutStock_historyInput, ref_materialsUncheckedCreateWithoutStock_historyInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_historyInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type raw_stock_historyCreateNestedOneWithoutStock_historyInput = {
    create?: XOR<raw_stock_historyCreateWithoutStock_historyInput, raw_stock_historyUncheckedCreateWithoutStock_historyInput>
    connectOrCreate?: raw_stock_historyCreateOrConnectWithoutStock_historyInput
    connect?: raw_stock_historyWhereUniqueInput
  }

  export type ref_suppliersCreateNestedOneWithoutStock_historyInput = {
    create?: XOR<ref_suppliersCreateWithoutStock_historyInput, ref_suppliersUncheckedCreateWithoutStock_historyInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutStock_historyInput
    connect?: ref_suppliersWhereUniqueInput
  }

  export type ref_materialsUpdateOneWithoutStock_historyNestedInput = {
    create?: XOR<ref_materialsCreateWithoutStock_historyInput, ref_materialsUncheckedCreateWithoutStock_historyInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutStock_historyInput
    upsert?: ref_materialsUpsertWithoutStock_historyInput
    disconnect?: ref_materialsWhereInput | boolean
    delete?: ref_materialsWhereInput | boolean
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutStock_historyInput, ref_materialsUpdateWithoutStock_historyInput>, ref_materialsUncheckedUpdateWithoutStock_historyInput>
  }

  export type raw_stock_historyUpdateOneWithoutStock_historyNestedInput = {
    create?: XOR<raw_stock_historyCreateWithoutStock_historyInput, raw_stock_historyUncheckedCreateWithoutStock_historyInput>
    connectOrCreate?: raw_stock_historyCreateOrConnectWithoutStock_historyInput
    upsert?: raw_stock_historyUpsertWithoutStock_historyInput
    disconnect?: raw_stock_historyWhereInput | boolean
    delete?: raw_stock_historyWhereInput | boolean
    connect?: raw_stock_historyWhereUniqueInput
    update?: XOR<XOR<raw_stock_historyUpdateToOneWithWhereWithoutStock_historyInput, raw_stock_historyUpdateWithoutStock_historyInput>, raw_stock_historyUncheckedUpdateWithoutStock_historyInput>
  }

  export type ref_suppliersUpdateOneWithoutStock_historyNestedInput = {
    create?: XOR<ref_suppliersCreateWithoutStock_historyInput, ref_suppliersUncheckedCreateWithoutStock_historyInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutStock_historyInput
    upsert?: ref_suppliersUpsertWithoutStock_historyInput
    disconnect?: ref_suppliersWhereInput | boolean
    delete?: ref_suppliersWhereInput | boolean
    connect?: ref_suppliersWhereUniqueInput
    update?: XOR<XOR<ref_suppliersUpdateToOneWithWhereWithoutStock_historyInput, ref_suppliersUpdateWithoutStock_historyInput>, ref_suppliersUncheckedUpdateWithoutStock_historyInput>
  }

  export type product_pricesCreateNestedManyWithoutProductsInput = {
    create?: XOR<product_pricesCreateWithoutProductsInput, product_pricesUncheckedCreateWithoutProductsInput> | product_pricesCreateWithoutProductsInput[] | product_pricesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_pricesCreateOrConnectWithoutProductsInput | product_pricesCreateOrConnectWithoutProductsInput[]
    createMany?: product_pricesCreateManyProductsInputEnvelope
    connect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
  }

  export type ref_materialsCreateNestedOneWithoutRef_productInput = {
    create?: XOR<ref_materialsCreateWithoutRef_productInput, ref_materialsUncheckedCreateWithoutRef_productInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutRef_productInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type product_pricesUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<product_pricesCreateWithoutProductsInput, product_pricesUncheckedCreateWithoutProductsInput> | product_pricesCreateWithoutProductsInput[] | product_pricesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_pricesCreateOrConnectWithoutProductsInput | product_pricesCreateOrConnectWithoutProductsInput[]
    createMany?: product_pricesCreateManyProductsInputEnvelope
    connect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
  }

  export type product_pricesUpdateManyWithoutProductsNestedInput = {
    create?: XOR<product_pricesCreateWithoutProductsInput, product_pricesUncheckedCreateWithoutProductsInput> | product_pricesCreateWithoutProductsInput[] | product_pricesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_pricesCreateOrConnectWithoutProductsInput | product_pricesCreateOrConnectWithoutProductsInput[]
    upsert?: product_pricesUpsertWithWhereUniqueWithoutProductsInput | product_pricesUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: product_pricesCreateManyProductsInputEnvelope
    set?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    disconnect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    delete?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    connect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    update?: product_pricesUpdateWithWhereUniqueWithoutProductsInput | product_pricesUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: product_pricesUpdateManyWithWhereWithoutProductsInput | product_pricesUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: product_pricesScalarWhereInput | product_pricesScalarWhereInput[]
  }

  export type ref_materialsUpdateOneWithoutRef_productNestedInput = {
    create?: XOR<ref_materialsCreateWithoutRef_productInput, ref_materialsUncheckedCreateWithoutRef_productInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutRef_productInput
    upsert?: ref_materialsUpsertWithoutRef_productInput
    disconnect?: ref_materialsWhereInput | boolean
    delete?: ref_materialsWhereInput | boolean
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutRef_productInput, ref_materialsUpdateWithoutRef_productInput>, ref_materialsUncheckedUpdateWithoutRef_productInput>
  }

  export type product_pricesUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<product_pricesCreateWithoutProductsInput, product_pricesUncheckedCreateWithoutProductsInput> | product_pricesCreateWithoutProductsInput[] | product_pricesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_pricesCreateOrConnectWithoutProductsInput | product_pricesCreateOrConnectWithoutProductsInput[]
    upsert?: product_pricesUpsertWithWhereUniqueWithoutProductsInput | product_pricesUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: product_pricesCreateManyProductsInputEnvelope
    set?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    disconnect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    delete?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    connect?: product_pricesWhereUniqueInput | product_pricesWhereUniqueInput[]
    update?: product_pricesUpdateWithWhereUniqueWithoutProductsInput | product_pricesUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: product_pricesUpdateManyWithWhereWithoutProductsInput | product_pricesUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: product_pricesScalarWhereInput | product_pricesScalarWhereInput[]
  }

  export type ref_materialsCreateNestedOneWithoutRef_supplier_materialInput = {
    create?: XOR<ref_materialsCreateWithoutRef_supplier_materialInput, ref_materialsUncheckedCreateWithoutRef_supplier_materialInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutRef_supplier_materialInput
    connect?: ref_materialsWhereUniqueInput
  }

  export type ref_suppliersCreateNestedOneWithoutRef_supplier_materialInput = {
    create?: XOR<ref_suppliersCreateWithoutRef_supplier_materialInput, ref_suppliersUncheckedCreateWithoutRef_supplier_materialInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutRef_supplier_materialInput
    connect?: ref_suppliersWhereUniqueInput
  }

  export type ref_materialsUpdateOneRequiredWithoutRef_supplier_materialNestedInput = {
    create?: XOR<ref_materialsCreateWithoutRef_supplier_materialInput, ref_materialsUncheckedCreateWithoutRef_supplier_materialInput>
    connectOrCreate?: ref_materialsCreateOrConnectWithoutRef_supplier_materialInput
    upsert?: ref_materialsUpsertWithoutRef_supplier_materialInput
    connect?: ref_materialsWhereUniqueInput
    update?: XOR<XOR<ref_materialsUpdateToOneWithWhereWithoutRef_supplier_materialInput, ref_materialsUpdateWithoutRef_supplier_materialInput>, ref_materialsUncheckedUpdateWithoutRef_supplier_materialInput>
  }

  export type ref_suppliersUpdateOneRequiredWithoutRef_supplier_materialNestedInput = {
    create?: XOR<ref_suppliersCreateWithoutRef_supplier_materialInput, ref_suppliersUncheckedCreateWithoutRef_supplier_materialInput>
    connectOrCreate?: ref_suppliersCreateOrConnectWithoutRef_supplier_materialInput
    upsert?: ref_suppliersUpsertWithoutRef_supplier_materialInput
    connect?: ref_suppliersWhereUniqueInput
    update?: XOR<XOR<ref_suppliersUpdateToOneWithWhereWithoutRef_supplier_materialInput, ref_suppliersUpdateWithoutRef_supplier_materialInput>, ref_suppliersUncheckedUpdateWithoutRef_supplier_materialInput>
  }

  export type user_queriesCreatetagsInput = {
    set: string[]
  }

  export type user_queriesUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type ref_stillsCreateWithoutActive_contextInput = {
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedManyWithoutRef_stillsInput
    log_load_still?: log_load_stillCreateNestedManyWithoutRef_stillsInput
    log_start_distillation?: log_start_distillationCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsUncheckedCreateWithoutActive_contextInput = {
    still_id?: number
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    distillation_schedule?: distillation_scheduleUncheckedCreateNestedManyWithoutRef_stillsInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutRef_stillsInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsCreateOrConnectWithoutActive_contextInput = {
    where: ref_stillsWhereUniqueInput
    create: XOR<ref_stillsCreateWithoutActive_contextInput, ref_stillsUncheckedCreateWithoutActive_contextInput>
  }

  export type ref_stillsUpsertWithoutActive_contextInput = {
    update: XOR<ref_stillsUpdateWithoutActive_contextInput, ref_stillsUncheckedUpdateWithoutActive_contextInput>
    create: XOR<ref_stillsCreateWithoutActive_contextInput, ref_stillsUncheckedCreateWithoutActive_contextInput>
    where?: ref_stillsWhereInput
  }

  export type ref_stillsUpdateToOneWithWhereWithoutActive_contextInput = {
    where?: ref_stillsWhereInput
    data: XOR<ref_stillsUpdateWithoutActive_contextInput, ref_stillsUncheckedUpdateWithoutActive_contextInput>
  }

  export type ref_stillsUpdateWithoutActive_contextInput = {
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateManyWithoutRef_stillsNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutRef_stillsNestedInput
    log_start_distillation?: log_start_distillationUpdateManyWithoutRef_stillsNestedInput
  }

  export type ref_stillsUncheckedUpdateWithoutActive_contextInput = {
    still_id?: IntFieldUpdateOperationsInput | number
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUncheckedUpdateManyWithoutRef_stillsNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutRef_stillsNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateManyWithoutRef_stillsNestedInput
  }

  export type product_pricesCreateWithoutBottle_sizesInput = {
    price: Decimal | DecimalJsLike | number | string
    products: ref_productCreateNestedOneWithoutProduct_pricesInput
  }

  export type product_pricesUncheckedCreateWithoutBottle_sizesInput = {
    product_id: number
    price: Decimal | DecimalJsLike | number | string
  }

  export type product_pricesCreateOrConnectWithoutBottle_sizesInput = {
    where: product_pricesWhereUniqueInput
    create: XOR<product_pricesCreateWithoutBottle_sizesInput, product_pricesUncheckedCreateWithoutBottle_sizesInput>
  }

  export type product_pricesCreateManyBottle_sizesInputEnvelope = {
    data: product_pricesCreateManyBottle_sizesInput | product_pricesCreateManyBottle_sizesInput[]
    skipDuplicates?: boolean
  }

  export type product_pricesUpsertWithWhereUniqueWithoutBottle_sizesInput = {
    where: product_pricesWhereUniqueInput
    update: XOR<product_pricesUpdateWithoutBottle_sizesInput, product_pricesUncheckedUpdateWithoutBottle_sizesInput>
    create: XOR<product_pricesCreateWithoutBottle_sizesInput, product_pricesUncheckedCreateWithoutBottle_sizesInput>
  }

  export type product_pricesUpdateWithWhereUniqueWithoutBottle_sizesInput = {
    where: product_pricesWhereUniqueInput
    data: XOR<product_pricesUpdateWithoutBottle_sizesInput, product_pricesUncheckedUpdateWithoutBottle_sizesInput>
  }

  export type product_pricesUpdateManyWithWhereWithoutBottle_sizesInput = {
    where: product_pricesScalarWhereInput
    data: XOR<product_pricesUpdateManyMutationInput, product_pricesUncheckedUpdateManyWithoutBottle_sizesInput>
  }

  export type product_pricesScalarWhereInput = {
    AND?: product_pricesScalarWhereInput | product_pricesScalarWhereInput[]
    OR?: product_pricesScalarWhereInput[]
    NOT?: product_pricesScalarWhereInput | product_pricesScalarWhereInput[]
    product_id?: IntFilter<"product_prices"> | number
    bottle_size_id?: IntFilter<"product_prices"> | number
    price?: DecimalFilter<"product_prices"> | Decimal | DecimalJsLike | number | string
  }

  export type ref_materialsCreateWithoutChemical_group_kindInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutChemical_group_kindInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutChemical_group_kindInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutChemical_group_kindInput, ref_materialsUncheckedCreateWithoutChemical_group_kindInput>
  }

  export type ref_materialsCreateManyChemical_group_kindInputEnvelope = {
    data: ref_materialsCreateManyChemical_group_kindInput | ref_materialsCreateManyChemical_group_kindInput[]
    skipDuplicates?: boolean
  }

  export type ref_materialsUpsertWithWhereUniqueWithoutChemical_group_kindInput = {
    where: ref_materialsWhereUniqueInput
    update: XOR<ref_materialsUpdateWithoutChemical_group_kindInput, ref_materialsUncheckedUpdateWithoutChemical_group_kindInput>
    create: XOR<ref_materialsCreateWithoutChemical_group_kindInput, ref_materialsUncheckedCreateWithoutChemical_group_kindInput>
  }

  export type ref_materialsUpdateWithWhereUniqueWithoutChemical_group_kindInput = {
    where: ref_materialsWhereUniqueInput
    data: XOR<ref_materialsUpdateWithoutChemical_group_kindInput, ref_materialsUncheckedUpdateWithoutChemical_group_kindInput>
  }

  export type ref_materialsUpdateManyWithWhereWithoutChemical_group_kindInput = {
    where: ref_materialsScalarWhereInput
    data: XOR<ref_materialsUpdateManyMutationInput, ref_materialsUncheckedUpdateManyWithoutChemical_group_kindInput>
  }

  export type ref_materialsScalarWhereInput = {
    AND?: ref_materialsScalarWhereInput | ref_materialsScalarWhereInput[]
    OR?: ref_materialsScalarWhereInput[]
    NOT?: ref_materialsScalarWhereInput | ref_materialsScalarWhereInput[]
    value?: StringFilter<"ref_materials"> | string
    code?: StringFilter<"ref_materials"> | string
    chemical_group?: StringFilter<"ref_materials"> | string
    cas_number?: StringNullableFilter<"ref_materials"> | string | null
  }

  export type distillation_scheduleCreateWithoutDistillation_pending_assignmentInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_record?: distillation_recordCreateNestedOneWithoutDistillation_scheduleInput
    ref_stills: ref_stillsCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateWithoutDistillation_pending_assignmentInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_record?: distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleCreateOrConnectWithoutDistillation_pending_assignmentInput = {
    where: distillation_scheduleWhereUniqueInput
    create: XOR<distillation_scheduleCreateWithoutDistillation_pending_assignmentInput, distillation_scheduleUncheckedCreateWithoutDistillation_pending_assignmentInput>
  }

  export type stock_drumCreateWithoutDistillation_pending_assignmentInput = {
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    log_drum_scan?: log_drum_scanCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutStock_drumInput
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drumInput
    order_detail: order_detailCreateNestedOneWithoutStock_drumInput
  }

  export type stock_drumUncheckedCreateWithoutDistillation_pending_assignmentInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
    log_drum_scan?: log_drum_scanUncheckedCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutStock_drumInput
  }

  export type stock_drumCreateOrConnectWithoutDistillation_pending_assignmentInput = {
    where: stock_drumWhereUniqueInput
    create: XOR<stock_drumCreateWithoutDistillation_pending_assignmentInput, stock_drumUncheckedCreateWithoutDistillation_pending_assignmentInput>
  }

  export type log_transport_drumCreateWithoutDistillation_pending_assignmentInput = {
    transported_at?: Date | string | null
    status?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutLog_transport_drumInput
    stock_drum?: stock_drumCreateNestedOneWithoutLog_transport_drumInput
    log_drum_scan?: log_drum_scanCreateNestedOneWithoutLog_transport_drumInput
  }

  export type log_transport_drumUncheckedCreateWithoutDistillation_pending_assignmentInput = {
    transport_id?: number
    scan_id?: number | null
    drum_id?: number | null
    transported_at?: Date | string | null
    distillation_id?: number | null
    status?: string | null
  }

  export type log_transport_drumCreateOrConnectWithoutDistillation_pending_assignmentInput = {
    where: log_transport_drumWhereUniqueInput
    create: XOR<log_transport_drumCreateWithoutDistillation_pending_assignmentInput, log_transport_drumUncheckedCreateWithoutDistillation_pending_assignmentInput>
  }

  export type distillation_scheduleUpsertWithoutDistillation_pending_assignmentInput = {
    update: XOR<distillation_scheduleUpdateWithoutDistillation_pending_assignmentInput, distillation_scheduleUncheckedUpdateWithoutDistillation_pending_assignmentInput>
    create: XOR<distillation_scheduleCreateWithoutDistillation_pending_assignmentInput, distillation_scheduleUncheckedCreateWithoutDistillation_pending_assignmentInput>
    where?: distillation_scheduleWhereInput
  }

  export type distillation_scheduleUpdateToOneWithWhereWithoutDistillation_pending_assignmentInput = {
    where?: distillation_scheduleWhereInput
    data: XOR<distillation_scheduleUpdateWithoutDistillation_pending_assignmentInput, distillation_scheduleUncheckedUpdateWithoutDistillation_pending_assignmentInput>
  }

  export type distillation_scheduleUpdateWithoutDistillation_pending_assignmentInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_record?: distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateWithoutDistillation_pending_assignmentInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_record?: distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type stock_drumUpsertWithoutDistillation_pending_assignmentInput = {
    update: XOR<stock_drumUpdateWithoutDistillation_pending_assignmentInput, stock_drumUncheckedUpdateWithoutDistillation_pending_assignmentInput>
    create: XOR<stock_drumCreateWithoutDistillation_pending_assignmentInput, stock_drumUncheckedCreateWithoutDistillation_pending_assignmentInput>
    where?: stock_drumWhereInput
  }

  export type stock_drumUpdateToOneWithWhereWithoutDistillation_pending_assignmentInput = {
    where?: stock_drumWhereInput
    data: XOR<stock_drumUpdateWithoutDistillation_pending_assignmentInput, stock_drumUncheckedUpdateWithoutDistillation_pending_assignmentInput>
  }

  export type stock_drumUpdateWithoutDistillation_pending_assignmentInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    log_drum_scan?: log_drum_scanUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutStock_drumNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutStock_drumNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateWithoutDistillation_pending_assignmentInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    log_drum_scan?: log_drum_scanUncheckedUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutStock_drumNestedInput
  }

  export type log_transport_drumUpsertWithoutDistillation_pending_assignmentInput = {
    update: XOR<log_transport_drumUpdateWithoutDistillation_pending_assignmentInput, log_transport_drumUncheckedUpdateWithoutDistillation_pending_assignmentInput>
    create: XOR<log_transport_drumCreateWithoutDistillation_pending_assignmentInput, log_transport_drumUncheckedCreateWithoutDistillation_pending_assignmentInput>
    where?: log_transport_drumWhereInput
  }

  export type log_transport_drumUpdateToOneWithWhereWithoutDistillation_pending_assignmentInput = {
    where?: log_transport_drumWhereInput
    data: XOR<log_transport_drumUpdateWithoutDistillation_pending_assignmentInput, log_transport_drumUncheckedUpdateWithoutDistillation_pending_assignmentInput>
  }

  export type log_transport_drumUpdateWithoutDistillation_pending_assignmentInput = {
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutLog_transport_drumNestedInput
    stock_drum?: stock_drumUpdateOneWithoutLog_transport_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateOneWithoutLog_transport_drumNestedInput
  }

  export type log_transport_drumUncheckedUpdateWithoutDistillation_pending_assignmentInput = {
    transport_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_scheduleCreateWithoutDistillation_recordInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput
    ref_stills: ref_stillsCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateWithoutDistillation_recordInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleCreateOrConnectWithoutDistillation_recordInput = {
    where: distillation_scheduleWhereUniqueInput
    create: XOR<distillation_scheduleCreateWithoutDistillation_recordInput, distillation_scheduleUncheckedCreateWithoutDistillation_recordInput>
  }

  export type stock_drumCreateWithoutDistillation_recordInput = {
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutStock_drumInput
    order_detail: order_detailCreateNestedOneWithoutStock_drumInput
  }

  export type stock_drumUncheckedCreateWithoutDistillation_recordInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanUncheckedCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutStock_drumInput
  }

  export type stock_drumCreateOrConnectWithoutDistillation_recordInput = {
    where: stock_drumWhereUniqueInput
    create: XOR<stock_drumCreateWithoutDistillation_recordInput, stock_drumUncheckedCreateWithoutDistillation_recordInput>
  }

  export type stock_drumCreateManyDistillation_recordInputEnvelope = {
    data: stock_drumCreateManyDistillation_recordInput | stock_drumCreateManyDistillation_recordInput[]
    skipDuplicates?: boolean
  }

  export type stock_drum_newCreateWithoutDistillation_recordInput = {
    drum_type?: string
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_drum_newInput
    order_detail: order_detailCreateNestedOneWithoutStock_drum_newInput
  }

  export type stock_drum_newUncheckedCreateWithoutDistillation_recordInput = {
    drum_id?: number
    material_code?: string | null
    drum_type?: string
    order_detail_id: number
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_drum_newCreateOrConnectWithoutDistillation_recordInput = {
    where: stock_drum_newWhereUniqueInput
    create: XOR<stock_drum_newCreateWithoutDistillation_recordInput, stock_drum_newUncheckedCreateWithoutDistillation_recordInput>
  }

  export type stock_drum_newCreateManyDistillation_recordInputEnvelope = {
    data: stock_drum_newCreateManyDistillation_recordInput | stock_drum_newCreateManyDistillation_recordInput[]
    skipDuplicates?: boolean
  }

  export type distillation_scheduleUpsertWithoutDistillation_recordInput = {
    update: XOR<distillation_scheduleUpdateWithoutDistillation_recordInput, distillation_scheduleUncheckedUpdateWithoutDistillation_recordInput>
    create: XOR<distillation_scheduleCreateWithoutDistillation_recordInput, distillation_scheduleUncheckedCreateWithoutDistillation_recordInput>
    where?: distillation_scheduleWhereInput
  }

  export type distillation_scheduleUpdateToOneWithWhereWithoutDistillation_recordInput = {
    where?: distillation_scheduleWhereInput
    data: XOR<distillation_scheduleUpdateWithoutDistillation_recordInput, distillation_scheduleUncheckedUpdateWithoutDistillation_recordInput>
  }

  export type distillation_scheduleUpdateWithoutDistillation_recordInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateWithoutDistillation_recordInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type stock_drumUpsertWithWhereUniqueWithoutDistillation_recordInput = {
    where: stock_drumWhereUniqueInput
    update: XOR<stock_drumUpdateWithoutDistillation_recordInput, stock_drumUncheckedUpdateWithoutDistillation_recordInput>
    create: XOR<stock_drumCreateWithoutDistillation_recordInput, stock_drumUncheckedCreateWithoutDistillation_recordInput>
  }

  export type stock_drumUpdateWithWhereUniqueWithoutDistillation_recordInput = {
    where: stock_drumWhereUniqueInput
    data: XOR<stock_drumUpdateWithoutDistillation_recordInput, stock_drumUncheckedUpdateWithoutDistillation_recordInput>
  }

  export type stock_drumUpdateManyWithWhereWithoutDistillation_recordInput = {
    where: stock_drumScalarWhereInput
    data: XOR<stock_drumUpdateManyMutationInput, stock_drumUncheckedUpdateManyWithoutDistillation_recordInput>
  }

  export type stock_drumScalarWhereInput = {
    AND?: stock_drumScalarWhereInput | stock_drumScalarWhereInput[]
    OR?: stock_drumScalarWhereInput[]
    NOT?: stock_drumScalarWhereInput | stock_drumScalarWhereInput[]
    drum_id?: IntFilter<"stock_drum"> | number
    drum_type?: StringFilter<"stock_drum"> | string
    order_detail_id?: IntFilter<"stock_drum"> | number
    fill_level?: DecimalNullableFilter<"stock_drum"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"stock_drum"> | string
    created_at?: DateTimeNullableFilter<"stock_drum"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_drum"> | Date | string | null
    material_code?: StringNullableFilter<"stock_drum"> | string | null
    distillation_id?: IntNullableFilter<"stock_drum"> | number | null
  }

  export type stock_drum_newUpsertWithWhereUniqueWithoutDistillation_recordInput = {
    where: stock_drum_newWhereUniqueInput
    update: XOR<stock_drum_newUpdateWithoutDistillation_recordInput, stock_drum_newUncheckedUpdateWithoutDistillation_recordInput>
    create: XOR<stock_drum_newCreateWithoutDistillation_recordInput, stock_drum_newUncheckedCreateWithoutDistillation_recordInput>
  }

  export type stock_drum_newUpdateWithWhereUniqueWithoutDistillation_recordInput = {
    where: stock_drum_newWhereUniqueInput
    data: XOR<stock_drum_newUpdateWithoutDistillation_recordInput, stock_drum_newUncheckedUpdateWithoutDistillation_recordInput>
  }

  export type stock_drum_newUpdateManyWithWhereWithoutDistillation_recordInput = {
    where: stock_drum_newScalarWhereInput
    data: XOR<stock_drum_newUpdateManyMutationInput, stock_drum_newUncheckedUpdateManyWithoutDistillation_recordInput>
  }

  export type stock_drum_newScalarWhereInput = {
    AND?: stock_drum_newScalarWhereInput | stock_drum_newScalarWhereInput[]
    OR?: stock_drum_newScalarWhereInput[]
    NOT?: stock_drum_newScalarWhereInput | stock_drum_newScalarWhereInput[]
    drum_id?: IntFilter<"stock_drum_new"> | number
    material_code?: StringNullableFilter<"stock_drum_new"> | string | null
    drum_type?: StringFilter<"stock_drum_new"> | string
    order_detail_id?: IntFilter<"stock_drum_new"> | number
    status?: StringFilter<"stock_drum_new"> | string
    fill_level?: DecimalNullableFilter<"stock_drum_new"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"stock_drum_new"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_drum_new"> | Date | string | null
    distillation_id?: IntNullableFilter<"stock_drum_new"> | number | null
  }

  export type distillation_pending_assignmentCreateWithoutDistillation_scheduleInput = {
    status?: string | null
    stock_drum?: stock_drumCreateNestedOneWithoutDistillation_pending_assignmentInput
    log_transport_drum: log_transport_drumCreateNestedOneWithoutDistillation_pending_assignmentInput
  }

  export type distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput = {
    pending_id?: number
    drum_id?: number | null
    transport_id: number
    status?: string | null
  }

  export type distillation_pending_assignmentCreateOrConnectWithoutDistillation_scheduleInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    create: XOR<distillation_pending_assignmentCreateWithoutDistillation_scheduleInput, distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type distillation_pending_assignmentCreateManyDistillation_scheduleInputEnvelope = {
    data: distillation_pending_assignmentCreateManyDistillation_scheduleInput | distillation_pending_assignmentCreateManyDistillation_scheduleInput[]
    skipDuplicates?: boolean
  }

  export type distillation_recordCreateWithoutDistillation_scheduleInput = {
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
    stock_drum?: stock_drumCreateNestedManyWithoutDistillation_recordInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutDistillation_recordInput
  }

  export type distillation_recordUncheckedCreateWithoutDistillation_scheduleInput = {
    record_id?: number
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutDistillation_recordInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutDistillation_recordInput
  }

  export type distillation_recordCreateOrConnectWithoutDistillation_scheduleInput = {
    where: distillation_recordWhereUniqueInput
    create: XOR<distillation_recordCreateWithoutDistillation_scheduleInput, distillation_recordUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type ref_stillsCreateWithoutDistillation_scheduleInput = {
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    active_context?: active_contextCreateNestedManyWithoutRef_stillsInput
    log_load_still?: log_load_stillCreateNestedManyWithoutRef_stillsInput
    log_start_distillation?: log_start_distillationCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsUncheckedCreateWithoutDistillation_scheduleInput = {
    still_id?: number
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    active_context?: active_contextUncheckedCreateNestedManyWithoutRef_stillsInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutRef_stillsInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsCreateOrConnectWithoutDistillation_scheduleInput = {
    where: ref_stillsWhereUniqueInput
    create: XOR<ref_stillsCreateWithoutDistillation_scheduleInput, ref_stillsUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type distillation_schedule_itemsCreateWithoutDistillation_scheduleInput = {
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    stock_new?: stock_newCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_repro?: stock_reproCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_activity?: stock_activityCreateNestedManyWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput = {
    details_id?: number
    new_stock_id?: number | null
    repro_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsCreateOrConnectWithoutDistillation_scheduleInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    create: XOR<distillation_schedule_itemsCreateWithoutDistillation_scheduleInput, distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type distillation_schedule_itemsCreateManyDistillation_scheduleInputEnvelope = {
    data: distillation_schedule_itemsCreateManyDistillation_scheduleInput | distillation_schedule_itemsCreateManyDistillation_scheduleInput[]
    skipDuplicates?: boolean
  }

  export type log_load_stillCreateWithoutDistillation_scheduleInput = {
    status?: string | null
    stock_drum?: stock_drumCreateNestedOneWithoutLog_load_stillInput
    log_drum_scan?: log_drum_scanCreateNestedOneWithoutLog_load_stillInput
    ref_stills?: ref_stillsCreateNestedOneWithoutLog_load_stillInput
  }

  export type log_load_stillUncheckedCreateWithoutDistillation_scheduleInput = {
    loading_id?: number
    scan_id?: number | null
    drum_id?: number | null
    still_id?: number | null
    status?: string | null
  }

  export type log_load_stillCreateOrConnectWithoutDistillation_scheduleInput = {
    where: log_load_stillWhereUniqueInput
    create: XOR<log_load_stillCreateWithoutDistillation_scheduleInput, log_load_stillUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type log_load_stillCreateManyDistillation_scheduleInputEnvelope = {
    data: log_load_stillCreateManyDistillation_scheduleInput | log_load_stillCreateManyDistillation_scheduleInput[]
    skipDuplicates?: boolean
  }

  export type log_start_distillationCreateWithoutDistillation_scheduleInput = {
    worker_id?: number | null
    status?: string | null
    ref_stills: ref_stillsCreateNestedOneWithoutLog_start_distillationInput
  }

  export type log_start_distillationUncheckedCreateWithoutDistillation_scheduleInput = {
    start_id?: number
    still_id: number
    worker_id?: number | null
    status?: string | null
  }

  export type log_start_distillationCreateOrConnectWithoutDistillation_scheduleInput = {
    where: log_start_distillationWhereUniqueInput
    create: XOR<log_start_distillationCreateWithoutDistillation_scheduleInput, log_start_distillationUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type log_transport_drumCreateWithoutDistillation_scheduleInput = {
    transported_at?: Date | string | null
    status?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutLog_transport_drumInput
    stock_drum?: stock_drumCreateNestedOneWithoutLog_transport_drumInput
    log_drum_scan?: log_drum_scanCreateNestedOneWithoutLog_transport_drumInput
  }

  export type log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput = {
    transport_id?: number
    scan_id?: number | null
    drum_id?: number | null
    transported_at?: Date | string | null
    status?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutLog_transport_drumInput
  }

  export type log_transport_drumCreateOrConnectWithoutDistillation_scheduleInput = {
    where: log_transport_drumWhereUniqueInput
    create: XOR<log_transport_drumCreateWithoutDistillation_scheduleInput, log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type log_transport_drumCreateManyDistillation_scheduleInputEnvelope = {
    data: log_transport_drumCreateManyDistillation_scheduleInput | log_transport_drumCreateManyDistillation_scheduleInput[]
    skipDuplicates?: boolean
  }

  export type log_volume_transferCreateWithoutDistillation_scheduleInput = {
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
    stock_drum: stock_drumCreateNestedOneWithoutLog_volume_transferInput
  }

  export type log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput = {
    transfer_id?: number
    drum_id: number
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
  }

  export type log_volume_transferCreateOrConnectWithoutDistillation_scheduleInput = {
    where: log_volume_transferWhereUniqueInput
    create: XOR<log_volume_transferCreateWithoutDistillation_scheduleInput, log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type log_volume_transferCreateManyDistillation_scheduleInputEnvelope = {
    data: log_volume_transferCreateManyDistillation_scheduleInput | log_volume_transferCreateManyDistillation_scheduleInput[]
    skipDuplicates?: boolean
  }

  export type distillation_pending_assignmentUpsertWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    update: XOR<distillation_pending_assignmentUpdateWithoutDistillation_scheduleInput, distillation_pending_assignmentUncheckedUpdateWithoutDistillation_scheduleInput>
    create: XOR<distillation_pending_assignmentCreateWithoutDistillation_scheduleInput, distillation_pending_assignmentUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type distillation_pending_assignmentUpdateWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    data: XOR<distillation_pending_assignmentUpdateWithoutDistillation_scheduleInput, distillation_pending_assignmentUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type distillation_pending_assignmentUpdateManyWithWhereWithoutDistillation_scheduleInput = {
    where: distillation_pending_assignmentScalarWhereInput
    data: XOR<distillation_pending_assignmentUpdateManyMutationInput, distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleInput>
  }

  export type distillation_pending_assignmentScalarWhereInput = {
    AND?: distillation_pending_assignmentScalarWhereInput | distillation_pending_assignmentScalarWhereInput[]
    OR?: distillation_pending_assignmentScalarWhereInput[]
    NOT?: distillation_pending_assignmentScalarWhereInput | distillation_pending_assignmentScalarWhereInput[]
    pending_id?: IntFilter<"distillation_pending_assignment"> | number
    drum_id?: IntNullableFilter<"distillation_pending_assignment"> | number | null
    transport_id?: IntFilter<"distillation_pending_assignment"> | number
    assigned_distillation_id?: IntNullableFilter<"distillation_pending_assignment"> | number | null
    status?: StringNullableFilter<"distillation_pending_assignment"> | string | null
  }

  export type distillation_recordUpsertWithoutDistillation_scheduleInput = {
    update: XOR<distillation_recordUpdateWithoutDistillation_scheduleInput, distillation_recordUncheckedUpdateWithoutDistillation_scheduleInput>
    create: XOR<distillation_recordCreateWithoutDistillation_scheduleInput, distillation_recordUncheckedCreateWithoutDistillation_scheduleInput>
    where?: distillation_recordWhereInput
  }

  export type distillation_recordUpdateToOneWithWhereWithoutDistillation_scheduleInput = {
    where?: distillation_recordWhereInput
    data: XOR<distillation_recordUpdateWithoutDistillation_scheduleInput, distillation_recordUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type distillation_recordUpdateWithoutDistillation_scheduleInput = {
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUpdateManyWithoutDistillation_recordNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutDistillation_recordNestedInput
  }

  export type distillation_recordUncheckedUpdateWithoutDistillation_scheduleInput = {
    record_id?: IntFieldUpdateOperationsInput | number
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUncheckedUpdateManyWithoutDistillation_recordNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutDistillation_recordNestedInput
  }

  export type ref_stillsUpsertWithoutDistillation_scheduleInput = {
    update: XOR<ref_stillsUpdateWithoutDistillation_scheduleInput, ref_stillsUncheckedUpdateWithoutDistillation_scheduleInput>
    create: XOR<ref_stillsCreateWithoutDistillation_scheduleInput, ref_stillsUncheckedCreateWithoutDistillation_scheduleInput>
    where?: ref_stillsWhereInput
  }

  export type ref_stillsUpdateToOneWithWhereWithoutDistillation_scheduleInput = {
    where?: ref_stillsWhereInput
    data: XOR<ref_stillsUpdateWithoutDistillation_scheduleInput, ref_stillsUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type ref_stillsUpdateWithoutDistillation_scheduleInput = {
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active_context?: active_contextUpdateManyWithoutRef_stillsNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutRef_stillsNestedInput
    log_start_distillation?: log_start_distillationUpdateManyWithoutRef_stillsNestedInput
  }

  export type ref_stillsUncheckedUpdateWithoutDistillation_scheduleInput = {
    still_id?: IntFieldUpdateOperationsInput | number
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active_context?: active_contextUncheckedUpdateManyWithoutRef_stillsNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutRef_stillsNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateManyWithoutRef_stillsNestedInput
  }

  export type distillation_schedule_itemsUpsertWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    update: XOR<distillation_schedule_itemsUpdateWithoutDistillation_scheduleInput, distillation_schedule_itemsUncheckedUpdateWithoutDistillation_scheduleInput>
    create: XOR<distillation_schedule_itemsCreateWithoutDistillation_scheduleInput, distillation_schedule_itemsUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type distillation_schedule_itemsUpdateWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    data: XOR<distillation_schedule_itemsUpdateWithoutDistillation_scheduleInput, distillation_schedule_itemsUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type distillation_schedule_itemsUpdateManyWithWhereWithoutDistillation_scheduleInput = {
    where: distillation_schedule_itemsScalarWhereInput
    data: XOR<distillation_schedule_itemsUpdateManyMutationInput, distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleInput>
  }

  export type distillation_schedule_itemsScalarWhereInput = {
    AND?: distillation_schedule_itemsScalarWhereInput | distillation_schedule_itemsScalarWhereInput[]
    OR?: distillation_schedule_itemsScalarWhereInput[]
    NOT?: distillation_schedule_itemsScalarWhereInput | distillation_schedule_itemsScalarWhereInput[]
    details_id?: IntFilter<"distillation_schedule_items"> | number
    distillation_id?: IntFilter<"distillation_schedule_items"> | number
    new_stock_id?: IntNullableFilter<"distillation_schedule_items"> | number | null
    repro_stock_id?: IntNullableFilter<"distillation_schedule_items"> | number | null
    drum_quantity?: DecimalFilter<"distillation_schedule_items"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"distillation_schedule_items"> | string | null
    created_at?: DateTimeNullableFilter<"distillation_schedule_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"distillation_schedule_items"> | Date | string | null
  }

  export type log_load_stillUpsertWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: log_load_stillWhereUniqueInput
    update: XOR<log_load_stillUpdateWithoutDistillation_scheduleInput, log_load_stillUncheckedUpdateWithoutDistillation_scheduleInput>
    create: XOR<log_load_stillCreateWithoutDistillation_scheduleInput, log_load_stillUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type log_load_stillUpdateWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: log_load_stillWhereUniqueInput
    data: XOR<log_load_stillUpdateWithoutDistillation_scheduleInput, log_load_stillUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type log_load_stillUpdateManyWithWhereWithoutDistillation_scheduleInput = {
    where: log_load_stillScalarWhereInput
    data: XOR<log_load_stillUpdateManyMutationInput, log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleInput>
  }

  export type log_load_stillScalarWhereInput = {
    AND?: log_load_stillScalarWhereInput | log_load_stillScalarWhereInput[]
    OR?: log_load_stillScalarWhereInput[]
    NOT?: log_load_stillScalarWhereInput | log_load_stillScalarWhereInput[]
    loading_id?: IntFilter<"log_load_still"> | number
    scan_id?: IntNullableFilter<"log_load_still"> | number | null
    drum_id?: IntNullableFilter<"log_load_still"> | number | null
    still_id?: IntNullableFilter<"log_load_still"> | number | null
    distillation_id?: IntFilter<"log_load_still"> | number
    status?: StringNullableFilter<"log_load_still"> | string | null
  }

  export type log_start_distillationUpsertWithoutDistillation_scheduleInput = {
    update: XOR<log_start_distillationUpdateWithoutDistillation_scheduleInput, log_start_distillationUncheckedUpdateWithoutDistillation_scheduleInput>
    create: XOR<log_start_distillationCreateWithoutDistillation_scheduleInput, log_start_distillationUncheckedCreateWithoutDistillation_scheduleInput>
    where?: log_start_distillationWhereInput
  }

  export type log_start_distillationUpdateToOneWithWhereWithoutDistillation_scheduleInput = {
    where?: log_start_distillationWhereInput
    data: XOR<log_start_distillationUpdateWithoutDistillation_scheduleInput, log_start_distillationUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type log_start_distillationUpdateWithoutDistillation_scheduleInput = {
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ref_stills?: ref_stillsUpdateOneRequiredWithoutLog_start_distillationNestedInput
  }

  export type log_start_distillationUncheckedUpdateWithoutDistillation_scheduleInput = {
    start_id?: IntFieldUpdateOperationsInput | number
    still_id?: IntFieldUpdateOperationsInput | number
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_transport_drumUpsertWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: log_transport_drumWhereUniqueInput
    update: XOR<log_transport_drumUpdateWithoutDistillation_scheduleInput, log_transport_drumUncheckedUpdateWithoutDistillation_scheduleInput>
    create: XOR<log_transport_drumCreateWithoutDistillation_scheduleInput, log_transport_drumUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type log_transport_drumUpdateWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: log_transport_drumWhereUniqueInput
    data: XOR<log_transport_drumUpdateWithoutDistillation_scheduleInput, log_transport_drumUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type log_transport_drumUpdateManyWithWhereWithoutDistillation_scheduleInput = {
    where: log_transport_drumScalarWhereInput
    data: XOR<log_transport_drumUpdateManyMutationInput, log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleInput>
  }

  export type log_transport_drumScalarWhereInput = {
    AND?: log_transport_drumScalarWhereInput | log_transport_drumScalarWhereInput[]
    OR?: log_transport_drumScalarWhereInput[]
    NOT?: log_transport_drumScalarWhereInput | log_transport_drumScalarWhereInput[]
    transport_id?: IntFilter<"log_transport_drum"> | number
    scan_id?: IntNullableFilter<"log_transport_drum"> | number | null
    drum_id?: IntNullableFilter<"log_transport_drum"> | number | null
    transported_at?: DateTimeNullableFilter<"log_transport_drum"> | Date | string | null
    distillation_id?: IntNullableFilter<"log_transport_drum"> | number | null
    status?: StringNullableFilter<"log_transport_drum"> | string | null
  }

  export type log_volume_transferUpsertWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: log_volume_transferWhereUniqueInput
    update: XOR<log_volume_transferUpdateWithoutDistillation_scheduleInput, log_volume_transferUncheckedUpdateWithoutDistillation_scheduleInput>
    create: XOR<log_volume_transferCreateWithoutDistillation_scheduleInput, log_volume_transferUncheckedCreateWithoutDistillation_scheduleInput>
  }

  export type log_volume_transferUpdateWithWhereUniqueWithoutDistillation_scheduleInput = {
    where: log_volume_transferWhereUniqueInput
    data: XOR<log_volume_transferUpdateWithoutDistillation_scheduleInput, log_volume_transferUncheckedUpdateWithoutDistillation_scheduleInput>
  }

  export type log_volume_transferUpdateManyWithWhereWithoutDistillation_scheduleInput = {
    where: log_volume_transferScalarWhereInput
    data: XOR<log_volume_transferUpdateManyMutationInput, log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleInput>
  }

  export type log_volume_transferScalarWhereInput = {
    AND?: log_volume_transferScalarWhereInput | log_volume_transferScalarWhereInput[]
    OR?: log_volume_transferScalarWhereInput[]
    NOT?: log_volume_transferScalarWhereInput | log_volume_transferScalarWhereInput[]
    transfer_id?: IntFilter<"log_volume_transfer"> | number
    drum_id?: IntFilter<"log_volume_transfer"> | number
    distillation_id?: IntFilter<"log_volume_transfer"> | number
    volume_transferred?: DecimalFilter<"log_volume_transfer"> | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFilter<"log_volume_transfer"> | Decimal | DecimalJsLike | number | string
    usage_type?: StringFilter<"log_volume_transfer"> | string
    transfer_timestamp?: DateTimeNullableFilter<"log_volume_transfer"> | Date | string | null
    worker_id?: IntNullableFilter<"log_volume_transfer"> | number | null
  }

  export type distillation_scheduleCreateWithoutDistillation_schedule_itemsInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordCreateNestedOneWithoutDistillation_scheduleInput
    ref_stills: ref_stillsCreateNestedOneWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateWithoutDistillation_schedule_itemsInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleCreateOrConnectWithoutDistillation_schedule_itemsInput = {
    where: distillation_scheduleWhereUniqueInput
    create: XOR<distillation_scheduleCreateWithoutDistillation_schedule_itemsInput, distillation_scheduleUncheckedCreateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_newCreateWithoutDistillation_schedule_itemsInput = {
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_newInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_newInput
  }

  export type stock_newUncheckedCreateWithoutDistillation_schedule_itemsInput = {
    stock_id?: number
    supplier_id?: number | null
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_newCreateOrConnectWithoutDistillation_schedule_itemsInput = {
    where: stock_newWhereUniqueInput
    create: XOR<stock_newCreateWithoutDistillation_schedule_itemsInput, stock_newUncheckedCreateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_reproCreateWithoutDistillation_schedule_itemsInput = {
    location: string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    quantity: number
    material_description?: string | null
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_reproInput
  }

  export type stock_reproUncheckedCreateWithoutDistillation_schedule_itemsInput = {
    stock_id?: number
    location: string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    quantity: number
    material_description?: string | null
    material_code?: string | null
  }

  export type stock_reproCreateOrConnectWithoutDistillation_schedule_itemsInput = {
    where: stock_reproWhereUniqueInput
    create: XOR<stock_reproCreateWithoutDistillation_schedule_itemsInput, stock_reproUncheckedCreateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_activityCreateWithoutDistillation_schedule_itemsInput = {
    activity_date: Date | string
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutStock_activityInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_activityInput
    order_detail?: order_detailCreateNestedOneWithoutStock_activityInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_activityInput
  }

  export type stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutStock_activityInput
  }

  export type stock_activityCreateOrConnectWithoutDistillation_schedule_itemsInput = {
    where: stock_activityWhereUniqueInput
    create: XOR<stock_activityCreateWithoutDistillation_schedule_itemsInput, stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_activityCreateManyDistillation_schedule_itemsInputEnvelope = {
    data: stock_activityCreateManyDistillation_schedule_itemsInput | stock_activityCreateManyDistillation_schedule_itemsInput[]
    skipDuplicates?: boolean
  }

  export type distillation_scheduleUpsertWithoutDistillation_schedule_itemsInput = {
    update: XOR<distillation_scheduleUpdateWithoutDistillation_schedule_itemsInput, distillation_scheduleUncheckedUpdateWithoutDistillation_schedule_itemsInput>
    create: XOR<distillation_scheduleCreateWithoutDistillation_schedule_itemsInput, distillation_scheduleUncheckedCreateWithoutDistillation_schedule_itemsInput>
    where?: distillation_scheduleWhereInput
  }

  export type distillation_scheduleUpdateToOneWithWhereWithoutDistillation_schedule_itemsInput = {
    where?: distillation_scheduleWhereInput
    data: XOR<distillation_scheduleUpdateWithoutDistillation_schedule_itemsInput, distillation_scheduleUncheckedUpdateWithoutDistillation_schedule_itemsInput>
  }

  export type distillation_scheduleUpdateWithoutDistillation_schedule_itemsInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateWithoutDistillation_schedule_itemsInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type stock_newUpsertWithoutDistillation_schedule_itemsInput = {
    update: XOR<stock_newUpdateWithoutDistillation_schedule_itemsInput, stock_newUncheckedUpdateWithoutDistillation_schedule_itemsInput>
    create: XOR<stock_newCreateWithoutDistillation_schedule_itemsInput, stock_newUncheckedCreateWithoutDistillation_schedule_itemsInput>
    where?: stock_newWhereInput
  }

  export type stock_newUpdateToOneWithWhereWithoutDistillation_schedule_itemsInput = {
    where?: stock_newWhereInput
    data: XOR<stock_newUpdateWithoutDistillation_schedule_itemsInput, stock_newUncheckedUpdateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_newUpdateWithoutDistillation_schedule_itemsInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneWithoutStock_newNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_newNestedInput
  }

  export type stock_newUncheckedUpdateWithoutDistillation_schedule_itemsInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_reproUpsertWithoutDistillation_schedule_itemsInput = {
    update: XOR<stock_reproUpdateWithoutDistillation_schedule_itemsInput, stock_reproUncheckedUpdateWithoutDistillation_schedule_itemsInput>
    create: XOR<stock_reproCreateWithoutDistillation_schedule_itemsInput, stock_reproUncheckedCreateWithoutDistillation_schedule_itemsInput>
    where?: stock_reproWhereInput
  }

  export type stock_reproUpdateToOneWithWhereWithoutDistillation_schedule_itemsInput = {
    where?: stock_reproWhereInput
    data: XOR<stock_reproUpdateWithoutDistillation_schedule_itemsInput, stock_reproUncheckedUpdateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_reproUpdateWithoutDistillation_schedule_itemsInput = {
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
    ref_materials?: ref_materialsUpdateOneWithoutStock_reproNestedInput
  }

  export type stock_reproUncheckedUpdateWithoutDistillation_schedule_itemsInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_activityUpsertWithWhereUniqueWithoutDistillation_schedule_itemsInput = {
    where: stock_activityWhereUniqueInput
    update: XOR<stock_activityUpdateWithoutDistillation_schedule_itemsInput, stock_activityUncheckedUpdateWithoutDistillation_schedule_itemsInput>
    create: XOR<stock_activityCreateWithoutDistillation_schedule_itemsInput, stock_activityUncheckedCreateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_activityUpdateWithWhereUniqueWithoutDistillation_schedule_itemsInput = {
    where: stock_activityWhereUniqueInput
    data: XOR<stock_activityUpdateWithoutDistillation_schedule_itemsInput, stock_activityUncheckedUpdateWithoutDistillation_schedule_itemsInput>
  }

  export type stock_activityUpdateManyWithWhereWithoutDistillation_schedule_itemsInput = {
    where: stock_activityScalarWhereInput
    data: XOR<stock_activityUpdateManyMutationInput, stock_activityUncheckedUpdateManyWithoutDistillation_schedule_itemsInput>
  }

  export type stock_activityScalarWhereInput = {
    AND?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
    OR?: stock_activityScalarWhereInput[]
    NOT?: stock_activityScalarWhereInput | stock_activityScalarWhereInput[]
    id?: IntFilter<"stock_activity"> | number
    activity_date?: DateTimeFilter<"stock_activity"> | Date | string
    material_code?: StringNullableFilter<"stock_activity"> | string | null
    supplier_id?: IntNullableFilter<"stock_activity"> | number | null
    quantity?: DecimalFilter<"stock_activity"> | Decimal | DecimalJsLike | number | string
    drum_type?: StringFilter<"stock_activity"> | string
    drum_ids?: StringNullableFilter<"stock_activity"> | string | null
    batch_code?: StringNullableFilter<"stock_activity"> | string | null
    order_detail_id?: IntNullableFilter<"stock_activity"> | number | null
    distillation_detail_id?: IntNullableFilter<"stock_activity"> | number | null
    activity_type?: StringFilter<"stock_activity"> | string
    status?: StringNullableFilter<"stock_activity"> | string | null
    notes?: StringNullableFilter<"stock_activity"> | string | null
    source_record_id?: IntNullableFilter<"stock_activity"> | number | null
    created_at?: DateTimeNullableFilter<"stock_activity"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_activity"> | Date | string | null
  }

  export type stock_drumCreateWithoutLog_drum_scanInput = {
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutStock_drumInput
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drumInput
    order_detail: order_detailCreateNestedOneWithoutStock_drumInput
  }

  export type stock_drumUncheckedCreateWithoutLog_drum_scanInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutStock_drumInput
  }

  export type stock_drumCreateOrConnectWithoutLog_drum_scanInput = {
    where: stock_drumWhereUniqueInput
    create: XOR<stock_drumCreateWithoutLog_drum_scanInput, stock_drumUncheckedCreateWithoutLog_drum_scanInput>
  }

  export type log_load_stillCreateWithoutLog_drum_scanInput = {
    status?: string | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutLog_load_stillInput
    stock_drum?: stock_drumCreateNestedOneWithoutLog_load_stillInput
    ref_stills?: ref_stillsCreateNestedOneWithoutLog_load_stillInput
  }

  export type log_load_stillUncheckedCreateWithoutLog_drum_scanInput = {
    loading_id?: number
    drum_id?: number | null
    still_id?: number | null
    distillation_id: number
    status?: string | null
  }

  export type log_load_stillCreateOrConnectWithoutLog_drum_scanInput = {
    where: log_load_stillWhereUniqueInput
    create: XOR<log_load_stillCreateWithoutLog_drum_scanInput, log_load_stillUncheckedCreateWithoutLog_drum_scanInput>
  }

  export type log_transport_drumCreateWithoutLog_drum_scanInput = {
    transported_at?: Date | string | null
    status?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutLog_transport_drumInput
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutLog_transport_drumInput
    stock_drum?: stock_drumCreateNestedOneWithoutLog_transport_drumInput
  }

  export type log_transport_drumUncheckedCreateWithoutLog_drum_scanInput = {
    transport_id?: number
    drum_id?: number | null
    transported_at?: Date | string | null
    distillation_id?: number | null
    status?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutLog_transport_drumInput
  }

  export type log_transport_drumCreateOrConnectWithoutLog_drum_scanInput = {
    where: log_transport_drumWhereUniqueInput
    create: XOR<log_transport_drumCreateWithoutLog_drum_scanInput, log_transport_drumUncheckedCreateWithoutLog_drum_scanInput>
  }

  export type stock_drumUpsertWithoutLog_drum_scanInput = {
    update: XOR<stock_drumUpdateWithoutLog_drum_scanInput, stock_drumUncheckedUpdateWithoutLog_drum_scanInput>
    create: XOR<stock_drumCreateWithoutLog_drum_scanInput, stock_drumUncheckedCreateWithoutLog_drum_scanInput>
    where?: stock_drumWhereInput
  }

  export type stock_drumUpdateToOneWithWhereWithoutLog_drum_scanInput = {
    where?: stock_drumWhereInput
    data: XOR<stock_drumUpdateWithoutLog_drum_scanInput, stock_drumUncheckedUpdateWithoutLog_drum_scanInput>
  }

  export type stock_drumUpdateWithoutLog_drum_scanInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutStock_drumNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutStock_drumNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateWithoutLog_drum_scanInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutStock_drumNestedInput
  }

  export type log_load_stillUpsertWithoutLog_drum_scanInput = {
    update: XOR<log_load_stillUpdateWithoutLog_drum_scanInput, log_load_stillUncheckedUpdateWithoutLog_drum_scanInput>
    create: XOR<log_load_stillCreateWithoutLog_drum_scanInput, log_load_stillUncheckedCreateWithoutLog_drum_scanInput>
    where?: log_load_stillWhereInput
  }

  export type log_load_stillUpdateToOneWithWhereWithoutLog_drum_scanInput = {
    where?: log_load_stillWhereInput
    data: XOR<log_load_stillUpdateWithoutLog_drum_scanInput, log_load_stillUncheckedUpdateWithoutLog_drum_scanInput>
  }

  export type log_load_stillUpdateWithoutLog_drum_scanInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutLog_load_stillNestedInput
    stock_drum?: stock_drumUpdateOneWithoutLog_load_stillNestedInput
    ref_stills?: ref_stillsUpdateOneWithoutLog_load_stillNestedInput
  }

  export type log_load_stillUncheckedUpdateWithoutLog_drum_scanInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_transport_drumUpsertWithoutLog_drum_scanInput = {
    update: XOR<log_transport_drumUpdateWithoutLog_drum_scanInput, log_transport_drumUncheckedUpdateWithoutLog_drum_scanInput>
    create: XOR<log_transport_drumCreateWithoutLog_drum_scanInput, log_transport_drumUncheckedCreateWithoutLog_drum_scanInput>
    where?: log_transport_drumWhereInput
  }

  export type log_transport_drumUpdateToOneWithWhereWithoutLog_drum_scanInput = {
    where?: log_transport_drumWhereInput
    data: XOR<log_transport_drumUpdateWithoutLog_drum_scanInput, log_transport_drumUncheckedUpdateWithoutLog_drum_scanInput>
  }

  export type log_transport_drumUpdateWithoutLog_drum_scanInput = {
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutLog_transport_drumNestedInput
    distillation_schedule?: distillation_scheduleUpdateOneWithoutLog_transport_drumNestedInput
    stock_drum?: stock_drumUpdateOneWithoutLog_transport_drumNestedInput
  }

  export type log_transport_drumUncheckedUpdateWithoutLog_drum_scanInput = {
    transport_id?: IntFieldUpdateOperationsInput | number
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutLog_transport_drumNestedInput
  }

  export type distillation_scheduleCreateWithoutLog_load_stillInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordCreateNestedOneWithoutDistillation_scheduleInput
    ref_stills: ref_stillsCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateWithoutLog_load_stillInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleCreateOrConnectWithoutLog_load_stillInput = {
    where: distillation_scheduleWhereUniqueInput
    create: XOR<distillation_scheduleCreateWithoutLog_load_stillInput, distillation_scheduleUncheckedCreateWithoutLog_load_stillInput>
  }

  export type stock_drumCreateWithoutLog_load_stillInput = {
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutStock_drumInput
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drumInput
    order_detail: order_detailCreateNestedOneWithoutStock_drumInput
  }

  export type stock_drumUncheckedCreateWithoutLog_load_stillInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanUncheckedCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutStock_drumInput
  }

  export type stock_drumCreateOrConnectWithoutLog_load_stillInput = {
    where: stock_drumWhereUniqueInput
    create: XOR<stock_drumCreateWithoutLog_load_stillInput, stock_drumUncheckedCreateWithoutLog_load_stillInput>
  }

  export type log_drum_scanCreateWithoutLog_load_stillInput = {
    scanned_at?: Date | string | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
    stock_drum?: stock_drumCreateNestedOneWithoutLog_drum_scanInput
    log_transport_drum?: log_transport_drumCreateNestedOneWithoutLog_drum_scanInput
  }

  export type log_drum_scanUncheckedCreateWithoutLog_load_stillInput = {
    scan_id?: number
    scanned_at?: Date | string | null
    drum_id?: number | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
    log_transport_drum?: log_transport_drumUncheckedCreateNestedOneWithoutLog_drum_scanInput
  }

  export type log_drum_scanCreateOrConnectWithoutLog_load_stillInput = {
    where: log_drum_scanWhereUniqueInput
    create: XOR<log_drum_scanCreateWithoutLog_load_stillInput, log_drum_scanUncheckedCreateWithoutLog_load_stillInput>
  }

  export type ref_stillsCreateWithoutLog_load_stillInput = {
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    active_context?: active_contextCreateNestedManyWithoutRef_stillsInput
    distillation_schedule?: distillation_scheduleCreateNestedManyWithoutRef_stillsInput
    log_start_distillation?: log_start_distillationCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsUncheckedCreateWithoutLog_load_stillInput = {
    still_id?: number
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    active_context?: active_contextUncheckedCreateNestedManyWithoutRef_stillsInput
    distillation_schedule?: distillation_scheduleUncheckedCreateNestedManyWithoutRef_stillsInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsCreateOrConnectWithoutLog_load_stillInput = {
    where: ref_stillsWhereUniqueInput
    create: XOR<ref_stillsCreateWithoutLog_load_stillInput, ref_stillsUncheckedCreateWithoutLog_load_stillInput>
  }

  export type distillation_scheduleUpsertWithoutLog_load_stillInput = {
    update: XOR<distillation_scheduleUpdateWithoutLog_load_stillInput, distillation_scheduleUncheckedUpdateWithoutLog_load_stillInput>
    create: XOR<distillation_scheduleCreateWithoutLog_load_stillInput, distillation_scheduleUncheckedCreateWithoutLog_load_stillInput>
    where?: distillation_scheduleWhereInput
  }

  export type distillation_scheduleUpdateToOneWithWhereWithoutLog_load_stillInput = {
    where?: distillation_scheduleWhereInput
    data: XOR<distillation_scheduleUpdateWithoutLog_load_stillInput, distillation_scheduleUncheckedUpdateWithoutLog_load_stillInput>
  }

  export type distillation_scheduleUpdateWithoutLog_load_stillInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateWithoutLog_load_stillInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type stock_drumUpsertWithoutLog_load_stillInput = {
    update: XOR<stock_drumUpdateWithoutLog_load_stillInput, stock_drumUncheckedUpdateWithoutLog_load_stillInput>
    create: XOR<stock_drumCreateWithoutLog_load_stillInput, stock_drumUncheckedCreateWithoutLog_load_stillInput>
    where?: stock_drumWhereInput
  }

  export type stock_drumUpdateToOneWithWhereWithoutLog_load_stillInput = {
    where?: stock_drumWhereInput
    data: XOR<stock_drumUpdateWithoutLog_load_stillInput, stock_drumUncheckedUpdateWithoutLog_load_stillInput>
  }

  export type stock_drumUpdateWithoutLog_load_stillInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutStock_drumNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutStock_drumNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateWithoutLog_load_stillInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUncheckedUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutStock_drumNestedInput
  }

  export type log_drum_scanUpsertWithoutLog_load_stillInput = {
    update: XOR<log_drum_scanUpdateWithoutLog_load_stillInput, log_drum_scanUncheckedUpdateWithoutLog_load_stillInput>
    create: XOR<log_drum_scanCreateWithoutLog_load_stillInput, log_drum_scanUncheckedCreateWithoutLog_load_stillInput>
    where?: log_drum_scanWhereInput
  }

  export type log_drum_scanUpdateToOneWithWhereWithoutLog_load_stillInput = {
    where?: log_drum_scanWhereInput
    data: XOR<log_drum_scanUpdateWithoutLog_load_stillInput, log_drum_scanUncheckedUpdateWithoutLog_load_stillInput>
  }

  export type log_drum_scanUpdateWithoutLog_load_stillInput = {
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUpdateOneWithoutLog_drum_scanNestedInput
    log_transport_drum?: log_transport_drumUpdateOneWithoutLog_drum_scanNestedInput
  }

  export type log_drum_scanUncheckedUpdateWithoutLog_load_stillInput = {
    scan_id?: IntFieldUpdateOperationsInput | number
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    log_transport_drum?: log_transport_drumUncheckedUpdateOneWithoutLog_drum_scanNestedInput
  }

  export type ref_stillsUpsertWithoutLog_load_stillInput = {
    update: XOR<ref_stillsUpdateWithoutLog_load_stillInput, ref_stillsUncheckedUpdateWithoutLog_load_stillInput>
    create: XOR<ref_stillsCreateWithoutLog_load_stillInput, ref_stillsUncheckedCreateWithoutLog_load_stillInput>
    where?: ref_stillsWhereInput
  }

  export type ref_stillsUpdateToOneWithWhereWithoutLog_load_stillInput = {
    where?: ref_stillsWhereInput
    data: XOR<ref_stillsUpdateWithoutLog_load_stillInput, ref_stillsUncheckedUpdateWithoutLog_load_stillInput>
  }

  export type ref_stillsUpdateWithoutLog_load_stillInput = {
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active_context?: active_contextUpdateManyWithoutRef_stillsNestedInput
    distillation_schedule?: distillation_scheduleUpdateManyWithoutRef_stillsNestedInput
    log_start_distillation?: log_start_distillationUpdateManyWithoutRef_stillsNestedInput
  }

  export type ref_stillsUncheckedUpdateWithoutLog_load_stillInput = {
    still_id?: IntFieldUpdateOperationsInput | number
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active_context?: active_contextUncheckedUpdateManyWithoutRef_stillsNestedInput
    distillation_schedule?: distillation_scheduleUncheckedUpdateManyWithoutRef_stillsNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateManyWithoutRef_stillsNestedInput
  }

  export type distillation_scheduleCreateWithoutLog_start_distillationInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordCreateNestedOneWithoutDistillation_scheduleInput
    ref_stills: ref_stillsCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillCreateNestedManyWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateWithoutLog_start_distillationInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleCreateOrConnectWithoutLog_start_distillationInput = {
    where: distillation_scheduleWhereUniqueInput
    create: XOR<distillation_scheduleCreateWithoutLog_start_distillationInput, distillation_scheduleUncheckedCreateWithoutLog_start_distillationInput>
  }

  export type ref_stillsCreateWithoutLog_start_distillationInput = {
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    active_context?: active_contextCreateNestedManyWithoutRef_stillsInput
    distillation_schedule?: distillation_scheduleCreateNestedManyWithoutRef_stillsInput
    log_load_still?: log_load_stillCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsUncheckedCreateWithoutLog_start_distillationInput = {
    still_id?: number
    still_code: string
    max_capacity: Decimal | DecimalJsLike | number | string
    power_rating_kw: number
    lab_id: number
    is_vacuum: boolean
    is_operational: boolean
    description?: string | null
    active_context?: active_contextUncheckedCreateNestedManyWithoutRef_stillsInput
    distillation_schedule?: distillation_scheduleUncheckedCreateNestedManyWithoutRef_stillsInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutRef_stillsInput
  }

  export type ref_stillsCreateOrConnectWithoutLog_start_distillationInput = {
    where: ref_stillsWhereUniqueInput
    create: XOR<ref_stillsCreateWithoutLog_start_distillationInput, ref_stillsUncheckedCreateWithoutLog_start_distillationInput>
  }

  export type distillation_scheduleUpsertWithoutLog_start_distillationInput = {
    update: XOR<distillation_scheduleUpdateWithoutLog_start_distillationInput, distillation_scheduleUncheckedUpdateWithoutLog_start_distillationInput>
    create: XOR<distillation_scheduleCreateWithoutLog_start_distillationInput, distillation_scheduleUncheckedCreateWithoutLog_start_distillationInput>
    where?: distillation_scheduleWhereInput
  }

  export type distillation_scheduleUpdateToOneWithWhereWithoutLog_start_distillationInput = {
    where?: distillation_scheduleWhereInput
    data: XOR<distillation_scheduleUpdateWithoutLog_start_distillationInput, distillation_scheduleUncheckedUpdateWithoutLog_start_distillationInput>
  }

  export type distillation_scheduleUpdateWithoutLog_start_distillationInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateWithoutLog_start_distillationInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type ref_stillsUpsertWithoutLog_start_distillationInput = {
    update: XOR<ref_stillsUpdateWithoutLog_start_distillationInput, ref_stillsUncheckedUpdateWithoutLog_start_distillationInput>
    create: XOR<ref_stillsCreateWithoutLog_start_distillationInput, ref_stillsUncheckedCreateWithoutLog_start_distillationInput>
    where?: ref_stillsWhereInput
  }

  export type ref_stillsUpdateToOneWithWhereWithoutLog_start_distillationInput = {
    where?: ref_stillsWhereInput
    data: XOR<ref_stillsUpdateWithoutLog_start_distillationInput, ref_stillsUncheckedUpdateWithoutLog_start_distillationInput>
  }

  export type ref_stillsUpdateWithoutLog_start_distillationInput = {
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active_context?: active_contextUpdateManyWithoutRef_stillsNestedInput
    distillation_schedule?: distillation_scheduleUpdateManyWithoutRef_stillsNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutRef_stillsNestedInput
  }

  export type ref_stillsUncheckedUpdateWithoutLog_start_distillationInput = {
    still_id?: IntFieldUpdateOperationsInput | number
    still_code?: StringFieldUpdateOperationsInput | string
    max_capacity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    power_rating_kw?: IntFieldUpdateOperationsInput | number
    lab_id?: IntFieldUpdateOperationsInput | number
    is_vacuum?: BoolFieldUpdateOperationsInput | boolean
    is_operational?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active_context?: active_contextUncheckedUpdateManyWithoutRef_stillsNestedInput
    distillation_schedule?: distillation_scheduleUncheckedUpdateManyWithoutRef_stillsNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutRef_stillsNestedInput
  }

  export type distillation_pending_assignmentCreateWithoutLog_transport_drumInput = {
    status?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutDistillation_pending_assignmentInput
    stock_drum?: stock_drumCreateNestedOneWithoutDistillation_pending_assignmentInput
  }

  export type distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput = {
    pending_id?: number
    drum_id?: number | null
    assigned_distillation_id?: number | null
    status?: string | null
  }

  export type distillation_pending_assignmentCreateOrConnectWithoutLog_transport_drumInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    create: XOR<distillation_pending_assignmentCreateWithoutLog_transport_drumInput, distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput>
  }

  export type distillation_pending_assignmentCreateManyLog_transport_drumInputEnvelope = {
    data: distillation_pending_assignmentCreateManyLog_transport_drumInput | distillation_pending_assignmentCreateManyLog_transport_drumInput[]
    skipDuplicates?: boolean
  }

  export type distillation_scheduleCreateWithoutLog_transport_drumInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordCreateNestedOneWithoutDistillation_scheduleInput
    ref_stills: ref_stillsCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateWithoutLog_transport_drumInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleCreateOrConnectWithoutLog_transport_drumInput = {
    where: distillation_scheduleWhereUniqueInput
    create: XOR<distillation_scheduleCreateWithoutLog_transport_drumInput, distillation_scheduleUncheckedCreateWithoutLog_transport_drumInput>
  }

  export type stock_drumCreateWithoutLog_transport_drumInput = {
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutStock_drumInput
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drumInput
    order_detail: order_detailCreateNestedOneWithoutStock_drumInput
  }

  export type stock_drumUncheckedCreateWithoutLog_transport_drumInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanUncheckedCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutStock_drumInput
  }

  export type stock_drumCreateOrConnectWithoutLog_transport_drumInput = {
    where: stock_drumWhereUniqueInput
    create: XOR<stock_drumCreateWithoutLog_transport_drumInput, stock_drumUncheckedCreateWithoutLog_transport_drumInput>
  }

  export type log_drum_scanCreateWithoutLog_transport_drumInput = {
    scanned_at?: Date | string | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
    stock_drum?: stock_drumCreateNestedOneWithoutLog_drum_scanInput
    log_load_still?: log_load_stillCreateNestedOneWithoutLog_drum_scanInput
  }

  export type log_drum_scanUncheckedCreateWithoutLog_transport_drumInput = {
    scan_id?: number
    scanned_at?: Date | string | null
    drum_id?: number | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
    log_load_still?: log_load_stillUncheckedCreateNestedOneWithoutLog_drum_scanInput
  }

  export type log_drum_scanCreateOrConnectWithoutLog_transport_drumInput = {
    where: log_drum_scanWhereUniqueInput
    create: XOR<log_drum_scanCreateWithoutLog_transport_drumInput, log_drum_scanUncheckedCreateWithoutLog_transport_drumInput>
  }

  export type distillation_pending_assignmentUpsertWithWhereUniqueWithoutLog_transport_drumInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    update: XOR<distillation_pending_assignmentUpdateWithoutLog_transport_drumInput, distillation_pending_assignmentUncheckedUpdateWithoutLog_transport_drumInput>
    create: XOR<distillation_pending_assignmentCreateWithoutLog_transport_drumInput, distillation_pending_assignmentUncheckedCreateWithoutLog_transport_drumInput>
  }

  export type distillation_pending_assignmentUpdateWithWhereUniqueWithoutLog_transport_drumInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    data: XOR<distillation_pending_assignmentUpdateWithoutLog_transport_drumInput, distillation_pending_assignmentUncheckedUpdateWithoutLog_transport_drumInput>
  }

  export type distillation_pending_assignmentUpdateManyWithWhereWithoutLog_transport_drumInput = {
    where: distillation_pending_assignmentScalarWhereInput
    data: XOR<distillation_pending_assignmentUpdateManyMutationInput, distillation_pending_assignmentUncheckedUpdateManyWithoutLog_transport_drumInput>
  }

  export type distillation_scheduleUpsertWithoutLog_transport_drumInput = {
    update: XOR<distillation_scheduleUpdateWithoutLog_transport_drumInput, distillation_scheduleUncheckedUpdateWithoutLog_transport_drumInput>
    create: XOR<distillation_scheduleCreateWithoutLog_transport_drumInput, distillation_scheduleUncheckedCreateWithoutLog_transport_drumInput>
    where?: distillation_scheduleWhereInput
  }

  export type distillation_scheduleUpdateToOneWithWhereWithoutLog_transport_drumInput = {
    where?: distillation_scheduleWhereInput
    data: XOR<distillation_scheduleUpdateWithoutLog_transport_drumInput, distillation_scheduleUncheckedUpdateWithoutLog_transport_drumInput>
  }

  export type distillation_scheduleUpdateWithoutLog_transport_drumInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateWithoutLog_transport_drumInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type stock_drumUpsertWithoutLog_transport_drumInput = {
    update: XOR<stock_drumUpdateWithoutLog_transport_drumInput, stock_drumUncheckedUpdateWithoutLog_transport_drumInput>
    create: XOR<stock_drumCreateWithoutLog_transport_drumInput, stock_drumUncheckedCreateWithoutLog_transport_drumInput>
    where?: stock_drumWhereInput
  }

  export type stock_drumUpdateToOneWithWhereWithoutLog_transport_drumInput = {
    where?: stock_drumWhereInput
    data: XOR<stock_drumUpdateWithoutLog_transport_drumInput, stock_drumUncheckedUpdateWithoutLog_transport_drumInput>
  }

  export type stock_drumUpdateWithoutLog_transport_drumInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutStock_drumNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutStock_drumNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateWithoutLog_transport_drumInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUncheckedUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutStock_drumNestedInput
  }

  export type log_drum_scanUpsertWithoutLog_transport_drumInput = {
    update: XOR<log_drum_scanUpdateWithoutLog_transport_drumInput, log_drum_scanUncheckedUpdateWithoutLog_transport_drumInput>
    create: XOR<log_drum_scanCreateWithoutLog_transport_drumInput, log_drum_scanUncheckedCreateWithoutLog_transport_drumInput>
    where?: log_drum_scanWhereInput
  }

  export type log_drum_scanUpdateToOneWithWhereWithoutLog_transport_drumInput = {
    where?: log_drum_scanWhereInput
    data: XOR<log_drum_scanUpdateWithoutLog_transport_drumInput, log_drum_scanUncheckedUpdateWithoutLog_transport_drumInput>
  }

  export type log_drum_scanUpdateWithoutLog_transport_drumInput = {
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUpdateOneWithoutLog_drum_scanNestedInput
    log_load_still?: log_load_stillUpdateOneWithoutLog_drum_scanNestedInput
  }

  export type log_drum_scanUncheckedUpdateWithoutLog_transport_drumInput = {
    scan_id?: IntFieldUpdateOperationsInput | number
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    log_load_still?: log_load_stillUncheckedUpdateOneWithoutLog_drum_scanNestedInput
  }

  export type distillation_scheduleCreateWithoutLog_volume_transferInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordCreateNestedOneWithoutDistillation_scheduleInput
    ref_stills: ref_stillsCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateWithoutLog_volume_transferInput = {
    distillation_id?: number
    scheduled_date: Date | string
    still_id: number
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleCreateOrConnectWithoutLog_volume_transferInput = {
    where: distillation_scheduleWhereUniqueInput
    create: XOR<distillation_scheduleCreateWithoutLog_volume_transferInput, distillation_scheduleUncheckedCreateWithoutLog_volume_transferInput>
  }

  export type stock_drumCreateWithoutLog_volume_transferInput = {
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutStock_drumInput
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drumInput
    order_detail: order_detailCreateNestedOneWithoutStock_drumInput
  }

  export type stock_drumUncheckedCreateWithoutLog_volume_transferInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanUncheckedCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutStock_drumInput
  }

  export type stock_drumCreateOrConnectWithoutLog_volume_transferInput = {
    where: stock_drumWhereUniqueInput
    create: XOR<stock_drumCreateWithoutLog_volume_transferInput, stock_drumUncheckedCreateWithoutLog_volume_transferInput>
  }

  export type distillation_scheduleUpsertWithoutLog_volume_transferInput = {
    update: XOR<distillation_scheduleUpdateWithoutLog_volume_transferInput, distillation_scheduleUncheckedUpdateWithoutLog_volume_transferInput>
    create: XOR<distillation_scheduleCreateWithoutLog_volume_transferInput, distillation_scheduleUncheckedCreateWithoutLog_volume_transferInput>
    where?: distillation_scheduleWhereInput
  }

  export type distillation_scheduleUpdateToOneWithWhereWithoutLog_volume_transferInput = {
    where?: distillation_scheduleWhereInput
    data: XOR<distillation_scheduleUpdateWithoutLog_volume_transferInput, distillation_scheduleUncheckedUpdateWithoutLog_volume_transferInput>
  }

  export type distillation_scheduleUpdateWithoutLog_volume_transferInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput
    ref_stills?: ref_stillsUpdateOneRequiredWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateWithoutLog_volume_transferInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    still_id?: IntFieldUpdateOperationsInput | number
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type stock_drumUpsertWithoutLog_volume_transferInput = {
    update: XOR<stock_drumUpdateWithoutLog_volume_transferInput, stock_drumUncheckedUpdateWithoutLog_volume_transferInput>
    create: XOR<stock_drumCreateWithoutLog_volume_transferInput, stock_drumUncheckedCreateWithoutLog_volume_transferInput>
    where?: stock_drumWhereInput
  }

  export type stock_drumUpdateToOneWithWhereWithoutLog_volume_transferInput = {
    where?: stock_drumWhereInput
    data: XOR<stock_drumUpdateWithoutLog_volume_transferInput, stock_drumUncheckedUpdateWithoutLog_volume_transferInput>
  }

  export type stock_drumUpdateWithoutLog_volume_transferInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutStock_drumNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutStock_drumNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateWithoutLog_volume_transferInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUncheckedUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutStock_drumNestedInput
  }

  export type ref_materialsCreateWithoutOrder_detailInput = {
    value: string
    code: string
    cas_number?: string | null
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutOrder_detailInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutOrder_detailInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutOrder_detailInput, ref_materialsUncheckedCreateWithoutOrder_detailInput>
  }

  export type stock_orderCreateWithoutOrder_detailInput = {
    po_number?: string | null
    date_ordered?: Date | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ref_suppliers: ref_suppliersCreateNestedOneWithoutStock_orderInput
  }

  export type stock_orderUncheckedCreateWithoutOrder_detailInput = {
    order_id?: number
    po_number?: string | null
    date_ordered?: Date | string
    supplier_id: number
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_orderCreateOrConnectWithoutOrder_detailInput = {
    where: stock_orderWhereUniqueInput
    create: XOR<stock_orderCreateWithoutOrder_detailInput, stock_orderUncheckedCreateWithoutOrder_detailInput>
  }

  export type order_detail_stock_activityCreateWithoutOrder_detailInput = {
    created_at?: Date | string | null
    stock_activity: stock_activityCreateNestedOneWithoutOrder_detail_stock_activityInput
  }

  export type order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput = {
    id?: number
    stock_activity_id: number
    created_at?: Date | string | null
  }

  export type order_detail_stock_activityCreateOrConnectWithoutOrder_detailInput = {
    where: order_detail_stock_activityWhereUniqueInput
    create: XOR<order_detail_stock_activityCreateWithoutOrder_detailInput, order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput>
  }

  export type order_detail_stock_activityCreateManyOrder_detailInputEnvelope = {
    data: order_detail_stock_activityCreateManyOrder_detailInput | order_detail_stock_activityCreateManyOrder_detailInput[]
    skipDuplicates?: boolean
  }

  export type stock_activityCreateWithoutOrder_detailInput = {
    activity_date: Date | string
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutStock_activityInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedOneWithoutStock_activityInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_activityInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_activityInput
  }

  export type stock_activityUncheckedCreateWithoutOrder_detailInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutStock_activityInput
  }

  export type stock_activityCreateOrConnectWithoutOrder_detailInput = {
    where: stock_activityWhereUniqueInput
    create: XOR<stock_activityCreateWithoutOrder_detailInput, stock_activityUncheckedCreateWithoutOrder_detailInput>
  }

  export type stock_activityCreateManyOrder_detailInputEnvelope = {
    data: stock_activityCreateManyOrder_detailInput | stock_activityCreateManyOrder_detailInput[]
    skipDuplicates?: boolean
  }

  export type stock_drumCreateWithoutOrder_detailInput = {
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutStock_drumInput
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drumInput
  }

  export type stock_drumUncheckedCreateWithoutOrder_detailInput = {
    drum_id?: number
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutStock_drumInput
    log_drum_scan?: log_drum_scanUncheckedCreateNestedManyWithoutStock_drumInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutStock_drumInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutStock_drumInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutStock_drumInput
  }

  export type stock_drumCreateOrConnectWithoutOrder_detailInput = {
    where: stock_drumWhereUniqueInput
    create: XOR<stock_drumCreateWithoutOrder_detailInput, stock_drumUncheckedCreateWithoutOrder_detailInput>
  }

  export type stock_drumCreateManyOrder_detailInputEnvelope = {
    data: stock_drumCreateManyOrder_detailInput | stock_drumCreateManyOrder_detailInput[]
    skipDuplicates?: boolean
  }

  export type stock_drum_newCreateWithoutOrder_detailInput = {
    drum_type?: string
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drum_newInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_drum_newInput
  }

  export type stock_drum_newUncheckedCreateWithoutOrder_detailInput = {
    drum_id?: number
    material_code?: string | null
    drum_type?: string
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_id?: number | null
  }

  export type stock_drum_newCreateOrConnectWithoutOrder_detailInput = {
    where: stock_drum_newWhereUniqueInput
    create: XOR<stock_drum_newCreateWithoutOrder_detailInput, stock_drum_newUncheckedCreateWithoutOrder_detailInput>
  }

  export type stock_drum_newCreateManyOrder_detailInputEnvelope = {
    data: stock_drum_newCreateManyOrder_detailInput | stock_drum_newCreateManyOrder_detailInput[]
    skipDuplicates?: boolean
  }

  export type ref_materialsUpsertWithoutOrder_detailInput = {
    update: XOR<ref_materialsUpdateWithoutOrder_detailInput, ref_materialsUncheckedUpdateWithoutOrder_detailInput>
    create: XOR<ref_materialsCreateWithoutOrder_detailInput, ref_materialsUncheckedCreateWithoutOrder_detailInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutOrder_detailInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutOrder_detailInput, ref_materialsUncheckedUpdateWithoutOrder_detailInput>
  }

  export type ref_materialsUpdateWithoutOrder_detailInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutOrder_detailInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type stock_orderUpsertWithoutOrder_detailInput = {
    update: XOR<stock_orderUpdateWithoutOrder_detailInput, stock_orderUncheckedUpdateWithoutOrder_detailInput>
    create: XOR<stock_orderCreateWithoutOrder_detailInput, stock_orderUncheckedCreateWithoutOrder_detailInput>
    where?: stock_orderWhereInput
  }

  export type stock_orderUpdateToOneWithWhereWithoutOrder_detailInput = {
    where?: stock_orderWhereInput
    data: XOR<stock_orderUpdateWithoutOrder_detailInput, stock_orderUncheckedUpdateWithoutOrder_detailInput>
  }

  export type stock_orderUpdateWithoutOrder_detailInput = {
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_suppliers?: ref_suppliersUpdateOneRequiredWithoutStock_orderNestedInput
  }

  export type stock_orderUncheckedUpdateWithoutOrder_detailInput = {
    order_id?: IntFieldUpdateOperationsInput | number
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier_id?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type order_detail_stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput = {
    where: order_detail_stock_activityWhereUniqueInput
    update: XOR<order_detail_stock_activityUpdateWithoutOrder_detailInput, order_detail_stock_activityUncheckedUpdateWithoutOrder_detailInput>
    create: XOR<order_detail_stock_activityCreateWithoutOrder_detailInput, order_detail_stock_activityUncheckedCreateWithoutOrder_detailInput>
  }

  export type order_detail_stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput = {
    where: order_detail_stock_activityWhereUniqueInput
    data: XOR<order_detail_stock_activityUpdateWithoutOrder_detailInput, order_detail_stock_activityUncheckedUpdateWithoutOrder_detailInput>
  }

  export type order_detail_stock_activityUpdateManyWithWhereWithoutOrder_detailInput = {
    where: order_detail_stock_activityScalarWhereInput
    data: XOR<order_detail_stock_activityUpdateManyMutationInput, order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailInput>
  }

  export type order_detail_stock_activityScalarWhereInput = {
    AND?: order_detail_stock_activityScalarWhereInput | order_detail_stock_activityScalarWhereInput[]
    OR?: order_detail_stock_activityScalarWhereInput[]
    NOT?: order_detail_stock_activityScalarWhereInput | order_detail_stock_activityScalarWhereInput[]
    id?: IntFilter<"order_detail_stock_activity"> | number
    order_detail_id?: IntFilter<"order_detail_stock_activity"> | number
    stock_activity_id?: IntFilter<"order_detail_stock_activity"> | number
    created_at?: DateTimeNullableFilter<"order_detail_stock_activity"> | Date | string | null
  }

  export type stock_activityUpsertWithWhereUniqueWithoutOrder_detailInput = {
    where: stock_activityWhereUniqueInput
    update: XOR<stock_activityUpdateWithoutOrder_detailInput, stock_activityUncheckedUpdateWithoutOrder_detailInput>
    create: XOR<stock_activityCreateWithoutOrder_detailInput, stock_activityUncheckedCreateWithoutOrder_detailInput>
  }

  export type stock_activityUpdateWithWhereUniqueWithoutOrder_detailInput = {
    where: stock_activityWhereUniqueInput
    data: XOR<stock_activityUpdateWithoutOrder_detailInput, stock_activityUncheckedUpdateWithoutOrder_detailInput>
  }

  export type stock_activityUpdateManyWithWhereWithoutOrder_detailInput = {
    where: stock_activityScalarWhereInput
    data: XOR<stock_activityUpdateManyMutationInput, stock_activityUncheckedUpdateManyWithoutOrder_detailInput>
  }

  export type stock_drumUpsertWithWhereUniqueWithoutOrder_detailInput = {
    where: stock_drumWhereUniqueInput
    update: XOR<stock_drumUpdateWithoutOrder_detailInput, stock_drumUncheckedUpdateWithoutOrder_detailInput>
    create: XOR<stock_drumCreateWithoutOrder_detailInput, stock_drumUncheckedCreateWithoutOrder_detailInput>
  }

  export type stock_drumUpdateWithWhereUniqueWithoutOrder_detailInput = {
    where: stock_drumWhereUniqueInput
    data: XOR<stock_drumUpdateWithoutOrder_detailInput, stock_drumUncheckedUpdateWithoutOrder_detailInput>
  }

  export type stock_drumUpdateManyWithWhereWithoutOrder_detailInput = {
    where: stock_drumScalarWhereInput
    data: XOR<stock_drumUpdateManyMutationInput, stock_drumUncheckedUpdateManyWithoutOrder_detailInput>
  }

  export type stock_drum_newUpsertWithWhereUniqueWithoutOrder_detailInput = {
    where: stock_drum_newWhereUniqueInput
    update: XOR<stock_drum_newUpdateWithoutOrder_detailInput, stock_drum_newUncheckedUpdateWithoutOrder_detailInput>
    create: XOR<stock_drum_newCreateWithoutOrder_detailInput, stock_drum_newUncheckedCreateWithoutOrder_detailInput>
  }

  export type stock_drum_newUpdateWithWhereUniqueWithoutOrder_detailInput = {
    where: stock_drum_newWhereUniqueInput
    data: XOR<stock_drum_newUpdateWithoutOrder_detailInput, stock_drum_newUncheckedUpdateWithoutOrder_detailInput>
  }

  export type stock_drum_newUpdateManyWithWhereWithoutOrder_detailInput = {
    where: stock_drum_newScalarWhereInput
    data: XOR<stock_drum_newUpdateManyMutationInput, stock_drum_newUncheckedUpdateManyWithoutOrder_detailInput>
  }

  export type bottle_sizesCreateWithoutProduct_pricesInput = {
    volume: string
  }

  export type bottle_sizesUncheckedCreateWithoutProduct_pricesInput = {
    id?: number
    volume: string
  }

  export type bottle_sizesCreateOrConnectWithoutProduct_pricesInput = {
    where: bottle_sizesWhereUniqueInput
    create: XOR<bottle_sizesCreateWithoutProduct_pricesInput, bottle_sizesUncheckedCreateWithoutProduct_pricesInput>
  }

  export type ref_productCreateWithoutProduct_pricesInput = {
    name: string
    sku: string
    raw_material_id?: number | null
    grade: string
    ref_materials?: ref_materialsCreateNestedOneWithoutRef_productInput
  }

  export type ref_productUncheckedCreateWithoutProduct_pricesInput = {
    product_id?: number
    name: string
    sku: string
    raw_material_id?: number | null
    grade: string
    material_code?: string | null
  }

  export type ref_productCreateOrConnectWithoutProduct_pricesInput = {
    where: ref_productWhereUniqueInput
    create: XOR<ref_productCreateWithoutProduct_pricesInput, ref_productUncheckedCreateWithoutProduct_pricesInput>
  }

  export type bottle_sizesUpsertWithoutProduct_pricesInput = {
    update: XOR<bottle_sizesUpdateWithoutProduct_pricesInput, bottle_sizesUncheckedUpdateWithoutProduct_pricesInput>
    create: XOR<bottle_sizesCreateWithoutProduct_pricesInput, bottle_sizesUncheckedCreateWithoutProduct_pricesInput>
    where?: bottle_sizesWhereInput
  }

  export type bottle_sizesUpdateToOneWithWhereWithoutProduct_pricesInput = {
    where?: bottle_sizesWhereInput
    data: XOR<bottle_sizesUpdateWithoutProduct_pricesInput, bottle_sizesUncheckedUpdateWithoutProduct_pricesInput>
  }

  export type bottle_sizesUpdateWithoutProduct_pricesInput = {
    volume?: StringFieldUpdateOperationsInput | string
  }

  export type bottle_sizesUncheckedUpdateWithoutProduct_pricesInput = {
    id?: IntFieldUpdateOperationsInput | number
    volume?: StringFieldUpdateOperationsInput | string
  }

  export type ref_productUpsertWithoutProduct_pricesInput = {
    update: XOR<ref_productUpdateWithoutProduct_pricesInput, ref_productUncheckedUpdateWithoutProduct_pricesInput>
    create: XOR<ref_productCreateWithoutProduct_pricesInput, ref_productUncheckedCreateWithoutProduct_pricesInput>
    where?: ref_productWhereInput
  }

  export type ref_productUpdateToOneWithWhereWithoutProduct_pricesInput = {
    where?: ref_productWhereInput
    data: XOR<ref_productUpdateWithoutProduct_pricesInput, ref_productUncheckedUpdateWithoutProduct_pricesInput>
  }

  export type ref_productUpdateWithoutProduct_pricesInput = {
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
    ref_materials?: ref_materialsUpdateOneWithoutRef_productNestedInput
  }

  export type ref_productUncheckedUpdateWithoutProduct_pricesInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_detailCreateWithoutRef_materialsInput = {
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    stock_order: stock_orderCreateNestedOneWithoutOrder_detailInput
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailUncheckedCreateWithoutRef_materialsInput = {
    detail_id?: number
    order_id: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailCreateOrConnectWithoutRef_materialsInput = {
    where: order_detailWhereUniqueInput
    create: XOR<order_detailCreateWithoutRef_materialsInput, order_detailUncheckedCreateWithoutRef_materialsInput>
  }

  export type order_detailCreateManyRef_materialsInputEnvelope = {
    data: order_detailCreateManyRef_materialsInput | order_detailCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type raw_stock_historyCreateWithoutRef_materialsInput = {
    date?: Date | string | null
    event_str?: string | null
    drum_type?: string | null
    no_events?: number | null
    notes_ids?: string | null
    notes_batch?: string | null
    source?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    stock_history?: stock_historyCreateNestedManyWithoutRaw_stock_historyInput
  }

  export type raw_stock_historyUncheckedCreateWithoutRef_materialsInput = {
    id?: number
    date?: Date | string | null
    event_str?: string | null
    drum_type?: string | null
    no_events?: number | null
    notes_ids?: string | null
    notes_batch?: string | null
    source?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRaw_stock_historyInput
  }

  export type raw_stock_historyCreateOrConnectWithoutRef_materialsInput = {
    where: raw_stock_historyWhereUniqueInput
    create: XOR<raw_stock_historyCreateWithoutRef_materialsInput, raw_stock_historyUncheckedCreateWithoutRef_materialsInput>
  }

  export type raw_stock_historyCreateManyRef_materialsInputEnvelope = {
    data: raw_stock_historyCreateManyRef_materialsInput | raw_stock_historyCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type chemical_group_kindCreateWithoutRef_materialsInput = {
    value: string
  }

  export type chemical_group_kindUncheckedCreateWithoutRef_materialsInput = {
    value: string
  }

  export type chemical_group_kindCreateOrConnectWithoutRef_materialsInput = {
    where: chemical_group_kindWhereUniqueInput
    create: XOR<chemical_group_kindCreateWithoutRef_materialsInput, chemical_group_kindUncheckedCreateWithoutRef_materialsInput>
  }

  export type ref_productCreateWithoutRef_materialsInput = {
    name: string
    sku: string
    raw_material_id?: number | null
    grade: string
    product_prices?: product_pricesCreateNestedManyWithoutProductsInput
  }

  export type ref_productUncheckedCreateWithoutRef_materialsInput = {
    product_id?: number
    name: string
    sku: string
    raw_material_id?: number | null
    grade: string
    product_prices?: product_pricesUncheckedCreateNestedManyWithoutProductsInput
  }

  export type ref_productCreateOrConnectWithoutRef_materialsInput = {
    where: ref_productWhereUniqueInput
    create: XOR<ref_productCreateWithoutRef_materialsInput, ref_productUncheckedCreateWithoutRef_materialsInput>
  }

  export type ref_productCreateManyRef_materialsInputEnvelope = {
    data: ref_productCreateManyRef_materialsInput | ref_productCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type ref_supplier_materialCreateWithoutRef_materialsInput = {
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
    ref_suppliers: ref_suppliersCreateNestedOneWithoutRef_supplier_materialInput
  }

  export type ref_supplier_materialUncheckedCreateWithoutRef_materialsInput = {
    supplier_id: number
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
  }

  export type ref_supplier_materialCreateOrConnectWithoutRef_materialsInput = {
    where: ref_supplier_materialWhereUniqueInput
    create: XOR<ref_supplier_materialCreateWithoutRef_materialsInput, ref_supplier_materialUncheckedCreateWithoutRef_materialsInput>
  }

  export type ref_supplier_materialCreateManyRef_materialsInputEnvelope = {
    data: ref_supplier_materialCreateManyRef_materialsInput | ref_supplier_materialCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type stock_activityCreateWithoutRef_materialsInput = {
    activity_date: Date | string
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutStock_activityInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedOneWithoutStock_activityInput
    order_detail?: order_detailCreateNestedOneWithoutStock_activityInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_activityInput
  }

  export type stock_activityUncheckedCreateWithoutRef_materialsInput = {
    id?: number
    activity_date: Date | string
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutStock_activityInput
  }

  export type stock_activityCreateOrConnectWithoutRef_materialsInput = {
    where: stock_activityWhereUniqueInput
    create: XOR<stock_activityCreateWithoutRef_materialsInput, stock_activityUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_activityCreateManyRef_materialsInputEnvelope = {
    data: stock_activityCreateManyRef_materialsInput | stock_activityCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type stock_drum_newCreateWithoutRef_materialsInput = {
    drum_type?: string
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_record?: distillation_recordCreateNestedOneWithoutStock_drum_newInput
    order_detail: order_detailCreateNestedOneWithoutStock_drum_newInput
  }

  export type stock_drum_newUncheckedCreateWithoutRef_materialsInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_id?: number | null
  }

  export type stock_drum_newCreateOrConnectWithoutRef_materialsInput = {
    where: stock_drum_newWhereUniqueInput
    create: XOR<stock_drum_newCreateWithoutRef_materialsInput, stock_drum_newUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_drum_newCreateManyRef_materialsInputEnvelope = {
    data: stock_drum_newCreateManyRef_materialsInput | stock_drum_newCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type stock_historyCreateWithoutRef_materialsInput = {
    date: Date | string
    material_name: string
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    raw_stock_history?: raw_stock_historyCreateNestedOneWithoutStock_historyInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_historyInput
  }

  export type stock_historyUncheckedCreateWithoutRef_materialsInput = {
    id?: number
    date: Date | string
    material_name: string
    supplier_id?: number | null
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_historyCreateOrConnectWithoutRef_materialsInput = {
    where: stock_historyWhereUniqueInput
    create: XOR<stock_historyCreateWithoutRef_materialsInput, stock_historyUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_historyCreateManyRef_materialsInputEnvelope = {
    data: stock_historyCreateManyRef_materialsInput | stock_historyCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type stock_newCreateWithoutRef_materialsInput = {
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutStock_newInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_newInput
  }

  export type stock_newUncheckedCreateWithoutRef_materialsInput = {
    stock_id?: number
    supplier_id?: number | null
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutStock_newInput
  }

  export type stock_newCreateOrConnectWithoutRef_materialsInput = {
    where: stock_newWhereUniqueInput
    create: XOR<stock_newCreateWithoutRef_materialsInput, stock_newUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_newCreateManyRef_materialsInputEnvelope = {
    data: stock_newCreateManyRef_materialsInput | stock_newCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type stock_reproCreateWithoutRef_materialsInput = {
    location: string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    quantity: number
    material_description?: string | null
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutStock_reproInput
  }

  export type stock_reproUncheckedCreateWithoutRef_materialsInput = {
    stock_id?: number
    location: string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    quantity: number
    material_description?: string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutStock_reproInput
  }

  export type stock_reproCreateOrConnectWithoutRef_materialsInput = {
    where: stock_reproWhereUniqueInput
    create: XOR<stock_reproCreateWithoutRef_materialsInput, stock_reproUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_reproCreateManyRef_materialsInputEnvelope = {
    data: stock_reproCreateManyRef_materialsInput | stock_reproCreateManyRef_materialsInput[]
    skipDuplicates?: boolean
  }

  export type order_detailUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: order_detailWhereUniqueInput
    update: XOR<order_detailUpdateWithoutRef_materialsInput, order_detailUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<order_detailCreateWithoutRef_materialsInput, order_detailUncheckedCreateWithoutRef_materialsInput>
  }

  export type order_detailUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: order_detailWhereUniqueInput
    data: XOR<order_detailUpdateWithoutRef_materialsInput, order_detailUncheckedUpdateWithoutRef_materialsInput>
  }

  export type order_detailUpdateManyWithWhereWithoutRef_materialsInput = {
    where: order_detailScalarWhereInput
    data: XOR<order_detailUpdateManyMutationInput, order_detailUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type order_detailScalarWhereInput = {
    AND?: order_detailScalarWhereInput | order_detailScalarWhereInput[]
    OR?: order_detailScalarWhereInput[]
    NOT?: order_detailScalarWhereInput | order_detailScalarWhereInput[]
    detail_id?: IntFilter<"order_detail"> | number
    order_id?: IntFilter<"order_detail"> | number
    batch_code?: StringNullableFilter<"order_detail"> | string | null
    material_id?: IntFilter<"order_detail"> | number
    material_name?: StringFilter<"order_detail"> | string
    drum_quantity?: IntFilter<"order_detail"> | number
    drum_weight?: DecimalNullableFilter<"order_detail"> | Decimal | DecimalJsLike | number | string | null
    drum_volume?: DecimalNullableFilter<"order_detail"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"order_detail"> | string
    notes?: StringNullableFilter<"order_detail"> | string | null
    material_code?: StringFilter<"order_detail"> | string
  }

  export type raw_stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: raw_stock_historyWhereUniqueInput
    update: XOR<raw_stock_historyUpdateWithoutRef_materialsInput, raw_stock_historyUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<raw_stock_historyCreateWithoutRef_materialsInput, raw_stock_historyUncheckedCreateWithoutRef_materialsInput>
  }

  export type raw_stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: raw_stock_historyWhereUniqueInput
    data: XOR<raw_stock_historyUpdateWithoutRef_materialsInput, raw_stock_historyUncheckedUpdateWithoutRef_materialsInput>
  }

  export type raw_stock_historyUpdateManyWithWhereWithoutRef_materialsInput = {
    where: raw_stock_historyScalarWhereInput
    data: XOR<raw_stock_historyUpdateManyMutationInput, raw_stock_historyUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type raw_stock_historyScalarWhereInput = {
    AND?: raw_stock_historyScalarWhereInput | raw_stock_historyScalarWhereInput[]
    OR?: raw_stock_historyScalarWhereInput[]
    NOT?: raw_stock_historyScalarWhereInput | raw_stock_historyScalarWhereInput[]
    id?: IntFilter<"raw_stock_history"> | number
    date?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    event_str?: StringNullableFilter<"raw_stock_history"> | string | null
    drum_type?: StringNullableFilter<"raw_stock_history"> | string | null
    no_events?: IntNullableFilter<"raw_stock_history"> | number | null
    notes_ids?: StringNullableFilter<"raw_stock_history"> | string | null
    notes_batch?: StringNullableFilter<"raw_stock_history"> | string | null
    source?: StringNullableFilter<"raw_stock_history"> | string | null
    created_at?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"raw_stock_history"> | Date | string | null
    material_code?: StringNullableFilter<"raw_stock_history"> | string | null
  }

  export type chemical_group_kindUpsertWithoutRef_materialsInput = {
    update: XOR<chemical_group_kindUpdateWithoutRef_materialsInput, chemical_group_kindUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<chemical_group_kindCreateWithoutRef_materialsInput, chemical_group_kindUncheckedCreateWithoutRef_materialsInput>
    where?: chemical_group_kindWhereInput
  }

  export type chemical_group_kindUpdateToOneWithWhereWithoutRef_materialsInput = {
    where?: chemical_group_kindWhereInput
    data: XOR<chemical_group_kindUpdateWithoutRef_materialsInput, chemical_group_kindUncheckedUpdateWithoutRef_materialsInput>
  }

  export type chemical_group_kindUpdateWithoutRef_materialsInput = {
    value?: StringFieldUpdateOperationsInput | string
  }

  export type chemical_group_kindUncheckedUpdateWithoutRef_materialsInput = {
    value?: StringFieldUpdateOperationsInput | string
  }

  export type ref_productUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: ref_productWhereUniqueInput
    update: XOR<ref_productUpdateWithoutRef_materialsInput, ref_productUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<ref_productCreateWithoutRef_materialsInput, ref_productUncheckedCreateWithoutRef_materialsInput>
  }

  export type ref_productUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: ref_productWhereUniqueInput
    data: XOR<ref_productUpdateWithoutRef_materialsInput, ref_productUncheckedUpdateWithoutRef_materialsInput>
  }

  export type ref_productUpdateManyWithWhereWithoutRef_materialsInput = {
    where: ref_productScalarWhereInput
    data: XOR<ref_productUpdateManyMutationInput, ref_productUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type ref_productScalarWhereInput = {
    AND?: ref_productScalarWhereInput | ref_productScalarWhereInput[]
    OR?: ref_productScalarWhereInput[]
    NOT?: ref_productScalarWhereInput | ref_productScalarWhereInput[]
    product_id?: IntFilter<"ref_product"> | number
    name?: StringFilter<"ref_product"> | string
    sku?: StringFilter<"ref_product"> | string
    raw_material_id?: IntNullableFilter<"ref_product"> | number | null
    grade?: StringFilter<"ref_product"> | string
    material_code?: StringNullableFilter<"ref_product"> | string | null
  }

  export type ref_supplier_materialUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: ref_supplier_materialWhereUniqueInput
    update: XOR<ref_supplier_materialUpdateWithoutRef_materialsInput, ref_supplier_materialUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<ref_supplier_materialCreateWithoutRef_materialsInput, ref_supplier_materialUncheckedCreateWithoutRef_materialsInput>
  }

  export type ref_supplier_materialUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: ref_supplier_materialWhereUniqueInput
    data: XOR<ref_supplier_materialUpdateWithoutRef_materialsInput, ref_supplier_materialUncheckedUpdateWithoutRef_materialsInput>
  }

  export type ref_supplier_materialUpdateManyWithWhereWithoutRef_materialsInput = {
    where: ref_supplier_materialScalarWhereInput
    data: XOR<ref_supplier_materialUpdateManyMutationInput, ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type ref_supplier_materialScalarWhereInput = {
    AND?: ref_supplier_materialScalarWhereInput | ref_supplier_materialScalarWhereInput[]
    OR?: ref_supplier_materialScalarWhereInput[]
    NOT?: ref_supplier_materialScalarWhereInput | ref_supplier_materialScalarWhereInput[]
    supplier_id?: IntFilter<"ref_supplier_material"> | number
    material_name?: StringFilter<"ref_supplier_material"> | string
    quantity?: IntFilter<"ref_supplier_material"> | number
    location?: StringFilter<"ref_supplier_material"> | string
    updated_at?: DateTimeNullableFilter<"ref_supplier_material"> | Date | string | null
    material_code?: StringFilter<"ref_supplier_material"> | string
  }

  export type stock_activityUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_activityWhereUniqueInput
    update: XOR<stock_activityUpdateWithoutRef_materialsInput, stock_activityUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<stock_activityCreateWithoutRef_materialsInput, stock_activityUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_activityUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_activityWhereUniqueInput
    data: XOR<stock_activityUpdateWithoutRef_materialsInput, stock_activityUncheckedUpdateWithoutRef_materialsInput>
  }

  export type stock_activityUpdateManyWithWhereWithoutRef_materialsInput = {
    where: stock_activityScalarWhereInput
    data: XOR<stock_activityUpdateManyMutationInput, stock_activityUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type stock_drum_newUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_drum_newWhereUniqueInput
    update: XOR<stock_drum_newUpdateWithoutRef_materialsInput, stock_drum_newUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<stock_drum_newCreateWithoutRef_materialsInput, stock_drum_newUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_drum_newUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_drum_newWhereUniqueInput
    data: XOR<stock_drum_newUpdateWithoutRef_materialsInput, stock_drum_newUncheckedUpdateWithoutRef_materialsInput>
  }

  export type stock_drum_newUpdateManyWithWhereWithoutRef_materialsInput = {
    where: stock_drum_newScalarWhereInput
    data: XOR<stock_drum_newUpdateManyMutationInput, stock_drum_newUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type stock_historyUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_historyWhereUniqueInput
    update: XOR<stock_historyUpdateWithoutRef_materialsInput, stock_historyUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<stock_historyCreateWithoutRef_materialsInput, stock_historyUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_historyUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_historyWhereUniqueInput
    data: XOR<stock_historyUpdateWithoutRef_materialsInput, stock_historyUncheckedUpdateWithoutRef_materialsInput>
  }

  export type stock_historyUpdateManyWithWhereWithoutRef_materialsInput = {
    where: stock_historyScalarWhereInput
    data: XOR<stock_historyUpdateManyMutationInput, stock_historyUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type stock_historyScalarWhereInput = {
    AND?: stock_historyScalarWhereInput | stock_historyScalarWhereInput[]
    OR?: stock_historyScalarWhereInput[]
    NOT?: stock_historyScalarWhereInput | stock_historyScalarWhereInput[]
    id?: IntFilter<"stock_history"> | number
    date?: DateTimeFilter<"stock_history"> | Date | string
    material_name?: StringFilter<"stock_history"> | string
    supplier_id?: IntNullableFilter<"stock_history"> | number | null
    supplier_name?: StringNullableFilter<"stock_history"> | string | null
    change?: IntNullableFilter<"stock_history"> | number | null
    drum_type?: StringFilter<"stock_history"> | string
    drum_ids?: StringNullableFilter<"stock_history"> | string | null
    batch_code?: StringNullableFilter<"stock_history"> | string | null
    source_record_id?: IntNullableFilter<"stock_history"> | number | null
    created_at?: DateTimeNullableFilter<"stock_history"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_history"> | Date | string | null
    material_code?: StringNullableFilter<"stock_history"> | string | null
  }

  export type stock_newUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_newWhereUniqueInput
    update: XOR<stock_newUpdateWithoutRef_materialsInput, stock_newUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<stock_newCreateWithoutRef_materialsInput, stock_newUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_newUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_newWhereUniqueInput
    data: XOR<stock_newUpdateWithoutRef_materialsInput, stock_newUncheckedUpdateWithoutRef_materialsInput>
  }

  export type stock_newUpdateManyWithWhereWithoutRef_materialsInput = {
    where: stock_newScalarWhereInput
    data: XOR<stock_newUpdateManyMutationInput, stock_newUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type stock_newScalarWhereInput = {
    AND?: stock_newScalarWhereInput | stock_newScalarWhereInput[]
    OR?: stock_newScalarWhereInput[]
    NOT?: stock_newScalarWhereInput | stock_newScalarWhereInput[]
    stock_id?: IntFilter<"stock_new"> | number
    supplier_id?: IntNullableFilter<"stock_new"> | number | null
    quantity?: IntFilter<"stock_new"> | number
    batch_code?: StringFilter<"stock_new"> | string
    location?: StringNullableFilter<"stock_new"> | string | null
    notes?: StringNullableFilter<"stock_new"> | string | null
    created_at?: DateTimeNullableFilter<"stock_new"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_new"> | Date | string | null
    material_code?: StringNullableFilter<"stock_new"> | string | null
  }

  export type stock_reproUpsertWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_reproWhereUniqueInput
    update: XOR<stock_reproUpdateWithoutRef_materialsInput, stock_reproUncheckedUpdateWithoutRef_materialsInput>
    create: XOR<stock_reproCreateWithoutRef_materialsInput, stock_reproUncheckedCreateWithoutRef_materialsInput>
  }

  export type stock_reproUpdateWithWhereUniqueWithoutRef_materialsInput = {
    where: stock_reproWhereUniqueInput
    data: XOR<stock_reproUpdateWithoutRef_materialsInput, stock_reproUncheckedUpdateWithoutRef_materialsInput>
  }

  export type stock_reproUpdateManyWithWhereWithoutRef_materialsInput = {
    where: stock_reproScalarWhereInput
    data: XOR<stock_reproUpdateManyMutationInput, stock_reproUncheckedUpdateManyWithoutRef_materialsInput>
  }

  export type stock_reproScalarWhereInput = {
    AND?: stock_reproScalarWhereInput | stock_reproScalarWhereInput[]
    OR?: stock_reproScalarWhereInput[]
    NOT?: stock_reproScalarWhereInput | stock_reproScalarWhereInput[]
    stock_id?: IntFilter<"stock_repro"> | number
    location?: StringFilter<"stock_repro"> | string
    notes?: StringNullableFilter<"stock_repro"> | string | null
    created_at?: DateTimeNullableFilter<"stock_repro"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_repro"> | Date | string | null
    quantity?: IntFilter<"stock_repro"> | number
    material_description?: StringNullableFilter<"stock_repro"> | string | null
    material_code?: StringNullableFilter<"stock_repro"> | string | null
  }

  export type active_contextCreateWithoutRef_stillsInput = {
    worker_id?: number | null
    created_at?: Date | string | null
  }

  export type active_contextUncheckedCreateWithoutRef_stillsInput = {
    context_id?: number
    worker_id?: number | null
    created_at?: Date | string | null
  }

  export type active_contextCreateOrConnectWithoutRef_stillsInput = {
    where: active_contextWhereUniqueInput
    create: XOR<active_contextCreateWithoutRef_stillsInput, active_contextUncheckedCreateWithoutRef_stillsInput>
  }

  export type active_contextCreateManyRef_stillsInputEnvelope = {
    data: active_contextCreateManyRef_stillsInput | active_contextCreateManyRef_stillsInput[]
    skipDuplicates?: boolean
  }

  export type distillation_scheduleCreateWithoutRef_stillsInput = {
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleUncheckedCreateWithoutRef_stillsInput = {
    distillation_id?: number
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    distillation_record?: distillation_recordUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_load_still?: log_load_stillUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_start_distillation?: log_start_distillationUncheckedCreateNestedOneWithoutDistillation_scheduleInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedManyWithoutDistillation_scheduleInput
    log_volume_transfer?: log_volume_transferUncheckedCreateNestedManyWithoutDistillation_scheduleInput
  }

  export type distillation_scheduleCreateOrConnectWithoutRef_stillsInput = {
    where: distillation_scheduleWhereUniqueInput
    create: XOR<distillation_scheduleCreateWithoutRef_stillsInput, distillation_scheduleUncheckedCreateWithoutRef_stillsInput>
  }

  export type distillation_scheduleCreateManyRef_stillsInputEnvelope = {
    data: distillation_scheduleCreateManyRef_stillsInput | distillation_scheduleCreateManyRef_stillsInput[]
    skipDuplicates?: boolean
  }

  export type log_load_stillCreateWithoutRef_stillsInput = {
    status?: string | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutLog_load_stillInput
    stock_drum?: stock_drumCreateNestedOneWithoutLog_load_stillInput
    log_drum_scan?: log_drum_scanCreateNestedOneWithoutLog_load_stillInput
  }

  export type log_load_stillUncheckedCreateWithoutRef_stillsInput = {
    loading_id?: number
    scan_id?: number | null
    drum_id?: number | null
    distillation_id: number
    status?: string | null
  }

  export type log_load_stillCreateOrConnectWithoutRef_stillsInput = {
    where: log_load_stillWhereUniqueInput
    create: XOR<log_load_stillCreateWithoutRef_stillsInput, log_load_stillUncheckedCreateWithoutRef_stillsInput>
  }

  export type log_load_stillCreateManyRef_stillsInputEnvelope = {
    data: log_load_stillCreateManyRef_stillsInput | log_load_stillCreateManyRef_stillsInput[]
    skipDuplicates?: boolean
  }

  export type log_start_distillationCreateWithoutRef_stillsInput = {
    worker_id?: number | null
    status?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutLog_start_distillationInput
  }

  export type log_start_distillationUncheckedCreateWithoutRef_stillsInput = {
    start_id?: number
    distillation_id?: number | null
    worker_id?: number | null
    status?: string | null
  }

  export type log_start_distillationCreateOrConnectWithoutRef_stillsInput = {
    where: log_start_distillationWhereUniqueInput
    create: XOR<log_start_distillationCreateWithoutRef_stillsInput, log_start_distillationUncheckedCreateWithoutRef_stillsInput>
  }

  export type log_start_distillationCreateManyRef_stillsInputEnvelope = {
    data: log_start_distillationCreateManyRef_stillsInput | log_start_distillationCreateManyRef_stillsInput[]
    skipDuplicates?: boolean
  }

  export type active_contextUpsertWithWhereUniqueWithoutRef_stillsInput = {
    where: active_contextWhereUniqueInput
    update: XOR<active_contextUpdateWithoutRef_stillsInput, active_contextUncheckedUpdateWithoutRef_stillsInput>
    create: XOR<active_contextCreateWithoutRef_stillsInput, active_contextUncheckedCreateWithoutRef_stillsInput>
  }

  export type active_contextUpdateWithWhereUniqueWithoutRef_stillsInput = {
    where: active_contextWhereUniqueInput
    data: XOR<active_contextUpdateWithoutRef_stillsInput, active_contextUncheckedUpdateWithoutRef_stillsInput>
  }

  export type active_contextUpdateManyWithWhereWithoutRef_stillsInput = {
    where: active_contextScalarWhereInput
    data: XOR<active_contextUpdateManyMutationInput, active_contextUncheckedUpdateManyWithoutRef_stillsInput>
  }

  export type active_contextScalarWhereInput = {
    AND?: active_contextScalarWhereInput | active_contextScalarWhereInput[]
    OR?: active_contextScalarWhereInput[]
    NOT?: active_contextScalarWhereInput | active_contextScalarWhereInput[]
    context_id?: IntFilter<"active_context"> | number
    worker_id?: IntNullableFilter<"active_context"> | number | null
    still_id?: IntNullableFilter<"active_context"> | number | null
    created_at?: DateTimeNullableFilter<"active_context"> | Date | string | null
  }

  export type distillation_scheduleUpsertWithWhereUniqueWithoutRef_stillsInput = {
    where: distillation_scheduleWhereUniqueInput
    update: XOR<distillation_scheduleUpdateWithoutRef_stillsInput, distillation_scheduleUncheckedUpdateWithoutRef_stillsInput>
    create: XOR<distillation_scheduleCreateWithoutRef_stillsInput, distillation_scheduleUncheckedCreateWithoutRef_stillsInput>
  }

  export type distillation_scheduleUpdateWithWhereUniqueWithoutRef_stillsInput = {
    where: distillation_scheduleWhereUniqueInput
    data: XOR<distillation_scheduleUpdateWithoutRef_stillsInput, distillation_scheduleUncheckedUpdateWithoutRef_stillsInput>
  }

  export type distillation_scheduleUpdateManyWithWhereWithoutRef_stillsInput = {
    where: distillation_scheduleScalarWhereInput
    data: XOR<distillation_scheduleUpdateManyMutationInput, distillation_scheduleUncheckedUpdateManyWithoutRef_stillsInput>
  }

  export type distillation_scheduleScalarWhereInput = {
    AND?: distillation_scheduleScalarWhereInput | distillation_scheduleScalarWhereInput[]
    OR?: distillation_scheduleScalarWhereInput[]
    NOT?: distillation_scheduleScalarWhereInput | distillation_scheduleScalarWhereInput[]
    distillation_id?: IntFilter<"distillation_schedule"> | number
    scheduled_date?: DateTimeFilter<"distillation_schedule"> | Date | string
    still_id?: IntFilter<"distillation_schedule"> | number
    expected_drum_qty?: DecimalFilter<"distillation_schedule"> | Decimal | DecimalJsLike | number | string
    status?: StringNullableFilter<"distillation_schedule"> | string | null
    created_at?: DateTimeNullableFilter<"distillation_schedule"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"distillation_schedule"> | Date | string | null
  }

  export type log_load_stillUpsertWithWhereUniqueWithoutRef_stillsInput = {
    where: log_load_stillWhereUniqueInput
    update: XOR<log_load_stillUpdateWithoutRef_stillsInput, log_load_stillUncheckedUpdateWithoutRef_stillsInput>
    create: XOR<log_load_stillCreateWithoutRef_stillsInput, log_load_stillUncheckedCreateWithoutRef_stillsInput>
  }

  export type log_load_stillUpdateWithWhereUniqueWithoutRef_stillsInput = {
    where: log_load_stillWhereUniqueInput
    data: XOR<log_load_stillUpdateWithoutRef_stillsInput, log_load_stillUncheckedUpdateWithoutRef_stillsInput>
  }

  export type log_load_stillUpdateManyWithWhereWithoutRef_stillsInput = {
    where: log_load_stillScalarWhereInput
    data: XOR<log_load_stillUpdateManyMutationInput, log_load_stillUncheckedUpdateManyWithoutRef_stillsInput>
  }

  export type log_start_distillationUpsertWithWhereUniqueWithoutRef_stillsInput = {
    where: log_start_distillationWhereUniqueInput
    update: XOR<log_start_distillationUpdateWithoutRef_stillsInput, log_start_distillationUncheckedUpdateWithoutRef_stillsInput>
    create: XOR<log_start_distillationCreateWithoutRef_stillsInput, log_start_distillationUncheckedCreateWithoutRef_stillsInput>
  }

  export type log_start_distillationUpdateWithWhereUniqueWithoutRef_stillsInput = {
    where: log_start_distillationWhereUniqueInput
    data: XOR<log_start_distillationUpdateWithoutRef_stillsInput, log_start_distillationUncheckedUpdateWithoutRef_stillsInput>
  }

  export type log_start_distillationUpdateManyWithWhereWithoutRef_stillsInput = {
    where: log_start_distillationScalarWhereInput
    data: XOR<log_start_distillationUpdateManyMutationInput, log_start_distillationUncheckedUpdateManyWithoutRef_stillsInput>
  }

  export type log_start_distillationScalarWhereInput = {
    AND?: log_start_distillationScalarWhereInput | log_start_distillationScalarWhereInput[]
    OR?: log_start_distillationScalarWhereInput[]
    NOT?: log_start_distillationScalarWhereInput | log_start_distillationScalarWhereInput[]
    start_id?: IntFilter<"log_start_distillation"> | number
    distillation_id?: IntNullableFilter<"log_start_distillation"> | number | null
    still_id?: IntFilter<"log_start_distillation"> | number
    worker_id?: IntNullableFilter<"log_start_distillation"> | number | null
    status?: StringNullableFilter<"log_start_distillation"> | string | null
  }

  export type ref_supplier_materialCreateWithoutRef_suppliersInput = {
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
    ref_materials: ref_materialsCreateNestedOneWithoutRef_supplier_materialInput
  }

  export type ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput = {
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
    material_code: string
  }

  export type ref_supplier_materialCreateOrConnectWithoutRef_suppliersInput = {
    where: ref_supplier_materialWhereUniqueInput
    create: XOR<ref_supplier_materialCreateWithoutRef_suppliersInput, ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput>
  }

  export type ref_supplier_materialCreateManyRef_suppliersInputEnvelope = {
    data: ref_supplier_materialCreateManyRef_suppliersInput | ref_supplier_materialCreateManyRef_suppliersInput[]
    skipDuplicates?: boolean
  }

  export type stock_activityCreateWithoutRef_suppliersInput = {
    activity_date: Date | string
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutStock_activityInput
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedOneWithoutStock_activityInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_activityInput
    order_detail?: order_detailCreateNestedOneWithoutStock_activityInput
  }

  export type stock_activityUncheckedCreateWithoutRef_suppliersInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutStock_activityInput
  }

  export type stock_activityCreateOrConnectWithoutRef_suppliersInput = {
    where: stock_activityWhereUniqueInput
    create: XOR<stock_activityCreateWithoutRef_suppliersInput, stock_activityUncheckedCreateWithoutRef_suppliersInput>
  }

  export type stock_activityCreateManyRef_suppliersInputEnvelope = {
    data: stock_activityCreateManyRef_suppliersInput | stock_activityCreateManyRef_suppliersInput[]
    skipDuplicates?: boolean
  }

  export type stock_historyCreateWithoutRef_suppliersInput = {
    date: Date | string
    material_name: string
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_historyInput
    raw_stock_history?: raw_stock_historyCreateNestedOneWithoutStock_historyInput
  }

  export type stock_historyUncheckedCreateWithoutRef_suppliersInput = {
    id?: number
    date: Date | string
    material_name: string
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_historyCreateOrConnectWithoutRef_suppliersInput = {
    where: stock_historyWhereUniqueInput
    create: XOR<stock_historyCreateWithoutRef_suppliersInput, stock_historyUncheckedCreateWithoutRef_suppliersInput>
  }

  export type stock_historyCreateManyRef_suppliersInputEnvelope = {
    data: stock_historyCreateManyRef_suppliersInput | stock_historyCreateManyRef_suppliersInput[]
    skipDuplicates?: boolean
  }

  export type stock_newCreateWithoutRef_suppliersInput = {
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedManyWithoutStock_newInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_newInput
  }

  export type stock_newUncheckedCreateWithoutRef_suppliersInput = {
    stock_id?: number
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedCreateNestedManyWithoutStock_newInput
  }

  export type stock_newCreateOrConnectWithoutRef_suppliersInput = {
    where: stock_newWhereUniqueInput
    create: XOR<stock_newCreateWithoutRef_suppliersInput, stock_newUncheckedCreateWithoutRef_suppliersInput>
  }

  export type stock_newCreateManyRef_suppliersInputEnvelope = {
    data: stock_newCreateManyRef_suppliersInput | stock_newCreateManyRef_suppliersInput[]
    skipDuplicates?: boolean
  }

  export type stock_orderCreateWithoutRef_suppliersInput = {
    po_number?: string | null
    date_ordered?: Date | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail?: order_detailCreateNestedManyWithoutStock_orderInput
  }

  export type stock_orderUncheckedCreateWithoutRef_suppliersInput = {
    order_id?: number
    po_number?: string | null
    date_ordered?: Date | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutStock_orderInput
  }

  export type stock_orderCreateOrConnectWithoutRef_suppliersInput = {
    where: stock_orderWhereUniqueInput
    create: XOR<stock_orderCreateWithoutRef_suppliersInput, stock_orderUncheckedCreateWithoutRef_suppliersInput>
  }

  export type stock_orderCreateManyRef_suppliersInputEnvelope = {
    data: stock_orderCreateManyRef_suppliersInput | stock_orderCreateManyRef_suppliersInput[]
    skipDuplicates?: boolean
  }

  export type ref_supplier_materialUpsertWithWhereUniqueWithoutRef_suppliersInput = {
    where: ref_supplier_materialWhereUniqueInput
    update: XOR<ref_supplier_materialUpdateWithoutRef_suppliersInput, ref_supplier_materialUncheckedUpdateWithoutRef_suppliersInput>
    create: XOR<ref_supplier_materialCreateWithoutRef_suppliersInput, ref_supplier_materialUncheckedCreateWithoutRef_suppliersInput>
  }

  export type ref_supplier_materialUpdateWithWhereUniqueWithoutRef_suppliersInput = {
    where: ref_supplier_materialWhereUniqueInput
    data: XOR<ref_supplier_materialUpdateWithoutRef_suppliersInput, ref_supplier_materialUncheckedUpdateWithoutRef_suppliersInput>
  }

  export type ref_supplier_materialUpdateManyWithWhereWithoutRef_suppliersInput = {
    where: ref_supplier_materialScalarWhereInput
    data: XOR<ref_supplier_materialUpdateManyMutationInput, ref_supplier_materialUncheckedUpdateManyWithoutRef_suppliersInput>
  }

  export type stock_activityUpsertWithWhereUniqueWithoutRef_suppliersInput = {
    where: stock_activityWhereUniqueInput
    update: XOR<stock_activityUpdateWithoutRef_suppliersInput, stock_activityUncheckedUpdateWithoutRef_suppliersInput>
    create: XOR<stock_activityCreateWithoutRef_suppliersInput, stock_activityUncheckedCreateWithoutRef_suppliersInput>
  }

  export type stock_activityUpdateWithWhereUniqueWithoutRef_suppliersInput = {
    where: stock_activityWhereUniqueInput
    data: XOR<stock_activityUpdateWithoutRef_suppliersInput, stock_activityUncheckedUpdateWithoutRef_suppliersInput>
  }

  export type stock_activityUpdateManyWithWhereWithoutRef_suppliersInput = {
    where: stock_activityScalarWhereInput
    data: XOR<stock_activityUpdateManyMutationInput, stock_activityUncheckedUpdateManyWithoutRef_suppliersInput>
  }

  export type stock_historyUpsertWithWhereUniqueWithoutRef_suppliersInput = {
    where: stock_historyWhereUniqueInput
    update: XOR<stock_historyUpdateWithoutRef_suppliersInput, stock_historyUncheckedUpdateWithoutRef_suppliersInput>
    create: XOR<stock_historyCreateWithoutRef_suppliersInput, stock_historyUncheckedCreateWithoutRef_suppliersInput>
  }

  export type stock_historyUpdateWithWhereUniqueWithoutRef_suppliersInput = {
    where: stock_historyWhereUniqueInput
    data: XOR<stock_historyUpdateWithoutRef_suppliersInput, stock_historyUncheckedUpdateWithoutRef_suppliersInput>
  }

  export type stock_historyUpdateManyWithWhereWithoutRef_suppliersInput = {
    where: stock_historyScalarWhereInput
    data: XOR<stock_historyUpdateManyMutationInput, stock_historyUncheckedUpdateManyWithoutRef_suppliersInput>
  }

  export type stock_newUpsertWithWhereUniqueWithoutRef_suppliersInput = {
    where: stock_newWhereUniqueInput
    update: XOR<stock_newUpdateWithoutRef_suppliersInput, stock_newUncheckedUpdateWithoutRef_suppliersInput>
    create: XOR<stock_newCreateWithoutRef_suppliersInput, stock_newUncheckedCreateWithoutRef_suppliersInput>
  }

  export type stock_newUpdateWithWhereUniqueWithoutRef_suppliersInput = {
    where: stock_newWhereUniqueInput
    data: XOR<stock_newUpdateWithoutRef_suppliersInput, stock_newUncheckedUpdateWithoutRef_suppliersInput>
  }

  export type stock_newUpdateManyWithWhereWithoutRef_suppliersInput = {
    where: stock_newScalarWhereInput
    data: XOR<stock_newUpdateManyMutationInput, stock_newUncheckedUpdateManyWithoutRef_suppliersInput>
  }

  export type stock_orderUpsertWithWhereUniqueWithoutRef_suppliersInput = {
    where: stock_orderWhereUniqueInput
    update: XOR<stock_orderUpdateWithoutRef_suppliersInput, stock_orderUncheckedUpdateWithoutRef_suppliersInput>
    create: XOR<stock_orderCreateWithoutRef_suppliersInput, stock_orderUncheckedCreateWithoutRef_suppliersInput>
  }

  export type stock_orderUpdateWithWhereUniqueWithoutRef_suppliersInput = {
    where: stock_orderWhereUniqueInput
    data: XOR<stock_orderUpdateWithoutRef_suppliersInput, stock_orderUncheckedUpdateWithoutRef_suppliersInput>
  }

  export type stock_orderUpdateManyWithWhereWithoutRef_suppliersInput = {
    where: stock_orderScalarWhereInput
    data: XOR<stock_orderUpdateManyMutationInput, stock_orderUncheckedUpdateManyWithoutRef_suppliersInput>
  }

  export type stock_orderScalarWhereInput = {
    AND?: stock_orderScalarWhereInput | stock_orderScalarWhereInput[]
    OR?: stock_orderScalarWhereInput[]
    NOT?: stock_orderScalarWhereInput | stock_orderScalarWhereInput[]
    order_id?: IntFilter<"stock_order"> | number
    po_number?: StringNullableFilter<"stock_order"> | string | null
    date_ordered?: DateTimeFilter<"stock_order"> | Date | string
    supplier_id?: IntFilter<"stock_order"> | number
    notes?: StringNullableFilter<"stock_order"> | string | null
    created_at?: DateTimeNullableFilter<"stock_order"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"stock_order"> | Date | string | null
  }

  export type distillation_pending_assignmentCreateWithoutStock_drumInput = {
    status?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutDistillation_pending_assignmentInput
    log_transport_drum: log_transport_drumCreateNestedOneWithoutDistillation_pending_assignmentInput
  }

  export type distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput = {
    pending_id?: number
    transport_id: number
    assigned_distillation_id?: number | null
    status?: string | null
  }

  export type distillation_pending_assignmentCreateOrConnectWithoutStock_drumInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    create: XOR<distillation_pending_assignmentCreateWithoutStock_drumInput, distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput>
  }

  export type distillation_pending_assignmentCreateManyStock_drumInputEnvelope = {
    data: distillation_pending_assignmentCreateManyStock_drumInput | distillation_pending_assignmentCreateManyStock_drumInput[]
    skipDuplicates?: boolean
  }

  export type log_drum_scanCreateWithoutStock_drumInput = {
    scanned_at?: Date | string | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
    log_load_still?: log_load_stillCreateNestedOneWithoutLog_drum_scanInput
    log_transport_drum?: log_transport_drumCreateNestedOneWithoutLog_drum_scanInput
  }

  export type log_drum_scanUncheckedCreateWithoutStock_drumInput = {
    scan_id?: number
    scanned_at?: Date | string | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
    log_load_still?: log_load_stillUncheckedCreateNestedOneWithoutLog_drum_scanInput
    log_transport_drum?: log_transport_drumUncheckedCreateNestedOneWithoutLog_drum_scanInput
  }

  export type log_drum_scanCreateOrConnectWithoutStock_drumInput = {
    where: log_drum_scanWhereUniqueInput
    create: XOR<log_drum_scanCreateWithoutStock_drumInput, log_drum_scanUncheckedCreateWithoutStock_drumInput>
  }

  export type log_drum_scanCreateManyStock_drumInputEnvelope = {
    data: log_drum_scanCreateManyStock_drumInput | log_drum_scanCreateManyStock_drumInput[]
    skipDuplicates?: boolean
  }

  export type log_load_stillCreateWithoutStock_drumInput = {
    status?: string | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutLog_load_stillInput
    log_drum_scan?: log_drum_scanCreateNestedOneWithoutLog_load_stillInput
    ref_stills?: ref_stillsCreateNestedOneWithoutLog_load_stillInput
  }

  export type log_load_stillUncheckedCreateWithoutStock_drumInput = {
    loading_id?: number
    scan_id?: number | null
    still_id?: number | null
    distillation_id: number
    status?: string | null
  }

  export type log_load_stillCreateOrConnectWithoutStock_drumInput = {
    where: log_load_stillWhereUniqueInput
    create: XOR<log_load_stillCreateWithoutStock_drumInput, log_load_stillUncheckedCreateWithoutStock_drumInput>
  }

  export type log_load_stillCreateManyStock_drumInputEnvelope = {
    data: log_load_stillCreateManyStock_drumInput | log_load_stillCreateManyStock_drumInput[]
    skipDuplicates?: boolean
  }

  export type log_transport_drumCreateWithoutStock_drumInput = {
    transported_at?: Date | string | null
    status?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentCreateNestedManyWithoutLog_transport_drumInput
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutLog_transport_drumInput
    log_drum_scan?: log_drum_scanCreateNestedOneWithoutLog_transport_drumInput
  }

  export type log_transport_drumUncheckedCreateWithoutStock_drumInput = {
    transport_id?: number
    scan_id?: number | null
    transported_at?: Date | string | null
    distillation_id?: number | null
    status?: string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedCreateNestedManyWithoutLog_transport_drumInput
  }

  export type log_transport_drumCreateOrConnectWithoutStock_drumInput = {
    where: log_transport_drumWhereUniqueInput
    create: XOR<log_transport_drumCreateWithoutStock_drumInput, log_transport_drumUncheckedCreateWithoutStock_drumInput>
  }

  export type log_transport_drumCreateManyStock_drumInputEnvelope = {
    data: log_transport_drumCreateManyStock_drumInput | log_transport_drumCreateManyStock_drumInput[]
    skipDuplicates?: boolean
  }

  export type log_volume_transferCreateWithoutStock_drumInput = {
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutLog_volume_transferInput
  }

  export type log_volume_transferUncheckedCreateWithoutStock_drumInput = {
    transfer_id?: number
    distillation_id: number
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
  }

  export type log_volume_transferCreateOrConnectWithoutStock_drumInput = {
    where: log_volume_transferWhereUniqueInput
    create: XOR<log_volume_transferCreateWithoutStock_drumInput, log_volume_transferUncheckedCreateWithoutStock_drumInput>
  }

  export type log_volume_transferCreateManyStock_drumInputEnvelope = {
    data: log_volume_transferCreateManyStock_drumInput | log_volume_transferCreateManyStock_drumInput[]
    skipDuplicates?: boolean
  }

  export type distillation_recordCreateWithoutStock_drumInput = {
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutDistillation_recordInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutDistillation_recordInput
  }

  export type distillation_recordUncheckedCreateWithoutStock_drumInput = {
    record_id?: number
    distillation_id?: number | null
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutDistillation_recordInput
  }

  export type distillation_recordCreateOrConnectWithoutStock_drumInput = {
    where: distillation_recordWhereUniqueInput
    create: XOR<distillation_recordCreateWithoutStock_drumInput, distillation_recordUncheckedCreateWithoutStock_drumInput>
  }

  export type order_detailCreateWithoutStock_drumInput = {
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    ref_materials: ref_materialsCreateNestedOneWithoutOrder_detailInput
    stock_order: stock_orderCreateNestedOneWithoutOrder_detailInput
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailUncheckedCreateWithoutStock_drumInput = {
    detail_id?: number
    order_id: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    material_code: string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailCreateOrConnectWithoutStock_drumInput = {
    where: order_detailWhereUniqueInput
    create: XOR<order_detailCreateWithoutStock_drumInput, order_detailUncheckedCreateWithoutStock_drumInput>
  }

  export type distillation_pending_assignmentUpsertWithWhereUniqueWithoutStock_drumInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    update: XOR<distillation_pending_assignmentUpdateWithoutStock_drumInput, distillation_pending_assignmentUncheckedUpdateWithoutStock_drumInput>
    create: XOR<distillation_pending_assignmentCreateWithoutStock_drumInput, distillation_pending_assignmentUncheckedCreateWithoutStock_drumInput>
  }

  export type distillation_pending_assignmentUpdateWithWhereUniqueWithoutStock_drumInput = {
    where: distillation_pending_assignmentWhereUniqueInput
    data: XOR<distillation_pending_assignmentUpdateWithoutStock_drumInput, distillation_pending_assignmentUncheckedUpdateWithoutStock_drumInput>
  }

  export type distillation_pending_assignmentUpdateManyWithWhereWithoutStock_drumInput = {
    where: distillation_pending_assignmentScalarWhereInput
    data: XOR<distillation_pending_assignmentUpdateManyMutationInput, distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumInput>
  }

  export type log_drum_scanUpsertWithWhereUniqueWithoutStock_drumInput = {
    where: log_drum_scanWhereUniqueInput
    update: XOR<log_drum_scanUpdateWithoutStock_drumInput, log_drum_scanUncheckedUpdateWithoutStock_drumInput>
    create: XOR<log_drum_scanCreateWithoutStock_drumInput, log_drum_scanUncheckedCreateWithoutStock_drumInput>
  }

  export type log_drum_scanUpdateWithWhereUniqueWithoutStock_drumInput = {
    where: log_drum_scanWhereUniqueInput
    data: XOR<log_drum_scanUpdateWithoutStock_drumInput, log_drum_scanUncheckedUpdateWithoutStock_drumInput>
  }

  export type log_drum_scanUpdateManyWithWhereWithoutStock_drumInput = {
    where: log_drum_scanScalarWhereInput
    data: XOR<log_drum_scanUpdateManyMutationInput, log_drum_scanUncheckedUpdateManyWithoutStock_drumInput>
  }

  export type log_drum_scanScalarWhereInput = {
    AND?: log_drum_scanScalarWhereInput | log_drum_scanScalarWhereInput[]
    OR?: log_drum_scanScalarWhereInput[]
    NOT?: log_drum_scanScalarWhereInput | log_drum_scanScalarWhereInput[]
    scan_id?: IntFilter<"log_drum_scan"> | number
    scanned_at?: DateTimeNullableFilter<"log_drum_scan"> | Date | string | null
    drum_id?: IntNullableFilter<"log_drum_scan"> | number | null
    user_id?: IntFilter<"log_drum_scan"> | number
    scan_type?: StringFilter<"log_drum_scan"> | string
    scan_status?: StringFilter<"log_drum_scan"> | string
    error_message?: StringNullableFilter<"log_drum_scan"> | string | null
  }

  export type log_load_stillUpsertWithWhereUniqueWithoutStock_drumInput = {
    where: log_load_stillWhereUniqueInput
    update: XOR<log_load_stillUpdateWithoutStock_drumInput, log_load_stillUncheckedUpdateWithoutStock_drumInput>
    create: XOR<log_load_stillCreateWithoutStock_drumInput, log_load_stillUncheckedCreateWithoutStock_drumInput>
  }

  export type log_load_stillUpdateWithWhereUniqueWithoutStock_drumInput = {
    where: log_load_stillWhereUniqueInput
    data: XOR<log_load_stillUpdateWithoutStock_drumInput, log_load_stillUncheckedUpdateWithoutStock_drumInput>
  }

  export type log_load_stillUpdateManyWithWhereWithoutStock_drumInput = {
    where: log_load_stillScalarWhereInput
    data: XOR<log_load_stillUpdateManyMutationInput, log_load_stillUncheckedUpdateManyWithoutStock_drumInput>
  }

  export type log_transport_drumUpsertWithWhereUniqueWithoutStock_drumInput = {
    where: log_transport_drumWhereUniqueInput
    update: XOR<log_transport_drumUpdateWithoutStock_drumInput, log_transport_drumUncheckedUpdateWithoutStock_drumInput>
    create: XOR<log_transport_drumCreateWithoutStock_drumInput, log_transport_drumUncheckedCreateWithoutStock_drumInput>
  }

  export type log_transport_drumUpdateWithWhereUniqueWithoutStock_drumInput = {
    where: log_transport_drumWhereUniqueInput
    data: XOR<log_transport_drumUpdateWithoutStock_drumInput, log_transport_drumUncheckedUpdateWithoutStock_drumInput>
  }

  export type log_transport_drumUpdateManyWithWhereWithoutStock_drumInput = {
    where: log_transport_drumScalarWhereInput
    data: XOR<log_transport_drumUpdateManyMutationInput, log_transport_drumUncheckedUpdateManyWithoutStock_drumInput>
  }

  export type log_volume_transferUpsertWithWhereUniqueWithoutStock_drumInput = {
    where: log_volume_transferWhereUniqueInput
    update: XOR<log_volume_transferUpdateWithoutStock_drumInput, log_volume_transferUncheckedUpdateWithoutStock_drumInput>
    create: XOR<log_volume_transferCreateWithoutStock_drumInput, log_volume_transferUncheckedCreateWithoutStock_drumInput>
  }

  export type log_volume_transferUpdateWithWhereUniqueWithoutStock_drumInput = {
    where: log_volume_transferWhereUniqueInput
    data: XOR<log_volume_transferUpdateWithoutStock_drumInput, log_volume_transferUncheckedUpdateWithoutStock_drumInput>
  }

  export type log_volume_transferUpdateManyWithWhereWithoutStock_drumInput = {
    where: log_volume_transferScalarWhereInput
    data: XOR<log_volume_transferUpdateManyMutationInput, log_volume_transferUncheckedUpdateManyWithoutStock_drumInput>
  }

  export type distillation_recordUpsertWithoutStock_drumInput = {
    update: XOR<distillation_recordUpdateWithoutStock_drumInput, distillation_recordUncheckedUpdateWithoutStock_drumInput>
    create: XOR<distillation_recordCreateWithoutStock_drumInput, distillation_recordUncheckedCreateWithoutStock_drumInput>
    where?: distillation_recordWhereInput
  }

  export type distillation_recordUpdateToOneWithWhereWithoutStock_drumInput = {
    where?: distillation_recordWhereInput
    data: XOR<distillation_recordUpdateWithoutStock_drumInput, distillation_recordUncheckedUpdateWithoutStock_drumInput>
  }

  export type distillation_recordUpdateWithoutStock_drumInput = {
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutDistillation_recordNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutDistillation_recordNestedInput
  }

  export type distillation_recordUncheckedUpdateWithoutStock_drumInput = {
    record_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutDistillation_recordNestedInput
  }

  export type order_detailUpsertWithoutStock_drumInput = {
    update: XOR<order_detailUpdateWithoutStock_drumInput, order_detailUncheckedUpdateWithoutStock_drumInput>
    create: XOR<order_detailCreateWithoutStock_drumInput, order_detailUncheckedCreateWithoutStock_drumInput>
    where?: order_detailWhereInput
  }

  export type order_detailUpdateToOneWithWhereWithoutStock_drumInput = {
    where?: order_detailWhereInput
    data: XOR<order_detailUpdateWithoutStock_drumInput, order_detailUncheckedUpdateWithoutStock_drumInput>
  }

  export type order_detailUpdateWithoutStock_drumInput = {
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ref_materials?: ref_materialsUpdateOneRequiredWithoutOrder_detailNestedInput
    stock_order?: stock_orderUpdateOneRequiredWithoutOrder_detailNestedInput
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateWithoutStock_drumInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutOrder_detailNestedInput
  }

  export type distillation_recordCreateWithoutStock_drum_newInput = {
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
    distillation_schedule?: distillation_scheduleCreateNestedOneWithoutDistillation_recordInput
    stock_drum?: stock_drumCreateNestedManyWithoutDistillation_recordInput
  }

  export type distillation_recordUncheckedCreateWithoutStock_drum_newInput = {
    record_id?: number
    distillation_id?: number | null
    actual_start?: Date | string | null
    actual_end?: Date | string | null
    status?: string | null
    notes?: string | null
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutDistillation_recordInput
  }

  export type distillation_recordCreateOrConnectWithoutStock_drum_newInput = {
    where: distillation_recordWhereUniqueInput
    create: XOR<distillation_recordCreateWithoutStock_drum_newInput, distillation_recordUncheckedCreateWithoutStock_drum_newInput>
  }

  export type ref_materialsCreateWithoutStock_drum_newInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutStock_drum_newInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutStock_drum_newInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutStock_drum_newInput, ref_materialsUncheckedCreateWithoutStock_drum_newInput>
  }

  export type order_detailCreateWithoutStock_drum_newInput = {
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    ref_materials: ref_materialsCreateNestedOneWithoutOrder_detailInput
    stock_order: stock_orderCreateNestedOneWithoutOrder_detailInput
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailUncheckedCreateWithoutStock_drum_newInput = {
    detail_id?: number
    order_id: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    material_code: string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailCreateOrConnectWithoutStock_drum_newInput = {
    where: order_detailWhereUniqueInput
    create: XOR<order_detailCreateWithoutStock_drum_newInput, order_detailUncheckedCreateWithoutStock_drum_newInput>
  }

  export type distillation_recordUpsertWithoutStock_drum_newInput = {
    update: XOR<distillation_recordUpdateWithoutStock_drum_newInput, distillation_recordUncheckedUpdateWithoutStock_drum_newInput>
    create: XOR<distillation_recordCreateWithoutStock_drum_newInput, distillation_recordUncheckedCreateWithoutStock_drum_newInput>
    where?: distillation_recordWhereInput
  }

  export type distillation_recordUpdateToOneWithWhereWithoutStock_drum_newInput = {
    where?: distillation_recordWhereInput
    data: XOR<distillation_recordUpdateWithoutStock_drum_newInput, distillation_recordUncheckedUpdateWithoutStock_drum_newInput>
  }

  export type distillation_recordUpdateWithoutStock_drum_newInput = {
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutDistillation_recordNestedInput
    stock_drum?: stock_drumUpdateManyWithoutDistillation_recordNestedInput
  }

  export type distillation_recordUncheckedUpdateWithoutStock_drum_newInput = {
    record_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    actual_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actual_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUncheckedUpdateManyWithoutDistillation_recordNestedInput
  }

  export type ref_materialsUpsertWithoutStock_drum_newInput = {
    update: XOR<ref_materialsUpdateWithoutStock_drum_newInput, ref_materialsUncheckedUpdateWithoutStock_drum_newInput>
    create: XOR<ref_materialsCreateWithoutStock_drum_newInput, ref_materialsUncheckedCreateWithoutStock_drum_newInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutStock_drum_newInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutStock_drum_newInput, ref_materialsUncheckedUpdateWithoutStock_drum_newInput>
  }

  export type ref_materialsUpdateWithoutStock_drum_newInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutStock_drum_newInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type order_detailUpsertWithoutStock_drum_newInput = {
    update: XOR<order_detailUpdateWithoutStock_drum_newInput, order_detailUncheckedUpdateWithoutStock_drum_newInput>
    create: XOR<order_detailCreateWithoutStock_drum_newInput, order_detailUncheckedCreateWithoutStock_drum_newInput>
    where?: order_detailWhereInput
  }

  export type order_detailUpdateToOneWithWhereWithoutStock_drum_newInput = {
    where?: order_detailWhereInput
    data: XOR<order_detailUpdateWithoutStock_drum_newInput, order_detailUncheckedUpdateWithoutStock_drum_newInput>
  }

  export type order_detailUpdateWithoutStock_drum_newInput = {
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ref_materials?: ref_materialsUpdateOneRequiredWithoutOrder_detailNestedInput
    stock_order?: stock_orderUpdateOneRequiredWithoutOrder_detailNestedInput
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateWithoutStock_drum_newInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUncheckedUpdateManyWithoutOrder_detailNestedInput
  }

  export type distillation_schedule_itemsCreateWithoutStock_newInput = {
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_repro?: stock_reproCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_activity?: stock_activityCreateNestedManyWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsUncheckedCreateWithoutStock_newInput = {
    details_id?: number
    distillation_id: number
    repro_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsCreateOrConnectWithoutStock_newInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    create: XOR<distillation_schedule_itemsCreateWithoutStock_newInput, distillation_schedule_itemsUncheckedCreateWithoutStock_newInput>
  }

  export type distillation_schedule_itemsCreateManyStock_newInputEnvelope = {
    data: distillation_schedule_itemsCreateManyStock_newInput | distillation_schedule_itemsCreateManyStock_newInput[]
    skipDuplicates?: boolean
  }

  export type ref_materialsCreateWithoutStock_newInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutStock_newInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutStock_newInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutStock_newInput, ref_materialsUncheckedCreateWithoutStock_newInput>
  }

  export type ref_suppliersCreateWithoutStock_newInput = {
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_suppliersInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersUncheckedCreateWithoutStock_newInput = {
    supplier_id?: number
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderUncheckedCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersCreateOrConnectWithoutStock_newInput = {
    where: ref_suppliersWhereUniqueInput
    create: XOR<ref_suppliersCreateWithoutStock_newInput, ref_suppliersUncheckedCreateWithoutStock_newInput>
  }

  export type distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_newInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    update: XOR<distillation_schedule_itemsUpdateWithoutStock_newInput, distillation_schedule_itemsUncheckedUpdateWithoutStock_newInput>
    create: XOR<distillation_schedule_itemsCreateWithoutStock_newInput, distillation_schedule_itemsUncheckedCreateWithoutStock_newInput>
  }

  export type distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_newInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    data: XOR<distillation_schedule_itemsUpdateWithoutStock_newInput, distillation_schedule_itemsUncheckedUpdateWithoutStock_newInput>
  }

  export type distillation_schedule_itemsUpdateManyWithWhereWithoutStock_newInput = {
    where: distillation_schedule_itemsScalarWhereInput
    data: XOR<distillation_schedule_itemsUpdateManyMutationInput, distillation_schedule_itemsUncheckedUpdateManyWithoutStock_newInput>
  }

  export type ref_materialsUpsertWithoutStock_newInput = {
    update: XOR<ref_materialsUpdateWithoutStock_newInput, ref_materialsUncheckedUpdateWithoutStock_newInput>
    create: XOR<ref_materialsCreateWithoutStock_newInput, ref_materialsUncheckedCreateWithoutStock_newInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutStock_newInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutStock_newInput, ref_materialsUncheckedUpdateWithoutStock_newInput>
  }

  export type ref_materialsUpdateWithoutStock_newInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutStock_newInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_suppliersUpsertWithoutStock_newInput = {
    update: XOR<ref_suppliersUpdateWithoutStock_newInput, ref_suppliersUncheckedUpdateWithoutStock_newInput>
    create: XOR<ref_suppliersCreateWithoutStock_newInput, ref_suppliersUncheckedCreateWithoutStock_newInput>
    where?: ref_suppliersWhereInput
  }

  export type ref_suppliersUpdateToOneWithWhereWithoutStock_newInput = {
    where?: ref_suppliersWhereInput
    data: XOR<ref_suppliersUpdateWithoutStock_newInput, ref_suppliersUncheckedUpdateWithoutStock_newInput>
  }

  export type ref_suppliersUpdateWithoutStock_newInput = {
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_suppliersNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUpdateManyWithoutRef_suppliersNestedInput
  }

  export type ref_suppliersUncheckedUpdateWithoutStock_newInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUncheckedUpdateManyWithoutRef_suppliersNestedInput
  }

  export type order_detailCreateWithoutStock_orderInput = {
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    ref_materials: ref_materialsCreateNestedOneWithoutOrder_detailInput
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailUncheckedCreateWithoutStock_orderInput = {
    detail_id?: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    material_code: string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailCreateOrConnectWithoutStock_orderInput = {
    where: order_detailWhereUniqueInput
    create: XOR<order_detailCreateWithoutStock_orderInput, order_detailUncheckedCreateWithoutStock_orderInput>
  }

  export type order_detailCreateManyStock_orderInputEnvelope = {
    data: order_detailCreateManyStock_orderInput | order_detailCreateManyStock_orderInput[]
    skipDuplicates?: boolean
  }

  export type ref_suppliersCreateWithoutStock_orderInput = {
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_suppliersInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersUncheckedCreateWithoutStock_orderInput = {
    supplier_id?: number
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersCreateOrConnectWithoutStock_orderInput = {
    where: ref_suppliersWhereUniqueInput
    create: XOR<ref_suppliersCreateWithoutStock_orderInput, ref_suppliersUncheckedCreateWithoutStock_orderInput>
  }

  export type order_detailUpsertWithWhereUniqueWithoutStock_orderInput = {
    where: order_detailWhereUniqueInput
    update: XOR<order_detailUpdateWithoutStock_orderInput, order_detailUncheckedUpdateWithoutStock_orderInput>
    create: XOR<order_detailCreateWithoutStock_orderInput, order_detailUncheckedCreateWithoutStock_orderInput>
  }

  export type order_detailUpdateWithWhereUniqueWithoutStock_orderInput = {
    where: order_detailWhereUniqueInput
    data: XOR<order_detailUpdateWithoutStock_orderInput, order_detailUncheckedUpdateWithoutStock_orderInput>
  }

  export type order_detailUpdateManyWithWhereWithoutStock_orderInput = {
    where: order_detailScalarWhereInput
    data: XOR<order_detailUpdateManyMutationInput, order_detailUncheckedUpdateManyWithoutStock_orderInput>
  }

  export type ref_suppliersUpsertWithoutStock_orderInput = {
    update: XOR<ref_suppliersUpdateWithoutStock_orderInput, ref_suppliersUncheckedUpdateWithoutStock_orderInput>
    create: XOR<ref_suppliersCreateWithoutStock_orderInput, ref_suppliersUncheckedCreateWithoutStock_orderInput>
    where?: ref_suppliersWhereInput
  }

  export type ref_suppliersUpdateToOneWithWhereWithoutStock_orderInput = {
    where?: ref_suppliersWhereInput
    data: XOR<ref_suppliersUpdateWithoutStock_orderInput, ref_suppliersUncheckedUpdateWithoutStock_orderInput>
  }

  export type ref_suppliersUpdateWithoutStock_orderInput = {
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_suppliersNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_suppliersNestedInput
  }

  export type ref_suppliersUncheckedUpdateWithoutStock_orderInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_suppliersNestedInput
  }

  export type distillation_schedule_itemsCreateWithoutStock_reproInput = {
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_new?: stock_newCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_activity?: stock_activityCreateNestedManyWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput = {
    details_id?: number
    distillation_id: number
    new_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsCreateOrConnectWithoutStock_reproInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    create: XOR<distillation_schedule_itemsCreateWithoutStock_reproInput, distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput>
  }

  export type distillation_schedule_itemsCreateManyStock_reproInputEnvelope = {
    data: distillation_schedule_itemsCreateManyStock_reproInput | distillation_schedule_itemsCreateManyStock_reproInput[]
    skipDuplicates?: boolean
  }

  export type ref_materialsCreateWithoutStock_reproInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutStock_reproInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutStock_reproInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutStock_reproInput, ref_materialsUncheckedCreateWithoutStock_reproInput>
  }

  export type distillation_schedule_itemsUpsertWithWhereUniqueWithoutStock_reproInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    update: XOR<distillation_schedule_itemsUpdateWithoutStock_reproInput, distillation_schedule_itemsUncheckedUpdateWithoutStock_reproInput>
    create: XOR<distillation_schedule_itemsCreateWithoutStock_reproInput, distillation_schedule_itemsUncheckedCreateWithoutStock_reproInput>
  }

  export type distillation_schedule_itemsUpdateWithWhereUniqueWithoutStock_reproInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    data: XOR<distillation_schedule_itemsUpdateWithoutStock_reproInput, distillation_schedule_itemsUncheckedUpdateWithoutStock_reproInput>
  }

  export type distillation_schedule_itemsUpdateManyWithWhereWithoutStock_reproInput = {
    where: distillation_schedule_itemsScalarWhereInput
    data: XOR<distillation_schedule_itemsUpdateManyMutationInput, distillation_schedule_itemsUncheckedUpdateManyWithoutStock_reproInput>
  }

  export type ref_materialsUpsertWithoutStock_reproInput = {
    update: XOR<ref_materialsUpdateWithoutStock_reproInput, ref_materialsUncheckedUpdateWithoutStock_reproInput>
    create: XOR<ref_materialsCreateWithoutStock_reproInput, ref_materialsUncheckedCreateWithoutStock_reproInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutStock_reproInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutStock_reproInput, ref_materialsUncheckedUpdateWithoutStock_reproInput>
  }

  export type ref_materialsUpdateWithoutStock_reproInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutStock_reproInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type order_detailCreateWithoutOrder_detail_stock_activityInput = {
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    ref_materials: ref_materialsCreateNestedOneWithoutOrder_detailInput
    stock_order: stock_orderCreateNestedOneWithoutOrder_detailInput
    stock_activity?: stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailUncheckedCreateWithoutOrder_detail_stock_activityInput = {
    detail_id?: number
    order_id: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    material_code: string
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailCreateOrConnectWithoutOrder_detail_stock_activityInput = {
    where: order_detailWhereUniqueInput
    create: XOR<order_detailCreateWithoutOrder_detail_stock_activityInput, order_detailUncheckedCreateWithoutOrder_detail_stock_activityInput>
  }

  export type stock_activityCreateWithoutOrder_detail_stock_activityInput = {
    activity_date: Date | string
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsCreateNestedOneWithoutStock_activityInput
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_activityInput
    order_detail?: order_detailCreateNestedOneWithoutStock_activityInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_activityInput
  }

  export type stock_activityUncheckedCreateWithoutOrder_detail_stock_activityInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_activityCreateOrConnectWithoutOrder_detail_stock_activityInput = {
    where: stock_activityWhereUniqueInput
    create: XOR<stock_activityCreateWithoutOrder_detail_stock_activityInput, stock_activityUncheckedCreateWithoutOrder_detail_stock_activityInput>
  }

  export type order_detailUpsertWithoutOrder_detail_stock_activityInput = {
    update: XOR<order_detailUpdateWithoutOrder_detail_stock_activityInput, order_detailUncheckedUpdateWithoutOrder_detail_stock_activityInput>
    create: XOR<order_detailCreateWithoutOrder_detail_stock_activityInput, order_detailUncheckedCreateWithoutOrder_detail_stock_activityInput>
    where?: order_detailWhereInput
  }

  export type order_detailUpdateToOneWithWhereWithoutOrder_detail_stock_activityInput = {
    where?: order_detailWhereInput
    data: XOR<order_detailUpdateWithoutOrder_detail_stock_activityInput, order_detailUncheckedUpdateWithoutOrder_detail_stock_activityInput>
  }

  export type order_detailUpdateWithoutOrder_detail_stock_activityInput = {
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ref_materials?: ref_materialsUpdateOneRequiredWithoutOrder_detailNestedInput
    stock_order?: stock_orderUpdateOneRequiredWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateWithoutOrder_detail_stock_activityInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
    stock_activity?: stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutOrder_detailNestedInput
  }

  export type stock_activityUpsertWithoutOrder_detail_stock_activityInput = {
    update: XOR<stock_activityUpdateWithoutOrder_detail_stock_activityInput, stock_activityUncheckedUpdateWithoutOrder_detail_stock_activityInput>
    create: XOR<stock_activityCreateWithoutOrder_detail_stock_activityInput, stock_activityUncheckedCreateWithoutOrder_detail_stock_activityInput>
    where?: stock_activityWhereInput
  }

  export type stock_activityUpdateToOneWithWhereWithoutOrder_detail_stock_activityInput = {
    where?: stock_activityWhereInput
    data: XOR<stock_activityUpdateWithoutOrder_detail_stock_activityInput, stock_activityUncheckedUpdateWithoutOrder_detail_stock_activityInput>
  }

  export type stock_activityUpdateWithoutOrder_detail_stock_activityInput = {
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsUpdateOneWithoutStock_activityNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_activityNestedInput
    order_detail?: order_detailUpdateOneWithoutStock_activityNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateWithoutOrder_detail_stock_activityInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ref_materialsCreateWithoutRaw_stock_historyInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutRaw_stock_historyInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutRaw_stock_historyInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutRaw_stock_historyInput, ref_materialsUncheckedCreateWithoutRaw_stock_historyInput>
  }

  export type stock_historyCreateWithoutRaw_stock_historyInput = {
    date: Date | string
    material_name: string
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ref_materials?: ref_materialsCreateNestedOneWithoutStock_historyInput
    ref_suppliers?: ref_suppliersCreateNestedOneWithoutStock_historyInput
  }

  export type stock_historyUncheckedCreateWithoutRaw_stock_historyInput = {
    id?: number
    date: Date | string
    material_name: string
    supplier_id?: number | null
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_historyCreateOrConnectWithoutRaw_stock_historyInput = {
    where: stock_historyWhereUniqueInput
    create: XOR<stock_historyCreateWithoutRaw_stock_historyInput, stock_historyUncheckedCreateWithoutRaw_stock_historyInput>
  }

  export type stock_historyCreateManyRaw_stock_historyInputEnvelope = {
    data: stock_historyCreateManyRaw_stock_historyInput | stock_historyCreateManyRaw_stock_historyInput[]
    skipDuplicates?: boolean
  }

  export type ref_materialsUpsertWithoutRaw_stock_historyInput = {
    update: XOR<ref_materialsUpdateWithoutRaw_stock_historyInput, ref_materialsUncheckedUpdateWithoutRaw_stock_historyInput>
    create: XOR<ref_materialsCreateWithoutRaw_stock_historyInput, ref_materialsUncheckedCreateWithoutRaw_stock_historyInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutRaw_stock_historyInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutRaw_stock_historyInput, ref_materialsUncheckedUpdateWithoutRaw_stock_historyInput>
  }

  export type ref_materialsUpdateWithoutRaw_stock_historyInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutRaw_stock_historyInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type stock_historyUpsertWithWhereUniqueWithoutRaw_stock_historyInput = {
    where: stock_historyWhereUniqueInput
    update: XOR<stock_historyUpdateWithoutRaw_stock_historyInput, stock_historyUncheckedUpdateWithoutRaw_stock_historyInput>
    create: XOR<stock_historyCreateWithoutRaw_stock_historyInput, stock_historyUncheckedCreateWithoutRaw_stock_historyInput>
  }

  export type stock_historyUpdateWithWhereUniqueWithoutRaw_stock_historyInput = {
    where: stock_historyWhereUniqueInput
    data: XOR<stock_historyUpdateWithoutRaw_stock_historyInput, stock_historyUncheckedUpdateWithoutRaw_stock_historyInput>
  }

  export type stock_historyUpdateManyWithWhereWithoutRaw_stock_historyInput = {
    where: stock_historyScalarWhereInput
    data: XOR<stock_historyUpdateManyMutationInput, stock_historyUncheckedUpdateManyWithoutRaw_stock_historyInput>
  }

  export type order_detail_stock_activityCreateWithoutStock_activityInput = {
    created_at?: Date | string | null
    order_detail: order_detailCreateNestedOneWithoutOrder_detail_stock_activityInput
  }

  export type order_detail_stock_activityUncheckedCreateWithoutStock_activityInput = {
    id?: number
    order_detail_id: number
    created_at?: Date | string | null
  }

  export type order_detail_stock_activityCreateOrConnectWithoutStock_activityInput = {
    where: order_detail_stock_activityWhereUniqueInput
    create: XOR<order_detail_stock_activityCreateWithoutStock_activityInput, order_detail_stock_activityUncheckedCreateWithoutStock_activityInput>
  }

  export type order_detail_stock_activityCreateManyStock_activityInputEnvelope = {
    data: order_detail_stock_activityCreateManyStock_activityInput | order_detail_stock_activityCreateManyStock_activityInput[]
    skipDuplicates?: boolean
  }

  export type distillation_schedule_itemsCreateWithoutStock_activityInput = {
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_schedule: distillation_scheduleCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_new?: stock_newCreateNestedOneWithoutDistillation_schedule_itemsInput
    stock_repro?: stock_reproCreateNestedOneWithoutDistillation_schedule_itemsInput
  }

  export type distillation_schedule_itemsUncheckedCreateWithoutStock_activityInput = {
    details_id?: number
    distillation_id: number
    new_stock_id?: number | null
    repro_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type distillation_schedule_itemsCreateOrConnectWithoutStock_activityInput = {
    where: distillation_schedule_itemsWhereUniqueInput
    create: XOR<distillation_schedule_itemsCreateWithoutStock_activityInput, distillation_schedule_itemsUncheckedCreateWithoutStock_activityInput>
  }

  export type ref_materialsCreateWithoutStock_activityInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutStock_activityInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutStock_activityInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutStock_activityInput, ref_materialsUncheckedCreateWithoutStock_activityInput>
  }

  export type order_detailCreateWithoutStock_activityInput = {
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    ref_materials: ref_materialsCreateNestedOneWithoutOrder_detailInput
    stock_order: stock_orderCreateNestedOneWithoutOrder_detailInput
    order_detail_stock_activity?: order_detail_stock_activityCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailUncheckedCreateWithoutStock_activityInput = {
    detail_id?: number
    order_id: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    material_code: string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum?: stock_drumUncheckedCreateNestedManyWithoutOrder_detailInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutOrder_detailInput
  }

  export type order_detailCreateOrConnectWithoutStock_activityInput = {
    where: order_detailWhereUniqueInput
    create: XOR<order_detailCreateWithoutStock_activityInput, order_detailUncheckedCreateWithoutStock_activityInput>
  }

  export type ref_suppliersCreateWithoutStock_activityInput = {
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersUncheckedCreateWithoutStock_activityInput = {
    supplier_id?: number
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderUncheckedCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersCreateOrConnectWithoutStock_activityInput = {
    where: ref_suppliersWhereUniqueInput
    create: XOR<ref_suppliersCreateWithoutStock_activityInput, ref_suppliersUncheckedCreateWithoutStock_activityInput>
  }

  export type order_detail_stock_activityUpsertWithWhereUniqueWithoutStock_activityInput = {
    where: order_detail_stock_activityWhereUniqueInput
    update: XOR<order_detail_stock_activityUpdateWithoutStock_activityInput, order_detail_stock_activityUncheckedUpdateWithoutStock_activityInput>
    create: XOR<order_detail_stock_activityCreateWithoutStock_activityInput, order_detail_stock_activityUncheckedCreateWithoutStock_activityInput>
  }

  export type order_detail_stock_activityUpdateWithWhereUniqueWithoutStock_activityInput = {
    where: order_detail_stock_activityWhereUniqueInput
    data: XOR<order_detail_stock_activityUpdateWithoutStock_activityInput, order_detail_stock_activityUncheckedUpdateWithoutStock_activityInput>
  }

  export type order_detail_stock_activityUpdateManyWithWhereWithoutStock_activityInput = {
    where: order_detail_stock_activityScalarWhereInput
    data: XOR<order_detail_stock_activityUpdateManyMutationInput, order_detail_stock_activityUncheckedUpdateManyWithoutStock_activityInput>
  }

  export type distillation_schedule_itemsUpsertWithoutStock_activityInput = {
    update: XOR<distillation_schedule_itemsUpdateWithoutStock_activityInput, distillation_schedule_itemsUncheckedUpdateWithoutStock_activityInput>
    create: XOR<distillation_schedule_itemsCreateWithoutStock_activityInput, distillation_schedule_itemsUncheckedCreateWithoutStock_activityInput>
    where?: distillation_schedule_itemsWhereInput
  }

  export type distillation_schedule_itemsUpdateToOneWithWhereWithoutStock_activityInput = {
    where?: distillation_schedule_itemsWhereInput
    data: XOR<distillation_schedule_itemsUpdateWithoutStock_activityInput, distillation_schedule_itemsUncheckedUpdateWithoutStock_activityInput>
  }

  export type distillation_schedule_itemsUpdateWithoutStock_activityInput = {
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutDistillation_schedule_itemsNestedInput
    stock_new?: stock_newUpdateOneWithoutDistillation_schedule_itemsNestedInput
    stock_repro?: stock_reproUpdateOneWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsUncheckedUpdateWithoutStock_activityInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    new_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    repro_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ref_materialsUpsertWithoutStock_activityInput = {
    update: XOR<ref_materialsUpdateWithoutStock_activityInput, ref_materialsUncheckedUpdateWithoutStock_activityInput>
    create: XOR<ref_materialsCreateWithoutStock_activityInput, ref_materialsUncheckedCreateWithoutStock_activityInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutStock_activityInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutStock_activityInput, ref_materialsUncheckedUpdateWithoutStock_activityInput>
  }

  export type ref_materialsUpdateWithoutStock_activityInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutStock_activityInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type order_detailUpsertWithoutStock_activityInput = {
    update: XOR<order_detailUpdateWithoutStock_activityInput, order_detailUncheckedUpdateWithoutStock_activityInput>
    create: XOR<order_detailCreateWithoutStock_activityInput, order_detailUncheckedCreateWithoutStock_activityInput>
    where?: order_detailWhereInput
  }

  export type order_detailUpdateToOneWithWhereWithoutStock_activityInput = {
    where?: order_detailWhereInput
    data: XOR<order_detailUpdateWithoutStock_activityInput, order_detailUncheckedUpdateWithoutStock_activityInput>
  }

  export type order_detailUpdateWithoutStock_activityInput = {
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ref_materials?: ref_materialsUpdateOneRequiredWithoutOrder_detailNestedInput
    stock_order?: stock_orderUpdateOneRequiredWithoutOrder_detailNestedInput
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateWithoutStock_activityInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutOrder_detailNestedInput
  }

  export type ref_suppliersUpsertWithoutStock_activityInput = {
    update: XOR<ref_suppliersUpdateWithoutStock_activityInput, ref_suppliersUncheckedUpdateWithoutStock_activityInput>
    create: XOR<ref_suppliersCreateWithoutStock_activityInput, ref_suppliersUncheckedCreateWithoutStock_activityInput>
    where?: ref_suppliersWhereInput
  }

  export type ref_suppliersUpdateToOneWithWhereWithoutStock_activityInput = {
    where?: ref_suppliersWhereInput
    data: XOR<ref_suppliersUpdateWithoutStock_activityInput, ref_suppliersUncheckedUpdateWithoutStock_activityInput>
  }

  export type ref_suppliersUpdateWithoutStock_activityInput = {
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUpdateManyWithoutRef_suppliersNestedInput
  }

  export type ref_suppliersUncheckedUpdateWithoutStock_activityInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUncheckedUpdateManyWithoutRef_suppliersNestedInput
  }

  export type ref_materialsCreateWithoutStock_historyInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutStock_historyInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutStock_historyInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutStock_historyInput, ref_materialsUncheckedCreateWithoutStock_historyInput>
  }

  export type raw_stock_historyCreateWithoutStock_historyInput = {
    date?: Date | string | null
    event_str?: string | null
    drum_type?: string | null
    no_events?: number | null
    notes_ids?: string | null
    notes_batch?: string | null
    source?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ref_materials?: ref_materialsCreateNestedOneWithoutRaw_stock_historyInput
  }

  export type raw_stock_historyUncheckedCreateWithoutStock_historyInput = {
    id?: number
    date?: Date | string | null
    event_str?: string | null
    drum_type?: string | null
    no_events?: number | null
    notes_ids?: string | null
    notes_batch?: string | null
    source?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type raw_stock_historyCreateOrConnectWithoutStock_historyInput = {
    where: raw_stock_historyWhereUniqueInput
    create: XOR<raw_stock_historyCreateWithoutStock_historyInput, raw_stock_historyUncheckedCreateWithoutStock_historyInput>
  }

  export type ref_suppliersCreateWithoutStock_historyInput = {
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_suppliersInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersUncheckedCreateWithoutStock_historyInput = {
    supplier_id?: number
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderUncheckedCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersCreateOrConnectWithoutStock_historyInput = {
    where: ref_suppliersWhereUniqueInput
    create: XOR<ref_suppliersCreateWithoutStock_historyInput, ref_suppliersUncheckedCreateWithoutStock_historyInput>
  }

  export type ref_materialsUpsertWithoutStock_historyInput = {
    update: XOR<ref_materialsUpdateWithoutStock_historyInput, ref_materialsUncheckedUpdateWithoutStock_historyInput>
    create: XOR<ref_materialsCreateWithoutStock_historyInput, ref_materialsUncheckedCreateWithoutStock_historyInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutStock_historyInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutStock_historyInput, ref_materialsUncheckedUpdateWithoutStock_historyInput>
  }

  export type ref_materialsUpdateWithoutStock_historyInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutStock_historyInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type raw_stock_historyUpsertWithoutStock_historyInput = {
    update: XOR<raw_stock_historyUpdateWithoutStock_historyInput, raw_stock_historyUncheckedUpdateWithoutStock_historyInput>
    create: XOR<raw_stock_historyCreateWithoutStock_historyInput, raw_stock_historyUncheckedCreateWithoutStock_historyInput>
    where?: raw_stock_historyWhereInput
  }

  export type raw_stock_historyUpdateToOneWithWhereWithoutStock_historyInput = {
    where?: raw_stock_historyWhereInput
    data: XOR<raw_stock_historyUpdateWithoutStock_historyInput, raw_stock_historyUncheckedUpdateWithoutStock_historyInput>
  }

  export type raw_stock_historyUpdateWithoutStock_historyInput = {
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneWithoutRaw_stock_historyNestedInput
  }

  export type raw_stock_historyUncheckedUpdateWithoutStock_historyInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_suppliersUpsertWithoutStock_historyInput = {
    update: XOR<ref_suppliersUpdateWithoutStock_historyInput, ref_suppliersUncheckedUpdateWithoutStock_historyInput>
    create: XOR<ref_suppliersCreateWithoutStock_historyInput, ref_suppliersUncheckedCreateWithoutStock_historyInput>
    where?: ref_suppliersWhereInput
  }

  export type ref_suppliersUpdateToOneWithWhereWithoutStock_historyInput = {
    where?: ref_suppliersWhereInput
    data: XOR<ref_suppliersUpdateWithoutStock_historyInput, ref_suppliersUncheckedUpdateWithoutStock_historyInput>
  }

  export type ref_suppliersUpdateWithoutStock_historyInput = {
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_suppliersNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUpdateManyWithoutRef_suppliersNestedInput
  }

  export type ref_suppliersUncheckedUpdateWithoutStock_historyInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUncheckedUpdateManyWithoutRef_suppliersNestedInput
  }

  export type product_pricesCreateWithoutProductsInput = {
    price: Decimal | DecimalJsLike | number | string
    bottle_sizes: bottle_sizesCreateNestedOneWithoutProduct_pricesInput
  }

  export type product_pricesUncheckedCreateWithoutProductsInput = {
    bottle_size_id: number
    price: Decimal | DecimalJsLike | number | string
  }

  export type product_pricesCreateOrConnectWithoutProductsInput = {
    where: product_pricesWhereUniqueInput
    create: XOR<product_pricesCreateWithoutProductsInput, product_pricesUncheckedCreateWithoutProductsInput>
  }

  export type product_pricesCreateManyProductsInputEnvelope = {
    data: product_pricesCreateManyProductsInput | product_pricesCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type ref_materialsCreateWithoutRef_productInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutRef_productInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_supplier_material?: ref_supplier_materialUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutRef_productInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutRef_productInput, ref_materialsUncheckedCreateWithoutRef_productInput>
  }

  export type product_pricesUpsertWithWhereUniqueWithoutProductsInput = {
    where: product_pricesWhereUniqueInput
    update: XOR<product_pricesUpdateWithoutProductsInput, product_pricesUncheckedUpdateWithoutProductsInput>
    create: XOR<product_pricesCreateWithoutProductsInput, product_pricesUncheckedCreateWithoutProductsInput>
  }

  export type product_pricesUpdateWithWhereUniqueWithoutProductsInput = {
    where: product_pricesWhereUniqueInput
    data: XOR<product_pricesUpdateWithoutProductsInput, product_pricesUncheckedUpdateWithoutProductsInput>
  }

  export type product_pricesUpdateManyWithWhereWithoutProductsInput = {
    where: product_pricesScalarWhereInput
    data: XOR<product_pricesUpdateManyMutationInput, product_pricesUncheckedUpdateManyWithoutProductsInput>
  }

  export type ref_materialsUpsertWithoutRef_productInput = {
    update: XOR<ref_materialsUpdateWithoutRef_productInput, ref_materialsUncheckedUpdateWithoutRef_productInput>
    create: XOR<ref_materialsCreateWithoutRef_productInput, ref_materialsUncheckedCreateWithoutRef_productInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutRef_productInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutRef_productInput, ref_materialsUncheckedUpdateWithoutRef_productInput>
  }

  export type ref_materialsUpdateWithoutRef_productInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutRef_productInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsCreateWithoutRef_supplier_materialInput = {
    value: string
    code: string
    cas_number?: string | null
    order_detail?: order_detailCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyCreateNestedManyWithoutRef_materialsInput
    chemical_group_kind: chemical_group_kindCreateNestedOneWithoutRef_materialsInput
    ref_product?: ref_productCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsUncheckedCreateWithoutRef_supplier_materialInput = {
    value: string
    code: string
    chemical_group: string
    cas_number?: string | null
    order_detail?: order_detailUncheckedCreateNestedManyWithoutRef_materialsInput
    raw_stock_history?: raw_stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    ref_product?: ref_productUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_drum_new?: stock_drum_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_materialsInput
    stock_repro?: stock_reproUncheckedCreateNestedManyWithoutRef_materialsInput
  }

  export type ref_materialsCreateOrConnectWithoutRef_supplier_materialInput = {
    where: ref_materialsWhereUniqueInput
    create: XOR<ref_materialsCreateWithoutRef_supplier_materialInput, ref_materialsUncheckedCreateWithoutRef_supplier_materialInput>
  }

  export type ref_suppliersCreateWithoutRef_supplier_materialInput = {
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    stock_activity?: stock_activityCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersUncheckedCreateWithoutRef_supplier_materialInput = {
    supplier_id?: number
    supplier_name: string
    addr_1?: string | null
    addr_2?: string | null
    city?: string | null
    post_code?: string | null
    country_code?: string | null
    stock_activity?: stock_activityUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_history?: stock_historyUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_new?: stock_newUncheckedCreateNestedManyWithoutRef_suppliersInput
    stock_order?: stock_orderUncheckedCreateNestedManyWithoutRef_suppliersInput
  }

  export type ref_suppliersCreateOrConnectWithoutRef_supplier_materialInput = {
    where: ref_suppliersWhereUniqueInput
    create: XOR<ref_suppliersCreateWithoutRef_supplier_materialInput, ref_suppliersUncheckedCreateWithoutRef_supplier_materialInput>
  }

  export type ref_materialsUpsertWithoutRef_supplier_materialInput = {
    update: XOR<ref_materialsUpdateWithoutRef_supplier_materialInput, ref_materialsUncheckedUpdateWithoutRef_supplier_materialInput>
    create: XOR<ref_materialsCreateWithoutRef_supplier_materialInput, ref_materialsUncheckedCreateWithoutRef_supplier_materialInput>
    where?: ref_materialsWhereInput
  }

  export type ref_materialsUpdateToOneWithWhereWithoutRef_supplier_materialInput = {
    where?: ref_materialsWhereInput
    data: XOR<ref_materialsUpdateWithoutRef_supplier_materialInput, ref_materialsUncheckedUpdateWithoutRef_supplier_materialInput>
  }

  export type ref_materialsUpdateWithoutRef_supplier_materialInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    chemical_group_kind?: chemical_group_kindUpdateOneRequiredWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutRef_supplier_materialInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    chemical_group?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_suppliersUpsertWithoutRef_supplier_materialInput = {
    update: XOR<ref_suppliersUpdateWithoutRef_supplier_materialInput, ref_suppliersUncheckedUpdateWithoutRef_supplier_materialInput>
    create: XOR<ref_suppliersCreateWithoutRef_supplier_materialInput, ref_suppliersUncheckedCreateWithoutRef_supplier_materialInput>
    where?: ref_suppliersWhereInput
  }

  export type ref_suppliersUpdateToOneWithWhereWithoutRef_supplier_materialInput = {
    where?: ref_suppliersWhereInput
    data: XOR<ref_suppliersUpdateWithoutRef_supplier_materialInput, ref_suppliersUncheckedUpdateWithoutRef_supplier_materialInput>
  }

  export type ref_suppliersUpdateWithoutRef_supplier_materialInput = {
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    stock_activity?: stock_activityUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUpdateManyWithoutRef_suppliersNestedInput
  }

  export type ref_suppliersUncheckedUpdateWithoutRef_supplier_materialInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    supplier_name?: StringFieldUpdateOperationsInput | string
    addr_1?: NullableStringFieldUpdateOperationsInput | string | null
    addr_2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    post_code?: NullableStringFieldUpdateOperationsInput | string | null
    country_code?: NullableStringFieldUpdateOperationsInput | string | null
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_suppliersNestedInput
    stock_order?: stock_orderUncheckedUpdateManyWithoutRef_suppliersNestedInput
  }

  export type product_pricesCreateManyBottle_sizesInput = {
    product_id: number
    price: Decimal | DecimalJsLike | number | string
  }

  export type product_pricesUpdateWithoutBottle_sizesInput = {
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    products?: ref_productUpdateOneRequiredWithoutProduct_pricesNestedInput
  }

  export type product_pricesUncheckedUpdateWithoutBottle_sizesInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type product_pricesUncheckedUpdateManyWithoutBottle_sizesInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ref_materialsCreateManyChemical_group_kindInput = {
    value: string
    code: string
    cas_number?: string | null
  }

  export type ref_materialsUpdateWithoutChemical_group_kindInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateWithoutChemical_group_kindInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutRef_materialsNestedInput
    raw_stock_history?: raw_stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_product?: ref_productUncheckedUpdateManyWithoutRef_materialsNestedInput
    ref_supplier_material?: ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_history?: stock_historyUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_new?: stock_newUncheckedUpdateManyWithoutRef_materialsNestedInput
    stock_repro?: stock_reproUncheckedUpdateManyWithoutRef_materialsNestedInput
  }

  export type ref_materialsUncheckedUpdateManyWithoutChemical_group_kindInput = {
    value?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    cas_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_drumCreateManyDistillation_recordInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_drum_newCreateManyDistillation_recordInput = {
    drum_id?: number
    material_code?: string | null
    drum_type?: string
    order_detail_id: number
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_drumUpdateWithoutDistillation_recordInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutStock_drumNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateWithoutDistillation_recordInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUncheckedUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateManyWithoutDistillation_recordInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_drum_newUpdateWithoutDistillation_recordInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneWithoutStock_drum_newNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drum_newNestedInput
  }

  export type stock_drum_newUncheckedUpdateWithoutDistillation_recordInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_drum_newUncheckedUpdateManyWithoutDistillation_recordInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type distillation_pending_assignmentCreateManyDistillation_scheduleInput = {
    pending_id?: number
    drum_id?: number | null
    transport_id: number
    status?: string | null
  }

  export type distillation_schedule_itemsCreateManyDistillation_scheduleInput = {
    details_id?: number
    new_stock_id?: number | null
    repro_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type log_load_stillCreateManyDistillation_scheduleInput = {
    loading_id?: number
    scan_id?: number | null
    drum_id?: number | null
    still_id?: number | null
    status?: string | null
  }

  export type log_transport_drumCreateManyDistillation_scheduleInput = {
    transport_id?: number
    scan_id?: number | null
    drum_id?: number | null
    transported_at?: Date | string | null
    status?: string | null
  }

  export type log_volume_transferCreateManyDistillation_scheduleInput = {
    transfer_id?: number
    drum_id: number
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
  }

  export type distillation_pending_assignmentUpdateWithoutDistillation_scheduleInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUpdateOneWithoutDistillation_pending_assignmentNestedInput
    log_transport_drum?: log_transport_drumUpdateOneRequiredWithoutDistillation_pending_assignmentNestedInput
  }

  export type distillation_pending_assignmentUncheckedUpdateWithoutDistillation_scheduleInput = {
    pending_id?: IntFieldUpdateOperationsInput | number
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transport_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleInput = {
    pending_id?: IntFieldUpdateOperationsInput | number
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transport_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_schedule_itemsUpdateWithoutDistillation_scheduleInput = {
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stock_new?: stock_newUpdateOneWithoutDistillation_schedule_itemsNestedInput
    stock_repro?: stock_reproUpdateOneWithoutDistillation_schedule_itemsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsUncheckedUpdateWithoutDistillation_scheduleInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    new_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    repro_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stock_activity?: stock_activityUncheckedUpdateManyWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    new_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    repro_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type log_load_stillUpdateWithoutDistillation_scheduleInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    stock_drum?: stock_drumUpdateOneWithoutLog_load_stillNestedInput
    log_drum_scan?: log_drum_scanUpdateOneWithoutLog_load_stillNestedInput
    ref_stills?: ref_stillsUpdateOneWithoutLog_load_stillNestedInput
  }

  export type log_load_stillUncheckedUpdateWithoutDistillation_scheduleInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_transport_drumUpdateWithoutDistillation_scheduleInput = {
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutLog_transport_drumNestedInput
    stock_drum?: stock_drumUpdateOneWithoutLog_transport_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateOneWithoutLog_transport_drumNestedInput
  }

  export type log_transport_drumUncheckedUpdateWithoutDistillation_scheduleInput = {
    transport_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutLog_transport_drumNestedInput
  }

  export type log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleInput = {
    transport_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_volume_transferUpdateWithoutDistillation_scheduleInput = {
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    stock_drum?: stock_drumUpdateOneRequiredWithoutLog_volume_transferNestedInput
  }

  export type log_volume_transferUncheckedUpdateWithoutDistillation_scheduleInput = {
    transfer_id?: IntFieldUpdateOperationsInput | number
    drum_id?: IntFieldUpdateOperationsInput | number
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleInput = {
    transfer_id?: IntFieldUpdateOperationsInput | number
    drum_id?: IntFieldUpdateOperationsInput | number
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type stock_activityCreateManyDistillation_schedule_itemsInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_activityUpdateWithoutDistillation_schedule_itemsInput = {
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutStock_activityNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_activityNestedInput
    order_detail?: order_detailUpdateOneWithoutStock_activityNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateWithoutDistillation_schedule_itemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateManyWithoutDistillation_schedule_itemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type distillation_pending_assignmentCreateManyLog_transport_drumInput = {
    pending_id?: number
    drum_id?: number | null
    assigned_distillation_id?: number | null
    status?: string | null
  }

  export type distillation_pending_assignmentUpdateWithoutLog_transport_drumInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutDistillation_pending_assignmentNestedInput
    stock_drum?: stock_drumUpdateOneWithoutDistillation_pending_assignmentNestedInput
  }

  export type distillation_pending_assignmentUncheckedUpdateWithoutLog_transport_drumInput = {
    pending_id?: IntFieldUpdateOperationsInput | number
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    assigned_distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_pending_assignmentUncheckedUpdateManyWithoutLog_transport_drumInput = {
    pending_id?: IntFieldUpdateOperationsInput | number
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    assigned_distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_detail_stock_activityCreateManyOrder_detailInput = {
    id?: number
    stock_activity_id: number
    created_at?: Date | string | null
  }

  export type stock_activityCreateManyOrder_detailInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_drumCreateManyOrder_detailInput = {
    drum_id?: number
    drum_type?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
    distillation_id?: number | null
  }

  export type stock_drum_newCreateManyOrder_detailInput = {
    drum_id?: number
    material_code?: string | null
    drum_type?: string
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_id?: number | null
  }

  export type order_detail_stock_activityUpdateWithoutOrder_detailInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stock_activity?: stock_activityUpdateOneRequiredWithoutOrder_detail_stock_activityNestedInput
  }

  export type order_detail_stock_activityUncheckedUpdateWithoutOrder_detailInput = {
    id?: IntFieldUpdateOperationsInput | number
    stock_activity_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailInput = {
    id?: IntFieldUpdateOperationsInput | number
    stock_activity_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_activityUpdateWithoutOrder_detailInput = {
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutStock_activityNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateOneWithoutStock_activityNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_activityNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateWithoutOrder_detailInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateManyWithoutOrder_detailInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_drumUpdateWithoutOrder_detailInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutStock_drumNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateWithoutOrder_detailInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumNestedInput
    log_drum_scan?: log_drum_scanUncheckedUpdateManyWithoutStock_drumNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutStock_drumNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutStock_drumNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutStock_drumNestedInput
  }

  export type stock_drumUncheckedUpdateManyWithoutOrder_detailInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type stock_drum_newUpdateWithoutOrder_detailInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_record?: distillation_recordUpdateOneWithoutStock_drum_newNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_drum_newNestedInput
  }

  export type stock_drum_newUncheckedUpdateWithoutOrder_detailInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type stock_drum_newUncheckedUpdateManyWithoutOrder_detailInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type order_detailCreateManyRef_materialsInput = {
    detail_id?: number
    order_id: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
  }

  export type raw_stock_historyCreateManyRef_materialsInput = {
    id?: number
    date?: Date | string | null
    event_str?: string | null
    drum_type?: string | null
    no_events?: number | null
    notes_ids?: string | null
    notes_batch?: string | null
    source?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type ref_productCreateManyRef_materialsInput = {
    product_id?: number
    name: string
    sku: string
    raw_material_id?: number | null
    grade: string
  }

  export type ref_supplier_materialCreateManyRef_materialsInput = {
    supplier_id: number
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
  }

  export type stock_activityCreateManyRef_materialsInput = {
    id?: number
    activity_date: Date | string
    supplier_id?: number | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_drum_newCreateManyRef_materialsInput = {
    drum_id?: number
    drum_type?: string
    order_detail_id: number
    status?: string
    fill_level?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    distillation_id?: number | null
  }

  export type stock_historyCreateManyRef_materialsInput = {
    id?: number
    date: Date | string
    material_name: string
    supplier_id?: number | null
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_newCreateManyRef_materialsInput = {
    stock_id?: number
    supplier_id?: number | null
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_reproCreateManyRef_materialsInput = {
    stock_id?: number
    location: string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    quantity: number
    material_description?: string | null
  }

  export type order_detailUpdateWithoutRef_materialsInput = {
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    stock_order?: stock_orderUpdateOneRequiredWithoutOrder_detailNestedInput
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateWithoutRef_materialsInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateManyWithoutRef_materialsInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    order_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type raw_stock_historyUpdateWithoutRef_materialsInput = {
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stock_history?: stock_historyUpdateManyWithoutRaw_stock_historyNestedInput
  }

  export type raw_stock_historyUncheckedUpdateWithoutRef_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stock_history?: stock_historyUncheckedUpdateManyWithoutRaw_stock_historyNestedInput
  }

  export type raw_stock_historyUncheckedUpdateManyWithoutRef_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    event_str?: NullableStringFieldUpdateOperationsInput | string | null
    drum_type?: NullableStringFieldUpdateOperationsInput | string | null
    no_events?: NullableIntFieldUpdateOperationsInput | number | null
    notes_ids?: NullableStringFieldUpdateOperationsInput | string | null
    notes_batch?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ref_productUpdateWithoutRef_materialsInput = {
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
    product_prices?: product_pricesUpdateManyWithoutProductsNestedInput
  }

  export type ref_productUncheckedUpdateWithoutRef_materialsInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
    product_prices?: product_pricesUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type ref_productUncheckedUpdateManyWithoutRef_materialsInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    raw_material_id?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: StringFieldUpdateOperationsInput | string
  }

  export type ref_supplier_materialUpdateWithoutRef_materialsInput = {
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_suppliers?: ref_suppliersUpdateOneRequiredWithoutRef_supplier_materialNestedInput
  }

  export type ref_supplier_materialUncheckedUpdateWithoutRef_materialsInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ref_supplier_materialUncheckedUpdateManyWithoutRef_materialsInput = {
    supplier_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_activityUpdateWithoutRef_materialsInput = {
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutStock_activityNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateOneWithoutStock_activityNestedInput
    order_detail?: order_detailUpdateOneWithoutStock_activityNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateWithoutRef_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateManyWithoutRef_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_drum_newUpdateWithoutRef_materialsInput = {
    drum_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_record?: distillation_recordUpdateOneWithoutStock_drum_newNestedInput
    order_detail?: order_detailUpdateOneRequiredWithoutStock_drum_newNestedInput
  }

  export type stock_drum_newUncheckedUpdateWithoutRef_materialsInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type stock_drum_newUncheckedUpdateManyWithoutRef_materialsInput = {
    drum_id?: IntFieldUpdateOperationsInput | number
    drum_type?: StringFieldUpdateOperationsInput | string
    order_detail_id?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    fill_level?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type stock_historyUpdateWithoutRef_materialsInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_stock_history?: raw_stock_historyUpdateOneWithoutStock_historyNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_historyNestedInput
  }

  export type stock_historyUncheckedUpdateWithoutRef_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_historyUncheckedUpdateManyWithoutRef_materialsInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_newUpdateWithoutRef_materialsInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutStock_newNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_newNestedInput
  }

  export type stock_newUncheckedUpdateWithoutRef_materialsInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutStock_newNestedInput
  }

  export type stock_newUncheckedUpdateManyWithoutRef_materialsInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_reproUpdateWithoutRef_materialsInput = {
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutStock_reproNestedInput
  }

  export type stock_reproUncheckedUpdateWithoutRef_materialsInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutStock_reproNestedInput
  }

  export type stock_reproUncheckedUpdateManyWithoutRef_materialsInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    material_description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type active_contextCreateManyRef_stillsInput = {
    context_id?: number
    worker_id?: number | null
    created_at?: Date | string | null
  }

  export type distillation_scheduleCreateManyRef_stillsInput = {
    distillation_id?: number
    scheduled_date: Date | string
    expected_drum_qty?: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type log_load_stillCreateManyRef_stillsInput = {
    loading_id?: number
    scan_id?: number | null
    drum_id?: number | null
    distillation_id: number
    status?: string | null
  }

  export type log_start_distillationCreateManyRef_stillsInput = {
    start_id?: number
    distillation_id?: number | null
    worker_id?: number | null
    status?: string | null
  }

  export type active_contextUpdateWithoutRef_stillsInput = {
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type active_contextUncheckedUpdateWithoutRef_stillsInput = {
    context_id?: IntFieldUpdateOperationsInput | number
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type active_contextUncheckedUpdateManyWithoutRef_stillsInput = {
    context_id?: IntFieldUpdateOperationsInput | number
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type distillation_scheduleUpdateWithoutRef_stillsInput = {
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUpdateOneWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateWithoutRef_stillsInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    distillation_record?: distillation_recordUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_load_still?: log_load_stillUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_start_distillation?: log_start_distillationUncheckedUpdateOneWithoutDistillation_scheduleNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
    log_volume_transfer?: log_volume_transferUncheckedUpdateManyWithoutDistillation_scheduleNestedInput
  }

  export type distillation_scheduleUncheckedUpdateManyWithoutRef_stillsInput = {
    distillation_id?: IntFieldUpdateOperationsInput | number
    scheduled_date?: DateTimeFieldUpdateOperationsInput | Date | string
    expected_drum_qty?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type log_load_stillUpdateWithoutRef_stillsInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutLog_load_stillNestedInput
    stock_drum?: stock_drumUpdateOneWithoutLog_load_stillNestedInput
    log_drum_scan?: log_drum_scanUpdateOneWithoutLog_load_stillNestedInput
  }

  export type log_load_stillUncheckedUpdateWithoutRef_stillsInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_load_stillUncheckedUpdateManyWithoutRef_stillsInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_start_distillationUpdateWithoutRef_stillsInput = {
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutLog_start_distillationNestedInput
  }

  export type log_start_distillationUncheckedUpdateWithoutRef_stillsInput = {
    start_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_start_distillationUncheckedUpdateManyWithoutRef_stillsInput = {
    start_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ref_supplier_materialCreateManyRef_suppliersInput = {
    material_name: string
    quantity: number
    location: string
    updated_at?: Date | string | null
    material_code: string
  }

  export type stock_activityCreateManyRef_suppliersInput = {
    id?: number
    activity_date: Date | string
    material_code?: string | null
    quantity: Decimal | DecimalJsLike | number | string
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    order_detail_id?: number | null
    distillation_detail_id?: number | null
    activity_type: string
    status?: string | null
    notes?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type stock_historyCreateManyRef_suppliersInput = {
    id?: number
    date: Date | string
    material_name: string
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    source_record_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_newCreateManyRef_suppliersInput = {
    stock_id?: number
    quantity: number
    batch_code: string
    location?: string | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_orderCreateManyRef_suppliersInput = {
    order_id?: number
    po_number?: string | null
    date_ordered?: Date | string
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type ref_supplier_materialUpdateWithoutRef_suppliersInput = {
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneRequiredWithoutRef_supplier_materialNestedInput
  }

  export type ref_supplier_materialUncheckedUpdateWithoutRef_suppliersInput = {
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type ref_supplier_materialUncheckedUpdateManyWithoutRef_suppliersInput = {
    material_name?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    location?: StringFieldUpdateOperationsInput | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type stock_activityUpdateWithoutRef_suppliersInput = {
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutStock_activityNestedInput
    distillation_schedule_items?: distillation_schedule_itemsUpdateOneWithoutStock_activityNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_activityNestedInput
    order_detail?: order_detailUpdateOneWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateWithoutRef_suppliersInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutStock_activityNestedInput
  }

  export type stock_activityUncheckedUpdateManyWithoutRef_suppliersInput = {
    id?: IntFieldUpdateOperationsInput | number
    activity_date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    order_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_detail_id?: NullableIntFieldUpdateOperationsInput | number | null
    activity_type?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_historyUpdateWithoutRef_suppliersInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneWithoutStock_historyNestedInput
    raw_stock_history?: raw_stock_historyUpdateOneWithoutStock_historyNestedInput
  }

  export type stock_historyUncheckedUpdateWithoutRef_suppliersInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_historyUncheckedUpdateManyWithoutRef_suppliersInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    source_record_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_newUpdateWithoutRef_suppliersInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule_items?: distillation_schedule_itemsUpdateManyWithoutStock_newNestedInput
    ref_materials?: ref_materialsUpdateOneWithoutStock_newNestedInput
  }

  export type stock_newUncheckedUpdateWithoutRef_suppliersInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule_items?: distillation_schedule_itemsUncheckedUpdateManyWithoutStock_newNestedInput
  }

  export type stock_newUncheckedUpdateManyWithoutRef_suppliersInput = {
    stock_id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    batch_code?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_orderUpdateWithoutRef_suppliersInput = {
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail?: order_detailUpdateManyWithoutStock_orderNestedInput
  }

  export type stock_orderUncheckedUpdateWithoutRef_suppliersInput = {
    order_id?: IntFieldUpdateOperationsInput | number
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail?: order_detailUncheckedUpdateManyWithoutStock_orderNestedInput
  }

  export type stock_orderUncheckedUpdateManyWithoutRef_suppliersInput = {
    order_id?: IntFieldUpdateOperationsInput | number
    po_number?: NullableStringFieldUpdateOperationsInput | string | null
    date_ordered?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type distillation_pending_assignmentCreateManyStock_drumInput = {
    pending_id?: number
    transport_id: number
    assigned_distillation_id?: number | null
    status?: string | null
  }

  export type log_drum_scanCreateManyStock_drumInput = {
    scan_id?: number
    scanned_at?: Date | string | null
    user_id?: number
    scan_type: string
    scan_status?: string
    error_message?: string | null
  }

  export type log_load_stillCreateManyStock_drumInput = {
    loading_id?: number
    scan_id?: number | null
    still_id?: number | null
    distillation_id: number
    status?: string | null
  }

  export type log_transport_drumCreateManyStock_drumInput = {
    transport_id?: number
    scan_id?: number | null
    transported_at?: Date | string | null
    distillation_id?: number | null
    status?: string | null
  }

  export type log_volume_transferCreateManyStock_drumInput = {
    transfer_id?: number
    distillation_id: number
    volume_transferred: Decimal | DecimalJsLike | number | string
    remaining_volume: Decimal | DecimalJsLike | number | string
    usage_type: string
    transfer_timestamp?: Date | string | null
    worker_id?: number | null
  }

  export type distillation_pending_assignmentUpdateWithoutStock_drumInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneWithoutDistillation_pending_assignmentNestedInput
    log_transport_drum?: log_transport_drumUpdateOneRequiredWithoutDistillation_pending_assignmentNestedInput
  }

  export type distillation_pending_assignmentUncheckedUpdateWithoutStock_drumInput = {
    pending_id?: IntFieldUpdateOperationsInput | number
    transport_id?: IntFieldUpdateOperationsInput | number
    assigned_distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type distillation_pending_assignmentUncheckedUpdateManyWithoutStock_drumInput = {
    pending_id?: IntFieldUpdateOperationsInput | number
    transport_id?: IntFieldUpdateOperationsInput | number
    assigned_distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_drum_scanUpdateWithoutStock_drumInput = {
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    log_load_still?: log_load_stillUpdateOneWithoutLog_drum_scanNestedInput
    log_transport_drum?: log_transport_drumUpdateOneWithoutLog_drum_scanNestedInput
  }

  export type log_drum_scanUncheckedUpdateWithoutStock_drumInput = {
    scan_id?: IntFieldUpdateOperationsInput | number
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    log_load_still?: log_load_stillUncheckedUpdateOneWithoutLog_drum_scanNestedInput
    log_transport_drum?: log_transport_drumUncheckedUpdateOneWithoutLog_drum_scanNestedInput
  }

  export type log_drum_scanUncheckedUpdateManyWithoutStock_drumInput = {
    scan_id?: IntFieldUpdateOperationsInput | number
    scanned_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    scan_type?: StringFieldUpdateOperationsInput | string
    scan_status?: StringFieldUpdateOperationsInput | string
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_load_stillUpdateWithoutStock_drumInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutLog_load_stillNestedInput
    log_drum_scan?: log_drum_scanUpdateOneWithoutLog_load_stillNestedInput
    ref_stills?: ref_stillsUpdateOneWithoutLog_load_stillNestedInput
  }

  export type log_load_stillUncheckedUpdateWithoutStock_drumInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_load_stillUncheckedUpdateManyWithoutStock_drumInput = {
    loading_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    still_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_id?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_transport_drumUpdateWithoutStock_drumInput = {
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUpdateManyWithoutLog_transport_drumNestedInput
    distillation_schedule?: distillation_scheduleUpdateOneWithoutLog_transport_drumNestedInput
    log_drum_scan?: log_drum_scanUpdateOneWithoutLog_transport_drumNestedInput
  }

  export type log_transport_drumUncheckedUpdateWithoutStock_drumInput = {
    transport_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    distillation_pending_assignment?: distillation_pending_assignmentUncheckedUpdateManyWithoutLog_transport_drumNestedInput
  }

  export type log_transport_drumUncheckedUpdateManyWithoutStock_drumInput = {
    transport_id?: IntFieldUpdateOperationsInput | number
    scan_id?: NullableIntFieldUpdateOperationsInput | number | null
    transported_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type log_volume_transferUpdateWithoutStock_drumInput = {
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutLog_volume_transferNestedInput
  }

  export type log_volume_transferUncheckedUpdateWithoutStock_drumInput = {
    transfer_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type log_volume_transferUncheckedUpdateManyWithoutStock_drumInput = {
    transfer_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    volume_transferred?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remaining_volume?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usage_type?: StringFieldUpdateOperationsInput | string
    transfer_timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    worker_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type distillation_schedule_itemsCreateManyStock_newInput = {
    details_id?: number
    distillation_id: number
    repro_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type distillation_schedule_itemsUpdateWithoutStock_newInput = {
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutDistillation_schedule_itemsNestedInput
    stock_repro?: stock_reproUpdateOneWithoutDistillation_schedule_itemsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsUncheckedUpdateWithoutStock_newInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    repro_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stock_activity?: stock_activityUncheckedUpdateManyWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsUncheckedUpdateManyWithoutStock_newInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    repro_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type order_detailCreateManyStock_orderInput = {
    detail_id?: number
    batch_code?: string | null
    material_id: number
    material_name: string
    drum_quantity: number
    drum_weight?: Decimal | DecimalJsLike | number | string | null
    drum_volume?: Decimal | DecimalJsLike | number | string | null
    status?: string
    notes?: string | null
    material_code: string
  }

  export type order_detailUpdateWithoutStock_orderInput = {
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ref_materials?: ref_materialsUpdateOneRequiredWithoutOrder_detailNestedInput
    order_detail_stock_activity?: order_detail_stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateWithoutStock_orderInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
    order_detail_stock_activity?: order_detail_stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_activity?: stock_activityUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum?: stock_drumUncheckedUpdateManyWithoutOrder_detailNestedInput
    stock_drum_new?: stock_drum_newUncheckedUpdateManyWithoutOrder_detailNestedInput
  }

  export type order_detailUncheckedUpdateManyWithoutStock_orderInput = {
    detail_id?: IntFieldUpdateOperationsInput | number
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    material_id?: IntFieldUpdateOperationsInput | number
    material_name?: StringFieldUpdateOperationsInput | string
    drum_quantity?: IntFieldUpdateOperationsInput | number
    drum_weight?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    drum_volume?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    material_code?: StringFieldUpdateOperationsInput | string
  }

  export type distillation_schedule_itemsCreateManyStock_reproInput = {
    details_id?: number
    distillation_id: number
    new_stock_id?: number | null
    drum_quantity: Decimal | DecimalJsLike | number | string
    status?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type distillation_schedule_itemsUpdateWithoutStock_reproInput = {
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    distillation_schedule?: distillation_scheduleUpdateOneRequiredWithoutDistillation_schedule_itemsNestedInput
    stock_new?: stock_newUpdateOneWithoutDistillation_schedule_itemsNestedInput
    stock_activity?: stock_activityUpdateManyWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsUncheckedUpdateWithoutStock_reproInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    new_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stock_activity?: stock_activityUncheckedUpdateManyWithoutDistillation_schedule_itemsNestedInput
  }

  export type distillation_schedule_itemsUncheckedUpdateManyWithoutStock_reproInput = {
    details_id?: IntFieldUpdateOperationsInput | number
    distillation_id?: IntFieldUpdateOperationsInput | number
    new_stock_id?: NullableIntFieldUpdateOperationsInput | number | null
    drum_quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type stock_historyCreateManyRaw_stock_historyInput = {
    id?: number
    date: Date | string
    material_name: string
    supplier_id?: number | null
    supplier_name?: string | null
    change?: number | null
    drum_type: string
    drum_ids?: string | null
    batch_code?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    material_code?: string | null
  }

  export type stock_historyUpdateWithoutRaw_stock_historyInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ref_materials?: ref_materialsUpdateOneWithoutStock_historyNestedInput
    ref_suppliers?: ref_suppliersUpdateOneWithoutStock_historyNestedInput
  }

  export type stock_historyUncheckedUpdateWithoutRaw_stock_historyInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type stock_historyUncheckedUpdateManyWithoutRaw_stock_historyInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    material_name?: StringFieldUpdateOperationsInput | string
    supplier_id?: NullableIntFieldUpdateOperationsInput | number | null
    supplier_name?: NullableStringFieldUpdateOperationsInput | string | null
    change?: NullableIntFieldUpdateOperationsInput | number | null
    drum_type?: StringFieldUpdateOperationsInput | string
    drum_ids?: NullableStringFieldUpdateOperationsInput | string | null
    batch_code?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    material_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_detail_stock_activityCreateManyStock_activityInput = {
    id?: number
    order_detail_id: number
    created_at?: Date | string | null
  }

  export type order_detail_stock_activityUpdateWithoutStock_activityInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_detail?: order_detailUpdateOneRequiredWithoutOrder_detail_stock_activityNestedInput
  }

  export type order_detail_stock_activityUncheckedUpdateWithoutStock_activityInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_detail_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type order_detail_stock_activityUncheckedUpdateManyWithoutStock_activityInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_detail_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type product_pricesCreateManyProductsInput = {
    bottle_size_id: number
    price: Decimal | DecimalJsLike | number | string
  }

  export type product_pricesUpdateWithoutProductsInput = {
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    bottle_sizes?: bottle_sizesUpdateOneRequiredWithoutProduct_pricesNestedInput
  }

  export type product_pricesUncheckedUpdateWithoutProductsInput = {
    bottle_size_id?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type product_pricesUncheckedUpdateManyWithoutProductsInput = {
    bottle_size_id?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}